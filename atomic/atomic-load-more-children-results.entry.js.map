{"file":"atomic-load-more-children-results.entry.esm.js","mappings":";;;;;;;;;;;;;;AAAA,MAAM,gCAAgC,GAAG,0hvCAA0hvC;;;;;;;;;;;;MCwBtjvC,6BAA6B;;;;;;QAgBzB,UAAK,GAAG,kBAAkB,CAAC;;;qBAAnB,kBAAkB;;IAEzC,IAAY,UAAU;QACpB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,iBAAiB,EAAE;YACtC,OAAO,IAAI,CAAC;SACb;QACD,OAAO,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,IAAI,CAC5C,CAAC,CAAC,KACA,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,iBAAiB,KAAK,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,iBAAiB,CACtE,CAAC;KACJ;IAEO,kBAAkB;QACxB,IAAI,CAAC,IAAI,CAAC,aAAa,CACrB,gBAAgB,CAAC,uBAAuB,EAAE,IAAI,CAAC,UAAU,CAAC,CAC3D,CAAC;KACH;IAED,IAAY,cAAc;;QACxB,OAAO,MAAA,IAAI,CAAC,UAAU,0CAAE,oBAAoB,CAAC;KAC9C;IAED,IAAY,SAAS;;QACnB,OAAO,OAAO,CAAC,MAAA,IAAI,CAAC,UAAU,0CAAE,oBAAoB,CAAC,CAAC;KACvD;IAED,IAAY,WAAW;;QACrB,OAAO,OAAO,CAAC,MAAA,IAAI,CAAC,UAAU,0CAAE,QAAQ,CAAC,MAAM,CAAC,CAAC;KAClD;IAED,IAAY,WAAW;QACrB,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,OAAO,cAAc,CAAC;SACvB;QACD,OAAO,EAAE,CAAC;KACX;IAED,IAAY,YAAY;QACtB,OAAO,qBAAqB,CAC1B,MAAM,EACN,IAAI,CAAC,aAAa,CAAC,OAAO,EAC1B,IAAI,CAAC,aAAa,CAAC,SAAS,CAC7B,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KACb;IAEM,MAAM;QACX,IAAI,CAAC,IAAI,CAAC,qBAAqB,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YACnD,OAAO,IAAI,CAAC;SACb;QAED,QACE,WAAK,KAAK,EAAE,IAAI,CAAC,YAAY,IAC1B,IAAI,CAAC,cAAc,KAClB,EAAC,MAAM,IACL,IAAI,EAAC,QAAQ,EACb,KAAK,EAAC,cAAc,EACpB,OAAO,EAAE,MAAM,IAAI,CAAC,kBAAkB,EAAE,EACxC,KAAK,EAAE,IAAI,CAAC,WAAW,EACvB,QAAQ,EAAE,IAAI,CAAC,SAAS,IAEvB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAC1B,CACV,CACG,EACN;KACH;;;AAhF4B;IAA5B,kBAAkB,EAAE;+DAA4B;AACzB;IAAvB,aAAa,EAAE;6DAAwB;AAMhC;IAFP,0BAA0B,EAAE;4EAEyB;AAG9C;IADP,wBAAwB,EAAE;oEACW;;;;;","names":[],"sources":["src/components/search/atomic-load-more-children-results/atomic-load-more-children-results.pcss?tag=atomic-load-more-children-results&encapsulation=shadow","src/components/search/atomic-load-more-children-results/atomic-load-more-children-results.tsx"],"sourcesContent":["@import '../../../global/global.pcss';\r\n@import '../../../global/mixins.pcss';\r\n\r\n@define-mixin display-density $max, $min {\r\n  .btn-text-primary {\r\n    margin-top: $min;\r\n\r\n    &.has-children {\r\n      margin-bottom: $min;\r\n    }\r\n  }\r\n}\r\n\r\n.btn-text-primary {\r\n  @mixin set-font-size var(--atomic-text-sm);\r\n}\r\n.density-compact {\r\n  @mixin display-density 1rem, 0.475rem;\r\n}\r\n.density-normal {\r\n  @mixin display-density 1.5rem, 0.875rem;\r\n}\r\n.density-comfortable {\r\n  @mixin display-density 1.75rem, 0.25rem;\r\n}\r\n","import {Result, FoldedResultListState} from '@coveo/headless';\r\nimport {Component, Element, h, Prop, State} from '@stencil/core';\r\nimport {buildCustomEvent} from '../../../utils/event-utils';\r\nimport {InitializeBindings} from '../../../utils/initialization-utils';\r\nimport {Button} from '../../common/button';\r\nimport {\r\n  DisplayConfig,\r\n  ItemDisplayConfigContext,\r\n} from '../../common/item-list/item-decorators';\r\nimport {FoldedItemListStateContext} from '../../common/item-list/item-list-decorators';\r\nimport {getItemDisplayClasses} from '../../common/layout/display-options';\r\nimport {Bindings} from '../atomic-search-interface/atomic-search-interface';\r\nimport {ResultContext} from '../result-template-components/result-template-decorators';\r\n\r\n/**\r\n * The `atomic-load-more-children-results` component allows to load the full collection for a folded result.\r\n *\r\n * @part button - The button used to load more results.\r\n */\r\n@Component({\r\n  tag: 'atomic-load-more-children-results',\r\n  styleUrl: 'atomic-load-more-children-results.pcss',\r\n  shadow: true,\r\n})\r\nexport class AtomicLoadMoreChildrenResults {\r\n  @InitializeBindings() public bindings!: Bindings;\r\n  @ResultContext() public result!: Result;\r\n  @State() public error!: Error;\r\n  @Element() host!: HTMLElement;\r\n\r\n  @FoldedItemListStateContext()\r\n  @State()\r\n  private foldedResultListState!: FoldedResultListState;\r\n\r\n  @ItemDisplayConfigContext()\r\n  private displayConfig!: DisplayConfig;\r\n\r\n  /**\r\n   * The non-localized label for the button used to load more results.\r\n   */\r\n  @Prop() public label = 'load-all-results';\r\n\r\n  private get collection() {\r\n    if (!this.result.raw.foldingcollection) {\r\n      return null;\r\n    }\r\n    return this.foldedResultListState.results.find(\r\n      (r) =>\r\n        r.result.raw.foldingcollection === this.result.raw.foldingcollection\r\n    )!;\r\n  }\r\n\r\n  private loadFullCollection() {\r\n    this.host.dispatchEvent(\r\n      buildCustomEvent('atomic/loadCollection', this.collection)\r\n    );\r\n  }\r\n\r\n  private get hasMoreResults() {\r\n    return this.collection?.moreResultsAvailable;\r\n  }\r\n\r\n  private get isLoading() {\r\n    return Boolean(this.collection?.isLoadingMoreResults);\r\n  }\r\n\r\n  private get hasChildren() {\r\n    return Boolean(this.collection?.children.length);\r\n  }\r\n\r\n  private get buttonClass() {\r\n    if (this.hasChildren) {\r\n      return 'has-children';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  private get wrapperClass() {\r\n    return getItemDisplayClasses(\r\n      'list',\r\n      this.displayConfig.density,\r\n      this.displayConfig.imageSize\r\n    ).join(' ');\r\n  }\r\n\r\n  public render() {\r\n    if (!this.foldedResultListState || !this.collection) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <div class={this.wrapperClass}>\r\n        {this.hasMoreResults && (\r\n          <Button\r\n            part=\"button\"\r\n            style=\"text-primary\"\r\n            onClick={() => this.loadFullCollection()}\r\n            class={this.buttonClass}\r\n            disabled={this.isLoading}\r\n          >\r\n            {this.bindings.i18n.t(this.label)}\r\n          </Button>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"version":3}