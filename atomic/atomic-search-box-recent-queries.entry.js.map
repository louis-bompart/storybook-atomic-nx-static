{"file":"atomic-search-box-recent-queries.entry.esm.js","mappings":"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","names":[],"sources":["src/components/search/search-box-suggestions/atomic-search-box-recent-queries/atomic-search-box-recent-queries.tsx"],"sourcesContent":["import {\r\n  buildRecentQueriesList,\r\n  RecentQueriesList,\r\n  SearchBox,\r\n} from '@coveo/headless';\r\nimport {Component, Element, Prop, State, h} from '@stencil/core';\r\nimport Clock from '../../../../images/clock.svg';\r\nimport {SafeStorage, StorageItems} from '../../../../utils/local-storage-utils';\r\nimport {once} from '../../../../utils/utils';\r\nimport {\r\n  getPartialRecentQueryClearElement,\r\n  getPartialRecentQueryElement,\r\n  RecentQueriesContainer,\r\n  RecentQueryClear,\r\n  RecentQueryIcon,\r\n  RecentQueryText,\r\n} from '../../../common/suggestions/recent-queries';\r\nimport {\r\n  dispatchSearchBoxSuggestionsEvent,\r\n  SearchBoxSuggestionElement,\r\n  SearchBoxSuggestions,\r\n  SearchBoxSuggestionsBindings,\r\n} from '../../../common/suggestions/suggestions-common';\r\nimport {Bindings} from '../../atomic-search-interface/atomic-search-interface';\r\n\r\n/**\r\n * The `atomic-search-box-recent-queries` component can be added as a child of an `atomic-search-box` component, allowing for the configuration of recent query suggestions.\r\n *\r\n * @part recent-query-title - The 'Recent queries' title.\r\n * @part recent-query-clear - The 'Clear' button for clearing recent queries    .\r\n */\r\n@Component({\r\n  tag: 'atomic-search-box-recent-queries',\r\n  shadow: true,\r\n})\r\nexport class AtomicSearchBoxRecentQueries {\r\n  private bindings!: SearchBoxSuggestionsBindings<SearchBox, Bindings>;\r\n  private recentQueriesList!: RecentQueriesList;\r\n  private storage!: SafeStorage;\r\n\r\n  @Element() private host!: HTMLElement;\r\n\r\n  @State() public error!: Error;\r\n\r\n  /**\r\n   * The SVG icon to display.\r\n   *\r\n   * - Use a value that starts with `http://`, `https://`, `./`, or `../`, to fetch and display an icon from a given location.\r\n   * - Use a value that starts with `assets://`, to display an icon from the Atomic package.\r\n   * - Use a stringified SVG to display it directly.\r\n   */\r\n  @Prop() public icon?: string;\r\n\r\n  /**\r\n   * The maximum number of suggestions that will be displayed if the user has typed something into the input field.\r\n   */\r\n  @Prop({reflect: true}) public maxWithQuery = 3;\r\n  /**\r\n   * The maximum number of suggestions that will be displayed initially when the input field is empty.\r\n   */\r\n  @Prop({reflect: true}) public maxWithoutQuery?: number;\r\n\r\n  componentWillLoad() {\r\n    try {\r\n      dispatchSearchBoxSuggestionsEvent<SearchBox, Bindings>((bindings) => {\r\n        this.bindings = bindings;\r\n        return this.initialize();\r\n      }, this.host);\r\n    } catch (error) {\r\n      this.error = error as Error;\r\n    }\r\n  }\r\n\r\n  private renderIcon() {\r\n    return this.icon || Clock;\r\n  }\r\n\r\n  private initialize(): SearchBoxSuggestions {\r\n    this.storage = new SafeStorage();\r\n    this.recentQueriesList = buildRecentQueriesList(this.bindings.engine, {\r\n      initialState: {queries: this.retrieveLocalStorage()},\r\n      options: {maxLength: 1000, clearFilters: this.bindings.clearFilters},\r\n    });\r\n\r\n    this.recentQueriesList.subscribe(() => this.updateLocalStorage());\r\n\r\n    return {\r\n      position: Array.from(this.host.parentNode!.children).indexOf(this.host),\r\n      renderItems: () => this.renderItems(),\r\n    };\r\n  }\r\n\r\n  private retrieveLocalStorage() {\r\n    return this.storage.getParsedJSON(StorageItems.RECENT_QUERIES, []);\r\n  }\r\n\r\n  private updateLocalStorage() {\r\n    if (!this.recentQueriesList.state.analyticsEnabled) {\r\n      return this.disableFeature();\r\n    }\r\n\r\n    return this.storage.setJSON(\r\n      StorageItems.RECENT_QUERIES,\r\n      this.recentQueriesList.state.queries\r\n    );\r\n  }\r\n\r\n  private warnUser = once(() =>\r\n    this.bindings.engine.logger.warn(\r\n      'Because analytics are disabled, the recent queries feature is deactivated.'\r\n    )\r\n  );\r\n\r\n  private disableFeature() {\r\n    this.warnUser();\r\n    this.storage.removeItem(StorageItems.RECENT_QUERIES);\r\n  }\r\n\r\n  private renderItems(): SearchBoxSuggestionElement[] {\r\n    if (!this.recentQueriesList.state.analyticsEnabled) {\r\n      return [];\r\n    }\r\n\r\n    const query = this.bindings.searchBoxController.state.value;\r\n    const hasQuery = query !== '';\r\n    const max = hasQuery ? this.maxWithQuery : this.maxWithoutQuery;\r\n    const filteredQueries = this.recentQueriesList.state.queries\r\n      .filter(\r\n        (recentQuery) =>\r\n          recentQuery !== query &&\r\n          recentQuery.toLowerCase().startsWith(query.toLowerCase())\r\n      )\r\n      .slice(0, max);\r\n\r\n    const suggestionElements: SearchBoxSuggestionElement[] =\r\n      filteredQueries.map((value) => this.renderItem(value));\r\n    if (suggestionElements.length) {\r\n      suggestionElements.unshift(this.renderClear());\r\n    }\r\n\r\n    return suggestionElements;\r\n  }\r\n\r\n  private renderClear(): SearchBoxSuggestionElement {\r\n    const partialItem = getPartialRecentQueryClearElement(this.bindings.i18n);\r\n\r\n    return {\r\n      ...partialItem,\r\n      content: <RecentQueryClear i18n={this.bindings.i18n} />,\r\n      onSelect: () => {\r\n        this.recentQueriesList.clear();\r\n        this.bindings.triggerSuggestions();\r\n      },\r\n    };\r\n  }\r\n\r\n  private renderItem(value: string): SearchBoxSuggestionElement {\r\n    const query = this.bindings.searchBoxController.state.value;\r\n    const partialItem = getPartialRecentQueryElement(value, this.bindings.i18n);\r\n    return {\r\n      ...partialItem,\r\n      content: (\r\n        <RecentQueriesContainer>\r\n          <RecentQueryIcon icon={this.renderIcon()} />\r\n          <RecentQueryText query={query} value={value} />\r\n        </RecentQueriesContainer>\r\n      ),\r\n\r\n      onSelect: () => {\r\n        if (this.bindings.isStandalone) {\r\n          this.bindings.searchBoxController.updateText(value);\r\n          this.bindings.searchBoxController.submit();\r\n          return;\r\n        }\r\n\r\n        this.recentQueriesList.executeRecentQuery(\r\n          this.recentQueriesList.state.queries.indexOf(value)\r\n        );\r\n      },\r\n    };\r\n  }\r\n\r\n  public render() {\r\n    if (this.error) {\r\n      return (\r\n        <atomic-component-error\r\n          element={this.host}\r\n          error={this.error}\r\n        ></atomic-component-error>\r\n      );\r\n    }\r\n  }\r\n}\r\n"],"version":3}