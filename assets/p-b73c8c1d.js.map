{"version":3,"names":["SmartSnippetFeedbackBanner","props","inquiryId","id","thankYouId","radioGroupName","Inquiry","h","part","class","i18n","t","Buttons","liked","icon","Checkmark","RadioButton","groupName","text","checked","onChecked","onLike","disliked","Cross","onDislike","ThankYouMessage","ExplainWhyButton","Button","style","onClick","onPressExplainWhy","ref","element","_a","explainWhyRef","call","ThankYouContainer","visible","feedbackSent","role","SmartSnippetCommon","constructor","this","styleTag","getHost","querySelector","content","getSnippetStyle","innerHTML","loadModal","getModalRef","modalRef","document","createElement","modalTagName","addEventListener","setFeedbackSent","setModalRef","insertAdjacentElement","renderQuestion","headingLevel","getHeadingLevel","Heading","level","getSmartSnippetState","question","canSnippetCollapse","_b","getSnippetMaximumHeight","undefined","renderContent","state","exportparts","htmlContent","answer","innerStyle","expanded","maximumHeight","getMaximumHeight","collapsedHeight","getCollapsedHeight","snippetStyle","onExpand","getSmartSnippet","expand","onCollapse","collapse","renderFeedbackBanner","getBindings","getFeedbackSent","like","dislike","isOpen","button","source","hideDuringRender","shouldHide","host","visibility","position","render","answerFound","Hidden","classList","contains","_c","_e","_d","getSnippetCollapsedHeight","anchorAttributes","_g","_f","getSourceAnchorAttributes","onSelectSource","selectSource","onBeginDelayedSelectSource","beginDelayedSelectSource","onCancelPendingSelectSource","cancelPendingSelectSource"],"sources":["src/components/common/smart-snippets/atomic-smart-snippet-feedback-banner.tsx","src/components/common/smart-snippets/atomic-smart-snippet/smart-snippet-common.tsx"],"sourcesContent":["import {h, FunctionalComponent} from '@stencil/core';\r\nimport {i18n} from 'i18next';\r\nimport Checkmark from '../../../images/checkmark.svg';\r\nimport Cross from '../../../images/cross.svg';\r\nimport {Button} from '../button';\r\nimport {RadioButton} from '../radio-button';\r\n\r\ninterface SmartSnippetFeedbackBannerProps {\r\n  i18n: i18n;\r\n  id: string;\r\n  liked: boolean;\r\n  disliked: boolean;\r\n  feedbackSent: boolean;\r\n  onLike(): void;\r\n  onDislike(): void;\r\n  onPressExplainWhy(): void;\r\n  explainWhyRef?(element?: HTMLButtonElement): void;\r\n}\r\n\r\nexport const SmartSnippetFeedbackBanner: FunctionalComponent<\r\n  SmartSnippetFeedbackBannerProps\r\n> = (props) => {\r\n  const inquiryId = 'feedback-inquiry-' + props.id;\r\n  const thankYouId = 'feedback-thank-you-' + props.id;\r\n  const radioGroupName = 'feedback-options-' + props.id;\r\n\r\n  const Inquiry = () => (\r\n    <span id={inquiryId} part=\"feedback-inquiry\" class=\"shrink-0\">\r\n      {props.i18n.t('smart-snippet-feedback-inquiry')}\r\n    </span>\r\n  );\r\n\r\n  const Buttons = () => (\r\n    <div part=\"feedback-buttons\" class=\"flex gap-x-4\">\r\n      <label\r\n        part=\"feedback-like-button\"\r\n        class={\r\n          'flex items-center gap-x-1.5 ' +\r\n          (props.liked ? 'text-success' : 'cursor-pointer hover:underline')\r\n        }\r\n      >\r\n        <atomic-icon icon={Checkmark} class=\"w-3.5\"></atomic-icon>\r\n        <RadioButton\r\n          groupName={radioGroupName}\r\n          text={props.i18n.t('yes')}\r\n          checked={props.liked}\r\n          onChecked={() => props.onLike()}\r\n          class=\"text-inherit cursor-inherit\"\r\n        ></RadioButton>\r\n      </label>\r\n      <label\r\n        part=\"feedback-dislike-button\"\r\n        class={\r\n          'flex items-center gap-x-1.5 ' +\r\n          (props.disliked ? 'text-error' : 'cursor-pointer hover:underline')\r\n        }\r\n      >\r\n        <atomic-icon icon={Cross} class=\"w-3.5\"></atomic-icon>\r\n        <RadioButton\r\n          groupName={radioGroupName}\r\n          text={props.i18n.t('no')}\r\n          checked={props.disliked}\r\n          onChecked={() => props.onDislike()}\r\n          class=\"text-inherit cursor-inherit\"\r\n        ></RadioButton>\r\n      </label>\r\n    </div>\r\n  );\r\n\r\n  const ThankYouMessage = () => (\r\n    <span id={thankYouId} part=\"feedback-thank-you\" class=\"inline-flex\">\r\n      {props.i18n.t('smart-snippet-feedback-thanks')}\r\n    </span>\r\n  );\r\n\r\n  const ExplainWhyButton = () => (\r\n    <Button\r\n      part=\"feedback-explain-why-button\"\r\n      style=\"text-primary\"\r\n      onClick={() => props.onPressExplainWhy()}\r\n      ref={(element) => props.explainWhyRef?.(element)}\r\n    >\r\n      {props.i18n.t('smart-snippet-feedback-explain-why')}\r\n    </Button>\r\n  );\r\n\r\n  const ThankYouContainer = ({visible}: {visible: boolean}) =>\r\n    visible ? (\r\n      <div part=\"feedback-thank-you-wrapper\" class=\"flex flex-wrap gap-1\">\r\n        <ThankYouMessage></ThankYouMessage>\r\n        {props.disliked && !props.feedbackSent ? (\r\n          <ExplainWhyButton></ExplainWhyButton>\r\n        ) : (\r\n          []\r\n        )}\r\n      </div>\r\n    ) : (\r\n      []\r\n    );\r\n\r\n  return (\r\n    <div\r\n      part=\"feedback-banner\"\r\n      class=\"flex flex-wrap items-center gap-4 text-sm leading-4\"\r\n    >\r\n      <div\r\n        part=\"feedback-inquiry-and-buttons\"\r\n        role=\"radiogroup\"\r\n        aria-labelledby={inquiryId}\r\n        class=\"inline-flex flex-wrap gap-4\"\r\n      >\r\n        <Inquiry></Inquiry>\r\n        <Buttons></Buttons>\r\n      </div>\r\n      <ThankYouContainer\r\n        visible={props.liked || props.disliked}\r\n      ></ThankYouContainer>\r\n    </div>\r\n  );\r\n};\r\n","import {SmartSnippetState, SmartSnippet} from '@coveo/headless';\r\nimport {h} from '@stencil/core';\r\nimport {Heading} from '../../heading';\r\nimport {Hidden} from '../../hidden';\r\nimport {AnyBindings} from '../../interface/bindings';\r\nimport {SmartSnippetFeedbackBanner} from '../atomic-smart-snippet-feedback-banner';\r\n\r\ntype FeedBackModalElement =\r\n  | HTMLAtomicSmartSnippetFeedbackModalElement\r\n  | HTMLAtomicInsightSmartSnippetFeedbackModalElement;\r\n\r\ninterface SmartSnippetProps {\r\n  id: string;\r\n  modalTagName: string;\r\n  getSourceAnchorAttributes?: () => Attr[] | undefined;\r\n  getHost: () => HTMLElement;\r\n  getBindings: () => AnyBindings;\r\n  getModalRef: () => FeedBackModalElement | undefined;\r\n  getHeadingLevel: () => number;\r\n  getCollapsedHeight: () => number;\r\n  getMaximumHeight: () => number;\r\n  getSmartSnippetState: () => SmartSnippetState;\r\n  getSmartSnippet: () => SmartSnippet;\r\n  getSnippetStyle: () => string | undefined;\r\n  getFeedbackSent: () => boolean;\r\n  getSnippetMaximumHeight?: () => number;\r\n  getSnippetCollapsedHeight?: () => number;\r\n  setModalRef: (ref: HTMLElement) => void;\r\n  setFeedbackSent: (isSent: boolean) => void;\r\n}\r\n\r\nexport class SmartSnippetCommon {\r\n  constructor(private props: SmartSnippetProps) {}\r\n\r\n  private get style() {\r\n    const styleTag = this.props\r\n      .getHost()\r\n      .querySelector('template')\r\n      ?.content.querySelector('style');\r\n    if (!styleTag) {\r\n      return this.props.getSnippetStyle();\r\n    }\r\n    return styleTag.innerHTML;\r\n  }\r\n\r\n  private loadModal() {\r\n    if (this.props.getModalRef()) {\r\n      return;\r\n    }\r\n    const modalRef = document.createElement(this.props.modalTagName);\r\n    modalRef.addEventListener('feedbackSent', () => {\r\n      this.props.setFeedbackSent(true);\r\n    });\r\n    this.props.setModalRef(modalRef);\r\n    this.props.getHost().insertAdjacentElement('beforebegin', modalRef);\r\n  }\r\n\r\n  private renderQuestion() {\r\n    const headingLevel = this.props.getHeadingLevel();\r\n    return (\r\n      <Heading\r\n        level={headingLevel ? headingLevel + 1 : 0}\r\n        class=\"text-xl font-bold\"\r\n        part=\"question\"\r\n      >\r\n        {this.props.getSmartSnippetState().question}\r\n      </Heading>\r\n    );\r\n  }\r\n\r\n  private canSnippetCollapse() {\r\n    return this.props.getSnippetMaximumHeight?.() !== undefined;\r\n  }\r\n\r\n  private renderContent() {\r\n    const state = this.props.getSmartSnippetState();\r\n    if (this.canSnippetCollapse()) {\r\n      return (\r\n        <div part=\"truncated-answer\">\r\n          <atomic-smart-snippet-answer\r\n            exportparts=\"answer\"\r\n            part=\"body\"\r\n            htmlContent={state.answer}\r\n            innerStyle={this.style}\r\n          ></atomic-smart-snippet-answer>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <atomic-smart-snippet-expandable-answer\r\n        exportparts=\"answer,show-more-button,show-less-button,truncated-answer\"\r\n        part=\"body\"\r\n        htmlContent={state.answer}\r\n        expanded={state.expanded}\r\n        maximumHeight={this.props.getMaximumHeight()}\r\n        collapsedHeight={this.props.getCollapsedHeight()}\r\n        snippetStyle={this.style}\r\n        onExpand={() => this.props.getSmartSnippet().expand()}\r\n        onCollapse={() => this.props.getSmartSnippet().collapse()}\r\n      ></atomic-smart-snippet-expandable-answer>\r\n    );\r\n  }\r\n\r\n  private renderFeedbackBanner() {\r\n    const state = this.props.getSmartSnippetState();\r\n    return (\r\n      <SmartSnippetFeedbackBanner\r\n        i18n={this.props.getBindings().i18n}\r\n        id={this.props.id}\r\n        liked={state.liked}\r\n        disliked={state.disliked}\r\n        feedbackSent={this.props.getFeedbackSent()}\r\n        onLike={() => this.props.getSmartSnippet().like()}\r\n        onDislike={() => {\r\n          this.loadModal();\r\n          this.props.getSmartSnippet().dislike();\r\n        }}\r\n        onPressExplainWhy={() => (this.props.getModalRef()!.isOpen = true)}\r\n        explainWhyRef={(button) => {\r\n          if (this.props.getModalRef()) {\r\n            this.props.getModalRef()!.source = button;\r\n          }\r\n        }}\r\n      ></SmartSnippetFeedbackBanner>\r\n    );\r\n  }\r\n\r\n  public hideDuringRender(shouldHide: boolean) {\r\n    const host = this.props.getHost();\r\n    host.style.visibility = shouldHide ? 'hidden' : '';\r\n    host.style.position = shouldHide ? 'absolute' : '';\r\n  }\r\n\r\n  public render() {\r\n    if (!this.props.getSmartSnippetState().answerFound) {\r\n      return <Hidden></Hidden>;\r\n    }\r\n\r\n    if (this.props.getHost().classList.contains('atomic-hidden')) {\r\n      this.hideDuringRender(true);\r\n    }\r\n\r\n    const source = this.props.getSmartSnippetState().source;\r\n\r\n    return (\r\n      <aside>\r\n        <Heading\r\n          level={this.props.getHeadingLevel() ?? 0}\r\n          class=\"accessibility-only\"\r\n        >\r\n          {this.props.getBindings().i18n.t('smart-snippet')}\r\n        </Heading>\r\n        <article\r\n          class=\"bg-background border border-neutral rounded-lg p-6 pb-4 text-on-background\"\r\n          part=\"smart-snippet\"\r\n        >\r\n          <atomic-smart-snippet-collapse-wrapper\r\n            maximumHeight={this.props.getSnippetMaximumHeight?.()}\r\n            collapsedHeight={this.props.getSnippetCollapsedHeight?.()}\r\n          >\r\n            {this.renderQuestion()}\r\n            {this.renderContent()}\r\n            <footer\r\n              part=\"footer\"\r\n              aria-label={this.props\r\n                .getBindings()\r\n                .i18n.t('smart-snippet-source')}\r\n            >\r\n              {source && (\r\n                <atomic-smart-snippet-source\r\n                  anchorAttributes={this.props.getSourceAnchorAttributes?.()}\r\n                  source={source}\r\n                  onSelectSource={this.props.getSmartSnippet().selectSource}\r\n                  onBeginDelayedSelectSource={\r\n                    this.props.getSmartSnippet().beginDelayedSelectSource\r\n                  }\r\n                  onCancelPendingSelectSource={\r\n                    this.props.getSmartSnippet().cancelPendingSelectSource\r\n                  }\r\n                ></atomic-smart-snippet-source>\r\n              )}\r\n              {this.renderFeedbackBanner()}\r\n            </footer>\r\n          </atomic-smart-snippet-collapse-wrapper>\r\n        </article>\r\n      </aside>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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"}