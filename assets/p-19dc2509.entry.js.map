{"version":3,"names":["atomicBreadboxCss","AtomicBreadboxStyle0","SEPARATOR","ELLIPSIS","AtomicBreadbox","this","lastRemovedBreadcrumbIndex","numberOfBreadcrumbs","numberOfCollapsedBreadcrumbs","isCollapsed","pathLimit","initialize","validateProps","breadcrumbManager","buildBreadcrumbManager","bindings","engine","facetManager","buildFacetManager","window","ResizeObserver","resizeObserver","adaptBreadcrumbs","observe","host","parentElement","Schema","NumberValue","default","min","required","validate","disconnectedCallback","_a","disconnect","focusTargets","breadcrumbRemovedFocus","FocusTargetController","breadcrumbShowLessFocus","breadcrumbShowMoreFocus","breadcrumbs","Array","from","shadowRoot","querySelectorAll","hide","element","style","display","show","showAllBreadcrumbs","forEach","breadcrumb","hideOverflowingBreadcrumbs","hiddenBreadcrumbs","i","length","isOverflowing","updateShowMoreValue","updateShowLessDisplay","showLess","offsetTop","listElement","querySelector","scrollWidth","clientWidth","limitPath","path","join","ellipsedPath","slice","renderBreadcrumb","index","totalBreadcrumbs","classNames","fullValue","isArray","formattedValue","value","title","label","isLastBreadcrumb","isExclusion","state","activeColor","h","class","key","Button","part","ariaLabel","i18n","t","onClick","store","resultList","focusOnFirstResultAfterNextSearch","focusAfterSearch","deselect","ref","setTarget","firstExpandedBreadcrumbIndex","text","content","icon","CloseIcon","showMore","textContent","toLocaleString","language","setAttribute","renderShowMore","focusOnNextTarget","renderShowLess","renderClearAll","isFocusTarget","async","deselectAll","undefined","facetBreadcrumbs","breadcrumbManagerState","map","facetId","field","values","flat","filter","facets","getFieldValueCaption","categoryFacetBreadcrumbs","categoryFacets","pathValue","numericFacetBreadcrumbs","numericFacets","format","_b","call","dateFacetBreadcrumbs","dateFacets","automaticFacetBreadcrumbs","flatMap","allBreadcrumbs","renderBreadcrumbs","sortedBreadcrumbs","sort","a","b","indexA","facetManagerState","facetIds","indexOf","indexB","render","Hidden","componentDidRender","__decorate","InitializeBindings","BindStateToController"],"sources":["src/components/search/atomic-breadbox/atomic-breadbox.pcss?tag=atomic-breadbox&encapsulation=shadow","src/components/search/atomic-breadbox/atomic-breadbox.tsx"],"sourcesContent":["@import '../../../global/global.pcss';\r\n@import '../../common/atomic-rating/atomic-rating.pcss';\r\n\r\n.max-w-snippet {\r\n  max-width: 30ch;\r\n}\r\n\r\n[part='breadcrumb-label'].excluded,\r\n[part='breadcrumb-value'].excluded {\r\n  text-decoration: line-through;\r\n  color: var(--atomic-error);\r\n}\r\n\r\n/* When excluded, strikethrough line must be continuous, so we must prepend empty character instead of margin */\r\n[part='breadcrumb-value']::before {\r\n  content: '\\00a0';\r\n}\r\n","import {NumberValue, Schema} from '@coveo/bueno';\r\nimport {\r\n  BreadcrumbManagerState,\r\n  BreadcrumbManager,\r\n  buildBreadcrumbManager,\r\n  FacetManager,\r\n  FacetManagerState,\r\n  buildFacetManager,\r\n  FacetValueState,\r\n} from '@coveo/headless';\r\nimport {Component, h, State, Element, VNode, Prop} from '@stencil/core';\r\nimport CloseIcon from '../../../images/close.svg';\r\nimport {FocusTargetController} from '../../../utils/accessibility-utils';\r\nimport {getFieldValueCaption} from '../../../utils/field-utils';\r\nimport {\r\n  InitializableComponent,\r\n  BindStateToController,\r\n  InitializeBindings,\r\n} from '../../../utils/initialization-utils';\r\nimport {Button} from '../../common/button';\r\nimport {Hidden} from '../../common/hidden';\r\nimport {Bindings} from '../atomic-search-interface/atomic-search-interface';\r\n\r\ninterface Breadcrumb {\r\n  facetId: string;\r\n  label: string;\r\n  formattedValue: string[];\r\n  state?: FacetValueState;\r\n  content?: VNode;\r\n  deselect: () => void;\r\n}\r\n\r\nconst SEPARATOR = ' / ';\r\nconst ELLIPSIS = '...';\r\n\r\n/**\r\n * The `atomic-breadbox` component creates breadcrumbs that display a summary of the currently active facet values.\r\n *\r\n * @part container - The container of the whole component, list & label.\r\n * @part breadcrumb-list-container - The container of the list of breadcrumb buttons.\r\n * @part breadcrumb-list - The list of breadcrumb buttons.\r\n * @part breadcrumb-button - A single breadcrumb button.\r\n * @part breadcrumb-label - The breadcrumb label, associated with the facet.\r\n * @part breadcrumb-value - The breadcrumb formatted value.\r\n * @part breadcrumb-clear - The button to clear individual filters.\r\n * @part show-more - The button to display all breadcrumbs.\r\n * @part show-less - The button to display less breadcrumbs.\r\n * @part label - The \"Filters\" label.\r\n * @part clear - The button to clear all filters.\r\n */\r\n@Component({\r\n  tag: 'atomic-breadbox',\r\n  styleUrl: 'atomic-breadbox.pcss',\r\n  shadow: true,\r\n})\r\nexport class AtomicBreadbox implements InitializableComponent {\r\n  @InitializeBindings() public bindings!: Bindings;\r\n  private breadcrumbManager!: BreadcrumbManager;\r\n  private resizeObserver?: ResizeObserver;\r\n  private showMore!: HTMLButtonElement;\r\n  private showLess!: HTMLButtonElement;\r\n  private lastRemovedBreadcrumbIndex = 0;\r\n  private numberOfBreadcrumbs = 0;\r\n  private numberOfCollapsedBreadcrumbs = 0;\r\n  private firstExpandedBreadcrumbIndex?: number;\r\n  facetManager!: FacetManager;\r\n\r\n  @Element() private host!: HTMLElement;\r\n\r\n  @BindStateToController('breadcrumbManager')\r\n  @State()\r\n  private breadcrumbManagerState!: BreadcrumbManagerState;\r\n  @BindStateToController('facetManager')\r\n  @State()\r\n  public facetManagerState!: FacetManagerState;\r\n  @State() public error!: Error;\r\n  @State() private isCollapsed = true;\r\n\r\n  private breadcrumbRemovedFocus?: FocusTargetController;\r\n\r\n  private breadcrumbShowMoreFocus?: FocusTargetController;\r\n\r\n  private breadcrumbShowLessFocus?: FocusTargetController;\r\n\r\n  /**\r\n   * This prop allows you to control the display depth\r\n   * of the path by specifying the number of parent or ancestor\r\n   * breadcrumbs links relative to the currently selected value.\r\n   *\r\n   * If the path size is equal to or less than the pathLimit, all values in\r\n   * the path will be displayed without truncation.\r\n   *\r\n   * If the path size exceeds the pathLimit, it will truncate the path by\r\n   * replacing the middle values with ellipses ('...').\r\n   *\r\n   * Minimum: `1`\r\n   * @defaultValue `3`\r\n   */\r\n  @Prop() public pathLimit = 3;\r\n\r\n  public initialize() {\r\n    this.validateProps();\r\n    this.breadcrumbManager = buildBreadcrumbManager(this.bindings.engine);\r\n    this.facetManager = buildFacetManager(this.bindings.engine);\r\n\r\n    if (window.ResizeObserver) {\r\n      this.resizeObserver = new ResizeObserver(() => this.adaptBreadcrumbs());\r\n      this.resizeObserver.observe(this.host.parentElement!);\r\n    }\r\n  }\r\n\r\n  private validateProps() {\r\n    new Schema({\r\n      pathLimit: new NumberValue({\r\n        default: 3,\r\n        min: 1,\r\n        required: false,\r\n      }),\r\n    }).validate({\r\n      pathLimit: this.pathLimit,\r\n    });\r\n  }\r\n\r\n  public disconnectedCallback() {\r\n    this.resizeObserver?.disconnect();\r\n  }\r\n\r\n  private get focusTargets() {\r\n    if (!this.breadcrumbRemovedFocus) {\r\n      this.breadcrumbRemovedFocus = new FocusTargetController(this);\r\n    }\r\n    if (!this.breadcrumbShowLessFocus) {\r\n      this.breadcrumbShowLessFocus = new FocusTargetController(this);\r\n    }\r\n    if (!this.breadcrumbShowMoreFocus) {\r\n      this.breadcrumbShowMoreFocus = new FocusTargetController(this);\r\n    }\r\n    return {\r\n      breadcrumbRemovedFocus: this.breadcrumbRemovedFocus,\r\n      breadcrumbShowLessFocus: this.breadcrumbShowLessFocus,\r\n      breadcrumbShowMoreFocus: this.breadcrumbShowMoreFocus,\r\n    };\r\n  }\r\n\r\n  private get breadcrumbs() {\r\n    return Array.from(\r\n      this.host.shadowRoot!.querySelectorAll('li.breadcrumb')\r\n    ) as HTMLElement[];\r\n  }\r\n\r\n  private hide(element: HTMLElement) {\r\n    element.style.display = 'none';\r\n  }\r\n\r\n  private show(element: HTMLElement) {\r\n    element.style.display = '';\r\n  }\r\n\r\n  private showAllBreadcrumbs() {\r\n    this.breadcrumbs.forEach((breadcrumb) => this.show(breadcrumb));\r\n  }\r\n\r\n  private hideOverflowingBreadcrumbs() {\r\n    let hiddenBreadcrumbs = 0;\r\n    for (\r\n      let i = this.breadcrumbs.length - 1;\r\n      this.isOverflowing && i >= 0;\r\n      i--\r\n    ) {\r\n      this.hide(this.breadcrumbs[i]);\r\n      hiddenBreadcrumbs++;\r\n    }\r\n    this.updateShowMoreValue(hiddenBreadcrumbs);\r\n  }\r\n\r\n  private updateShowLessDisplay() {\r\n    this.show(this.showLess);\r\n    if (this.showLess.offsetTop === 0) {\r\n      this.hide(this.showLess);\r\n    }\r\n  }\r\n\r\n  private adaptBreadcrumbs() {\r\n    if (!this.breadcrumbs.length) {\r\n      return;\r\n    }\r\n    this.showAllBreadcrumbs();\r\n\r\n    if (!this.isCollapsed) {\r\n      this.updateShowLessDisplay();\r\n      return;\r\n    }\r\n\r\n    this.updateShowMoreValue(this.breadcrumbs.length);\r\n    this.hideOverflowingBreadcrumbs();\r\n  }\r\n\r\n  private get isOverflowing() {\r\n    const listElement = this.host.shadowRoot!.querySelector('ul');\r\n    if (!listElement) {\r\n      return false;\r\n    }\r\n    return listElement.scrollWidth > listElement.clientWidth;\r\n  }\r\n\r\n  private limitPath(path: string[]) {\r\n    if (path.length <= this.pathLimit) {\r\n      return path.join(SEPARATOR);\r\n    }\r\n\r\n    if (this.pathLimit === 1 && path.length > 1) {\r\n      return [ELLIPSIS, path[path.length - 1]].join(SEPARATOR);\r\n    }\r\n\r\n    const ellipsedPath = [\r\n      path[0],\r\n      ELLIPSIS,\r\n      ...path.slice(-(this.pathLimit - 1)),\r\n    ];\r\n    return ellipsedPath.join(SEPARATOR);\r\n  }\r\n\r\n  private renderBreadcrumb(\r\n    breadcrumb: Breadcrumb,\r\n    index: number,\r\n    totalBreadcrumbs: number\r\n  ) {\r\n    const classNames = [\r\n      'py-2',\r\n      'px-3',\r\n      'flex',\r\n      'items-center',\r\n      'btn-pill',\r\n      'group',\r\n    ];\r\n\r\n    const fullValue = Array.isArray(breadcrumb.formattedValue)\r\n      ? breadcrumb.formattedValue.join(SEPARATOR)\r\n      : breadcrumb.formattedValue;\r\n    const value = Array.isArray(breadcrumb.formattedValue)\r\n      ? this.limitPath(breadcrumb.formattedValue)\r\n      : breadcrumb.formattedValue;\r\n    const title = `${breadcrumb.label}: ${fullValue}`;\r\n    const isLastBreadcrumb = totalBreadcrumbs === 1;\r\n    const isExclusion = breadcrumb.state === 'excluded';\r\n    const activeColor = isExclusion ? 'error' : 'primary';\r\n\r\n    return (\r\n      <li class=\"breadcrumb\" key={value}>\r\n        <Button\r\n          part=\"breadcrumb-button\"\r\n          style={isExclusion ? 'outline-error' : 'outline-bg-neutral'}\r\n          class={classNames.join(' ')}\r\n          title={title}\r\n          // TODO: [KIT-2939] Replace `remove-filter-on` by `remove-include-filter-on`.\r\n          ariaLabel={this.bindings.i18n.t(\r\n            isExclusion ? 'remove-exclusion-filter-on' : 'remove-filter-on',\r\n            {\r\n              value: title,\r\n            }\r\n          )}\r\n          onClick={() => {\r\n            if (isLastBreadcrumb) {\r\n              this.bindings.store.state.resultList?.focusOnFirstResultAfterNextSearch();\r\n            } else if (this.numberOfBreadcrumbs > 1) {\r\n              this.focusTargets.breadcrumbRemovedFocus.focusAfterSearch();\r\n            }\r\n\r\n            this.lastRemovedBreadcrumbIndex = index;\r\n            breadcrumb.deselect();\r\n          }}\r\n          ref={(ref) => {\r\n            if (this.lastRemovedBreadcrumbIndex === index) {\r\n              this.focusTargets.breadcrumbRemovedFocus.setTarget(ref);\r\n            }\r\n            if (this.firstExpandedBreadcrumbIndex === index) {\r\n              this.focusTargets.breadcrumbShowMoreFocus.setTarget(ref);\r\n            }\r\n          }}\r\n        >\r\n          <span\r\n            part=\"breadcrumb-label\"\r\n            class={`max-w-snippet truncate group-hover:text-${activeColor} group-focus-visible:text-${activeColor} ${breadcrumb.state}`}\r\n          >\r\n            {this.bindings.i18n.t('with-colon', {text: breadcrumb.label})}\r\n          </span>\r\n          <span\r\n            part=\"breadcrumb-value\"\r\n            class={\r\n              breadcrumb.content\r\n                ? ''\r\n                : `max-w-snippet truncate ${breadcrumb.state}`\r\n            }\r\n          >\r\n            {breadcrumb.content ?? value}\r\n          </span>\r\n          <atomic-icon\r\n            part=\"breadcrumb-clear\"\r\n            class=\"w-2.5 h-2.5 ml-2 mt-px\"\r\n            icon={CloseIcon}\r\n          ></atomic-icon>\r\n        </Button>\r\n      </li>\r\n    );\r\n  }\r\n\r\n  private updateShowMoreValue(value: number) {\r\n    this.numberOfCollapsedBreadcrumbs = value;\r\n    if (value === 0) {\r\n      this.hide(this.showMore);\r\n      return;\r\n    }\r\n\r\n    this.show(this.showMore);\r\n    this.showMore.textContent = `+ ${value.toLocaleString(\r\n      this.bindings.i18n.language\r\n    )}`;\r\n\r\n    this.showMore.setAttribute(\r\n      'aria-label',\r\n      this.bindings.i18n.t('show-n-more-filters', {\r\n        value,\r\n      })\r\n    );\r\n  }\r\n\r\n  private renderShowMore() {\r\n    return (\r\n      <li key=\"show-more\">\r\n        <Button\r\n          ref={(ref) => {\r\n            this.focusTargets.breadcrumbShowLessFocus.setTarget(ref!);\r\n            this.showMore = ref!;\r\n          }}\r\n          part=\"show-more\"\r\n          style=\"outline-primary\"\r\n          class=\"p-2 btn-pill whitespace-nowrap\"\r\n          onClick={() => {\r\n            this.firstExpandedBreadcrumbIndex =\r\n              this.numberOfBreadcrumbs - this.numberOfCollapsedBreadcrumbs;\r\n            this.focusTargets.breadcrumbShowMoreFocus.focusOnNextTarget();\r\n            this.isCollapsed = false;\r\n          }}\r\n        ></Button>\r\n      </li>\r\n    );\r\n  }\r\n\r\n  private renderShowLess() {\r\n    return (\r\n      <li key=\"show-less\">\r\n        <Button\r\n          ref={(ref) => (this.showLess = ref!)}\r\n          part=\"show-less\"\r\n          style=\"outline-primary\"\r\n          text={this.bindings.i18n.t('show-less')}\r\n          class=\"p-2 btn-pill\"\r\n          onClick={() => {\r\n            this.focusTargets.breadcrumbShowLessFocus.focusOnNextTarget();\r\n            this.isCollapsed = true;\r\n          }}\r\n        ></Button>\r\n      </li>\r\n    );\r\n  }\r\n\r\n  private renderClearAll() {\r\n    const isFocusTarget =\r\n      this.lastRemovedBreadcrumbIndex === this.numberOfBreadcrumbs;\r\n    return (\r\n      <li key=\"clear-all\">\r\n        <Button\r\n          part=\"clear\"\r\n          style=\"text-primary\"\r\n          text={this.bindings.i18n.t('clear')}\r\n          class=\"p-2 btn-pill\"\r\n          ariaLabel={this.bindings.i18n.t('clear-all-filters')}\r\n          onClick={async () => {\r\n            this.breadcrumbManager.deselectAll();\r\n            this.bindings.store.state.resultList?.focusOnFirstResultAfterNextSearch();\r\n          }}\r\n          ref={\r\n            isFocusTarget\r\n              ? this.focusTargets.breadcrumbRemovedFocus.setTarget\r\n              : undefined\r\n          }\r\n        ></Button>\r\n      </li>\r\n    );\r\n  }\r\n\r\n  private get facetBreadcrumbs(): Breadcrumb[] {\r\n    return this.breadcrumbManagerState.facetBreadcrumbs\r\n      .map(({facetId, field, values}) =>\r\n        values.map((value) => ({value, facetId, field}))\r\n      )\r\n      .flat()\r\n      .filter(({facetId}) => this.bindings.store.state.facets[facetId])\r\n      .map(({value, facetId, field}) => ({\r\n        facetId,\r\n        label: this.bindings.store.state.facets[facetId]?.label(),\r\n        state: value.value.state,\r\n        deselect: value.deselect,\r\n        formattedValue: [\r\n          getFieldValueCaption(field, value.value.value, this.bindings.i18n),\r\n        ],\r\n      }));\r\n  }\r\n\r\n  private get categoryFacetBreadcrumbs(): Breadcrumb[] {\r\n    return this.breadcrumbManagerState.categoryFacetBreadcrumbs.map(\r\n      ({facetId, field, path, deselect}) => ({\r\n        facetId,\r\n        label: this.bindings.store.state.categoryFacets[facetId].label(),\r\n        deselect: deselect,\r\n        formattedValue: path.map((pathValue) =>\r\n          getFieldValueCaption(field, pathValue.value, this.bindings.i18n)\r\n        ),\r\n      })\r\n    );\r\n  }\r\n\r\n  private get numericFacetBreadcrumbs(): Breadcrumb[] {\r\n    return this.breadcrumbManagerState.numericFacetBreadcrumbs\r\n      .map(({facetId, field, values}) =>\r\n        values.map((value) => ({value, facetId, field}))\r\n      )\r\n      .flat()\r\n      .map(({value, facetId}) => ({\r\n        facetId,\r\n        label: this.bindings.store.state.numericFacets[facetId].label(),\r\n        state: value.value.state,\r\n        deselect: value.deselect,\r\n        formattedValue: [\r\n          this.bindings.store.state.numericFacets[facetId].format(value.value),\r\n        ],\r\n        content: this.bindings.store.state.numericFacets[facetId].content?.(\r\n          value.value\r\n        ),\r\n      }));\r\n  }\r\n\r\n  private get dateFacetBreadcrumbs(): Breadcrumb[] {\r\n    return this.breadcrumbManagerState.dateFacetBreadcrumbs\r\n      .map(({facetId, field, values}) =>\r\n        values.map((value) => ({value, facetId, field}))\r\n      )\r\n      .flat()\r\n      .map(({value, facetId}) => ({\r\n        facetId,\r\n        label: this.bindings.store.state.dateFacets[facetId].label(),\r\n        state: value.value.state,\r\n        deselect: value.deselect,\r\n        formattedValue: [\r\n          this.bindings.store.state.dateFacets[facetId].format(value.value),\r\n        ],\r\n      }));\r\n  }\r\n\r\n  private get automaticFacetBreadcrumbs(): Breadcrumb[] {\r\n    return this.breadcrumbManagerState.automaticFacetBreadcrumbs\r\n      .flatMap(({facetId, field, label, values}) =>\r\n        values.map((value) => ({value, facetId, field, label}))\r\n      )\r\n      .map(({value, facetId, field, label}) => ({\r\n        facetId,\r\n        state: value.value.state,\r\n        label: label ? label : field,\r\n        deselect: value.deselect,\r\n        formattedValue: [\r\n          getFieldValueCaption(field, value.value.value, this.bindings.i18n),\r\n        ],\r\n      }));\r\n  }\r\n\r\n  private get allBreadcrumbs(): Breadcrumb[] {\r\n    return [\r\n      ...this.facetBreadcrumbs,\r\n      ...this.categoryFacetBreadcrumbs,\r\n      ...this.numericFacetBreadcrumbs,\r\n      ...this.dateFacetBreadcrumbs,\r\n      ...this.automaticFacetBreadcrumbs,\r\n    ];\r\n  }\r\n\r\n  private renderBreadcrumbs(allBreadcrumbs: Breadcrumb[]) {\r\n    const sortedBreadcrumbs = allBreadcrumbs.sort((a, b) => {\r\n      const indexA = this.facetManagerState.facetIds.indexOf(a.facetId);\r\n      const indexB = this.facetManagerState.facetIds.indexOf(b.facetId);\r\n      return indexA - indexB;\r\n    });\r\n    this.numberOfBreadcrumbs = sortedBreadcrumbs.length;\r\n\r\n    return [\r\n      sortedBreadcrumbs.map((breadcrumb, i) =>\r\n        this.renderBreadcrumb(breadcrumb, i, allBreadcrumbs.length)\r\n      ),\r\n      this.isCollapsed && this.renderShowMore(),\r\n      !this.isCollapsed && this.renderShowLess(),\r\n      this.renderClearAll(),\r\n    ];\r\n  }\r\n\r\n  public render() {\r\n    const allBreadcrumbs = this.allBreadcrumbs;\r\n\r\n    if (!allBreadcrumbs.length) {\r\n      return <Hidden></Hidden>;\r\n    }\r\n\r\n    return (\r\n      <div part=\"container\" class=\"text-on-background text-sm flex\">\r\n        <span part=\"label\" class=\"font-bold py-[0.625rem] pl-0 pr-2\">\r\n          {this.bindings.i18n.t('with-colon', {\r\n            text: this.bindings.i18n.t('filters'),\r\n          })}\r\n        </span>\r\n        <div part=\"breadcrumb-list-container\" class=\"relative grow\">\r\n          <ul\r\n            part=\"breadcrumb-list\"\r\n            class={`flex gap-1 ${\r\n              this.isCollapsed ? 'flex-nowrap absolute w-full' : 'flex-wrap'\r\n            }`}\r\n          >\r\n            {this.renderBreadcrumbs(allBreadcrumbs)}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  public componentDidRender() {\r\n    this.adaptBreadcrumbs();\r\n  }\r\n}\r\n"],"mappings":"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"}