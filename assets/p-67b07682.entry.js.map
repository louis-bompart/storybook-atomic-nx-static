{"version":3,"names":["AtomicSearchBoxInstantResults","this","results","display","templateHasError","maxResultsPerQuery","density","imageSize","setRenderFunction","resultRenderingFunction","itemRenderingFunction","componentWillLoad","dispatchSearchBoxSuggestionsEvent","bindings","initialize","host","error","getLink","el","atomicResult","tagName","querySelector","_a","shadowRoot","handleLinkClick","hasModifier","setTarget","value","setAttribute","initialTarget","getAttribute","click","renderItems","suggestedQuery","store","isMobile","instantResults","state","length","elements","map","result","partialItem","getPartialInstantItemElement","i18n","ariaLabelGenerator","call","title","uniqueId","content","h","key","encodeForDomAttribute","part","interactiveResult","buildInteractiveInstantResult","engine","options","itemTemplateProvider","getTemplateContent","stopPropagation","renderingFunction","onSelect","e","link","target","ctrlKey","metaKey","getPartialInstantItemShowAllElement","push","InstantItemShowAllButton","clearSuggestions","searchBoxController","updateText","q","submit","buildInstantResults","ItemTemplateProvider","includeDefaultTemplate","templateElements","Array","from","querySelectorAll","getResultTemplateRegistered","setResultTemplateRegistered","getTemplateHasError","setTemplateHasError","position","parentNode","children","indexOf","panel","onSuggestedQueryChange","updateQuery","getSuggestionElements","console","warn","Promise","resolve","unsubscribe","subscribe","isLoading","render","element"],"sources":["src/components/search/search-box-suggestions/atomic-search-box-instant-results/atomic-search-box-instant-results.tsx"],"sourcesContent":["import {\r\n  buildInstantResults,\r\n  buildInteractiveInstantResult,\r\n  InstantResults,\r\n  Result,\r\n  SearchBox,\r\n} from '@coveo/headless';\r\nimport {Component, Element, State, h, Prop, Method} from '@stencil/core';\r\nimport {InitializableComponent} from '../../../../utils/initialization-utils';\r\nimport {encodeForDomAttribute} from '../../../../utils/string-utils';\r\nimport {ItemRenderingFunction} from '../../../common/item-list/item-list-common';\r\nimport {ItemTemplateProvider} from '../../../common/item-list/item-template-provider';\r\nimport {\r\n  ItemDisplayDensity,\r\n  ItemDisplayImageSize,\r\n  ItemDisplayLayout,\r\n} from '../../../common/layout/display-options';\r\nimport {\r\n  getPartialInstantItemElement,\r\n  getPartialInstantItemShowAllElement,\r\n  InstantItemShowAllButton,\r\n} from '../../../common/suggestions/instant-item';\r\nimport {\r\n  dispatchSearchBoxSuggestionsEvent,\r\n  SearchBoxSuggestionElement,\r\n  SearchBoxSuggestions,\r\n  SearchBoxSuggestionsBindings,\r\n} from '../../../common/suggestions/suggestions-common';\r\nimport {Bindings} from '../../atomic-search-interface/atomic-search-interface';\r\n\r\nexport type AriaLabelGenerator = (\r\n  bindings: Bindings,\r\n  result: Result\r\n) => string | undefined;\r\n\r\n/**\r\n * The `atomic-search-box-instant-results` component can be added as a child of an `atomic-search-box` component, allowing for the configuration of instant results behavior.\r\n *\r\n * This component does not support accessibility out-of-the-box. To do so, see [Instant Results Accessibility](https://docs.coveo.com/en/atomic/latest/usage/accessibility/#instant-results-accessibility).\r\n *\r\n * This component is not supported on mobile.\r\n *\r\n * @slot default - The default slot where the instant results are rendered.\r\n */\r\n@Component({\r\n  tag: 'atomic-search-box-instant-results',\r\n  shadow: true,\r\n})\r\nexport class AtomicSearchBoxInstantResults implements InitializableComponent {\r\n  public bindings!: SearchBoxSuggestionsBindings<SearchBox, Bindings>;\r\n  private itemRenderingFunction: ItemRenderingFunction;\r\n  private results: Result[] = [];\r\n  private itemTemplateProvider!: ItemTemplateProvider;\r\n  private instantResults!: InstantResults;\r\n  private display: ItemDisplayLayout = 'list';\r\n\r\n  @Element() public host!: HTMLElement;\r\n\r\n  @State() public error!: Error;\r\n  @State() private templateHasError = false;\r\n\r\n  /**\r\n   * Sets a rendering function to bypass the standard HTML template mechanism for rendering results.\r\n   * You can use this function while working with web frameworks that don't use plain HTML syntax, e.g., React, Angular or Vue.\r\n   *\r\n   * Do not use this method if you integrate Atomic in a plain HTML deployment.\r\n   *\r\n   * @param resultRenderingFunction\r\n   */\r\n  @Method() public async setRenderFunction(\r\n    resultRenderingFunction: ItemRenderingFunction\r\n  ) {\r\n    this.itemRenderingFunction = resultRenderingFunction;\r\n  }\r\n  /**\r\n   * The maximum number of results to show.\r\n   */\r\n  @Prop({reflect: true}) public maxResultsPerQuery = 4;\r\n  /**\r\n   * The spacing of various elements in the result list, including the gap between results, the gap between parts of a result, and the font sizes of different parts in a result.\r\n   */\r\n  @Prop({reflect: true}) public density: ItemDisplayDensity = 'normal';\r\n  /**\r\n   * The expected size of the image displayed in the results.\r\n   */\r\n  @Prop({reflect: true}) public imageSize: ItemDisplayImageSize = 'icon';\r\n  /**\r\n   * The callback to generate an [`aria-label`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label) for a given result so that accessibility tools can fully describe what's visually rendered by a result.\r\n   *\r\n   * By default, or if an empty string is returned, `result.title` is used.\r\n   */\r\n  @Prop() public ariaLabelGenerator?: AriaLabelGenerator;\r\n\r\n  public componentWillLoad() {\r\n    try {\r\n      dispatchSearchBoxSuggestionsEvent<SearchBox, Bindings>((bindings) => {\r\n        this.bindings = bindings;\r\n        return this.initialize();\r\n      }, this.host);\r\n    } catch (error) {\r\n      this.error = error as Error;\r\n    }\r\n  }\r\n\r\n  private getLink(el: HTMLElement): HTMLElement | null {\r\n    const atomicResult =\r\n      el.tagName === 'ATOMIC-RESULT' ? el : el?.querySelector('atomic-result');\r\n\r\n    return (\r\n      atomicResult?.shadowRoot?.querySelector('atomic-result-link a') || null\r\n    );\r\n  }\r\n\r\n  private handleLinkClick(el: HTMLElement, hasModifier: boolean) {\r\n    const setTarget = (value: string) => el.setAttribute('target', value);\r\n    const initialTarget = el.getAttribute('target');\r\n\r\n    hasModifier && setTarget('_blank');\r\n    el.click();\r\n    hasModifier && setTarget(initialTarget || '');\r\n\r\n    return true;\r\n  }\r\n\r\n  private renderItems(): SearchBoxSuggestionElement[] {\r\n    if (!this.bindings.suggestedQuery() || this.bindings.store.isMobile()) {\r\n      return [];\r\n    }\r\n    const results = this.instantResults.state.results.length\r\n      ? this.instantResults.state.results\r\n      : this.results;\r\n\r\n    const elements: SearchBoxSuggestionElement[] = results.map(\r\n      (result: Result) => {\r\n        const partialItem = getPartialInstantItemElement(\r\n          this.bindings.i18n,\r\n          this.ariaLabelGenerator?.(this.bindings, result) || result.title,\r\n          result.uniqueId\r\n        );\r\n        return {\r\n          ...partialItem,\r\n          content: (\r\n            <atomic-result\r\n              key={`instant-result-${encodeForDomAttribute(result.uniqueId)}`}\r\n              part=\"outline\"\r\n              result={result}\r\n              interactiveResult={buildInteractiveInstantResult(\r\n                this.bindings.engine,\r\n                {\r\n                  options: {result},\r\n                }\r\n              )}\r\n              display={this.display}\r\n              density={this.density}\r\n              imageSize={this.imageSize}\r\n              content={this.itemTemplateProvider.getTemplateContent(result)}\r\n              stopPropagation={false}\r\n              renderingFunction={this.itemRenderingFunction}\r\n            ></atomic-result>\r\n          ),\r\n          onSelect: (e: MouseEvent) => {\r\n            const link = this.getLink(e.target as HTMLElement);\r\n\r\n            if (!link) {\r\n              return;\r\n            }\r\n            this.handleLinkClick(link, e.ctrlKey || e.metaKey);\r\n          },\r\n        };\r\n      }\r\n    );\r\n    if (elements.length) {\r\n      const partialItem = getPartialInstantItemShowAllElement(\r\n        this.bindings.i18n\r\n      );\r\n      elements.push({\r\n        ...partialItem,\r\n        content: <InstantItemShowAllButton i18n={this.bindings.i18n} />,\r\n        onSelect: () => {\r\n          this.bindings.clearSuggestions();\r\n          this.bindings.searchBoxController.updateText(\r\n            this.instantResults.state.q\r\n          );\r\n          this.bindings.searchBoxController.submit();\r\n        },\r\n      });\r\n    }\r\n    return elements;\r\n  }\r\n\r\n  public initialize(): SearchBoxSuggestions {\r\n    this.instantResults = buildInstantResults(this.bindings.engine, {\r\n      options: {\r\n        maxResultsPerQuery: this.maxResultsPerQuery,\r\n      },\r\n    });\r\n\r\n    this.itemTemplateProvider = new ItemTemplateProvider({\r\n      includeDefaultTemplate: true,\r\n      templateElements: Array.from(\r\n        this.host.querySelectorAll('atomic-result-template')\r\n      ),\r\n      getResultTemplateRegistered: () => true,\r\n      setResultTemplateRegistered: () => {},\r\n      getTemplateHasError: () => this.templateHasError,\r\n      setTemplateHasError: (value: boolean) => {\r\n        this.templateHasError = value;\r\n      },\r\n      bindings: this.bindings,\r\n    });\r\n\r\n    return {\r\n      position: Array.from(this.host.parentNode!.children).indexOf(this.host),\r\n      panel: 'right',\r\n      onSuggestedQueryChange: (q) => {\r\n        this.instantResults.updateQuery(q);\r\n        return this.onSuggestedQueryChange();\r\n      },\r\n      renderItems: () => this.renderItems(),\r\n    };\r\n  }\r\n\r\n  private onSuggestedQueryChange() {\r\n    if (\r\n      !this.bindings.getSuggestionElements().length &&\r\n      !this.bindings.searchBoxController.state.value\r\n    ) {\r\n      console.warn(\r\n        \"There doesn't seem to be any query suggestions configured. Make sure to include either an atomic-search-box-query-suggestions or atomic-search-box-recent-queries in your search box in order to see some instant results.\"\r\n      );\r\n    }\r\n\r\n    return new Promise<void>((resolve) => {\r\n      const unsubscribe = this.instantResults.subscribe(() => {\r\n        const state = this.instantResults.state;\r\n        if (!state.isLoading) {\r\n          if (state.results.length) {\r\n            this.results = state.results;\r\n          }\r\n          unsubscribe();\r\n          resolve();\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  public render() {\r\n    if (this.error) {\r\n      return (\r\n        <atomic-component-error\r\n          element={this.host}\r\n          error={this.error}\r\n        ></atomic-component-error>\r\n      );\r\n    }\r\n  }\r\n}\r\n"],"mappings":"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"}