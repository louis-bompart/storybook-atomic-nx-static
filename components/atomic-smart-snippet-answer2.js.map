{"file":"atomic-smart-snippet-answer2.js","mappings":"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","names":["sanitize"],"sources":["src/components/common/smart-snippets/atomic-smart-snippet-answer/atomic-smart-snippet-answer.pcss?tag=atomic-smart-snippet-answer&encapsulation=shadow","src/components/common/smart-snippets/atomic-smart-snippet-answer/atomic-smart-snippet-answer.tsx"],"sourcesContent":[":host {\n  color: var(--atomic-on-background);\n  font-size: var(--atomic-text-lg);\n  line-height: calc(var(--atomic-text-lg) * var(--atomic-line-height-ratio));\n\n  .wrapper {\n    display: flow-root;\n    .margin {\n      margin: 1rem 0;\n    }\n  }\n}\n","import {InlineLink} from '@coveo/headless';\nimport {\n  Component,\n  h,\n  Prop,\n  Event,\n  EventEmitter,\n  Host,\n  Element,\n} from '@stencil/core';\nimport {sanitize} from 'dompurify';\nimport {sanitizeStyle} from '../../../../utils/utils';\nimport {bindAnalyticsToLink} from '../../item-link/item-link';\n\n/**\n * @part answer - The container displaying the full document excerpt.\n * @internal\n */\n@Component({\n  tag: 'atomic-smart-snippet-answer',\n  styleUrl: 'atomic-smart-snippet-answer.pcss',\n  shadow: true,\n})\nexport class AtomicSmartSnippetAnswer {\n  @Prop() htmlContent!: string;\n  @Prop() innerStyle?: string;\n\n  @Element() public host!: HTMLElement;\n\n  @Event({bubbles: false})\n  private answerSizeUpdated!: EventEmitter<{height: number}>;\n  @Event({bubbles: false})\n  private selectInlineLink!: EventEmitter<InlineLink>;\n  @Event({bubbles: false})\n  private beginDelayedSelectInlineLink!: EventEmitter<InlineLink>;\n  @Event({bubbles: false})\n  private cancelPendingSelectInlineLink!: EventEmitter<InlineLink>;\n  private wrapperElement?: HTMLElement;\n  private isRendering = true;\n  private resizeObserver: ResizeObserver | undefined;\n\n  public componentWillRender() {\n    this.isRendering = true;\n  }\n\n  public componentDidRender() {\n    this.isRendering = false;\n    this.emitCurrentHeight();\n  }\n\n  public componentDidLoad() {\n    // Prevents initial transition\n    setTimeout(() => {\n      this.host.classList.add('loaded');\n    }, 0);\n  }\n\n  public connectedCallback() {\n    if (this.wrapperElement && this.resizeObserver) {\n      this.resizeObserver.observe(this.wrapperElement);\n    }\n  }\n\n  public disconnectedCallback() {\n    this.resizeObserver?.disconnect();\n  }\n\n  public setWrapperElement(element: HTMLElement) {\n    this.wrapperElement = element;\n    if (this.resizeObserver) {\n      this.resizeObserver.disconnect();\n    }\n    this.resizeObserver = new ResizeObserver(() => this.emitCurrentHeight());\n    this.resizeObserver.observe(element);\n  }\n\n  private get sanitizedStyle() {\n    if (!this.innerStyle) {\n      return undefined;\n    }\n    return sanitizeStyle(this.innerStyle);\n  }\n\n  private emitCurrentHeight() {\n    if (this.isRendering) {\n      return;\n    }\n    this.answerSizeUpdated.emit({height: this.wrapperElement!.scrollHeight});\n  }\n\n  private bindAnalyticsToLink(element: HTMLAnchorElement) {\n    const link: InlineLink = {\n      linkText: element.innerText,\n      linkURL: element.href,\n    };\n    bindAnalyticsToLink(element, {\n      stopPropagation: false,\n      onSelect: () => this.selectInlineLink.emit(link),\n      onBeginDelayedSelect: () => this.beginDelayedSelectInlineLink.emit(link),\n      onCancelPendingSelect: () =>\n        this.cancelPendingSelectInlineLink.emit(link),\n    });\n  }\n\n  private bindAnalyticsToLinks(root: HTMLElement) {\n    Array.from(root.querySelectorAll('a')).forEach((link) =>\n      this.bindAnalyticsToLink(link)\n    );\n  }\n\n  private renderStyle() {\n    const style = this.sanitizedStyle;\n    if (!style) {\n      return;\n    }\n    // deepcode ignore ReactSetInnerHtml: Defined by implementer and sanitized by dompurify\n    return <style innerHTML={style}></style>;\n  }\n\n  private renderContent() {\n    return (\n      <div\n        class=\"wrapper\"\n        ref={(element) => element && this.setWrapperElement(element)}\n      >\n        {/* deepcode ignore ReactSetInnerHtml: Sanitized by back-end + dompurify */}\n        <div\n          innerHTML={sanitize(this.htmlContent, {\n            USE_PROFILES: {html: true},\n          })}\n          ref={(element) => element && this.bindAnalyticsToLinks(element)}\n          part=\"answer\"\n          class=\"margin\"\n        ></div>\n      </div>\n    );\n  }\n\n  public render() {\n    return (\n      <Host>\n        {this.renderStyle()}\n        {this.renderContent()}\n      </Host>\n    );\n  }\n}\n"],"version":3}