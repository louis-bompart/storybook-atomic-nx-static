{"version":3,"names":["tabBarCss","TabBarStyle0","TabBar","this","popoverTabs","getElementWidth","element","parseFloat","window","getComputedStyle","getPropertyValue","hideElement","el","style","visibility","ariaHidden","showElement","updateTabVisibility","tabs","isVisible","tabCount","tabsFromSlot","length","forEach","tab","index","setProperty","String","updatePopoverTabs","overflowingTabs","map","h","Button","part","class","ariaLabel","label","onClick","select","_a","tabPopover","togglePopover","updateTabsDisplay","displayedTabs","updatePopoverPosition","setButtonVisibility","render","Host","isTab","tagName","test","Array","from","host","querySelectorAll","filter","selectedTab","find","active","slotContentWidth","reduce","total","containerWidth","isOverflow","shadowRoot","querySelector","popoverWidth","containerRelativeRightPosition","getBoundingClientRect","right","selectedTabRelativeRightPosition","isBeforeSelectedTab","minimumWidthNeeded","rightPositionLimit","includes","lastDisplayedTab","lastDisplayedTabRightPosition","left","resolveResult","event","stopPropagation","componentDidLoad","resizeObserver","ResizeObserver","observe","disconnectedCallback","disconnect","tabPopoverCss","TabPopoverStyle0","TabPopover","show","isOpen","popoverId","initialize","initializePopover","popupRef","classList","add","handleKeyDown","e","key","slotElements","children","hasTabs","renderDropdownButton","bindings","i18n","t","_b","buttonClasses","ref","buttonRef","ariaExpanded","ariaControls","join","title","icon","ArrowBottomIcon","renderBackdrop","renderPopover","id","componentDidRender","popperInstance","createPopper","placement","modifiers","preventOverflow","componentDidUpdate","forceUpdate","source","container","shouldHideSelf","scope","interfaceElement","__decorate","InitializeBindings"],"sources":["src/components/common/tabs/tab-bar.pcss?tag=tab-bar&encapsulation=shadow","src/components/common/tabs/tab-bar.tsx","src/components/common/tabs/tab-popover.pcss?tag=tab-popover&encapsulation=shadow","src/components/common/tabs/tab-popover.tsx"],"sourcesContent":["@import '../../../global/global.pcss';\r\n\r\n:host {\r\n  white-space: nowrap;\r\n  width: 100%;\r\n  overflow-x: visible;\r\n  display: flex;\r\n  position: relative;\r\n}\r\n","import {h, Component, Element, Host, Listen, State} from '@stencil/core';\r\nimport {Button} from '../button';\r\nimport {TabCommonElement} from './tab-common';\r\n\r\n/**\r\n * @internal\r\n */\r\n@Component({\r\n  tag: 'tab-bar',\r\n  shadow: true,\r\n  styleUrl: 'tab-bar.pcss',\r\n})\r\nexport class TabBar {\r\n  @Element() private host!: HTMLElement;\r\n\r\n  @State()\r\n  private popoverTabs: (typeof Button)[] = [];\r\n\r\n  private resizeObserver: ResizeObserver | undefined;\r\n\r\n  private get tabsFromSlot(): TabCommonElement[] {\r\n    const isTab = (tagName: string) => /atomic-.+-tab$/i.test(tagName);\r\n    return Array.from(this.host.querySelectorAll<TabCommonElement>('*')).filter(\r\n      (element) => isTab(element.tagName)\r\n    );\r\n  }\r\n\r\n  private get selectedTab() {\r\n    return this.tabsFromSlot.find((tab) => tab.active);\r\n  }\r\n\r\n  private get slotContentWidth() {\r\n    return this.tabsFromSlot.reduce(\r\n      (total, el) =>\r\n        total +\r\n        parseFloat(window.getComputedStyle(el).getPropertyValue('width')),\r\n      0\r\n    );\r\n  }\r\n\r\n  private get containerWidth() {\r\n    return parseFloat(\r\n      window.getComputedStyle(this.host).getPropertyValue('width')\r\n    );\r\n  }\r\n\r\n  private get isOverflow() {\r\n    return this.slotContentWidth > this.containerWidth;\r\n  }\r\n\r\n  private get tabPopover() {\r\n    return this.host.shadowRoot?.querySelector('tab-popover');\r\n  }\r\n\r\n  private get popoverWidth() {\r\n    return this.tabPopover ? this.getElementWidth(this.tabPopover) : 0;\r\n  }\r\n\r\n  private get overflowingTabs() {\r\n    const containerRelativeRightPosition =\r\n      this.host.getBoundingClientRect().right;\r\n    const selectedTabRelativeRightPosition =\r\n      this.selectedTab?.getBoundingClientRect().right;\r\n\r\n    return this.tabsFromSlot.filter((element) => {\r\n      const isBeforeSelectedTab = selectedTabRelativeRightPosition\r\n        ? selectedTabRelativeRightPosition >\r\n          element.getBoundingClientRect().right\r\n        : false;\r\n\r\n      const minimumWidthNeeded = isBeforeSelectedTab\r\n        ? this.popoverWidth + this.getElementWidth(this.selectedTab)\r\n        : this.popoverWidth;\r\n\r\n      const rightPositionLimit = !this.isOverflow\r\n        ? containerRelativeRightPosition\r\n        : containerRelativeRightPosition - minimumWidthNeeded;\r\n\r\n      return (\r\n        element.getBoundingClientRect().right > rightPositionLimit &&\r\n        !element.active\r\n      );\r\n    });\r\n  }\r\n\r\n  private get displayedTabs() {\r\n    return this.tabsFromSlot.filter((el) => !this.overflowingTabs.includes(el));\r\n  }\r\n\r\n  private get lastDisplayedTab() {\r\n    const displayedTabs = this.displayedTabs;\r\n    return displayedTabs[displayedTabs.length - 1];\r\n  }\r\n\r\n  private get lastDisplayedTabRightPosition() {\r\n    return (\r\n      this.lastDisplayedTab.getBoundingClientRect().right -\r\n      this.host.getBoundingClientRect().left\r\n    );\r\n  }\r\n\r\n  private updatePopoverPosition() {\r\n    this.tabPopover?.style.setProperty(\r\n      'left',\r\n      `${this.displayedTabs.length ? this.lastDisplayedTabRightPosition : 0}px`\r\n    );\r\n  }\r\n\r\n  private getElementWidth = (element?: Element) => {\r\n    return element\r\n      ? parseFloat(window.getComputedStyle(element).getPropertyValue('width'))\r\n      : 0;\r\n  };\r\n\r\n  private hideElement = (el: HTMLElement) => {\r\n    el.style.visibility = 'hidden';\r\n    el.ariaHidden = 'true';\r\n  };\r\n\r\n  private showElement = (el: HTMLElement) => {\r\n    el.style.visibility = 'visible';\r\n    el.ariaHidden = 'false';\r\n  };\r\n\r\n  private updateTabVisibility = (\r\n    tabs: TabCommonElement[],\r\n    isVisible: boolean\r\n  ) => {\r\n    const tabCount = this.tabsFromSlot.length;\r\n\r\n    tabs.forEach((tab, index) => {\r\n      tab.style.setProperty(\r\n        'order',\r\n        String(isVisible ? index + 1 : tabCount - tabs.length + index + 1)\r\n      );\r\n      if (isVisible) {\r\n        this.showElement(tab);\r\n      } else {\r\n        this.hideElement(tab);\r\n      }\r\n    });\r\n  };\r\n\r\n  private updatePopoverTabs = () => {\r\n    this.popoverTabs = this.overflowingTabs.map((tab) => (\r\n      <Button\r\n        part=\"popover-tab\"\r\n        style=\"text-transparent\"\r\n        class=\"font-semibold px-4 py-2 rounded truncate\"\r\n        ariaLabel={tab.label}\r\n        onClick={() => {\r\n          tab.select();\r\n          this.tabPopover?.togglePopover();\r\n        }}\r\n      >\r\n        {tab.label}\r\n      </Button>\r\n    ));\r\n  };\r\n\r\n  private updateTabsDisplay = () => {\r\n    this.updateTabVisibility(this.overflowingTabs, false);\r\n    this.updateTabVisibility(this.displayedTabs, true);\r\n    this.updatePopoverPosition();\r\n    this.tabPopover?.setButtonVisibility(!!this.overflowingTabs.length);\r\n  };\r\n\r\n  @Listen('atomic/tabRendered')\r\n  public resolveResult(event: CustomEvent<{}>) {\r\n    event.stopPropagation();\r\n    this.updatePopoverTabs();\r\n  }\r\n\r\n  public componentDidLoad() {\r\n    this.resizeObserver = new ResizeObserver(this.render);\r\n    this.resizeObserver.observe(this.host);\r\n  }\r\n\r\n  public disconnectedCallback() {\r\n    this.resizeObserver?.disconnect();\r\n  }\r\n\r\n  public render = () => {\r\n    this.updateTabsDisplay();\r\n    return (\r\n      <Host>\r\n        <slot></slot>\r\n        <tab-popover>{this.popoverTabs}</tab-popover>\r\n      </Host>\r\n    );\r\n  };\r\n}\r\n","@import '../../../global/global.pcss';\r\n\r\n:host {\r\n  position: absolute;\r\n}\r\n\r\n:host(.visibility-hidden) {\r\n  visibility: hidden;\r\n}\r\n\r\n[part='overflow-tabs'] {\r\n  flex-direction: column;\r\n  max-width: 150px;\r\n\r\n  button {\r\n    text-align: start;\r\n  }\r\n}\r\n","import {\r\n  createPopperLite as createPopper,\r\n  preventOverflow,\r\n  Instance as PopperInstance,\r\n} from '@popperjs/core';\r\nimport {\r\n  Component,\r\n  h,\r\n  Listen,\r\n  State,\r\n  Element,\r\n  Host,\r\n  Method,\r\n} from '@stencil/core';\r\nimport ArrowBottomIcon from '../../../images/arrow-bottom-rounded.svg';\r\nimport {\r\n  InitializableComponent,\r\n  InitializeBindings,\r\n} from '../../../utils/initialization-utils';\r\nimport {Bindings} from '../../search/atomic-search-interface/atomic-search-interface';\r\nimport {Button} from '../button';\r\n\r\n/**\r\n * @internal\r\n */\r\n@Component({\r\n  tag: 'tab-popover',\r\n  shadow: true,\r\n  styleUrl: 'tab-popover.pcss',\r\n})\r\nexport class TabPopover implements InitializableComponent {\r\n  @Element() private host!: HTMLElement;\r\n\r\n  @InitializeBindings() public bindings!: Bindings;\r\n\r\n  @State()\r\n  public show = false;\r\n\r\n  @State()\r\n  public error!: Error;\r\n\r\n  @State()\r\n  private isOpen = false;\r\n\r\n  private buttonRef!: HTMLElement;\r\n  private popupRef!: HTMLElement;\r\n  private popperInstance?: PopperInstance;\r\n  public popoverId = 'tab-popover';\r\n\r\n  public initialize() {}\r\n\r\n  private initializePopover() {\r\n    this.popupRef.classList.add('popover-nested');\r\n  }\r\n\r\n  @Listen('keydown')\r\n  public handleKeyDown(e: KeyboardEvent) {\r\n    if (e.key === 'Escape' && this.isOpen) {\r\n      this.togglePopover();\r\n    }\r\n  }\r\n\r\n  get slotElements() {\r\n    return this.host.children;\r\n  }\r\n\r\n  get hasTabs() {\r\n    return !!this.popupRef.children.length;\r\n  }\r\n\r\n  @Method()\r\n  public async togglePopover() {\r\n    this.isOpen = !this.isOpen;\r\n  }\r\n\r\n  @Method()\r\n  public async setButtonVisibility(isVisible: boolean) {\r\n    this.show = isVisible;\r\n  }\r\n\r\n  private renderDropdownButton() {\r\n    const label = this.bindings?.i18n.t('more');\r\n    const ariaLabel = this.bindings?.i18n.t('tab-popover', {label});\r\n    const buttonClasses = ['relative', 'pb-1', 'mt-1', 'mr-6', 'font-semibold'];\r\n\r\n    return (\r\n      <Button\r\n        ref={(el) => (this.buttonRef = el!)}\r\n        style=\"text-transparent\"\r\n        onClick={() => this.togglePopover()}\r\n        part=\"popover-button\"\r\n        ariaExpanded={`${this.isOpen}`}\r\n        ariaLabel={ariaLabel}\r\n        ariaControls={this.popoverId}\r\n        class={`${buttonClasses.join(' ')}`}\r\n      >\r\n        <span\r\n          title={label}\r\n          part=\"value-label\"\r\n          class={\r\n            'truncate mr-1.5 group-hover:text-primary-light group-focus:text-primary'\r\n          }\r\n        >\r\n          {label}\r\n        </span>\r\n        <atomic-icon\r\n          part=\"arrow-icon\"\r\n          class={`w-2 ml-auto group-hover:text-primary-light group-focus:text-primary ${\r\n            this.isOpen ? 'rotate-180' : ''\r\n          }`}\r\n          icon={ArrowBottomIcon}\r\n        ></atomic-icon>\r\n      </Button>\r\n    );\r\n  }\r\n\r\n  private renderBackdrop() {\r\n    return (\r\n      <div\r\n        part=\"backdrop\"\r\n        class=\"fixed left-0 top-0 right-0 bottom-0 z-[9998] bg-transparent cursor-pointer\"\r\n        onClick={() => this.togglePopover()}\r\n      ></div>\r\n    );\r\n  }\r\n\r\n  private renderPopover() {\r\n    return (\r\n      <div class={`relative ${this.isOpen ? 'z-[9999]' : ''}`}>\r\n        {this.renderDropdownButton()}\r\n        <div\r\n          id={this.popoverId}\r\n          ref={(el) => (this.popupRef = el!)}\r\n          part=\"overflow-tabs\"\r\n          class={`absolute py-2 bg-background border-neutral border rounded-lg shadow-lg ${\r\n            this.isOpen ? 'flex' : 'hidden'\r\n          }`}\r\n        >\r\n          <slot></slot>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  public componentDidRender() {\r\n    if (this.popperInstance || !this.buttonRef || !this.popupRef) {\r\n      return;\r\n    }\r\n\r\n    this.popperInstance = createPopper(this.buttonRef, this.popupRef, {\r\n      placement: 'bottom-end',\r\n      modifiers: [preventOverflow],\r\n    });\r\n    this.initializePopover();\r\n  }\r\n\r\n  public componentDidUpdate() {\r\n    this.popperInstance?.forceUpdate();\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <Host\r\n        class={this.show ? '' : 'visibility-hidden'}\r\n        aria-hidden={!this.show}\r\n      >\r\n        <atomic-focus-trap\r\n          source={this.buttonRef}\r\n          container={this.popupRef}\r\n          active={this.isOpen}\r\n          shouldHideSelf={false}\r\n          scope={this.bindings?.interfaceElement}\r\n        >\r\n          {this.renderPopover()}\r\n        </atomic-focus-trap>\r\n        {this.isOpen && this.renderBackdrop()}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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"}