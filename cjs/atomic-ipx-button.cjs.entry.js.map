{"file":"atomic-ipx-button.entry.cjs.js","mappings":";;;;;;;;;;;;;;;;AAAA,MAAM,kBAAkB,GAAG,w8xCAAw8xC,CAAC;AACp+xC,8BAAe,kBAAkB;;;;;;;;;;;;ACUjC,MAAM,yBAAyB,GAAG,IAAI,MAAM,CAAC,uBAAuB,CAAC,CAAC;MAUzD,eAAe;;;;;;QAeI,cAAS,GAAGA,eAAS,CAAC;;;;QAKtB,aAAQ,GAAGC,iBAAU,CAAC;;;;QAKP,gBAAW,GAAG,KAAK,CAAC;QAEzD,0BAAqB,GAAG,KAAK,CAAC;;;yBAZID,eAAS;wBAKVC,iBAAU;2BAKQ,KAAK;;IAIxD,MAAM,kBAAkB;;QAC9B,MAAM,UAAU,GAAG,MAAA,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,aAAa,CAC7D,uBAAuB,CACxB,0CAAE,MAAM,CAAC;QACV,IAAI,UAAU,EAAE;YACd,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;YAClC,UAAU,CAAC,QAAQ,CACjBC,eAAyB,CAAC,UAAU,CAAC,CAAC,kBAAkB,EAAE,CAC3D,CAAC;SACH;KACF;IAEO,MAAM,OAAO;QACnB,IAAI,CAAC,IAAI,CAAC,qBAAqB,EAAE;YAC/B,IAAI,CAAC,kBAAkB,EAAE,CAAC;SAC3B;QACD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,EAAE,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;QAC9C,IAAI,CAAC,MAAM,EAAE,CAAC;KACf;IAEO,eAAe;QACrB,QACEC,QAACC,aAAM,IACL,KAAK,EAAC,SAAS,EACf,IAAI,EAAC,YAAY,EACjB,KAAK,EAAC,MAAM,EACZ,OAAO,EAAE,MAAM,IAAI,CAAC,OAAO,EAAE,IAE7BD,kBAAM,IAAI,EAAC,aAAa,IACtBA,yBACE,IAAI,EAAC,gBAAgB,EACrB,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,GACrB,EACfA,yBACE,IAAI,EAAC,eAAe,EACpB,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,GACpB,CACV,EACPA,kBAAM,IAAI,EAAC,aAAa,IAAE,IAAI,CAAC,KAAK,CAAQ,CACrC,EACT;KACH;IAEM,MAAM;QACX,MAAM,CAAC,aAAa,EAAE,UAAU,CAAC,GAAG,IAAI,CAAC,WAAW;cAChD,CAAC,gBAAgB,EAAE,eAAe,CAAC;cACnC,CAAC,eAAe,EAAE,gBAAgB,CAAC,CAAC;QACxC,IAAI,IAAI,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,qBAAqB,EAAE;YACnD,IAAI,CAAC,kBAAkB,EAAE,CAAC;SAC3B;QAED,QACEA,QAACE,cAAQ,uDAELF,sEACG;sBACS,aAAa;;;;sBAIb,UAAU;;;;;wBAKR,aAAa;;;;wBAIb,UAAU;;;gBAGlB,CACE,EAEVA,kEAAK,KAAK,EAAC,4BAA4B,EAAC,IAAI,EAAC,WAAW,IACrD,IAAI,CAAC,eAAe,EAAE,CACnB,CACG,EACX;KACH;IAED,IAAY,QAAQ;QAClB,OAAO,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,aAAa,CAAC,kBAAkB,CAAE,CAAC;KAC1E;IAEO,IAAI;QACV,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACpC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;KAC/C;IAEO,KAAK;QACX,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;QACvC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;KAChD;IAEO,OAAO,CAAC,IAAY;QAC1B,MAAM,UAAU,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAE,CAAC;QAClD,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC;QAC5B,MAAM,WAAW,GAAG,UAAU,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QACpD,IAAI,CAAC,WAAW,EAAE;YAChB,OAAO,UAAU,CAAC,SAAS,CAAC;SAC7B;;QAED,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;QACjD,MAAM,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;QACnD,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC;QACnC,IAAI,SAAS,IAAI,UAAU,EAAE;YAC3B,WAAW,CAAC,YAAY,CAAC,SAAS,EAAE,OAAO,SAAS,IAAI,UAAU,EAAE,CAAC,CAAC;SACvE;QACD,OAAO,UAAU,CAAC,SAAS,CAAC;KAC7B;IAEO,gBAAgB,CAAC,WAA0B;QACjD,WAAW,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;QACrC,WAAW,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;QACrC,WAAW,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;KACvC;IAEO,YAAY,CAAC,IAAmB;;QACtC,MAAM,KAAK,GAAG,MAAA,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,mCAAI,EAAE,CAAC;QAC/C,IAAI,yBAAyB,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;YACzC,OAAO,KAAK,CAAC;SACd;QACD,OAAO,IAAI,CAAC;KACb;IAEO,aAAa,CAAC,IAAmB;;QACvC,MAAM,MAAM,GAAG,MAAA,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,mCAAI,EAAE,CAAC;QACjD,IAAI,yBAAyB,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;YAC1C,OAAO,MAAM,CAAC;SACf;QACD,OAAO,IAAI,CAAC;KACb;;;AAnK4B;IAA5BG,sCAAkB,EAAE;iDAA4B;;;;;","names":["CloseIcon","SearchIcon","loadRecommendationActions","h","Button","Fragment","InitializeBindings"],"sources":["src/components/ipx/atomic-ipx-button/atomic-ipx-button.pcss?tag=atomic-ipx-button&encapsulation=shadow","src/components/ipx/atomic-ipx-button/atomic-ipx-button.tsx"],"sourcesContent":["@import '../../../global/global.pcss';\r\n\r\n/**\r\n * @prop --atomic-ipx-button-height: height of the IPX button.\r\n */\r\n:host {\r\n  &::part(ipx-button) {\r\n    @apply btn-primary fixed bottom-1 right-12 block px-3 whitespace-nowrap;\r\n    height: var(--atomic-ipx-button-height, 2.75rem);\r\n    background-color: var(--atomic-primary);\r\n  }\r\n\r\n  &::part(button-icon) {\r\n    @apply p-0 inline-block mr-2 w-4 h-4 align-middle relative;\r\n    font-size: 100%;\r\n  }\r\n\r\n  &::part(button-text) {\r\n    @apply overflow-hidden;\r\n  }\r\n\r\n  &::part(ipx-close-icon),\r\n  &::part(ipx-open-icon) {\r\n    @apply absolute left-0;\r\n    transition: transform 500ms;\r\n  }\r\n}\r\n","import {loadRecommendationActions} from '@coveo/headless/recommendation';\r\nimport {Component, Element, Fragment, h, Prop, State} from '@stencil/core';\r\nimport CloseIcon from '../../../images/close.svg';\r\nimport SearchIcon from '../../../images/search.svg';\r\nimport {\r\n  InitializableComponent,\r\n  InitializeBindings,\r\n} from '../../../utils/initialization-utils';\r\nimport {Button} from '../../common/button';\r\nimport {Bindings} from '../../search/atomic-search-interface/atomic-search-interface';\r\n\r\nconst numberOrPixelValuePattern = new RegExp(/^(?=.*(?:\\d+|px)$).*$/);\r\n\r\n/**\r\n * @internal\r\n */\r\n@Component({\r\n  tag: 'atomic-ipx-button',\r\n  styleUrl: './atomic-ipx-button.pcss',\r\n  shadow: true,\r\n})\r\nexport class AtomicIPXButton implements InitializableComponent {\r\n  @InitializeBindings() public bindings!: Bindings;\r\n\r\n  @State() public error!: Error;\r\n\r\n  @Element() public host!: HTMLElement;\r\n\r\n  /**\r\n   * The label that will be shown to the user.\r\n   */\r\n  @Prop({reflect: true}) public label?: string;\r\n\r\n  /**\r\n   * The close icon of the button.\r\n   */\r\n  @Prop({reflect: true}) public closeIcon = CloseIcon;\r\n\r\n  /**\r\n   * The open icon of the button.\r\n   */\r\n  @Prop({reflect: true}) public openIcon = SearchIcon;\r\n\r\n  /**\r\n   * Whether the IPX modal is open.\r\n   */\r\n  @Prop({mutable: true, reflect: true}) public isModalOpen = false;\r\n\r\n  private recommendationsLoaded = false;\r\n\r\n  private async getRecommendations() {\r\n    const recsEngine = this.bindings.interfaceElement.querySelector(\r\n      'atomic-recs-interface'\r\n    )?.engine;\r\n    if (recsEngine) {\r\n      this.recommendationsLoaded = true;\r\n      recsEngine.dispatch(\r\n        loadRecommendationActions(recsEngine).getRecommendations()\r\n      );\r\n    }\r\n  }\r\n\r\n  private async onClick() {\r\n    if (!this.recommendationsLoaded) {\r\n      this.getRecommendations();\r\n    }\r\n    this.isModalOpen ? this.close() : this.open();\r\n    this.render();\r\n  }\r\n\r\n  private renderIPXButton() {\r\n    return (\r\n      <Button\r\n        style=\"primary\"\r\n        part=\"ipx-button\"\r\n        class=\"my-2\"\r\n        onClick={() => this.onClick()}\r\n      >\r\n        <span part=\"button-icon\">\r\n          <atomic-icon\r\n            part=\"ipx-close-icon\"\r\n            icon={this.getIcon(this.closeIcon)}\r\n          ></atomic-icon>\r\n          <atomic-icon\r\n            part=\"ipx-open-icon\"\r\n            icon={this.getIcon(this.openIcon)}\r\n          ></atomic-icon>\r\n        </span>\r\n        <span part=\"button-text\">{this.label}</span>\r\n      </Button>\r\n    );\r\n  }\r\n\r\n  public render() {\r\n    const [displayedIcon, hiddenIcon] = this.isModalOpen\r\n      ? ['ipx-close-icon', 'ipx-open-icon']\r\n      : ['ipx-open-icon', 'ipx-close-icon'];\r\n    if (this.isModalOpen && !this.recommendationsLoaded) {\r\n      this.getRecommendations();\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        {\r\n          <style>\r\n            {`\r\n              [part=${displayedIcon}] {\r\n                transform: translateY(0rem);\r\n              }\r\n\r\n              [part=${hiddenIcon}] {\r\n                transform: translateY(3rem);\r\n              }\r\n                \r\n              .btn-open {\r\n                [part=${displayedIcon}] {\r\n                  transform: translateY(3rem);\r\n                }\r\n              \r\n                [part=${hiddenIcon}] {\r\n                  transform: translateY(0rem);\r\n                }\r\n              }`}\r\n          </style>\r\n        }\r\n        <div class=\"flex flex-col items-center\" part=\"container\">\r\n          {this.renderIPXButton()}\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n  private get ipxModal() {\r\n    return this.bindings.interfaceElement.querySelector('atomic-ipx-modal')!;\r\n  }\r\n\r\n  private open() {\r\n    this.isModalOpen = true;\r\n    this.host.classList.add('btn-open');\r\n    this.ipxModal.setAttribute('is-open', 'true');\r\n  }\r\n\r\n  private close() {\r\n    this.isModalOpen = false;\r\n    this.host.classList.remove('btn-open');\r\n    this.ipxModal.setAttribute('is-open', 'false');\r\n  }\r\n\r\n  private getIcon(icon: string) {\r\n    const initialDiv = document.createElement('div')!;\r\n    initialDiv.innerHTML = icon;\r\n    const iconElement = initialDiv.querySelector('svg');\r\n    if (!iconElement) {\r\n      return initialDiv.innerHTML;\r\n    }\r\n    // here, we grab the icon width and height to set a viewbox (which keeps the svg looking normal), then remove styles from the icon to let the icon stretch into the space it is given.\r\n    const iconWidth = this.getIconWidth(iconElement);\r\n    const iconHeight = this.getIconHeight(iconElement);\r\n    this.cleanupSVGStyles(iconElement);\r\n    if (iconWidth && iconHeight) {\r\n      iconElement.setAttribute('viewBox', `0 0 ${iconWidth} ${iconHeight}`);\r\n    }\r\n    return initialDiv.innerHTML;\r\n  }\r\n\r\n  private cleanupSVGStyles(iconElement: SVGSVGElement) {\r\n    iconElement.removeAttribute('style');\r\n    iconElement.removeAttribute('width');\r\n    iconElement.removeAttribute('height');\r\n  }\r\n\r\n  private getIconWidth(icon: SVGSVGElement) {\r\n    const width = icon.getAttribute('width') ?? '';\r\n    if (numberOrPixelValuePattern.test(width)) {\r\n      return width;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  private getIconHeight(icon: SVGSVGElement) {\r\n    const height = icon.getAttribute('height') ?? '';\r\n    if (numberOrPixelValuePattern.test(height)) {\r\n      return height;\r\n    }\r\n    return null;\r\n  }\r\n}\r\n"],"version":3}