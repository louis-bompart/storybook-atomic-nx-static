{"file":"atomic-insight-facet.entry.cjs.js","mappings":"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","names":["buildInsightFacet","buildInsightSearchStatus","FocusTargetController","h","FacetGuard","FacetContainer","FacetHeader","FacetSearchInputGuard","FacetSearchInput","getFieldCaptions","shouldDisplaySearchResults","FacetPlaceholder","FacetValuesGroup","FacetSearchValue","FacetValue","FacetShowMoreLess","FacetSearchMatches","announceFacetSearchResultsWithAriaLive","buildInsightFacetConditionsManager","parseDependsOn","initializePopover","InitializeBindings","BindStateToController","AriaLiveRegion"],"sources":["src/components/insight/atomic-insight-facet/atomic-insight-facet.pcss?tag=atomic-insight-facet&encapsulation=shadow","src/components/insight/atomic-insight-facet/atomic-insight-facet.tsx"],"sourcesContent":["@import '../../common/facets/facet-common.pcss';\r\n@import '../../common/facets/facet-search/facet-search.pcss';\r\n@import '../../common/facets/facet-value-checkbox/facet-value-checkbox.pcss';\r\n@import '../../common/facets/facet-value-exclude/facet-value-exclude.pcss';\r\n@import '../../common/facets/facet-value-box/facet-value-box.pcss';\r\n","import {FacetResultsMustMatch} from '@coveo/headless';\r\nimport {Component, h, State, Prop, Element, VNode} from '@stencil/core';\r\nimport {\r\n  buildInsightFacet,\r\n  buildInsightFacetConditionsManager,\r\n  buildInsightSearchStatus,\r\n  InsightCategoryFacetValueRequest,\r\n  InsightFacet,\r\n  InsightFacetConditionsManager,\r\n  InsightFacetOptions,\r\n  InsightFacetSortCriterion,\r\n  InsightFacetState,\r\n  InsightFacetValueRequest,\r\n  InsightSearchStatus,\r\n  InsightSearchStatusState,\r\n} from '..';\r\nimport {\r\n  AriaLiveRegion,\r\n  FocusTargetController,\r\n} from '../../../utils/accessibility-utils';\r\nimport {getFieldCaptions} from '../../../utils/field-utils';\r\nimport {\r\n  BindStateToController,\r\n  InitializableComponent,\r\n  InitializeBindings,\r\n} from '../../../utils/initialization-utils';\r\nimport {parseDependsOn} from '../../common/facets/depends-on';\r\nimport {FacetInfo} from '../../common/facets/facet-common-store';\r\nimport {FacetContainer} from '../../common/facets/facet-container/facet-container';\r\nimport {FacetGuard} from '../../common/facets/facet-guard';\r\nimport {FacetHeader} from '../../common/facets/facet-header/facet-header';\r\nimport {FacetPlaceholder} from '../../common/facets/facet-placeholder/facet-placeholder';\r\nimport {announceFacetSearchResultsWithAriaLive} from '../../common/facets/facet-search/facet-search-aria-live';\r\nimport {FacetSearchInput} from '../../common/facets/facet-search/facet-search-input';\r\nimport {FacetSearchInputGuard} from '../../common/facets/facet-search/facet-search-input-guard';\r\nimport {FacetSearchMatches} from '../../common/facets/facet-search/facet-search-matches';\r\nimport {shouldDisplaySearchResults} from '../../common/facets/facet-search/facet-search-utils';\r\nimport {FacetSearchValue} from '../../common/facets/facet-search/facet-search-value';\r\nimport {FacetShowMoreLess} from '../../common/facets/facet-show-more-less/facet-show-more-less';\r\nimport {\r\n  FacetValueProps,\r\n  FacetValue,\r\n} from '../../common/facets/facet-value/facet-value';\r\nimport {FacetValuesGroup} from '../../common/facets/facet-values-group/facet-values-group';\r\nimport {initializePopover} from '../../search/facets/atomic-popover/popover-type';\r\nimport {InsightBindings} from '../atomic-insight-interface/atomic-insight-interface';\r\n\r\n/**\r\n * @internal\r\n */\r\n@Component({\r\n  tag: 'atomic-insight-facet',\r\n  styleUrl: 'atomic-insight-facet.pcss',\r\n  shadow: true,\r\n})\r\nexport class AtomicInsightFacet\r\n  implements InitializableComponent<InsightBindings>\r\n{\r\n  @InitializeBindings() public bindings!: InsightBindings;\r\n  public facet!: InsightFacet;\r\n  public searchStatus!: InsightSearchStatus;\r\n  public withSearch = false;\r\n  public dependsOn = {};\r\n  @Element() private host!: HTMLElement;\r\n\r\n  @BindStateToController('facet')\r\n  @State()\r\n  public facetState!: InsightFacetState;\r\n  @BindStateToController('searchStatus')\r\n  @State()\r\n  public searchStatusState!: InsightSearchStatusState;\r\n  @State() public error!: Error;\r\n\r\n  /**\r\n   * Specifies a unique identifier for the facet.\r\n   */\r\n  @Prop({mutable: true, reflect: true}) public facetId?: string;\r\n  /**\r\n   * The non-localized label for the facet.\r\n   */\r\n  @Prop({reflect: true}) public label = 'no-label';\r\n  /**\r\n   * The field whose values you want to display in the facet.\r\n   */\r\n  @Prop({reflect: true}) public field!: string;\r\n  /**\r\n   * The number of values to request for this facet.\r\n   * Also determines the number of additional values to request each time more values are shown.\r\n   */\r\n  @Prop({reflect: true}) public numberOfValues = 8;\r\n  /**\r\n   * The sort criterion to apply to the returned facet values.\r\n   * Possible values are 'score', 'alphanumeric', 'occurrences', and 'automatic'.\r\n   */\r\n  @Prop({reflect: true}) public sortCriteria: InsightFacetSortCriterion =\r\n    'automatic';\r\n  /**\r\n   * Specifies how a result must match the selected facet values.\r\n   * Allowed values:\r\n   * - `atLeastOneValue`: A result will match if at least one of the corresponding facet values is selected.\r\n   * - `allValues`: A result will match if all corresponding facet values are selected.\r\n   */\r\n  @Prop({reflect: true}) public resultsMustMatch: FacetResultsMustMatch =\r\n    'atLeastOneValue';\r\n  /**\r\n   * Whether to display the facet values as checkboxes (multiple selection), links (single selection) or boxes (multiple selection).\r\n   * Possible values are 'checkbox', 'link', and 'box'.\r\n   */\r\n  @Prop({reflect: true}) public displayValuesAs: 'checkbox' | 'link' | 'box' =\r\n    'checkbox';\r\n  /**\r\n   * Specifies if the facet is collapsed.\r\n   */\r\n  @Prop({reflect: true, mutable: true}) public isCollapsed = false;\r\n  /**\r\n   * The [heading level](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements) to use for the heading over the facet, from 1 to 6.\r\n   */\r\n  @Prop({reflect: true}) public headingLevel = 0;\r\n  /**\r\n   * Whether to exclude the parents of folded results when estimating the result count for each facet value.\r\n   */\r\n  @Prop({reflect: true}) public filterFacetCount = true;\r\n  /**\r\n   * The maximum number of results to scan in the index to ensure that the facet lists all potential facet values.\r\n   * Note: A high injectionDepth may negatively impact the facet request performance.\r\n   * Minimum: `0`\r\n   * Default: `1000`\r\n   */\r\n  @Prop() public injectionDepth = 1000;\r\n  /**\r\n   * Whether to allow excluding values from the facet.\r\n   */\r\n  @Prop({reflect: true}) public enableExclusion = false;\r\n\r\n  private showLessFocus?: FocusTargetController;\r\n  private showMoreFocus?: FocusTargetController;\r\n  private headerFocus?: FocusTargetController;\r\n  private facetConditionsManager?: InsightFacetConditionsManager;\r\n\r\n  @AriaLiveRegion('facet-search')\r\n  protected facetSearchAriaMessage!: string;\r\n\r\n  public initialize() {\r\n    const options: InsightFacetOptions = {\r\n      facetId: this.facetId,\r\n      field: this.field,\r\n      numberOfValues: this.numberOfValues,\r\n      sortCriteria: this.sortCriteria,\r\n      facetSearch: {numberOfValues: this.numberOfValues},\r\n      filterFacetCount: this.filterFacetCount,\r\n      injectionDepth: this.injectionDepth,\r\n    };\r\n\r\n    this.facet = buildInsightFacet(this.bindings.engine, {options});\r\n    this.facetId = this.facet.state.facetId;\r\n    this.searchStatus = buildInsightSearchStatus(this.bindings.engine);\r\n    this.initAriaLive();\r\n    this.initConditionManager();\r\n    this.initPopover();\r\n    this.registerFacet();\r\n  }\r\n\r\n  private get focusTargets(): {\r\n    showLess: FocusTargetController;\r\n    showMore: FocusTargetController;\r\n    header: FocusTargetController;\r\n  } {\r\n    if (!this.showLessFocus) {\r\n      this.showLessFocus = new FocusTargetController(this);\r\n    }\r\n    if (!this.showMoreFocus) {\r\n      this.showMoreFocus = new FocusTargetController(this);\r\n    }\r\n    if (!this.headerFocus) {\r\n      this.headerFocus = new FocusTargetController(this);\r\n    }\r\n    return {\r\n      showLess: this.showLessFocus,\r\n      showMore: this.showMoreFocus,\r\n      header: this.headerFocus,\r\n    };\r\n  }\r\n\r\n  public disconnectedCallback() {\r\n    this.facetConditionsManager?.stopWatching();\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <FacetGuard\r\n        enabled={this.facetState.enabled}\r\n        hasError={this.searchStatusState.hasError}\r\n        firstSearchExecuted={this.searchStatusState.firstSearchExecuted}\r\n        hasResults={this.facetState.values.length > 0}\r\n      >\r\n        {this.searchStatusState.firstSearchExecuted ? (\r\n          <FacetContainer>\r\n            <FacetHeader\r\n              i18n={this.bindings.i18n}\r\n              label={this.label}\r\n              onClearFilters={() => {\r\n                this.focusTargets.header.focusAfterSearch();\r\n                this.facet.deselectAll();\r\n              }}\r\n              numberOfActiveValues={this.activeValues.length}\r\n              isCollapsed={this.isCollapsed}\r\n              headingLevel={this.headingLevel}\r\n              onToggleCollapse={() => (this.isCollapsed = !this.isCollapsed)}\r\n              headerRef={(el) => this.focusTargets.header.setTarget(el)}\r\n            ></FacetHeader>\r\n            <FacetSearchInputGuard\r\n              canShowMoreValues={this.facetState.canShowMoreValues}\r\n              numberOfDisplayedValues={this.facetState.values.length}\r\n              withSearch={this.withSearch}\r\n            >\r\n              <FacetSearchInput\r\n                i18n={this.bindings.i18n}\r\n                label={this.label}\r\n                onChange={(value) => {\r\n                  if (value === '') {\r\n                    this.facet.facetSearch.clear();\r\n                    return;\r\n                  }\r\n                  this.facet.facetSearch.updateCaptions(\r\n                    getFieldCaptions(this.field, this.bindings.i18n)\r\n                  );\r\n                  this.facet.facetSearch.updateText(value);\r\n                  this.facet.facetSearch.search();\r\n                }}\r\n                onClear={() => this.facet.facetSearch.clear()}\r\n                query={this.facetState.facetSearch.query}\r\n              />\r\n            </FacetSearchInputGuard>\r\n            {shouldDisplaySearchResults(this.facetState.facetSearch)\r\n              ? [this.renderSearchResults(), this.renderMatches()]\r\n              : [this.renderValues(), this.renderShowMoreLess()]}\r\n          </FacetContainer>\r\n        ) : (\r\n          <FacetPlaceholder\r\n            numberOfValues={this.numberOfValues}\r\n            isCollapsed={this.isCollapsed}\r\n          />\r\n        )}\r\n      </FacetGuard>\r\n    );\r\n  }\r\n\r\n  private renderValuesContainer(children: VNode[], query?: string) {\r\n    const classes = `mt-3 ${\r\n      this.displayValuesAs === 'box' ? 'box-container' : ''\r\n    }`;\r\n    return (\r\n      <FacetValuesGroup\r\n        i18n={this.bindings.i18n}\r\n        label={this.label}\r\n        query={query}\r\n      >\r\n        <ul class={classes} part=\"values\">\r\n          {children}\r\n        </ul>\r\n      </FacetValuesGroup>\r\n    );\r\n  }\r\n\r\n  private renderSearchResults() {\r\n    return this.renderValuesContainer(\r\n      this.facet.state.facetSearch.values.map((value) => (\r\n        <FacetSearchValue\r\n          {...this.facetValueProps}\r\n          facetCount={value.count}\r\n          onExclude={() => this.facet.facetSearch.exclude(value)}\r\n          onSelect={() => this.facet.facetSearch.select(value)}\r\n          facetValue={value.rawValue}\r\n        />\r\n      ))\r\n    );\r\n  }\r\n\r\n  private renderValues() {\r\n    return this.renderValuesContainer(\r\n      this.facet.state.values.map((value, i) => {\r\n        const shouldFocusOnShowLessAfterInteraction = i === 0;\r\n        const shouldFocusOnShowMoreAfterInteraction =\r\n          i ===\r\n          (this.sortCriteria === 'automatic'\r\n            ? 0\r\n            : this.facetState.values.length - 1);\r\n\r\n        return (\r\n          <FacetValue\r\n            {...this.facetValueProps}\r\n            facetCount={value.numberOfResults}\r\n            onExclude={() => this.facet.toggleExclude(value)}\r\n            onSelect={() => this.facet.toggleSelect(value)}\r\n            facetValue={value.value}\r\n            facetState={value.state}\r\n            setRef={(btn) => {\r\n              if (shouldFocusOnShowLessAfterInteraction) {\r\n                this.showLessFocus?.setTarget(btn);\r\n              }\r\n              if (shouldFocusOnShowMoreAfterInteraction) {\r\n                this.showMoreFocus?.setTarget(btn);\r\n              }\r\n            }}\r\n          />\r\n        );\r\n      })\r\n    );\r\n  }\r\n\r\n  private renderShowMoreLess() {\r\n    return (\r\n      <FacetShowMoreLess\r\n        label={this.label}\r\n        i18n={this.bindings.i18n}\r\n        onShowMore={() => {\r\n          this.focusTargets.showMore.focusAfterSearch();\r\n          this.facet.showMoreValues();\r\n        }}\r\n        onShowLess={() => {\r\n          this.focusTargets.showLess.focusAfterSearch();\r\n          this.facet.showLessValues();\r\n        }}\r\n        canShowMoreValues={this.facet.state.canShowMoreValues}\r\n        canShowLessValues={this.facet.state.canShowLessValues}\r\n      ></FacetShowMoreLess>\r\n    );\r\n  }\r\n\r\n  private renderMatches() {\r\n    return (\r\n      <FacetSearchMatches\r\n        i18n={this.bindings.i18n}\r\n        query={this.facet.state.facetSearch.query}\r\n        numberOfMatches={this.facet.state.facetSearch.values.length}\r\n        hasMoreMatches={this.facet.state.facetSearch.moreValuesAvailable}\r\n      ></FacetSearchMatches>\r\n    );\r\n  }\r\n\r\n  private get activeValues() {\r\n    return this.facet.state.values.filter(({state}) => state !== 'idle');\r\n  }\r\n\r\n  private get facetValueProps(): Pick<\r\n    FacetValueProps,\r\n    | 'displayValuesAs'\r\n    | 'facetSearchQuery'\r\n    | 'enableExclusion'\r\n    | 'field'\r\n    | 'i18n'\r\n  > {\r\n    return {\r\n      facetSearchQuery: this.facetState.facetSearch.query,\r\n      displayValuesAs: this.displayValuesAs,\r\n      enableExclusion: this.enableExclusion,\r\n      field: this.field,\r\n      i18n: this.bindings.i18n,\r\n    };\r\n  }\r\n\r\n  private initAriaLive() {\r\n    announceFacetSearchResultsWithAriaLive(\r\n      this.facet,\r\n      this.label,\r\n      (msg) => (this.facetSearchAriaMessage = msg),\r\n      this.bindings.i18n\r\n    );\r\n  }\r\n\r\n  private initConditionManager() {\r\n    this.facetConditionsManager = buildInsightFacetConditionsManager(\r\n      this.bindings.engine,\r\n      {\r\n        facetId: this.facetId!,\r\n        conditions: parseDependsOn<\r\n          InsightFacetValueRequest | InsightCategoryFacetValueRequest\r\n        >(this.dependsOn),\r\n      }\r\n    );\r\n  }\r\n\r\n  private initPopover() {\r\n    initializePopover(this.host, {\r\n      ...this.facetInfo,\r\n      hasValues: () => !!this.facet.state.values.length,\r\n      numberOfActiveValues: () => this.activeValues.length,\r\n    });\r\n  }\r\n\r\n  private get isHidden() {\r\n    return !this.facet.state.enabled || !this.facet.state.values.length;\r\n  }\r\n\r\n  private get facetInfo(): FacetInfo {\r\n    return {\r\n      label: () => this.bindings.i18n.t(this.label),\r\n      facetId: this.facetId!,\r\n      element: this.host,\r\n      isHidden: () => this.isHidden,\r\n    };\r\n  }\r\n\r\n  private registerFacet() {\r\n    this.bindings.store.registerFacet('facets', this.facetInfo);\r\n  }\r\n}\r\n"],"version":3}