{"version":3,"names":["atomicCommerceProductListCss","AtomicCommerceProductListStyle0","AtomicCommerceProductList","this","loadingFlag","randomID","resultTemplateRegistered","templateHasError","display","density","imageSize","gridCellLinkTarget","setRenderFunction","productRenderingFunction","itemRenderingFunction","focusTarget","nextNewResultTarget","FocusTargetController","initialize","bindings","interfaceElement","type","productListing","buildProductListing","engine","refresh","search","buildSearch","productTemplateProvider","ProductTemplateProvider","includeDefaultTemplate","templateElements","Array","from","host","querySelectorAll","getResultTemplateRegistered","getTemplateHasError","setResultTemplateRegistered","value","setTemplateHasError","productListCommon","ItemListCommon","engineSubscribe","subscribe","getCurrentNumberOfItems","productState","products","length","getIsLoading","isLoading","nextNewItemTarget","store","productListingState","searchState","render","listClasses","computeListDisplayClasses","h","DisplayWrapper","key","ResultsPlaceholdersGuard","displayPlaceholders","isAppLoaded","numberOfPlaceholders","ItemDisplayGuard","firstRequestExecuted","responseId","hasItems","renderAsTable","renderAsGrid","renderAsList","getItemListDisplayClasses","_a","getPropsForAtomicProduct","product","renderingFunction","getResultId","permanentid","content","getTemplateContent","map","i","propsForAtomicProduct","DisplayGrid","item","clickUri","title","ec_name","setRef","element","setNewResultRef","select","Error","beginDelayedSelect","cancelPendingSelect","firstItem","propsForTableColumns","templateContentForFirstItem","DisplayTable","logger","DisplayTableRow","rowIndex","DisplayTableData","renderItem","ref","part","__decorate","InitializeBindings","BindStateToController"],"sources":["src/components/commerce/atomic-commerce-product-list/atomic-commerce-product-list.pcss?tag=atomic-commerce-product-list&encapsulation=shadow","src/components/commerce/atomic-commerce-product-list/atomic-commerce-product-list.tsx"],"sourcesContent":["@import '../../../global/global.pcss';\r\n@import '../../../global/mixins.pcss';\r\n@import '../../common/item-list/styles/placeholders.pcss';\r\n@import '../../common/item-list/styles/table-display.pcss';\r\n@import '../../common/item-list/styles/list-display.pcss';\r\n@import '../../common/item-list/styles/grid-display.pcss';\r\n\r\n:host {\r\n  .result-link {\r\n    @mixin link-style;\r\n  }\r\n  .result-grid {\r\n    grid-template-columns: repeat(5, minmax(0, 1fr));\r\n    justify-items: center;\r\n    & a {\r\n      justify-content: center;\r\n    }\r\n  }\r\n\r\n  .result-list {\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    & .result-item {\r\n      width: 100%;\r\n      max-width: 600px;\r\n      display: flex;\r\n      flex-wrap: wrap;\r\n      & .result-detailsÂ  {\r\n        align-content: center;\r\n      }\r\n    }\r\n  }\r\n\r\n  @screen desktop-only {\r\n    .result-grid {\r\n      display: grid;\r\n    }\r\n  }\r\n\r\n  @screen mobile-only {\r\n    .result-grid {\r\n      display: flex;\r\n      flex-direction: column;\r\n    }\r\n  }\r\n}\r\n","import {\r\n  buildProductListing,\r\n  ProductListingState,\r\n  ProductListing,\r\n  buildSearch,\r\n  SearchState,\r\n  Search,\r\n  Product,\r\n} from '@coveo/headless/commerce';\r\nimport {Component, Element, Method, Prop, State, h} from '@stencil/core';\r\nimport {FocusTargetController} from '../../../utils/accessibility-utils';\r\nimport {\r\n  BindStateToController,\r\n  InitializableComponent,\r\n  InitializeBindings,\r\n} from '../../../utils/initialization-utils';\r\nimport {randomID} from '../../../utils/utils';\r\nimport {ResultsPlaceholdersGuard} from '../../common/atomic-result-placeholder/placeholders';\r\nimport {DisplayGrid} from '../../common/item-list/display-grid';\r\nimport {\r\n  DisplayTable,\r\n  DisplayTableData,\r\n  DisplayTableRow,\r\n} from '../../common/item-list/display-table';\r\nimport {DisplayWrapper} from '../../common/item-list/display-wrapper';\r\nimport {ItemDisplayGuard} from '../../common/item-list/item-display-guard';\r\nimport {\r\n  ItemListCommon,\r\n  ItemRenderingFunction,\r\n} from '../../common/item-list/item-list-common';\r\nimport {\r\n  ItemDisplayDensity,\r\n  ItemDisplayImageSize,\r\n  ItemDisplayLayout,\r\n  ItemTarget,\r\n  getItemListDisplayClasses,\r\n} from '../../common/layout/display-options';\r\nimport {CommerceBindings} from '../atomic-commerce-interface/atomic-commerce-interface';\r\nimport {ProductTemplateProvider} from '../product-list/product-template-provider';\r\n\r\n/**\r\n * @internal\r\n * The `atomic-commerce-product-list` component is responsible for displaying products.\r\n */\r\n@Component({\r\n  tag: 'atomic-commerce-product-list',\r\n  styleUrl: 'atomic-commerce-product-list.pcss',\r\n  shadow: true,\r\n})\r\nexport class AtomicCommerceProductList\r\n  implements InitializableComponent<CommerceBindings>\r\n{\r\n  @InitializeBindings() public bindings!: CommerceBindings;\r\n  public productListing!: ProductListing;\r\n  public search!: Search;\r\n  private loadingFlag = randomID('firstProductLoaded-');\r\n  private itemRenderingFunction: ItemRenderingFunction;\r\n  private nextNewResultTarget?: FocusTargetController;\r\n  private productTemplateProvider!: ProductTemplateProvider;\r\n  private productListCommon!: ItemListCommon;\r\n\r\n  @Element() public host!: HTMLDivElement;\r\n\r\n  @BindStateToController('productListing')\r\n  @State()\r\n  private productListingState!: ProductListingState;\r\n  @BindStateToController('search')\r\n  @State()\r\n  private searchState!: SearchState;\r\n  @State() private resultTemplateRegistered = false;\r\n  @State() public error!: Error;\r\n  @State() private templateHasError = false;\r\n\r\n  /**\r\n   * The desired layout to use when displaying products. Layouts affect how many products to display per row and how visually distinct they are from each other.\r\n   */\r\n  @Prop({reflect: true}) display: ItemDisplayLayout = 'grid';\r\n\r\n  /**\r\n   * The spacing of various elements in the product list, including the gap between products, the gap between parts of a product, and the font sizes of different parts in a product.\r\n   */\r\n  @Prop({reflect: true}) density: ItemDisplayDensity = 'normal';\r\n\r\n  /**\r\n   * The expected size of the image displayed for products.\r\n   */\r\n  @Prop({reflect: true}) imageSize: ItemDisplayImageSize = 'small';\r\n\r\n  /**\r\n   * The target location to open the product link (see [target](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#target)).\r\n   * This property is only leveraged when `display` is `grid`.\r\n   * @defaultValue `_self`\r\n   */\r\n  @Prop() gridCellLinkTarget: ItemTarget = '_self';\r\n\r\n  /**\r\n   * Sets a rendering function to bypass the standard HTML template mechanism for rendering products.\r\n   * You can use this function while working with web frameworks that don't use plain HTML syntax, e.g., React, Angular or Vue.\r\n   *\r\n   * Do not use this method if you integrate Atomic in a plain HTML deployment.\r\n   *\r\n   * @param productRenderingFunction\r\n   */\r\n  @Method() public async setRenderFunction(\r\n    productRenderingFunction: ItemRenderingFunction\r\n  ) {\r\n    this.itemRenderingFunction = productRenderingFunction;\r\n  }\r\n\r\n  public get focusTarget() {\r\n    if (!this.nextNewResultTarget) {\r\n      this.nextNewResultTarget = new FocusTargetController(this);\r\n    }\r\n    return this.nextNewResultTarget;\r\n  }\r\n\r\n  public initialize() {\r\n    if (this.bindings.interfaceElement.type === 'product-listing') {\r\n      this.productListing = buildProductListing(this.bindings.engine);\r\n      this.productListing.refresh();\r\n    } else if (this.bindings.interfaceElement.type === 'search') {\r\n      this.search = buildSearch(this.bindings.engine);\r\n    }\r\n\r\n    this.productTemplateProvider = new ProductTemplateProvider({\r\n      includeDefaultTemplate: true,\r\n      templateElements: Array.from(\r\n        this.host.querySelectorAll('atomic-product-template')\r\n      ),\r\n      getResultTemplateRegistered: () => this.resultTemplateRegistered,\r\n      getTemplateHasError: () => this.templateHasError,\r\n      setResultTemplateRegistered: (value: boolean) => {\r\n        this.resultTemplateRegistered = value;\r\n      },\r\n      setTemplateHasError: (value: boolean) => {\r\n        this.templateHasError = value;\r\n      },\r\n    });\r\n\r\n    this.productListCommon = new ItemListCommon({\r\n      engineSubscribe: this.bindings.engine.subscribe,\r\n      getCurrentNumberOfItems: () => this.productState.products.length,\r\n      getIsLoading: () => this.productState.isLoading,\r\n      host: this.host,\r\n      loadingFlag: this.loadingFlag,\r\n      nextNewItemTarget: this.focusTarget,\r\n      store: this.bindings.store,\r\n    });\r\n  }\r\n\r\n  get productState() {\r\n    return this.bindings.interfaceElement.type === 'product-listing'\r\n      ? this.productListingState\r\n      : this.searchState;\r\n  }\r\n\r\n  public render() {\r\n    const listClasses = this.computeListDisplayClasses();\r\n\r\n    return (\r\n      <DisplayWrapper display={this.display} listClasses={listClasses}>\r\n        <ResultsPlaceholdersGuard\r\n          density={this.density}\r\n          display={this.display}\r\n          imageSize={this.imageSize}\r\n          displayPlaceholders={!this.bindings.store.isAppLoaded()}\r\n          numberOfPlaceholders={this.productState.products.length}\r\n        ></ResultsPlaceholdersGuard>\r\n        <ItemDisplayGuard\r\n          firstRequestExecuted={!!this.searchState.responseId}\r\n          hasItems={this.productState.products.length > 0}\r\n        >\r\n          {this.display === 'table'\r\n            ? this.renderAsTable()\r\n            : this.display === 'grid'\r\n              ? this.renderAsGrid()\r\n              : this.renderAsList()}\r\n        </ItemDisplayGuard>\r\n      </DisplayWrapper>\r\n    );\r\n  }\r\n\r\n  private computeListDisplayClasses() {\r\n    const displayPlaceholders = !this.bindings.store.isAppLoaded();\r\n\r\n    return getItemListDisplayClasses(\r\n      this.display,\r\n      this.density,\r\n      this.imageSize,\r\n\r\n      this.productState?.isLoading,\r\n      displayPlaceholders\r\n    );\r\n  }\r\n\r\n  private getPropsForAtomicProduct(product: Product) {\r\n    return {\r\n      // TODO: add back once interactive result is implemented for products in KIT-3149\r\n      /* interactiveResult: buildInteractiveResult(this.bindings.engine, {\r\n        options: {result},\r\n      }), */\r\n      product,\r\n      renderingFunction: this.itemRenderingFunction,\r\n      loadingFlag: this.loadingFlag,\r\n      key: this.productListCommon.getResultId(\r\n        product.permanentid,\r\n        this.productState.responseId,\r\n        this.density,\r\n        this.imageSize\r\n      ),\r\n      content: this.productTemplateProvider.getTemplateContent(product),\r\n      store: this.bindings.store,\r\n      density: this.density,\r\n      imageSize: this.imageSize,\r\n      display: this.display,\r\n    };\r\n  }\r\n\r\n  private renderAsGrid() {\r\n    return this.productState.products.map((product, i) => {\r\n      const propsForAtomicProduct = this.getPropsForAtomicProduct(product);\r\n      return (\r\n        <DisplayGrid\r\n          item={{\r\n            ...product,\r\n            clickUri: product.clickUri,\r\n            title: product.ec_name ?? 'temp',\r\n          }}\r\n          // TODO KIT-3149: add back once the interactive result is implemented\r\n          //{...propsForAtomicProduct.interactiveResult}\r\n          // TODO KIT-3149: Remove these back once the interactive result is implemented\r\n          setRef={(element) =>\r\n            element && this.productListCommon.setNewResultRef(element, i)\r\n          }\r\n          select={function (): void {\r\n            throw new Error('Function not implemented. TODO KIT-3149');\r\n          }}\r\n          beginDelayedSelect={function (): void {\r\n            throw new Error('Function not implemented. TODO KIT-3149');\r\n          }}\r\n          cancelPendingSelect={function (): void {\r\n            throw new Error('Function not implemented. TODO KIT-3149');\r\n          }}\r\n        >\r\n          <atomic-product {...this} {...propsForAtomicProduct}></atomic-product>\r\n        </DisplayGrid>\r\n      );\r\n    });\r\n  }\r\n\r\n  private renderAsTable() {\r\n    if (this.productState.products.length > 0) {\r\n      return;\r\n    }\r\n    const listClasses = this.computeListDisplayClasses();\r\n    const firstItem = this.productState.products[0];\r\n\r\n    const propsForTableColumns = {\r\n      firstItem,\r\n      templateContentForFirstItem:\r\n        this.productTemplateProvider.getTemplateContent(firstItem),\r\n    };\r\n\r\n    return (\r\n      <DisplayTable\r\n        {...propsForTableColumns}\r\n        listClasses={listClasses}\r\n        logger={this.bindings.engine.logger}\r\n        itemRenderingFunction={this.itemRenderingFunction}\r\n        host={this.host}\r\n      >\r\n        {this.productState.products.map((product, i) => {\r\n          const propsForAtomicProduct = this.getPropsForAtomicProduct(product);\r\n          return (\r\n            <DisplayTableRow\r\n              {...propsForAtomicProduct}\r\n              rowIndex={i}\r\n              setRef={(element) =>\r\n                element && this.productListCommon.setNewResultRef(element, i)\r\n              }\r\n            >\r\n              <DisplayTableData\r\n                {...propsForTableColumns}\r\n                {...propsForAtomicProduct}\r\n                renderItem={(content) => {\r\n                  return (\r\n                    <atomic-product\r\n                      {...this}\r\n                      {...propsForAtomicProduct}\r\n                      content={content}\r\n                    ></atomic-product>\r\n                  );\r\n                }}\r\n              ></DisplayTableData>\r\n            </DisplayTableRow>\r\n          );\r\n        })}\r\n      </DisplayTable>\r\n    );\r\n  }\r\n\r\n  private renderAsList() {\r\n    return this.productState.products.map((product, i) => {\r\n      const propsForAtomicProduct = this.getPropsForAtomicProduct(product);\r\n      return (\r\n        <atomic-product\r\n          {...this}\r\n          {...propsForAtomicProduct}\r\n          ref={(element) =>\r\n            element && this.productListCommon.setNewResultRef(element, i)\r\n          }\r\n          part=\"outline\"\r\n        ></atomic-product>\r\n      );\r\n    });\r\n  }\r\n}\r\n"],"mappings":"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"}