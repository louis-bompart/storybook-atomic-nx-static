{"file":"atomic-load-more-children-results.entry.cjs.js","mappings":";;;;;;;;;;;;;;;;;;AAAA,MAAM,gCAAgC,GAAG,0hvCAA0hvC,CAAC;AACpkvC,4CAAe,gCAAgC;;;;;;;;;;;;MCuBlC,6BAA6B;;;;;;QAgBzB,UAAK,GAAG,kBAAkB,CAAC;;;qBAAnB,kBAAkB;;IAEzC,IAAY,UAAU;QACpB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,iBAAiB,EAAE;YACtC,OAAO,IAAI,CAAC;SACb;QACD,OAAO,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,IAAI,CAC5C,CAAC,CAAC,KACA,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,iBAAiB,KAAK,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,iBAAiB,CACtE,CAAC;KACJ;IAEO,kBAAkB;QACxB,IAAI,CAAC,IAAI,CAAC,aAAa,CACrBA,2BAAgB,CAAC,uBAAuB,EAAE,IAAI,CAAC,UAAU,CAAC,CAC3D,CAAC;KACH;IAED,IAAY,cAAc;;QACxB,OAAO,MAAA,IAAI,CAAC,UAAU,0CAAE,oBAAoB,CAAC;KAC9C;IAED,IAAY,SAAS;;QACnB,OAAO,OAAO,CAAC,MAAA,IAAI,CAAC,UAAU,0CAAE,oBAAoB,CAAC,CAAC;KACvD;IAED,IAAY,WAAW;;QACrB,OAAO,OAAO,CAAC,MAAA,IAAI,CAAC,UAAU,0CAAE,QAAQ,CAAC,MAAM,CAAC,CAAC;KAClD;IAED,IAAY,WAAW;QACrB,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,OAAO,cAAc,CAAC;SACvB;QACD,OAAO,EAAE,CAAC;KACX;IAED,IAAY,YAAY;QACtB,OAAOC,oCAAqB,CAC1B,MAAM,EACN,IAAI,CAAC,aAAa,CAAC,OAAO,EAC1B,IAAI,CAAC,aAAa,CAAC,SAAS,CAC7B,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KACb;IAEM,MAAM;QACX,IAAI,CAAC,IAAI,CAAC,qBAAqB,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YACnD,OAAO,IAAI,CAAC;SACb;QAED,QACEC,iBAAK,KAAK,EAAE,IAAI,CAAC,YAAY,IAC1B,IAAI,CAAC,cAAc,KAClBA,QAACC,aAAM,IACL,IAAI,EAAC,QAAQ,EACb,KAAK,EAAC,cAAc,EACpB,OAAO,EAAE,MAAM,IAAI,CAAC,kBAAkB,EAAE,EACxC,KAAK,EAAE,IAAI,CAAC,WAAW,EACvB,QAAQ,EAAE,IAAI,CAAC,SAAS,IAEvB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAC1B,CACV,CACG,EACN;KACH;;;AAhF4B;IAA5BC,sCAAkB,EAAE;+DAA4B;AACzB;IAAvBC,sCAAa,EAAE;6DAAwB;AAMhC;IAFPC,6CAA0B,EAAE;4EAEyB;AAG9C;IADPC,uCAAwB,EAAE;oEACW;;;;;","names":["buildCustomEvent","getItemDisplayClasses","h","Button","InitializeBindings","ResultContext","FoldedItemListStateContext","ItemDisplayConfigContext"],"sources":["src/components/search/atomic-load-more-children-results/atomic-load-more-children-results.pcss?tag=atomic-load-more-children-results&encapsulation=shadow","src/components/search/atomic-load-more-children-results/atomic-load-more-children-results.tsx"],"sourcesContent":["@import '../../../global/global.pcss';\n@import '../../../global/mixins.pcss';\n\n@define-mixin display-density $max, $min {\n  .btn-text-primary {\n    margin-top: $min;\n\n    &.has-children {\n      margin-bottom: $min;\n    }\n  }\n}\n\n.btn-text-primary {\n  @mixin set-font-size var(--atomic-text-sm);\n}\n.density-compact {\n  @mixin display-density 1rem, 0.475rem;\n}\n.density-normal {\n  @mixin display-density 1.5rem, 0.875rem;\n}\n.density-comfortable {\n  @mixin display-density 1.75rem, 0.25rem;\n}\n","import {Result, FoldedResultListState} from '@coveo/headless';\nimport {Component, Element, h, Prop, State} from '@stencil/core';\nimport {buildCustomEvent} from '../../../utils/event-utils';\nimport {InitializeBindings} from '../../../utils/initialization-utils';\nimport {Button} from '../../common/button';\nimport {\n  DisplayConfig,\n  ItemDisplayConfigContext,\n} from '../../common/item-list/item-decorators';\nimport {FoldedItemListStateContext} from '../../common/item-list/item-list-decorators';\nimport {getItemDisplayClasses} from '../../common/layout/display-options';\nimport {Bindings} from '../atomic-search-interface/atomic-search-interface';\nimport {ResultContext} from '../result-template-components/result-template-decorators';\n\n/**\n * The `atomic-load-more-children-results` component allows to load the full collection for a folded result.\n *\n * @part button - The button used to load more results.\n */\n@Component({\n  tag: 'atomic-load-more-children-results',\n  styleUrl: 'atomic-load-more-children-results.pcss',\n  shadow: true,\n})\nexport class AtomicLoadMoreChildrenResults {\n  @InitializeBindings() public bindings!: Bindings;\n  @ResultContext() public result!: Result;\n  @State() public error!: Error;\n  @Element() host!: HTMLElement;\n\n  @FoldedItemListStateContext()\n  @State()\n  private foldedResultListState!: FoldedResultListState;\n\n  @ItemDisplayConfigContext()\n  private displayConfig!: DisplayConfig;\n\n  /**\n   * The non-localized label for the button used to load more results.\n   */\n  @Prop() public label = 'load-all-results';\n\n  private get collection() {\n    if (!this.result.raw.foldingcollection) {\n      return null;\n    }\n    return this.foldedResultListState.results.find(\n      (r) =>\n        r.result.raw.foldingcollection === this.result.raw.foldingcollection\n    )!;\n  }\n\n  private loadFullCollection() {\n    this.host.dispatchEvent(\n      buildCustomEvent('atomic/loadCollection', this.collection)\n    );\n  }\n\n  private get hasMoreResults() {\n    return this.collection?.moreResultsAvailable;\n  }\n\n  private get isLoading() {\n    return Boolean(this.collection?.isLoadingMoreResults);\n  }\n\n  private get hasChildren() {\n    return Boolean(this.collection?.children.length);\n  }\n\n  private get buttonClass() {\n    if (this.hasChildren) {\n      return 'has-children';\n    }\n    return '';\n  }\n\n  private get wrapperClass() {\n    return getItemDisplayClasses(\n      'list',\n      this.displayConfig.density,\n      this.displayConfig.imageSize\n    ).join(' ');\n  }\n\n  public render() {\n    if (!this.foldedResultListState || !this.collection) {\n      return null;\n    }\n\n    return (\n      <div class={this.wrapperClass}>\n        {this.hasMoreResults && (\n          <Button\n            part=\"button\"\n            style=\"text-primary\"\n            onClick={() => this.loadFullCollection()}\n            class={this.buttonClass}\n            disabled={this.isLoading}\n          >\n            {this.bindings.i18n.t(this.label)}\n          </Button>\n        )}\n      </div>\n    );\n  }\n}\n"],"version":3}