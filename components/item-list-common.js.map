{"file":"item-list-common.js","mappings":";;;;MAaa,oBAAoB,GAAG,mBAAmB;MAgB1C,cAAc;IAKzB,YAAoB,KAA0B;QAA1B,UAAK,GAAL,KAAK,CAAqB;QAC5C,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;QACxD,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;QAC1C,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,MAAM,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;KAC7E;IAEM,iBAAiB;QACtB,IAAI,CAAC,qBAAqB,EAAE,CAAC;KAC9B;IAEM,WAAW,CAChB,gBAAwB,EACxB,gBAAwB,EACxB,OAA2B,EAC3B,SAA+B;QAE/B,OAAO,GAAG,gBAAgB,GAAG,gBAAgB,GAAG,OAAO,GAAG,SAAS,EAAE,CAAC;KACvE;IAEM,eAAe,CAAC,OAAoB,EAAE,WAAmB;;QAC9D,IAAI,WAAW,KAAK,CAAC,EAAE;YACrB,IAAI,CAAC,aAAa,GAAG,OAAO,CAAC;SAC9B;QACD,IAAI,WAAW,KAAK,IAAI,CAAC,oBAAoB,EAAE;YAC7C,OAAO;SACR;QAED,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,IAAI,EAAC,MAAA,OAAO,CAAC,UAAU,0CAAE,QAAQ,CAAC,MAAM,CAAA,EAAE;YACpE,OAAO;SACR;QAED,IAAI,CAAC,oBAAoB,GAAG,SAAS,CAAC;QACtC,MAAM,cAAc,GAAG,MAAA,2BAA2B,CAAC,OAAO,CAAC,mCAAI,OAAO,CAAC;QACvE,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;KACxD;IAEM,oBAAoB;QACzB,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,KAAK,CAAC,uBAAuB,EAAE,CAAC;QACjE,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,iBAAiB,EAAE,CAAC;KAClD;IAEM,MAAM,iCAAiC;QAC5C,MAAM,KAAK,EAAE,CAAC;QACd,OAAO,IAAI,OAAO,CAAO,CAAC,OAAO;YAC/B,IAAI,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,EAAE;gBAC7B,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC;aAChC;YAED,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC;;gBACvC,MAAM,KAAK,EAAE,CAAC;gBACd,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,IAAI,IAAI,CAAC,aAAa,EAAE;oBACpD,MAAM,cAAc,GAClB,MAAA,2BAA2B,CAAC,IAAI,CAAC,aAAa,CAAC,mCAC/C,IAAI,CAAC,aAAa,CAAC;oBACrB,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;oBACvD,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,KAAK,EAAE,CAAC;oBACrC,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC;oBAC/B,KAAK,EAAE,CAAC;oBACR,OAAO,EAAE,CAAC;iBACX;aACF,CAAC,CAAC;SACJ,CAAC,CAAC;KACJ;;;;;","names":[],"sources":["src/components/common/item-list/item-list-common.tsx"],"sourcesContent":["import {\r\n  FocusTargetController,\r\n  getFirstFocusableDescendant,\r\n} from '../../../utils/accessibility-utils';\r\nimport {updateBreakpoints} from '../../../utils/replace-breakpoint';\r\nimport {defer, once} from '../../../utils/utils';\r\nimport {AnyItem} from '../interface/item';\r\nimport {AtomicCommonStore, AtomicCommonStoreData} from '../interface/store';\r\nimport {\r\n  ItemDisplayDensity,\r\n  ItemDisplayImageSize,\r\n} from '../layout/display-options';\r\n\r\nexport const resultComponentClass = 'result-component';\r\n\r\nexport type ItemRenderingFunction<SpecificResult extends AnyItem = AnyItem> =\r\n  | ((result: SpecificResult, root: HTMLElement) => string)\r\n  | undefined;\r\n\r\nexport interface ItemListCommonProps {\r\n  store: AtomicCommonStore<AtomicCommonStoreData>;\r\n  loadingFlag: string;\r\n  host: HTMLElement;\r\n  nextNewItemTarget: FocusTargetController;\r\n  getCurrentNumberOfItems: () => number;\r\n  getIsLoading: () => boolean;\r\n  engineSubscribe: (cb: () => void) => () => void;\r\n}\r\n\r\nexport class ItemListCommon {\r\n  private indexOfResultToFocus?: number;\r\n  private firstResultEl?: HTMLElement;\r\n  private updateBreakpointsOnce: () => void;\r\n\r\n  constructor(private props: ItemListCommonProps) {\r\n    this.props.store.setLoadingFlag(this.props.loadingFlag);\r\n    this.props.store.registerResultList(this);\r\n    this.updateBreakpointsOnce = once(() => updateBreakpoints(this.props.host));\r\n  }\r\n\r\n  public updateBreakpoints() {\r\n    this.updateBreakpointsOnce();\r\n  }\r\n\r\n  public getResultId(\r\n    uniqueIdOnResult: string,\r\n    searchResponseId: string,\r\n    density: ItemDisplayDensity,\r\n    imageSize: ItemDisplayImageSize\r\n  ) {\r\n    return `${uniqueIdOnResult}${searchResponseId}${density}${imageSize}`;\r\n  }\r\n\r\n  public setNewResultRef(element: HTMLElement, resultIndex: number) {\r\n    if (resultIndex === 0) {\r\n      this.firstResultEl = element;\r\n    }\r\n    if (resultIndex !== this.indexOfResultToFocus) {\r\n      return;\r\n    }\r\n\r\n    if (!element.children.length && !element.shadowRoot?.children.length) {\r\n      return;\r\n    }\r\n\r\n    this.indexOfResultToFocus = undefined;\r\n    const elementToFocus = getFirstFocusableDescendant(element) ?? element;\r\n    this.props.nextNewItemTarget.setTarget(elementToFocus);\r\n  }\r\n\r\n  public focusOnNextNewResult() {\r\n    this.indexOfResultToFocus = this.props.getCurrentNumberOfItems();\r\n    this.props.nextNewItemTarget.focusOnNextTarget();\r\n  }\r\n\r\n  public async focusOnFirstResultAfterNextSearch() {\r\n    await defer();\r\n    return new Promise<void>((resolve) => {\r\n      if (this.props.getIsLoading()) {\r\n        this.firstResultEl = undefined;\r\n      }\r\n\r\n      const unsub = this.props.engineSubscribe(async () => {\r\n        await defer();\r\n        if (!this.props.getIsLoading() && this.firstResultEl) {\r\n          const elementToFocus =\r\n            getFirstFocusableDescendant(this.firstResultEl) ??\r\n            this.firstResultEl;\r\n          this.props.nextNewItemTarget.setTarget(elementToFocus);\r\n          this.props.nextNewItemTarget.focus();\r\n          this.firstResultEl = undefined;\r\n          unsub();\r\n          resolve();\r\n        }\r\n      });\r\n    });\r\n  }\r\n}\r\n"],"version":3}