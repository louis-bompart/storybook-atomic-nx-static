{"file":"atomic-recs-error.entry.esm.js","mappings":";;;;;;;;;;;;;AAAA,MAAM,kBAAkB,GAAG,u+tCAAu+tC;;;;;;;;;;;;MCuCr/tC,eAAe;;;QAQjB,iBAAY,GAAG,KAAK,CAAC;;;4BAAN,KAAK;;IAKtB,UAAU;QACf,IAAI,CAAC,kBAAkB,GAAG,uBAAuB,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;KACzE;IAEM,MAAM;QACX,MAAM,EAAC,KAAK,EAAC,GAAG,IAAI,CAAC,uBAAuB,CAAC;QAE7C,MAAM,EACJ,QAAQ,EAAE,EACR,IAAI,EACJ,MAAM,EAAE,EACN,KAAK,EAAE,EACL,aAAa,EAAE,EAAC,cAAc,EAAE,WAAW,EAAC,GAC7C,GACF,GACF,GACF,GAAG,IAAI,CAAC;QAET,MAAM,QAAQ,GAAG,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;QAE3C,IAAI,QAAQ,EAAE;YACZ,IAAI,CAAC,WAAW,GAAG,2BAA2B,CAC5C,IAAI,EACJ,cAAc,EACd,WAAW,EACX,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,IAAI,CACZ,CAAC;SACH;QAED,QACE,EAAC,eAAe,qDAAC,QAAQ,EAAE,QAAQ,IACjC,EAAC,mBAAmB,uDAClB,EAAC,cAAc,qDAAC,SAAS,EAAE,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,IAAI,GAAI,EAC1C,EAAC,eAAe,qDAAC,IAAI,EAAE,IAAI,EAAE,cAAc,EAAE,cAAc,GAAI,EAC/D,EAAC,qBAAqB,qDACpB,IAAI,EAAE,IAAI,EACV,cAAc,EAAE,cAAc,EAC9B,GAAG,EAAE,WAAW,GAChB,EACF,EAAC,kBAAkB,qDACjB,IAAI,EAAE,EAAC,cAAc,IAAC,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,IAAI,GAAI,EAC5D,UAAU,EAAE,OAAO,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,EAC1D,IAAI,EAAE,IAAI,GACV,EACF,EAAC,iBAAiB,qDAAC,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,YAAY,GAAI,CACxC,CACN,EAClB;KACH;;AA5D4B;IAA5B,kBAAkB,EAAE;iDAAgC;AAK9C;IAFN,qBAAqB,CAAC,oBAAoB,CAAC;gEAEa;AAK/C;IADT,cAAc,CAAC,YAAY,CAAC;oDACE;;;;;","names":[],"sources":["src/components/recommendations/atomic-recs-error/atomic-recs-error.pcss?tag=atomic-recs-error&encapsulation=shadow","src/components/recommendations/atomic-recs-error/atomic-recs-error.tsx"],"sourcesContent":["@import '../../../global/global.pcss';\r\n","import {isNullOrUndefined} from '@coveo/bueno';\r\nimport {\r\n  buildRecommendationList,\r\n  RecommendationList,\r\n  RecommendationListState,\r\n} from '@coveo/headless/recommendation';\r\nimport {Component, h, State} from '@stencil/core';\r\nimport {AriaLiveRegion} from '../../../utils/accessibility-utils';\r\nimport {\r\n  BindStateToController,\r\n  InitializableComponent,\r\n  InitializeBindings,\r\n} from '../../../utils/initialization-utils';\r\nimport {QueryErrorContainer} from '../../common/query-error/container';\r\nimport {QueryErrorDescription} from '../../common/query-error/description';\r\nimport {QueryErrorDetails} from '../../common/query-error/details';\r\nimport {QueryErrorGuard} from '../../common/query-error/guard';\r\nimport {QueryErrorIcon} from '../../common/query-error/icon';\r\nimport {QueryErrorLink} from '../../common/query-error/link';\r\nimport {QueryErrorShowMore} from '../../common/query-error/show-more';\r\nimport {QueryErrorTitle} from '../../common/query-error/title';\r\nimport {getAriaMessageFromErrorType} from '../../common/query-error/utils';\r\nimport {RecsBindings} from '../atomic-recs-interface/atomic-recs-interface';\r\n\r\n/**\r\n * The `atomic-recs-error` component handles fatal errors when performing a recommendations request on the index or Search API. When the error is known, it displays a link to relevant documentation link for debugging purposes. When the error is unknown, it displays a small text area with the JSON content of the error.\r\n *\r\n * @part icon - The svg related to the error.\r\n * @part title - The title of the error.\r\n * @part description - A description of the error.\r\n * @part doc-link - A link to the relevant documentation.\r\n * @part more-info-btn - A button to request additional error information.\r\n * @part error-info - Additional error information.\r\n */\r\n@Component({\r\n  tag: 'atomic-recs-error',\r\n  styleUrl: 'atomic-recs-error.pcss',\r\n  shadow: true,\r\n})\r\nexport class AtomicRecsError implements InitializableComponent<RecsBindings> {\r\n  @InitializeBindings() public bindings!: RecsBindings;\r\n  public recommendationList!: RecommendationList;\r\n\r\n  @BindStateToController('recommendationList')\r\n  @State()\r\n  public recommendationListState!: RecommendationListState;\r\n  @State() public error!: Error;\r\n  @State() showMoreInfo = false;\r\n\r\n  @AriaLiveRegion('recs-error')\r\n  protected ariaMessage!: string;\r\n\r\n  public initialize() {\r\n    this.recommendationList = buildRecommendationList(this.bindings.engine);\r\n  }\r\n\r\n  public render() {\r\n    const {error} = this.recommendationListState;\r\n\r\n    const {\r\n      bindings: {\r\n        i18n,\r\n        engine: {\r\n          state: {\r\n            configuration: {organizationId, platformUrl},\r\n          },\r\n        },\r\n      },\r\n    } = this;\r\n\r\n    const hasError = !isNullOrUndefined(error);\r\n\r\n    if (hasError) {\r\n      this.ariaMessage = getAriaMessageFromErrorType(\r\n        i18n,\r\n        organizationId,\r\n        platformUrl,\r\n        error?.type\r\n      );\r\n    }\r\n\r\n    return (\r\n      <QueryErrorGuard hasError={hasError}>\r\n        <QueryErrorContainer>\r\n          <QueryErrorIcon errorType={error?.type} />\r\n          <QueryErrorTitle i18n={i18n} organizationId={organizationId} />\r\n          <QueryErrorDescription\r\n            i18n={i18n}\r\n            organizationId={organizationId}\r\n            url={platformUrl}\r\n          />\r\n          <QueryErrorShowMore\r\n            link={<QueryErrorLink i18n={i18n} errorType={error?.type} />}\r\n            onShowMore={() => (this.showMoreInfo = !this.showMoreInfo)}\r\n            i18n={i18n}\r\n          />\r\n          <QueryErrorDetails error={error} show={this.showMoreInfo} />\r\n        </QueryErrorContainer>\r\n      </QueryErrorGuard>\r\n    );\r\n  }\r\n}\r\n"],"version":3}