{"version":3,"names":["atomicCommerceFacetCss","AtomicCommerceFacetStyle0","AtomicCommerceFacet","this","isCollapsed","initialize","initSummary","initAriaLive","initPopover","registerFacet","componentShouldUpdate","next","prev","propName","isFacetState","shouldUpdateFacetSearchComponent","facetSearch","render","hasError","firstSearchExecuted","summary","state","h","FacetGuard","key","enabled","hasResults","facetState","values","length","FacetContainer","FacetHeader","i18n","bindings","label","displayName","onClearFilters","focusTargets","header","focusAfterSearch","facet","deselectAll","numberOfActiveValues","activeValues","headingLevel","onToggleCollapse","headerRef","el","setTarget","renderBody","FacetPlaceholder","numberOfValues","Fragment","FacetSearchInputGuard","canShowMoreValues","numberOfDisplayedValues","withSearch","FacetSearchInput","onChange","value","clear","updateText","search","onClear","query","shouldDisplaySearchResults","renderSearchResults","renderMatches","renderValues","renderShowMoreLess","renderValuesContainer","children","FacetValuesGroup","part","map","FacetSearchValue","facetValueProps","facetCount","count","onExclude","exclude","onSelect","select","facetValue","rawValue","i","shouldFocusOnShowLessAfterInteraction","shouldFocusOnShowMoreAfterInteraction","FacetValue","numberOfResults","toggleExclude","toggleSelect","setRef","btn","_a","showLessFocus","_b","showMoreFocus","FacetShowMoreLess","onShowMore","showMore","showMoreValues","onShowLess","showLess","showLessValues","canShowLessValues","FacetSearchMatches","numberOfMatches","hasMoreMatches","moreValuesAvailable","filter","facetSearchQuery","displayValuesAs","enableExclusion","field","isHidden","store","facetInfo","initializePopover","host","hasValues","interfaceElement","type","buildListingSummary","engine","buildSearchSummary","announceFacetSearchResultsWithAriaLive","msg","facetSearchAriaMessage","t","facetId","element","FocusTargetController","headerFocus","__decorate","InitializeBindings","BindStateToController","AriaLiveRegion","atomicCommerceNumericFacetCss","AtomicCommerceNumericFacetStyle0","AtomicCommerceNumericFacet","manualRanges","formatter","defaultNumberFormatter","focusTarget","initializeSummary","registerFacetToStore","format","formatHumanReadable","logger","numberOfSelectedValues","setFormat","event","preventDefault","stopPropagation","detail","applyNumberInput","range","start","end","shouldRenderFacet","setRanges","shouldRenderValues","shouldRenderInput","NumericFacetValuesContainer","valuesToRender","NumericFacetValueLink","onClick","hasInputRange","isLoading","hasProducts","shouldDisplayInputForFacetRange","searchStatusState","facetValues","hasInput"],"sources":["src/components/commerce/facets/atomic-commerce-facet/atomic-commerce-facet.pcss?tag=atomic-commerce-facet&encapsulation=shadow","src/components/commerce/facets/atomic-commerce-facet/atomic-commerce-facet.tsx","src/components/commerce/facets/atomic-commerce-numeric-facet/atomic-commerce-numeric-facet.pcss?tag=atomic-commerce-numeric-facet&encapsulation=shadow","src/components/commerce/facets/atomic-commerce-numeric-facet/atomic-commerce-numeric-facet.tsx"],"sourcesContent":["@import '../../../../global/global.pcss';\r\n@import '../../../common/facets/facet-search/facet-search.pcss';\r\n@import '../../../common/facets/facet-common.pcss';\r\n@import '../../../common/facets/facet-value-checkbox/facet-value-checkbox.pcss';\r\n@import '../../../common/facets/facet-value-exclude/facet-value-exclude.pcss';\r\n@import '../../../common/facets/facet-value-box/facet-value-box.pcss';\r\n","import {\r\n  RegularFacet,\r\n  RegularFacetState,\r\n  buildListingSummary,\r\n  buildSearchSummary,\r\n  SearchSummary,\r\n  ListingSummary,\r\n} from '@coveo/headless/commerce';\r\nimport {\r\n  Component,\r\n  h,\r\n  State,\r\n  Prop,\r\n  Element,\r\n  VNode,\r\n  Fragment,\r\n} from '@stencil/core';\r\nimport {\r\n  AriaLiveRegion,\r\n  FocusTargetController,\r\n} from '../../../../utils/accessibility-utils';\r\nimport {\r\n  BindStateToController,\r\n  InitializableComponent,\r\n  InitializeBindings,\r\n} from '../../../../utils/initialization-utils';\r\nimport {FacetInfo} from '../../../common/facets/facet-common-store';\r\nimport {FacetContainer} from '../../../common/facets/facet-container/facet-container';\r\nimport {FacetGuard} from '../../../common/facets/facet-guard';\r\nimport {FacetHeader} from '../../../common/facets/facet-header/facet-header';\r\nimport {FacetPlaceholder} from '../../../common/facets/facet-placeholder/facet-placeholder';\r\nimport {announceFacetSearchResultsWithAriaLive} from '../../../common/facets/facet-search/facet-search-aria-live';\r\nimport {FacetSearchInput} from '../../../common/facets/facet-search/facet-search-input';\r\nimport {FacetSearchInputGuard} from '../../../common/facets/facet-search/facet-search-input-guard';\r\nimport {FacetSearchMatches} from '../../../common/facets/facet-search/facet-search-matches';\r\nimport {\r\n  shouldDisplaySearchResults,\r\n  shouldUpdateFacetSearchComponent,\r\n} from '../../../common/facets/facet-search/facet-search-utils';\r\nimport {FacetSearchValue} from '../../../common/facets/facet-search/facet-search-value';\r\nimport {FacetShowMoreLess} from '../../../common/facets/facet-show-more-less/facet-show-more-less';\r\nimport {\r\n  FacetValueProps,\r\n  FacetValue,\r\n} from '../../../common/facets/facet-value/facet-value';\r\nimport {FacetValuesGroup} from '../../../common/facets/facet-values-group/facet-values-group';\r\nimport {initializePopover} from '../../../search/facets/atomic-popover/popover-type';\r\nimport {CommerceBindings as Bindings} from '../../atomic-commerce-interface/atomic-commerce-interface';\r\n\r\n/**\r\n * The `atomic-commerce-facet` component renders a commerce facet that the end user can interact with to filter products.\r\n *\r\n * @internal\r\n */\r\n@Component({\r\n  tag: 'atomic-commerce-facet',\r\n  styleUrl: 'atomic-commerce-facet.pcss',\r\n  shadow: true,\r\n})\r\nexport class AtomicCommerceFacet implements InitializableComponent<Bindings> {\r\n  @InitializeBindings() public bindings!: Bindings;\r\n  public summary!: SearchSummary | ListingSummary;\r\n  @Element() private host!: HTMLElement;\r\n\r\n  @Prop() public facet!: RegularFacet;\r\n\r\n  @BindStateToController('facet')\r\n  @State()\r\n  public facetState!: RegularFacetState;\r\n\r\n  @State() public error!: Error;\r\n\r\n  private isCollapsed = false;\r\n  private showLessFocus?: FocusTargetController;\r\n  private showMoreFocus?: FocusTargetController;\r\n  private headerFocus?: FocusTargetController;\r\n\r\n  @AriaLiveRegion('facet-search')\r\n  protected facetSearchAriaMessage!: string;\r\n\r\n  public initialize() {\r\n    this.initSummary();\r\n    this.initAriaLive();\r\n    this.initPopover();\r\n    this.registerFacet();\r\n  }\r\n\r\n  public componentShouldUpdate(\r\n    next: unknown,\r\n    prev: unknown,\r\n    propName: keyof AtomicCommerceFacet\r\n  ) {\r\n    if (\r\n      this.isFacetState(prev, propName) &&\r\n      this.isFacetState(next, propName)\r\n    ) {\r\n      return shouldUpdateFacetSearchComponent(\r\n        next.facetSearch,\r\n        prev.facetSearch\r\n      );\r\n    }\r\n    return true;\r\n  }\r\n\r\n  public render() {\r\n    const {hasError, firstSearchExecuted} = this.summary.state;\r\n    return (\r\n      <FacetGuard\r\n        enabled={true}\r\n        hasError={hasError}\r\n        firstSearchExecuted={firstSearchExecuted}\r\n        hasResults={this.facetState.values.length > 0}\r\n      >\r\n        {firstSearchExecuted ? (\r\n          <FacetContainer>\r\n            <FacetHeader\r\n              i18n={this.bindings.i18n}\r\n              label={this.displayName}\r\n              onClearFilters={() => {\r\n                this.focusTargets.header.focusAfterSearch();\r\n                this.facet.deselectAll();\r\n              }}\r\n              numberOfActiveValues={this.activeValues.length}\r\n              isCollapsed={this.isCollapsed}\r\n              headingLevel={0}\r\n              onToggleCollapse={() => (this.isCollapsed = !this.isCollapsed)}\r\n              headerRef={(el) => this.focusTargets.header.setTarget(el)}\r\n            ></FacetHeader>\r\n            {this.renderBody()}\r\n          </FacetContainer>\r\n        ) : (\r\n          <FacetPlaceholder numberOfValues={8} isCollapsed={this.isCollapsed} />\r\n        )}\r\n      </FacetGuard>\r\n    );\r\n  }\r\n\r\n  private renderBody() {\r\n    if (this.isCollapsed) {\r\n      return;\r\n    }\r\n    return (\r\n      <Fragment>\r\n        <FacetSearchInputGuard\r\n          canShowMoreValues={this.facetState.canShowMoreValues}\r\n          numberOfDisplayedValues={this.facetState.values.length}\r\n          withSearch={true}\r\n        >\r\n          <FacetSearchInput\r\n            i18n={this.bindings.i18n}\r\n            label={this.displayName}\r\n            onChange={(value) => {\r\n              if (value === '') {\r\n                this.facet.facetSearch.clear();\r\n                return;\r\n              }\r\n              this.facet.facetSearch.updateText(value);\r\n              this.facet.facetSearch.search();\r\n            }}\r\n            onClear={() => this.facet.facetSearch.clear()}\r\n            query={this.facetState.facetSearch.query}\r\n          />\r\n        </FacetSearchInputGuard>\r\n        {shouldDisplaySearchResults(this.facetState.facetSearch)\r\n          ? [this.renderSearchResults(), this.renderMatches()]\r\n          : [this.renderValues(), this.renderShowMoreLess()]}\r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n  private renderValuesContainer(children: VNode[], query?: string) {\r\n    return (\r\n      <FacetValuesGroup\r\n        i18n={this.bindings.i18n}\r\n        label={this.displayName}\r\n        query={query}\r\n      >\r\n        <ul part=\"values\">{children}</ul>\r\n      </FacetValuesGroup>\r\n    );\r\n  }\r\n\r\n  private renderSearchResults() {\r\n    return this.renderValuesContainer(\r\n      this.facet.state.facetSearch.values.map((value) => (\r\n        <FacetSearchValue\r\n          {...this.facetValueProps}\r\n          facetCount={value.count}\r\n          onExclude={() => this.facet.facetSearch.exclude(value)}\r\n          onSelect={() => this.facet.facetSearch.select(value)}\r\n          facetValue={value.rawValue}\r\n        />\r\n      ))\r\n    );\r\n  }\r\n\r\n  private renderValues() {\r\n    return this.renderValuesContainer(\r\n      this.facet.state.values.map((value, i) => {\r\n        const shouldFocusOnShowLessAfterInteraction = i === 0;\r\n        const shouldFocusOnShowMoreAfterInteraction = i === 0;\r\n\r\n        return (\r\n          <FacetValue\r\n            {...this.facetValueProps}\r\n            facetCount={value.numberOfResults}\r\n            onExclude={() => this.facet.toggleExclude(value)}\r\n            onSelect={() => this.facet.toggleSelect(value)}\r\n            facetValue={value.value}\r\n            facetState={value.state}\r\n            setRef={(btn) => {\r\n              if (shouldFocusOnShowLessAfterInteraction) {\r\n                this.showLessFocus?.setTarget(btn);\r\n              }\r\n              if (shouldFocusOnShowMoreAfterInteraction) {\r\n                this.showMoreFocus?.setTarget(btn);\r\n              }\r\n            }}\r\n          />\r\n        );\r\n      })\r\n    );\r\n  }\r\n\r\n  private renderShowMoreLess() {\r\n    return (\r\n      <FacetShowMoreLess\r\n        label={this.displayName}\r\n        i18n={this.bindings.i18n}\r\n        onShowMore={() => {\r\n          this.focusTargets.showMore.focusAfterSearch();\r\n          this.facet.showMoreValues();\r\n        }}\r\n        onShowLess={() => {\r\n          this.focusTargets.showLess.focusAfterSearch();\r\n          this.facet.showLessValues();\r\n        }}\r\n        canShowMoreValues={this.facet.state.canShowMoreValues}\r\n        canShowLessValues={this.facet.state.canShowLessValues}\r\n      ></FacetShowMoreLess>\r\n    );\r\n  }\r\n\r\n  private renderMatches() {\r\n    return (\r\n      <FacetSearchMatches\r\n        i18n={this.bindings.i18n}\r\n        query={this.facet.state.facetSearch.query}\r\n        numberOfMatches={this.facet.state.facetSearch.values.length}\r\n        hasMoreMatches={this.facet.state.facetSearch.moreValuesAvailable}\r\n      ></FacetSearchMatches>\r\n    );\r\n  }\r\n\r\n  private get activeValues() {\r\n    return this.facet.state.values.filter(({state}) => state !== 'idle');\r\n  }\r\n\r\n  private get displayName() {\r\n    return this.facet.state.displayName || 'no-label';\r\n  }\r\n\r\n  private get facetValueProps(): Pick<\r\n    FacetValueProps,\r\n    | 'facetSearchQuery'\r\n    | 'enableExclusion'\r\n    | 'field'\r\n    | 'i18n'\r\n    | 'displayValuesAs'\r\n  > {\r\n    return {\r\n      facetSearchQuery: this.facetState.facetSearch.query,\r\n      displayValuesAs: 'checkbox',\r\n      enableExclusion: false,\r\n      field: this.facetState.field,\r\n      i18n: this.bindings.i18n,\r\n    };\r\n  }\r\n\r\n  private get isHidden() {\r\n    return !this.facetState.values.length;\r\n  }\r\n\r\n  private registerFacet() {\r\n    this.bindings.store.registerFacet('facets', this.facetInfo);\r\n  }\r\n\r\n  private initPopover() {\r\n    initializePopover(this.host, {\r\n      ...this.facetInfo,\r\n      hasValues: () => !!this.facet.state.values.length,\r\n      numberOfActiveValues: () => this.activeValues.length,\r\n    });\r\n  }\r\n\r\n  private initSummary() {\r\n    if (this.bindings.interfaceElement.type === 'product-listing') {\r\n      this.summary = buildListingSummary(this.bindings.engine);\r\n    } else {\r\n      this.summary = buildSearchSummary(this.bindings.engine);\r\n    }\r\n  }\r\n\r\n  private initAriaLive() {\r\n    announceFacetSearchResultsWithAriaLive(\r\n      this.facet,\r\n      this.displayName,\r\n      (msg) => (this.facetSearchAriaMessage = msg),\r\n      this.bindings.i18n\r\n    );\r\n  }\r\n\r\n  private get facetInfo(): FacetInfo {\r\n    return {\r\n      label: () => this.bindings.i18n.t(this.displayName),\r\n      facetId: this.facet.state.facetId,\r\n      element: this.host,\r\n      isHidden: () => this.isHidden,\r\n    };\r\n  }\r\n\r\n  private get focusTargets(): {\r\n    showLess: FocusTargetController;\r\n    showMore: FocusTargetController;\r\n    header: FocusTargetController;\r\n  } {\r\n    if (!this.showLessFocus) {\r\n      this.showLessFocus = new FocusTargetController(this);\r\n    }\r\n    if (!this.showMoreFocus) {\r\n      this.showMoreFocus = new FocusTargetController(this);\r\n    }\r\n    if (!this.headerFocus) {\r\n      this.headerFocus = new FocusTargetController(this);\r\n    }\r\n\r\n    return {\r\n      showLess: this.showLessFocus,\r\n      showMore: this.showMoreFocus,\r\n      header: this.headerFocus,\r\n    };\r\n  }\r\n\r\n  private isFacetState(\r\n    state: unknown,\r\n    propName: string\r\n  ): state is RegularFacetState {\r\n    return (\r\n      propName === 'facetState' &&\r\n      typeof (state as RegularFacetState)?.facetId === 'string'\r\n    );\r\n  }\r\n}\r\n","@import '../../../common/facets/numeric-facet-common.pcss';\r\n","import {\r\n  NumericFacet,\r\n  NumericFacetState,\r\n  NumericRangeRequest,\r\n  ListingSummary,\r\n  SearchSummary,\r\n  buildListingSummary,\r\n  buildSearchSummary,\r\n} from '@coveo/headless/commerce';\r\nimport {Component, Element, h, Listen, Prop, State} from '@stencil/core';\r\nimport {FocusTargetController} from '../../../../utils/accessibility-utils';\r\nimport {\r\n  BindStateToController,\r\n  InitializableComponent,\r\n  InitializeBindings,\r\n} from '../../../../utils/initialization-utils';\r\nimport {shouldDisplayInputForFacetRange} from '../../../common/facets/facet-common';\r\nimport {FacetInfo} from '../../../common/facets/facet-common-store';\r\nimport {FacetContainer} from '../../../common/facets/facet-container/facet-container';\r\nimport {FacetGuard} from '../../../common/facets/facet-guard';\r\nimport {FacetHeader} from '../../../common/facets/facet-header/facet-header';\r\nimport {FacetPlaceholder} from '../../../common/facets/facet-placeholder/facet-placeholder';\r\nimport {formatHumanReadable} from '../../../common/facets/numeric-facet/formatter';\r\nimport {NumericFacetValueLink} from '../../../common/facets/numeric-facet/value-link';\r\nimport {NumericFacetValuesContainer} from '../../../common/facets/numeric-facet/values-container';\r\nimport {\r\n  defaultNumberFormatter,\r\n  NumberFormatter,\r\n} from '../../../common/formats/format-common';\r\nimport {initializePopover} from '../../../search/facets/atomic-popover/popover-type';\r\nimport {CommerceBindings as Bindings} from '../../atomic-commerce-interface/atomic-commerce-interface';\r\nimport type {Range} from '../facet-number-input/atomic-commerce-facet-number-input';\r\n\r\n/**\r\n * The `atomic-commerce-numeric-facet` component is responsible for rendering a commerce facet that allows the user to filter products using numeric ranges.\r\n *\r\n * @internal\r\n */\r\n@Component({\r\n  tag: 'atomic-commerce-numeric-facet',\r\n  styleUrl: './atomic-commerce-numeric-facet.pcss',\r\n  shadow: true,\r\n})\r\nexport class AtomicCommerceNumericFacet\r\n  implements InitializableComponent<Bindings>\r\n{\r\n  @InitializeBindings() public bindings!: Bindings;\r\n  @Element() private host!: HTMLElement;\r\n\r\n  @State() private range?: Range;\r\n\r\n  @BindStateToController('facet')\r\n  @State()\r\n  public facetState!: NumericFacetState;\r\n\r\n  @State() public error!: Error;\r\n\r\n  private summary!: ListingSummary | SearchSummary;\r\n  private isCollapsed = false;\r\n  private manualRanges: (NumericRangeRequest & {label?: string})[] = [];\r\n  private formatter: NumberFormatter = defaultNumberFormatter;\r\n\r\n  /**\r\n   * The field whose values you want to display in the facet.\r\n   */\r\n  @Prop({reflect: true}) public facet!: NumericFacet;\r\n\r\n  private headerFocus?: FocusTargetController;\r\n\r\n  private get focusTarget(): FocusTargetController {\r\n    if (!this.headerFocus) {\r\n      this.headerFocus = new FocusTargetController(this);\r\n    }\r\n    return this.headerFocus;\r\n  }\r\n\r\n  public initialize() {\r\n    this.initializeSummary();\r\n    this.registerFacetToStore();\r\n  }\r\n\r\n  private initializeSummary() {\r\n    if (this.bindings.interfaceElement.type === 'product-listing') {\r\n      this.summary = buildListingSummary(this.bindings.engine);\r\n    } else {\r\n      this.summary = buildSearchSummary(this.bindings.engine);\r\n    }\r\n  }\r\n\r\n  private registerFacetToStore() {\r\n    const {facetId, field} = this.state;\r\n    const facetInfo: FacetInfo = {\r\n      label: () => this.bindings.i18n.t(this.displayName),\r\n      facetId: facetId!,\r\n      element: this.host,\r\n      isHidden: () => this.isHidden,\r\n    };\r\n\r\n    this.bindings.store.registerFacet('numericFacets', {\r\n      ...facetInfo,\r\n      format: (value) =>\r\n        formatHumanReadable({\r\n          facetValue: value,\r\n          logger: this.bindings.engine.logger,\r\n          i18n: this.bindings.i18n,\r\n          field: field,\r\n          manualRanges: this.manualRanges,\r\n          formatter: this.formatter,\r\n        }),\r\n    });\r\n\r\n    initializePopover(this.host, {\r\n      ...facetInfo,\r\n      hasValues: () => this.hasValues,\r\n      numberOfActiveValues: () => this.numberOfSelectedValues,\r\n    });\r\n  }\r\n\r\n  @Listen('atomic/numberFormat')\r\n  public setFormat(event: CustomEvent<NumberFormatter>) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    this.formatter = event.detail;\r\n  }\r\n\r\n  @Listen('atomic/numberInputApply')\r\n  public applyNumberInput({detail}: CustomEvent<Range>) {\r\n    this.range = {start: detail.start, end: detail.end};\r\n  }\r\n\r\n  public render() {\r\n    const {\r\n      bindings: {i18n},\r\n    } = this;\r\n    const {firstSearchExecuted, hasError} = this.summary.state;\r\n    return (\r\n      <FacetGuard\r\n        enabled={true}\r\n        firstSearchExecuted={firstSearchExecuted}\r\n        hasError={hasError}\r\n        hasResults={this.shouldRenderFacet}\r\n      >\r\n        {firstSearchExecuted ? (\r\n          <FacetContainer>\r\n            <FacetHeader\r\n              i18n={i18n}\r\n              label={this.displayName}\r\n              onClearFilters={() => {\r\n                this.focusTarget.focusAfterSearch();\r\n                this.facet.deselectAll();\r\n                this.facet.setRanges([]);\r\n              }}\r\n              numberOfActiveValues={this.numberOfSelectedValues}\r\n              isCollapsed={this.isCollapsed}\r\n              headingLevel={0}\r\n              onToggleCollapse={() => (this.isCollapsed = !this.isCollapsed)}\r\n              headerRef={(el) => this.focusTarget.setTarget(el)}\r\n            />\r\n            {!this.isCollapsed && [\r\n              this.shouldRenderValues && this.renderValues(),\r\n              this.shouldRenderInput && (\r\n                <atomic-commerce-facet-number-input\r\n                  bindings={this.bindings}\r\n                  label={this.displayName}\r\n                  facet={this.facet}\r\n                  range={this.range}\r\n                ></atomic-commerce-facet-number-input>\r\n              ),\r\n            ]}\r\n          </FacetContainer>\r\n        ) : (\r\n          <FacetPlaceholder isCollapsed={this.isCollapsed} numberOfValues={8} />\r\n        )}\r\n      </FacetGuard>\r\n    );\r\n  }\r\n\r\n  private renderValues() {\r\n    const {\r\n      manualRanges,\r\n      displayName,\r\n      bindings: {\r\n        i18n,\r\n        engine: {logger},\r\n      },\r\n      formatter,\r\n    } = this;\r\n\r\n    return (\r\n      <NumericFacetValuesContainer i18n={i18n} label={displayName}>\r\n        {this.valuesToRender.map((value) => (\r\n          <NumericFacetValueLink\r\n            formatter={formatter}\r\n            displayValuesAs={'checkbox'}\r\n            facetValue={value}\r\n            field={this.state.field}\r\n            i18n={i18n}\r\n            logger={logger}\r\n            manualRanges={manualRanges}\r\n            onClick={() => this.facet!.toggleSelect(value)}\r\n          />\r\n        ))}\r\n      </NumericFacetValuesContainer>\r\n    );\r\n  }\r\n\r\n  private get state() {\r\n    return this.facet.state;\r\n  }\r\n\r\n  private get displayName() {\r\n    return this.state.displayName || 'no-label';\r\n  }\r\n\r\n  private get numberOfSelectedValues() {\r\n    if (this.range) {\r\n      return 1;\r\n    }\r\n\r\n    return (\r\n      this.facet?.state.values.filter(({state}) => state === 'selected')\r\n        .length || 0\r\n    );\r\n  }\r\n\r\n  private get hasInputRange() {\r\n    return !!this.range;\r\n  }\r\n\r\n  private get shouldRenderValues() {\r\n    return !this.hasInputRange && !!this.valuesToRender.length;\r\n  }\r\n\r\n  private get valuesToRender() {\r\n    return (\r\n      this.facet?.state.values.filter(\r\n        (value) => value.numberOfResults || value.state !== 'idle'\r\n      ) || []\r\n    );\r\n  }\r\n\r\n  private get shouldRenderInput() {\r\n    const {\r\n      firstSearchExecuted,\r\n      hasError,\r\n      isLoading,\r\n      hasProducts: hasResults,\r\n    } = this.summary.state;\r\n    return shouldDisplayInputForFacetRange({\r\n      hasInputRange: this.hasInputRange,\r\n      searchStatusState: {\r\n        firstSearchExecuted,\r\n        hasError,\r\n        hasResults,\r\n        isLoading,\r\n      },\r\n      facetValues: this.state.values,\r\n      hasInput: true,\r\n    });\r\n  }\r\n\r\n  private get isHidden() {\r\n    return !this.shouldRenderFacet;\r\n  }\r\n\r\n  private get shouldRenderFacet() {\r\n    return this.shouldRenderInput || this.shouldRenderValues;\r\n  }\r\n\r\n  private get hasValues() {\r\n    if (this.state.values.length) {\r\n      return true;\r\n    }\r\n\r\n    return !!this.valuesToRender.length;\r\n  }\r\n}\r\n"],"mappings":"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"}