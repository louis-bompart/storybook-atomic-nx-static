{"file":"result-children-common-0051fdd1.js","mappings":"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","names":["h","ResultsPlaceholder","Button","Host"],"sources":["src/components/common/result-children/result-children-common.tsx"],"sourcesContent":["import {\n  FoldedResult,\n  FoldedResultList,\n  FoldedResultListState,\n} from '@coveo/headless';\nimport {Host, VNode, h} from '@stencil/core';\nimport {ResultsPlaceholder} from '../atomic-result-placeholder/placeholders';\nimport {Button} from '../button';\nimport {AnyBindings} from '../interface/bindings';\nimport {DisplayConfig} from '../item-list/item-decorators';\nimport {ItemDisplayImageSize} from '../layout/display-options';\n\ninterface ResultChildrenProps {\n  getHost: () => HTMLElement;\n  getBindings: () => AnyBindings;\n  getFoldedResultListState: () => FoldedResultListState;\n  getResult: () => FoldedResult;\n  getShowInitialChildren: () => boolean;\n  getFoldedResultList: () => FoldedResultList;\n  getInitialChildren: () => FoldedResult[];\n  getInheritTemplates: () => boolean;\n  getResultTemplateRegistered: () => boolean;\n  getTemplateHasError: () => boolean;\n  getNoResultText: () => string;\n  getDisplayConfig: () => DisplayConfig;\n  getImageSize: () => ItemDisplayImageSize | undefined;\n  renderChild: (child: FoldedResult, isLast: boolean) => VNode;\n  setInitialChildren: (initialChildren: FoldedResult[]) => void;\n  toggleShowInitialChildren: () => void;\n}\n\nexport class ResultChildrenCommon {\n  constructor(private props: ResultChildrenProps) {}\n\n  private get foldedResult(): FoldedResult {\n    return this.collection || this.props.getResult();\n  }\n\n  private get numberOfChildren() {\n    return this.foldedResult.children.length;\n  }\n\n  private get hasChildren() {\n    return !!this.numberOfChildren;\n  }\n\n  private get collection() {\n    return this.props.getFoldedResultListState().results.find((r) => {\n      return r.result.uniqueId === this.props.getResult().result.uniqueId;\n    });\n  }\n\n  private renderPlaceholder() {\n    return (\n      <ResultsPlaceholder\n        numberOfPlaceholders={this.numberOfChildren || 2}\n        density={this.props.getDisplayConfig().density}\n        display={'list'}\n        imageSize={\n          this.props.getImageSize() || this.props.getDisplayConfig().imageSize\n        }\n      />\n    );\n  }\n\n  private renderNoResult() {\n    return (\n      <p part=\"no-result-root\" class=\"no-result-root my-3\">\n        {this.props.getBindings().i18n.t(this.props.getNoResultText())}\n      </p>\n    );\n  }\n\n  private renderCollapseButton() {\n    const collection = this.collection!;\n    if (!!collection.children.length && !collection.moreResultsAvailable) {\n      return (\n        <Button\n          part=\"show-hide-button\"\n          class=\"show-hide-button\"\n          style=\"text-primary\"\n          onClick={() => {\n            if (this.props.getShowInitialChildren()) {\n              this.props\n                .getFoldedResultList()\n                .logShowMoreFoldedResults(this.foldedResult.result);\n            } else {\n              this.props.getFoldedResultList().logShowLessFoldedResults();\n            }\n            this.props.toggleShowInitialChildren();\n          }}\n        >\n          {this.props\n            .getBindings()\n            .i18n.t(\n              this.props.getShowInitialChildren()\n                ? 'load-all-results'\n                : 'collapse-results'\n            )}\n        </Button>\n      );\n    }\n    return;\n  }\n\n  private renderChildrenWrapper(content: VNode | VNode[]) {\n    return (\n      <div part=\"children-root\">\n        {this.hasChildren && <slot name=\"before-children\"></slot>}\n        {content}\n        {this.hasChildren && <slot name=\"after-children\"></slot>}\n      </div>\n    );\n  }\n\n  private renderChildren(children: FoldedResult[]): VNode | VNode[] {\n    return this.renderChildrenWrapper(\n      children.map((child, i) =>\n        this.props.renderChild(child, i === children.length - 1)\n      )\n    );\n  }\n\n  private renderCollection() {\n    const collection = this.collection!;\n\n    if (collection.isLoadingMoreResults) {\n      return this.renderChildrenWrapper(this.renderPlaceholder());\n    }\n\n    if (!collection.moreResultsAvailable && !this.hasChildren) {\n      return this.props.getNoResultText()?.trim().length\n        ? this.renderNoResult()\n        : null;\n    }\n\n    if (!this.hasChildren) {\n      return;\n    }\n\n    const childrenToRender = this.props.getShowInitialChildren()\n      ? this.props.getInitialChildren()\n      : collection.children;\n\n    return (\n      <Host>\n        {this.renderCollapseButton()}\n        {this.renderChildren(childrenToRender)}\n      </Host>\n    );\n  }\n\n  private renderFoldedResult() {\n    if (!this.hasChildren) {\n      return;\n    }\n\n    return this.renderChildren(this.foldedResult.children);\n  }\n\n  public componentWillRender() {\n    const collection = this.collection;\n    if (this.props.getInitialChildren() || !collection) {\n      return;\n    }\n\n    this.props.setInitialChildren(collection.children);\n  }\n\n  public render() {\n    if (\n      !this.props.getInheritTemplates() &&\n      !this.props.getResultTemplateRegistered()\n    ) {\n      return;\n    }\n\n    if (!this.props.getInheritTemplates() && this.props.getTemplateHasError()) {\n      return <slot></slot>;\n    }\n\n    return this.collection\n      ? this.renderCollection()\n      : this.renderFoldedResult();\n  }\n}\n"],"version":3}