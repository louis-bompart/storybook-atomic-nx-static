{"version":3,"names":["atomicSmartSnippetCollapseWrapperCss","AtomicSmartSnippetCollapseWrapperStyle0","AtomicSmartSnippetCollapseWrapper","this","isExpanded","showButton","shouldRenderButton","maximumHeight","validateProps","collapsedHeight","Error","initialize","componentDidRender","fullHeight","undefined","initializeFullHeight","host","getBoundingClientRect","height","style","setProperty","renderButton","h","onClick","class","part","bindings","i18n","t","icon","ArrowDown","render","Host","key","__decorate","InitializeBindings"],"sources":["src/components/common/smart-snippets/atomic-smart-snippet-collapse-wrapper/atomic-smart-snippet-collapse-wrapper.pcss?tag=atomic-smart-snippet-collapse-wrapper&encapsulation=shadow","src/components/common/smart-snippets/atomic-smart-snippet-collapse-wrapper/atomic-smart-snippet-collapse-wrapper.tsx"],"sourcesContent":["@import '../../../../global/global.pcss';\n@import '../../../../global/mixins.pcss';\n\n/**\n * @prop --atomic-smart-snippet-gradient-start: At which height to start fading out a truncated answer.\n */\n:host {\n  &::part(smart-snippet-collapse-wrapper) {\n    @mixin set-font-size var(--atomic-text-lg);\n\n    height: auto;\n    max-height: var(--collapsed-size);\n\n    --gradient-start: var(\n      --atomic-smart-snippet-gradient-start,\n      calc(max(var(--collapsed-size) - (var(--line-height) * 1.5), var(--collapsed-size) * 0.5))\n    );\n    color: var(--atomic-on-background);\n    mask-image: linear-gradient(black, black var(--gradient-start), transparent 100%);\n\n    transition: max-height 2s cubic-bezier(0, 1, 0.16, 1) -1.82s;\n  }\n\n  button atomic-icon {\n    @apply relative top-0.5;\n  }\n}\n\n:host(.expanded) {\n  &::part(smart-snippet-collapse-wrapper) {\n    height: auto;\n    max-height: 9999999px;\n    transition: max-height 2s cubic-bezier(1, 0, 1, 0) 0s;\n    mask-image: none;\n  }\n\n  button atomic-icon {\n    @apply -scale-y-100 top-0;\n  }\n}\n","import {Component, h, Element, State, Prop, Host} from '@stencil/core';\nimport ArrowDown from '../../../../images/arrow-down.svg';\nimport {InitializeBindings} from '../../../../utils/initialization-utils';\nimport {AnyBindings} from '../../interface/bindings';\n\n/**\n * @internal\n */\n@Component({\n  tag: 'atomic-smart-snippet-collapse-wrapper',\n  styleUrl: 'atomic-smart-snippet-collapse-wrapper.pcss',\n  shadow: true,\n})\nexport class AtomicSmartSnippetCollapseWrapper {\n  @InitializeBindings() public bindings!: AnyBindings;\n  public error!: Error;\n  @Element() public host!: HTMLElement;\n\n  @Prop({reflect: true}) public maximumHeight?: number;\n\n  @Prop({reflect: true}) public collapsedHeight?: number;\n\n  @State() public isExpanded = true;\n\n  @State() public showButton = true;\n\n  @State() private fullHeight?: number;\n\n  private shouldRenderButton = !!this.maximumHeight;\n\n  private validateProps() {\n    if (\n      this.maximumHeight &&\n      (!this.collapsedHeight || this.maximumHeight < this.collapsedHeight)\n    ) {\n      throw new Error(\n        'snippetMaximumHeight must be equal or greater than snippetCollapsedHeight'\n      );\n    }\n  }\n\n  public initialize() {\n    this.validateProps();\n  }\n\n  public componentDidRender() {\n    if (this.fullHeight === undefined && this.shouldRenderButton) {\n      this.initializeFullHeight();\n    }\n  }\n\n  private initializeFullHeight() {\n    this.fullHeight = this.host.getBoundingClientRect().height;\n    this.showButton = this.fullHeight! > this.maximumHeight!;\n    this.isExpanded = !this.showButton;\n    this.host.style.setProperty(\n      '--collapsed-size',\n      this.collapsedHeight + 'px'\n    );\n  }\n\n  private renderButton() {\n    if (!this.showButton) {\n      return;\n    }\n    return (\n      <button\n        onClick={() => (this.isExpanded = !this.isExpanded)}\n        class=\"text-primary hover:underline mb-4\"\n        part={this.isExpanded ? 'show-less-button' : 'show-more-button'}\n      >\n        {this.bindings.i18n.t(this.isExpanded ? 'show-less' : 'show-more')}\n        <atomic-icon\n          icon={ArrowDown}\n          class=\"w-3 ml-2 align-baseline\"\n        ></atomic-icon>\n      </button>\n    );\n  }\n\n  render() {\n    return (\n      <Host\n        class={\n          this.fullHeight || !this.shouldRenderButton\n            ? this.isExpanded\n              ? 'expanded'\n              : ''\n            : 'invisible'\n        }\n      >\n        <div\n          part=\"smart-snippet-collapse-wrapper\"\n          class=\"block overflow-hidden\"\n        >\n          <slot></slot>\n        </div>\n        {this.shouldRenderButton && this.renderButton()}\n      </Host>\n    );\n  }\n}\n"],"mappings":"oMAAA,MAAMA,EAAuC,iowCAC7C,MAAAC,EAAeD,E,iXCYFE,EAAiC,M,yBAS5BC,KAAAC,WAAa,KAEbD,KAAAE,WAAa,KAIrBF,KAAAG,qBAAuBH,KAAKI,c,4EANP,K,gBAEA,K,0BAMrB,aAAAC,GACN,GACEL,KAAKI,iBACHJ,KAAKM,iBAAmBN,KAAKI,cAAgBJ,KAAKM,iBACpD,CACA,MAAM,IAAIC,MACR,4E,EAKC,UAAAC,GACLR,KAAKK,e,CAGA,kBAAAI,GACL,GAAIT,KAAKU,aAAeC,WAAaX,KAAKG,mBAAoB,CAC5DH,KAAKY,sB,EAID,oBAAAA,GACNZ,KAAKU,WAAaV,KAAKa,KAAKC,wBAAwBC,OACpDf,KAAKE,WAAaF,KAAKU,WAAcV,KAAKI,cAC1CJ,KAAKC,YAAcD,KAAKE,WACxBF,KAAKa,KAAKG,MAAMC,YACd,mBACAjB,KAAKM,gBAAkB,K,CAInB,YAAAY,GACN,IAAKlB,KAAKE,WAAY,CACpB,M,CAEF,OACEiB,EAAA,UACEC,QAAS,IAAOpB,KAAKC,YAAcD,KAAKC,WACxCoB,MAAM,oCACNC,KAAMtB,KAAKC,WAAa,mBAAqB,oBAE5CD,KAAKuB,SAASC,KAAKC,EAAEzB,KAAKC,WAAa,YAAc,aACtDkB,EAAA,eACEO,KAAMC,EACNN,MAAM,4B,CAMd,MAAAO,GACE,OACET,EAACU,EAAI,CAAAC,IAAA,2CACHT,MACErB,KAAKU,aAAeV,KAAKG,mBACrBH,KAAKC,WACH,WACA,GACF,aAGNkB,EAAA,OAAAW,IAAA,2CACER,KAAK,iCACLD,MAAM,yBAENF,EAAA,QAAAW,IAAA,8CAED9B,KAAKG,oBAAsBH,KAAKkB,e,6BAnFVa,EAAA,CAA5BC,K"}