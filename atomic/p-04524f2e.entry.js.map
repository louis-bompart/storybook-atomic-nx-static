{"version":3,"names":["CarouselIndicator","numberOfImages","currentImage","navigateToImage","maxImagesBeforeAndAfter","h","part","class","Array","from","length","_","index","isActive","shouldDisplay","Math","max","min","isLastDisplayed","isFirstDisplayed","onClick","ImageCarousel","props","children","commonPaginationClasses","commonArrowClasses","renderPreviousButton","Button","style","ariaLabel","bindings","i18n","t","previousImage","icon","ArrowRight","renderNextButton","nextImage","renderIndicators","Fragment","atomicProductImageCss","AtomicProductImageStyle0","AtomicProductImage","this","useFallback","images","field","fallback","logWarning","message","engine","logger","warn","host","handleImageError","event","image","target","src","handleMissingFallback","remove","validateUrl","url","product","ec_name","componentWillLoad","validImages","imageUrls","filter","map","finalUrl","filterProtocol","alt","value","ProductTemplatesHelpers","getProductProperty","isArray","_b","_a","renderCurrentImage","onError","loading","render","imagesToRender","__decorate","InitializeBindings","ProductContext"],"sources":["src/components/common/image-carousel/image-carousel-indicators.tsx","src/components/common/image-carousel/image-carousel.tsx","src/components/commerce/product-template-components/atomic-product-image/atomic-product-image.pcss?tag=atomic-product-image&encapsulation=shadow","src/components/commerce/product-template-components/atomic-product-image/atomic-product-image.tsx"],"sourcesContent":["/* eslint-disable @cspell/spellchecker */\nimport {FunctionalComponent, h} from '@stencil/core';\n\ninterface CarouselIndicatorProps {\n  numberOfImages: number;\n  currentImage: number;\n  navigateToImage: (index: number) => void;\n  maxImagesBeforeAndAfter?: number;\n}\n\nconst CarouselIndicator: FunctionalComponent<CarouselIndicatorProps> = ({\n  numberOfImages,\n  currentImage: currentImage,\n  navigateToImage: navigateToImage,\n  maxImagesBeforeAndAfter = 2,\n}) => {\n  return (\n    <ul\n      part=\"indicators\"\n      class=\"mb-1 absolute flex items-center justify-center gap-2 mt-6 bottom-2 max-w-[80%]\"\n    >\n      {Array.from({length: numberOfImages}, (_, index) => {\n        const isActive = index === currentImage % numberOfImages;\n\n        const shouldDisplay =\n          index >= Math.max(0, currentImage - maxImagesBeforeAndAfter) &&\n          index <=\n            Math.min(\n              currentImage + maxImagesBeforeAndAfter,\n              numberOfImages - 1\n            );\n\n        const isLastDisplayed =\n          index ===\n            Math.min(\n              currentImage + maxImagesBeforeAndAfter,\n              numberOfImages - 1\n            ) && index < numberOfImages - 1;\n\n        const isFirstDisplayed =\n          index === Math.max(0, currentImage - maxImagesBeforeAndAfter) &&\n          index > 0;\n\n        return (\n          <li\n            part={`indicator ${isActive ? 'active-indicator' : ''}`}\n            class={`rounded-md shadow cursor-pointer hover:bg-primary-light transition-all duration-200 ease-in-out ${\n              isActive ? 'bg-primary' : 'bg-neutral'\n            } ${isLastDisplayed || isFirstDisplayed ? 'w-1 h-1 mobile-only:w-2 mobile-only:h-2 transform scale-75' : 'h-2 w-2 mobile-only:w-3 mobile-only:h-3 transform scale-100'} ${\n              shouldDisplay\n                ? 'opacity-80 pointer-events-auto'\n                : 'opacity-0 pointer-events-none hidden'\n            }`}\n            onClick={() => navigateToImage(index)}\n          ></li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default CarouselIndicator;\n","import {h, FunctionalComponent, Fragment} from '@stencil/core';\nimport {JSXBase} from '@stencil/core/internal';\nimport ArrowRight from '../../../images/arrow-right.svg';\nimport {Button} from '../button';\nimport {AnyBindings} from '../interface/bindings';\nimport CarouselIndicator from './image-carousel-indicators';\n\nexport interface CarouselProps {\n  bindings: AnyBindings;\n  previousImage(): void;\n  nextImage(): void;\n  navigateToImage(index: number): void;\n  numberOfImages: number;\n  currentImage: number;\n}\n\nexport const ImageCarousel: FunctionalComponent<\n  CarouselProps & JSXBase.HTMLAttributes<HTMLHeadingElement>\n> = (props, children) => {\n  const commonPaginationClasses =\n    'w-6 h-6 grid mobile-only:w-10 mobile-only:h-10 justify-center items-center z-1 group rounded-full duration-200 opacity-50 hover:opacity-100 focus:opacity-100 transition-opacity hover:shadow bottom-0 mb-1 absolute';\n  const commonArrowClasses =\n    'w-4 align-middle text-on-background group-hover:text-primary';\n\n  function renderPreviousButton() {\n    return (\n      <Button\n        style=\"text-primary\"\n        ariaLabel={props.bindings.i18n.t('previous')}\n        onClick={() => props.previousImage()}\n        part=\"previous-button\"\n        class={`${commonPaginationClasses} left-0 ml-1`}\n      >\n        <atomic-icon\n          icon={ArrowRight}\n          class={`${commonArrowClasses} rotate-180`}\n        ></atomic-icon>\n      </Button>\n    );\n  }\n\n  function renderNextButton() {\n    return (\n      <Button\n        style=\"text-primary\"\n        ariaLabel={props.bindings.i18n.t('next')}\n        onClick={() => props.nextImage()}\n        part=\"next-button\"\n        class={`${commonPaginationClasses} right-0 mr-1`}\n      >\n        <atomic-icon icon={ArrowRight} class={commonArrowClasses}></atomic-icon>\n      </Button>\n    );\n  }\n  function renderIndicators() {\n    return (\n      <CarouselIndicator\n        numberOfImages={props.numberOfImages}\n        currentImage={props.currentImage}\n        navigateToImage={props.navigateToImage}\n      />\n    );\n  }\n  return (\n    <Fragment>\n      <div class=\"relative flex items-center justify-center w-full min-w-full\">\n        {renderPreviousButton()}\n        {children}\n        {renderNextButton()}\n        {renderIndicators()}\n      </div>\n    </Fragment>\n  );\n};\n","@import '../../../../global/global.pcss';\n@import '../../../common/item-list/styles/mixins.pcss';\n@import '../../../common/item-list/styles/placeholders.pcss';\n\n@mixin atomic-grid-clickable-elements;\n@mixin atomic-grid-display-common;\n\n:host {\n  display: grid;\n  place-items: center;\n  grid-template-rows: 100%;\n  width: 100%;\n  height: 100%;\n\n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: contain;\n  }\n}\n","import {Product, ProductTemplatesHelpers} from '@coveo/headless/commerce';\nimport {Component, h, Prop, Element, State, Method} from '@stencil/core';\nimport {Bindings} from '../../../../components';\nimport {\n  InitializeBindings,\n  InitializableComponent,\n} from '../../../../utils/initialization-utils';\nimport {filterProtocol} from '../../../../utils/xss-utils';\nimport {ImageCarousel} from '../../../common/image-carousel/image-carousel';\nimport {ProductContext} from '../product-template-decorators';\n\ntype Image = {\n  src: string;\n  alt: string;\n};\n\n/**\n * The `atomic-product-image` component renders an image from a product field.\n * @internal\n */\n@Component({\n  tag: 'atomic-product-image',\n  styleUrl: 'atomic-product-image.pcss',\n  shadow: true,\n})\nexport class AtomicProductImage implements InitializableComponent {\n  @InitializeBindings() public bindings!: Bindings;\n  @ProductContext() private product!: Product;\n  @Element() private host!: HTMLElement;\n  @State() private useFallback = false;\n  @State() private currentImage = 0;\n  @State() private images: Image[] = [];\n\n  public error!: Error;\n\n  /**\n   * The product field which the component should use. This will look for the field in the product object first, then in the product.additionalFields object.\n   */\n  @Prop({reflect: true}) field: string = 'ec_thumbnails';\n\n  /**\n   * An fallback image URL that will be used in case the specified image is not available or an error is encountered.\n   */\n  @Prop({reflect: true}) fallback: string =\n    // eslint-disable-next-line @cspell/spellchecker\n    'data:image/svg+xml,%3Csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"50\" height=\"50\" viewBox=\"0 0 50 50\"%3E%3Crect width=\"50\" height=\"50\" fill=\"none\" stroke=\"none\"%3E%3C/rect%3E%3C/svg%3E';\n\n  /**\n   * Moves to the previous image, when the carousel is activated.\n   */\n  @Method() public async previousImage() {\n    this.currentImage =\n      this.currentImage - 1 < 0\n        ? this.numberOfImages - 1\n        : this.currentImage - 1;\n  }\n\n  /**\n   * Moves to the next image, when the carousel is activated.\n   */\n  @Method() public async nextImage() {\n    this.currentImage = (this.currentImage + 1) % this.numberOfImages;\n  }\n\n  /**\n   * Navigates to the specified image index.\n   *\n   * @param index - The index of the image to navigate to.\n   */\n  @Method() public async navigateToImage(index: number) {\n    this.currentImage = index;\n  }\n\n  private logWarning(message: string) {\n    this.bindings.engine.logger.warn(message, this.host);\n  }\n\n  private handleImageError(event: Event) {\n    const image = event.target as HTMLImageElement;\n    const message = `The image url \"${image.src}\" is not valid or could not be loaded. You might want to add a \"fallback\" property.`;\n    if (this.fallback && image.src !== this.fallback) {\n      this.useFallback = true;\n      image.src = this.fallback;\n    } else if (image.src === this.fallback) {\n      this.logWarning('The fallback image failed to load.');\n    } else {\n      this.logWarning(message);\n    }\n  }\n\n  private handleMissingFallback(message: string) {\n    if (!this.fallback) {\n      this.logWarning(message);\n      this.host.remove();\n      return null;\n    }\n    return this.fallback;\n  }\n\n  private validateUrl(url: string | undefined) {\n    if (!url) {\n      const message = `Image for ${this.product.ec_name} is missing. Please review your indexation. You might want to add a \"fallback\" property.`;\n      return this.handleMissingFallback(message);\n    }\n\n    if (typeof url !== 'string') {\n      const message = `Expected \"${this.field}\" to be a text field. Please review your indexation. You might want to add a \"fallback\" property.`;\n      return this.handleMissingFallback(message);\n    }\n\n    return url;\n  }\n\n  componentWillLoad(): void {\n    const validImages = this.imageUrls.filter(\n      (image) => typeof image === 'string'\n    );\n\n    this.images = validImages.map((url, index) => {\n      const finalUrl = this.useFallback ? this.fallback : url;\n\n      this.validateUrl(finalUrl);\n\n      return {\n        src: filterProtocol(finalUrl),\n        alt: `Image ${index + 1} out of ${validImages?.length} for ${this.product.ec_name}`,\n      };\n    }) as Image[];\n  }\n\n  private get imageUrls() {\n    const value = ProductTemplatesHelpers.getProductProperty(\n      this.product,\n      this.field\n    );\n\n    return Array.isArray(value) ? value : [value];\n  }\n\n  private get numberOfImages() {\n    return this.images?.length ?? 0;\n  }\n\n  private renderCurrentImage(image: Image | null) {\n    if (image === null) {\n      return;\n    }\n\n    return (\n      <img\n        class=\"aspect-square\"\n        alt={image.alt}\n        src={image.src}\n        onError={(image) => this.handleImageError(image)}\n        loading=\"lazy\"\n      />\n    );\n  }\n\n  public render() {\n    const imagesToRender = this.images.map((image: Image, index: number) => {\n      return {\n        src: image.src,\n        alt: `Image ${index} out of ${this.images?.length} for ${this.product.ec_name}`,\n      };\n    });\n    if (this.images.length === 0) {\n      this.validateUrl(this.fallback);\n      return (\n        <img alt={'No image available'} src={this.fallback} loading=\"eager\" />\n      );\n    }\n    if (this.images.length === 1) {\n      return this.renderCurrentImage(imagesToRender[this.currentImage]);\n    }\n\n    return (\n      // TODO: handle small/icon image sizes better on mobile\n      <ImageCarousel\n        bindings={this.bindings}\n        currentImage={this.currentImage}\n        navigateToImage={(index) => this.navigateToImage(index)}\n        nextImage={() => this.nextImage()}\n        previousImage={() => this.previousImage()}\n        numberOfImages={this.numberOfImages}\n      >\n        {this.renderCurrentImage(this.images[this.currentImage])}\n      </ImageCarousel>\n    );\n  }\n}\n"],"mappings":"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"}