{"file":"query-suggestions.js","mappings":";;;MAUa,oCAAoC,GAAG,CAClD,UAAsB,EACtB,IAAU;IAEV,OAAO;QACL,IAAI,EAAE,uBAAuB;QAC7B,GAAG,EAAE,MAAM,qBAAqB,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE;QACvD,KAAK,EAAE,UAAU,CAAC,QAAQ;QAC1B,SAAS,EAAE,IAAI,CAAC,CAAC,CAAC,wBAAwB,EAAE;YAC1C,KAAK,EAAE,UAAU,CAAC,QAAQ;YAC1B,aAAa,EAAE,EAAC,WAAW,EAAE,KAAK,EAAC;SACpC,CAAC;KACH,CAAC;AACJ,EAAE;MAEW,wBAAwB,GAAwB,CAAC,CAAC,EAAE,QAAQ;IACvE,QACE,WAAK,IAAI,EAAC,0BAA0B,EAAC,KAAK,EAAC,mBAAmB,IAC3D,QAAQ,CACL,EACN;AACJ,EAAE;MAOW,mBAAmB,GAE5B,CAAC,EAAC,IAAI,EAAE,aAAa,EAAC;IACxB,IAAI,CAAC,aAAa,EAAE;QAClB,OAAO;KACR;IAED,QACE,mBACE,IAAI,EAAC,uBAAuB,EAC5B,IAAI,EAAE,IAAI,EACV,KAAK,EAAC,uBAAuB,GAChB,EACf;AACJ,EAAE;MAOW,mBAAmB,GAE5B,CAAC,EAAC,UAAU,EAAE,QAAQ,EAAC;IACzB,IAAI,QAAQ,EAAE;QACZ,QACE,YACE,IAAI,EAAC,uBAAuB,EAC5B,KAAK,EAAC,wBAAwB,EAC9B,SAAS,EAAE,UAAU,CAAC,gBAAgB,GAChC,EACR;KACH;IAED,QACE,YAAM,IAAI,EAAC,uBAAuB,EAAC,KAAK,EAAC,wBAAwB,IAC9D,UAAU,CAAC,QAAQ,CACf,EACP;AACJ;;;;","names":[],"sources":["src/components/common/suggestions/query-suggestions.tsx"],"sourcesContent":["import {FunctionalComponent, h} from '@stencil/core';\nimport {i18n} from 'i18next';\nimport {encodeForDomAttribute} from '../../../utils/string-utils';\nimport {SearchBoxSuggestionElement} from './suggestions-common';\n\ninterface Suggestion {\n  highlightedValue: string;\n  rawValue: string;\n}\n\nexport const getPartialSearchBoxSuggestionElement = (\n  suggestion: Suggestion,\n  i18n: i18n\n): Pick<SearchBoxSuggestionElement, 'ariaLabel' | 'key' | 'query' | 'part'> => {\n  return {\n    part: 'query-suggestion-item',\n    key: `qs-${encodeForDomAttribute(suggestion.rawValue)}`,\n    query: suggestion.rawValue,\n    ariaLabel: i18n.t('query-suggestion-label', {\n      query: suggestion.rawValue,\n      interpolation: {escapeValue: false},\n    }),\n  };\n};\n\nexport const QuerySuggestionContainer: FunctionalComponent = (_, children) => {\n  return (\n    <div part=\"query-suggestion-content\" class=\"flex items-center\">\n      {children}\n    </div>\n  );\n};\n\ninterface QuerySuggestionIconProps {\n  icon: string;\n  hasSuggestion: boolean;\n}\n\nexport const QuerySuggestionIcon: FunctionalComponent<\n  QuerySuggestionIconProps\n> = ({icon, hasSuggestion}) => {\n  if (!hasSuggestion) {\n    return;\n  }\n\n  return (\n    <atomic-icon\n      part=\"query-suggestion-icon\"\n      icon={icon}\n      class=\"w-4 h-4 mr-2 shrink-0\"\n    ></atomic-icon>\n  );\n};\n\ninterface QuerySuggestionTextProps {\n  suggestion: Suggestion;\n  hasQuery: boolean;\n}\n\nexport const QuerySuggestionText: FunctionalComponent<\n  QuerySuggestionTextProps\n> = ({suggestion, hasQuery}) => {\n  if (hasQuery) {\n    return (\n      <span\n        part=\"query-suggestion-text\"\n        class=\"break-all line-clamp-2\"\n        innerHTML={suggestion.highlightedValue}\n      ></span>\n    );\n  }\n\n  return (\n    <span part=\"query-suggestion-text\" class=\"break-all line-clamp-2\">\n      {suggestion.rawValue}\n    </span>\n  );\n};\n"],"version":3}