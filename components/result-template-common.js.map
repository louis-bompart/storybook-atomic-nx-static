{"file":"result-template-common.js","mappings":"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","names":["ResultTemplatesHelpers"],"sources":["src/components/common/result-templates/result-template-common.tsx"],"sourcesContent":["import {\n  ResultTemplate,\n  ResultTemplateCondition,\n  ResultTemplatesHelpers,\n} from '@coveo/headless';\nimport {h} from '@stencil/core';\nimport {aggregate, isElementNode, isVisualNode} from '../../../utils/utils';\nimport {tableElementTagName} from '../../search/atomic-table-result/table-element-utils';\nimport {isResultSectionNode} from '../layout/sections';\n\nexport type TemplateContent = DocumentFragment;\n\ninterface ResultTemplateCommonProps {\n  allowEmpty?: boolean;\n  host: HTMLDivElement;\n  validParents: string[];\n  setError: (error: Error) => void;\n}\n\ntype TemplateNodeType =\n  | 'section'\n  | 'metadata'\n  | 'table-column-definition'\n  | 'other';\n\nexport function getTemplateNodeType(node: Node): TemplateNodeType {\n  if (isResultSectionNode(node)) {\n    return 'section';\n  }\n  if (!isVisualNode(node)) {\n    return 'metadata';\n  }\n  if (\n    isElementNode(node) &&\n    node.tagName.toLowerCase() === tableElementTagName\n  ) {\n    return 'table-column-definition';\n  }\n  return 'other';\n}\n\nfunction groupNodesByType(nodes: NodeList) {\n  return aggregate(Array.from(nodes), (node) => getTemplateNodeType(node));\n}\n\nexport class ResultTemplateCommon {\n  private host: HTMLDivElement;\n  public matchConditions: ResultTemplateCondition[] = [];\n\n  constructor({\n    host,\n    setError,\n    validParents,\n    allowEmpty = false,\n  }: ResultTemplateCommonProps) {\n    this.host = host;\n    this.validateTemplate(host, setError, validParents, allowEmpty);\n  }\n\n  validateTemplate(\n    host: HTMLDivElement,\n    setError: (error: Error) => void,\n    validParents: string[],\n    allowEmpty = true\n  ) {\n    const hasValidParent = validParents\n      .map((p) => p.toUpperCase())\n      .includes(host.parentElement?.nodeName || '');\n    const tagName = host.nodeName.toLowerCase();\n\n    if (!hasValidParent) {\n      setError(\n        new Error(\n          `The \"${tagName}\" component has to be the child of one of the following: ${validParents\n            .map((p) => `\"${p.toLowerCase()}\"`)\n            .join(', ')}.`\n        )\n      );\n      return;\n    }\n\n    const template = host.querySelector('template');\n    if (!template) {\n      setError(\n        new Error(\n          `The \"${tagName}\" component has to contain a \"template\" element as a child.`\n        )\n      );\n      return;\n    }\n\n    if (!allowEmpty && !template.innerHTML.trim()) {\n      setError(\n        new Error(`The \"template\" tag inside \"${tagName}\" cannot be empty.`)\n      );\n      return;\n    }\n\n    if (template.content.querySelector('script')) {\n      console.warn(\n        'Any \"script\" tags defined inside of \"template\" elements are not supported and will not be executed when the results are rendered.',\n        host\n      );\n    }\n\n    const {section: sectionNodes, other: otherNodes} = groupNodesByType(\n      template.content.childNodes\n    );\n    if (sectionNodes?.length && otherNodes?.length) {\n      console.warn(\n        'Result templates should only contain section elements or non-section elements. Future updates could unpredictably affect this result template.',\n        host,\n        {sectionNodes, otherNodes}\n      );\n    }\n  }\n\n  getTemplate(\n    conditions: ResultTemplateCondition[],\n    error: Error\n  ): ResultTemplate<TemplateContent> | null {\n    if (error) {\n      return null;\n    }\n\n    return {\n      conditions: conditions.concat(this.matchConditions),\n      content: getTemplateElement(this.host).content!,\n      priority: 1,\n    };\n  }\n\n  renderIfError(error: Error) {\n    if (error) {\n      return (\n        <atomic-component-error\n          element={this.host}\n          error={error}\n        ></atomic-component-error>\n      );\n    }\n  }\n}\n\nfunction getTemplateElement(host: HTMLElement) {\n  return host.querySelector('template')!;\n}\n\nexport function makeMatchConditions(\n  mustMatch: Record<string, string[]>,\n  mustNotMatch: Record<string, string[]>\n): ResultTemplateCondition[] {\n  const conditions: ResultTemplateCondition[] = [];\n  for (const field in mustMatch) {\n    conditions.push(\n      ResultTemplatesHelpers.fieldMustMatch(field, mustMatch[field])\n    );\n  }\n\n  for (const field in mustNotMatch) {\n    conditions.push(\n      ResultTemplatesHelpers.fieldMustNotMatch(field, mustNotMatch[field])\n    );\n  }\n  return conditions;\n}\n\nexport function makeDefinedConditions(\n  ifDefined?: string,\n  ifNotDefined?: string\n): ResultTemplateCondition[] {\n  const conditions: ResultTemplateCondition[] = [];\n  if (ifDefined) {\n    const fieldNames = ifDefined.split(',');\n    conditions.push(ResultTemplatesHelpers.fieldsMustBeDefined(fieldNames));\n  }\n\n  if (ifNotDefined) {\n    const fieldNames = ifNotDefined.split(',');\n    conditions.push(ResultTemplatesHelpers.fieldsMustNotBeDefined(fieldNames));\n  }\n  return conditions;\n}\n"],"version":3}