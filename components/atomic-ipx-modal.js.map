{"file":"atomic-ipx-modal.js","mappings":";;;;;;;AAAA,MAAM,iBAAiB,GAAG,83uCAA83uC,CAAC;AACz5uC,6BAAe,iBAAiB;;;;;;;;;;;;MC2BnB,cAAc;;;;;;QAYa,WAAM,GAAG,KAAK,CAAC;QAIpC,0BAAqB,GAAG,IAAI,CAAC;QA2CtC,sBAAiB,GAAG,IAAI,CAAC,MAAM,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;;;;sBA/CtB,KAAK;qCAIX,IAAI;;IAG7C,MAAM,eAAe,CAAC,MAAe;QACnC,MAAM,gBAAgB,GAAG,yBAAyB,CAAC;QAEnD,IAAI,MAAM,EAAE;;YAEV,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;YAC9C,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,SAAS,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;YAC/D,OAAO;SACR;;QAED,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;QACjD,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,SAAS,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;KACnE;IAEO,UAAU;QAChB,MAAM,OAAO,GAAa,EAAE,CAAC;QAC7B,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACtB;QAED,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAEvB,OAAO,OAAO,CAAC;KAChB;IAGD,iBAAiB,CAAC,CAAQ;QACxB,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC,cAAc,EAAE,CAAC;KACnC;IAEM,iBAAiB;QACtB,IAAI,CAAC,qBAAqB,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,CAAC;KAC3E;IAEM,gBAAgB;QACrB,MAAM,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,QAAQ,CAAC,mBAAmB,CAAC,CAAC;QACzD,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KACnC;IAIM,MAAM;QACX,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAEzB,MAAM,IAAI,GAAG,OACX,wEACE,MAAM,EAAE,IAAI,CAAC,MAAM,EACnB,iBAAiB,EAAE,IAAI,CAAC,qBAAqB,IAE7C,6DAAM,IAAI,EAAC,QAAQ,EAAC,IAAI,EAAC,QAAQ,GAAG,EACpC,6DAAM,IAAI,EAAC,MAAM,EAAC,IAAI,EAAC,MAAM,GAAG,EAChC,6DAAM,IAAI,EAAC,QAAQ,EAAC,IAAI,EAAC,QAAQ,GAAG,CACpB,CACnB,CAAC;QAEF,QACE,EAAC,IAAI,qDAAC,KAAK,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,EAAC,kBAAkB,IAC/D,4DAAK,IAAI,EAAC,UAAU,IAClB,EAAC,IAAI,sDAAG,CACJ,CACD,EACP;KACH;;;;;;;;;;;;;;;AAjF4B;IAA5B,kBAAkB,EAAE;gDAA+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["src/components/ipx/atomic-ipx-modal/atomic-ipx-modal.pcss?tag=atomic-ipx-modal&encapsulation=shadow","src/components/ipx/atomic-ipx-modal/atomic-ipx-modal.tsx"],"sourcesContent":["@import '../../../global/global.pcss';\n\natomic-focus-trap {\n  @apply contents;\n  height: inherit;\n}\n\n:host {\n  width: var(--atomic-ipx-width, 31.25rem);\n  height: var(--atomic-ipx-height, 43.75rem);\n  box-shadow: rgb(0 0 0 / 50%) 0 0 0.5rem;\n  inset: auto 3rem 4.25rem auto;\n  position: fixed;\n  z-index: 2147483647;\n}\n\n:host(.open) {\n  display: block;\n\n  &::part(backdrop) {\n    @apply pointer-events-auto;\n    height: inherit;\n  }\n}\n\n:host {\n  display: none;\n\n  &::part(backdrop) {\n    @apply pointer-events-none;\n    height: inherit;\n  }\n}\n","import {\n  Component,\n  h,\n  State,\n  Prop,\n  Element,\n  Watch,\n  Event,\n  EventEmitter,\n  Host,\n  Listen,\n} from '@stencil/core';\nimport {\n  InitializableComponent,\n  InitializeBindings,\n} from '../../../utils/initialization-utils';\nimport {updateBreakpoints} from '../../../utils/replace-breakpoint';\nimport {once, randomID} from '../../../utils/utils';\nimport {AnyBindings} from '../../common/interface/bindings';\n\n/**\n * @internal\n */\n@Component({\n  tag: 'atomic-ipx-modal',\n  styleUrl: 'atomic-ipx-modal.pcss',\n  shadow: true,\n})\nexport class AtomicIPXModal implements InitializableComponent<AnyBindings> {\n  @InitializeBindings() public bindings!: AnyBindings;\n  @Element() public host!: HTMLElement;\n\n  @State() public error!: Error;\n\n  @Prop({mutable: true}) source?: HTMLElement;\n\n  /**\n   * The container to hide from the tabindex and accessibility DOM when the modal is closed.\n   */\n  @Prop({mutable: true}) container?: HTMLElement;\n  @Prop({reflect: true, mutable: true}) isOpen = false;\n\n  @Event() animationEnded!: EventEmitter<never>;\n\n  @State() private hasFooterSlotElements = true;\n\n  @Watch('isOpen')\n  async watchToggleOpen(isOpen: boolean) {\n    const modalOpenedClass = 'atomic-ipx-modal-opened';\n\n    if (isOpen) {\n      //TODO: remove the addition of a class to the body in atomicV3\n      document.body.classList.add(modalOpenedClass);\n      this.bindings.interfaceElement.classList.add(modalOpenedClass);\n      return;\n    }\n    //TODO: remove the removal of a class to the body in atomicV3\n    document.body.classList.remove(modalOpenedClass);\n    this.bindings.interfaceElement.classList.remove(modalOpenedClass);\n  }\n\n  private getClasses() {\n    const classes: string[] = [];\n    if (this.isOpen) {\n      classes.push('open');\n    }\n\n    classes.push('dialog');\n\n    return classes;\n  }\n\n  @Listen('touchmove', {passive: false})\n  onWindowTouchMove(e: Event) {\n    this.isOpen && e.preventDefault();\n  }\n\n  public componentWillLoad(): void | Promise<void> {\n    this.hasFooterSlotElements = !!this.host.querySelector('[slot=\"footer\"]');\n  }\n\n  public componentDidLoad() {\n    const id = this.host.id || randomID('atomic-ipx-modal-');\n    this.host.id = id;\n    this.watchToggleOpen(this.isOpen);\n  }\n\n  private updateBreakpoints = once(() => updateBreakpoints(this.host));\n\n  public render() {\n    this.updateBreakpoints();\n\n    const Body = () => (\n      <atomic-ipx-body\n        isOpen={this.isOpen}\n        displayFooterSlot={this.hasFooterSlotElements}\n      >\n        <slot name=\"header\" slot=\"header\" />\n        <slot name=\"body\" slot=\"body\" />\n        <slot name=\"footer\" slot=\"footer\" />\n      </atomic-ipx-body>\n    );\n\n    return (\n      <Host class={this.getClasses().join(' ')} part=\"atomic-ipx-modal\">\n        <div part=\"backdrop\">\n          <Body />\n        </div>\n      </Host>\n    );\n  }\n}\n"],"version":3}