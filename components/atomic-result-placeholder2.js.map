{"file":"atomic-result-placeholder2.js","mappings":";;;;;;;;;AAAA,MAAM,0BAA0B,GAAG,2qnHAA2qnH,CAAC;AAC/snH,sCAAe,0BAA0B;;ACOzC,MAAM,kBAAkB,GAAG,wCAAwC,CAAC;MAWvD,uBAAuB;;;;;;;;;IAK1B,iBAAiB,CAAC,KAAa;QACrC,QACE,WACE,KAAK,EAAE;gBACL,MAAM,EAAE,oBAAoB;gBAC5B,KAAK;aACN,IAED,WACE,KAAK,EAAE,kBAAkB,EACzB,KAAK,EAAE,EAAC,MAAM,EAAE,kBAAkB,EAAC,GAC9B,CACH,EACN;KACH;IAEM,MAAM;QACX,QACE,4DACE,KAAK,EAAE,uDAAuD,qBAAqB,CACjF,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,SAAS,CACf;iBACE,IAAI,CAAC,GAAG,CAAC;iBACT,IAAI,EAAE,EAAE,IAEX,uFACE,4DAAK,KAAK,EAAE,kBAAkB,GAAQ,CACT,EAC/B,uFACE,4DAAK,KAAK,EAAE,SAAS,kBAAkB,EAAE,GAAQ,CACpB,EAC/B,wFACE,4DAAK,KAAK,EAAE,UAAU,kBAAkB,EAAE,GAAQ,CACpB,EAChC,sFACE,4DAAK,KAAK,EAAE,SAAS,kBAAkB,EAAE,GAAQ,CACrB,EAC9B,wFACG,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,EAC9B,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,EAC7B,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CACA,EAChC,gGACE,4DAAK,KAAK,EAAC,oBAAoB,IAC5B,KAAK,CAAC,IAAI,CAAC,EAAC,MAAM,EAAE,CAAC,EAAC,EAAE,OACvB,WACE,KAAK,EAAE,2BAA2B,kBAAkB,EAAE,GACjD,CACR,CAAC,CACE,CACgC,CACpC,EACN;KACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["src/components/common/atomic-result-placeholder/atomic-result-placeholder.pcss?tag=atomic-result-placeholder&encapsulation=shadow","src/components/common/atomic-result-placeholder/atomic-result-placeholder.tsx"],"sourcesContent":["@import '../template-system/template-system.pcss';\n\n@mixin atomic-template-system map(post-css-map-for-sections, search);\n\n.result-root {\n  &.display-grid {\n    atomic-result-section-actions {\n      display: none;\n    }\n  }\n\n  .badge {\n    width: 14rem;\n  }\n\n  .action {\n    width: 10rem;\n  }\n\n  .title {\n    display: grid;\n    grid-auto-flow: column;\n    grid-gap: 0.5rem;\n    height: var(--line-height);\n    width: 30rem;\n    max-width: 100%;\n  }\n\n  .fields-placeholder {\n    display: grid;\n    grid-template-columns: repeat(auto-fill, min(11rem, 40%));\n    grid-column-gap: 0.5rem;\n\n    .field-value-placeholder {\n      height: var(--font-size);\n      margin: calc((var(--line-height) - var(--font-size)) / 2) 0;\n    }\n  }\n}\n","import {Component, h, Prop} from '@stencil/core';\nimport {\n  ItemDisplayLayout,\n  ItemDisplayDensity,\n  ItemDisplayImageSize,\n  getItemDisplayClasses,\n} from '../../common/layout/display-options';\n\nconst placeholderClasses = 'block bg-neutral w-full h-full rounded';\n\n/**\n * The `atomic-result-placeholder` component provides an intermediate visual state that is rendered before the first results are available.\n * @internal\n */\n@Component({\n  tag: 'atomic-result-placeholder',\n  styleUrl: 'atomic-result-placeholder.pcss',\n  shadow: true,\n})\nexport class AtomicResultPlaceholder {\n  @Prop() display!: ItemDisplayLayout;\n  @Prop() density!: ItemDisplayDensity;\n  @Prop() imageSize!: ItemDisplayImageSize;\n\n  private renderExcerptLine(width: string) {\n    return (\n      <div\n        style={{\n          height: 'var(--line-height)',\n          width,\n        }}\n      >\n        <div\n          class={placeholderClasses}\n          style={{height: 'var(--font-size)'}}\n        ></div>\n      </div>\n    );\n  }\n\n  public render() {\n    return (\n      <div\n        class={`result-root placeholder with-sections animate-pulse ${getItemDisplayClasses(\n          this.display,\n          this.density,\n          this.imageSize\n        )\n          .join(' ')\n          .trim()}`}\n      >\n        <atomic-result-section-visual>\n          <div class={placeholderClasses}></div>\n        </atomic-result-section-visual>\n        <atomic-result-section-badges>\n          <div class={`badge ${placeholderClasses}`}></div>\n        </atomic-result-section-badges>\n        <atomic-result-section-actions>\n          <div class={`action ${placeholderClasses}`}></div>\n        </atomic-result-section-actions>\n        <atomic-result-section-title>\n          <div class={`title ${placeholderClasses}`}></div>\n        </atomic-result-section-title>\n        <atomic-result-section-excerpt>\n          {this.renderExcerptLine('100%')}\n          {this.renderExcerptLine('95%')}\n          {this.renderExcerptLine('98%')}\n        </atomic-result-section-excerpt>\n        <atomic-result-section-bottom-metadata>\n          <div class=\"fields-placeholder\">\n            {Array.from({length: 4}, () => (\n              <div\n                class={`field-value-placeholder ${placeholderClasses}`}\n              ></div>\n            ))}\n          </div>\n        </atomic-result-section-bottom-metadata>\n      </div>\n    );\n  }\n}\n"],"version":3}