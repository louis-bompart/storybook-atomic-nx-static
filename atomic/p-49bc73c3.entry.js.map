{"version":3,"names":["atomicLoadMoreResultsCss","AtomicLoadMoreResultsStyle0","AtomicLoadMoreResults","initialize","this","querySummary","buildQuerySummary","bindings","engine","resultList","buildResultList","options","fieldsToInclude","onClick","_a","store","state","focusOnNextNewResult","fetchMoreResults","render","lastResult","from","total","to","querySummaryState","i18n","h","LoadMoreGuard","key","hasResults","isLoaded","isAppLoaded","LoadMoreContainer","LoadMoreSummary","LoadMoreProgressBar","LoadMoreButton","moreAvailable","resultListState","moreResultsAvailable","__decorate","InitializeBindings","BindStateToController"],"sources":["src/components/search/atomic-load-more-results/atomic-load-more-results.pcss?tag=atomic-load-more-results&encapsulation=shadow","src/components/search/atomic-load-more-results/atomic-load-more-results.tsx"],"sourcesContent":["@import '../../../global/global.pcss';\n\n/**\n * @prop --atomic-more-results-progress-bar-color-from: Color of the start of the gradient for the load more results progress bar.\n * @prop --atomic-more-results-progress-bar-color-to: Color of the end of the gradient for the load more results progress bar.\n */\n.progress-bar {\n  --tw-gradient-from: var(--atomic-more-results-progress-bar-color-from, var(--atomic-primary-dark));\n  --tw-gradient-to: var(--atomic-more-results-progress-bar-color-to, var(--atomic-primary-light));\n  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n}\n","import {\n  QuerySummary,\n  QuerySummaryState,\n  buildQuerySummary,\n  ResultList,\n  ResultListState,\n  buildResultList,\n} from '@coveo/headless';\nimport {Component, h, State} from '@stencil/core';\nimport {\n  BindStateToController,\n  InitializeBindings,\n} from '../../../utils/initialization-utils';\nimport {LoadMoreButton} from '../../common/load-more/button';\nimport {LoadMoreContainer} from '../../common/load-more/container';\nimport {LoadMoreGuard} from '../../common/load-more/guard';\nimport {LoadMoreProgressBar} from '../../common/load-more/progress-bar';\nimport {LoadMoreSummary} from '../../common/load-more/summary';\nimport {Bindings} from '../atomic-search-interface/atomic-search-interface';\n\n/**\n * The `atomic-load-more-results` component allows the user to load additional results if more are available.\n *\n * @part container - The container of the component.\n * @part showing-results - The summary displaying which results are shown and how many are available.\n * @part highlight - The highlighted number of results displayed and number of results available.\n * @part progress-bar - The progress bar displaying a percentage of results shown over the total number of results available.\n * @part load-more-results-button - The \"Load more results\" button.\n */\n@Component({\n  tag: 'atomic-load-more-results',\n  styleUrl: 'atomic-load-more-results.pcss',\n  shadow: true,\n})\nexport class AtomicLoadMoreResults {\n  @InitializeBindings() public bindings!: Bindings;\n  public querySummary!: QuerySummary;\n  public resultList!: ResultList;\n\n  @BindStateToController('querySummary')\n  @State()\n  private querySummaryState!: QuerySummaryState;\n  @BindStateToController('resultList')\n  @State()\n  private resultListState!: ResultListState;\n  @State() public error!: Error;\n\n  public initialize() {\n    this.querySummary = buildQuerySummary(this.bindings.engine);\n    this.resultList = buildResultList(this.bindings.engine, {\n      options: {\n        fieldsToInclude: [],\n      },\n    });\n  }\n\n  private async onClick() {\n    this.bindings.store.state.resultList?.focusOnNextNewResult();\n    this.resultList.fetchMoreResults();\n  }\n\n  public render() {\n    const {lastResult: from, total: to} = this.querySummaryState;\n    const {i18n} = this.bindings;\n\n    return (\n      <LoadMoreGuard\n        hasResults={this.querySummaryState.hasResults}\n        isLoaded={this.bindings.store.isAppLoaded()}\n      >\n        <LoadMoreContainer>\n          <LoadMoreSummary from={from} to={to} i18n={i18n} />\n          <LoadMoreProgressBar from={from} to={to} />\n          <LoadMoreButton\n            i18n={i18n}\n            moreAvailable={this.resultListState.moreResultsAvailable}\n            onClick={() => this.onClick()}\n          />\n        </LoadMoreContainer>\n      </LoadMoreGuard>\n    );\n  }\n}\n"],"mappings":"kUAAA,MAAMA,EAA2B,0vuCACjC,MAAAC,EAAeD,E,iXCiCFE,EAAqB,M,8GAazB,UAAAC,GACLC,KAAKC,aAAeC,EAAkBF,KAAKG,SAASC,QACpDJ,KAAKK,WAAaC,EAAgBN,KAAKG,SAASC,OAAQ,CACtDG,QAAS,CACPC,gBAAiB,K,CAKf,aAAMC,G,OACZC,EAAAV,KAAKG,SAASQ,MAAMC,MAAMP,cAAU,MAAAK,SAAA,SAAAA,EAAEG,uBACtCb,KAAKK,WAAWS,kB,CAGX,MAAAC,GACL,MAAOC,WAAYC,EAAMC,MAAOC,GAAMnB,KAAKoB,kBAC3C,MAAMC,KAACA,GAAQrB,KAAKG,SAEpB,OACEmB,EAACC,EAAa,CAAAC,IAAA,2CACZC,WAAYzB,KAAKoB,kBAAkBK,WACnCC,SAAU1B,KAAKG,SAASQ,MAAMgB,eAE9BL,EAACM,EAAiB,CAAAJ,IAAA,4CAChBF,EAACO,EAAe,CAAAL,IAAA,2CAACP,KAAMA,EAAME,GAAIA,EAAIE,KAAMA,IAC3CC,EAACQ,EAAmB,CAAAN,IAAA,2CAACP,KAAMA,EAAME,GAAIA,IACrCG,EAACS,EAAc,CAAAP,IAAA,2CACbH,KAAMA,EACNW,cAAehC,KAAKiC,gBAAgBC,qBACpCzB,QAAS,IAAMT,KAAKS,a,GAzCD0B,EAAA,CAA5BC,K,+BAMOD,EAAA,CAFPE,EAAsB,iB,wCAKfF,EAAA,CAFPE,EAAsB,e"}