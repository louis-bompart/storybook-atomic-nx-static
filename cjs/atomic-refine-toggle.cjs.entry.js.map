{"file":"atomic-refine-toggle.entry.cjs.js","mappings":";;;;;;;;;;;;;;AAAA,MAAM,qBAAqB,GAAG,u+tCAAu+tC,CAAC;AACtguC,iCAAe,qBAAqB;;;;;;;;;;;;MCwBvB,kBAAkB;;;;;;;;;QAkBC,wBAAmB,GAAG,CAAC,CAAC;;;mCAAF,CAAC;;IAE9C,UAAU;QACf,IAAI,CAAC,YAAY,GAAGA,eAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;KAC7D;IAEO,SAAS;QACf,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,OAAO;SACR;QAED,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,qBAAqB,CAAC,CAAC;QAC9D,IAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC,aAAa,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC9D,IAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC;QAC1C,IAAI,CAAC,QAAQ,CAAC,mBAAmB,GAAG,IAAI,CAAC,mBAAmB,CAAC;KAC9D;IAEO,WAAW;QACjB,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC;KAChD;IAEM,MAAM;QACX,IAAI,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE;YACnC,OAAO;SACR;QAED,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,mBAAmB,EAAE;YAC/C,QACEC,iBACE,IAAI,EAAC,aAAa,uBAElB,KAAK,EAAC,gDAAgD,GACjD,EACP;SACH;QAED,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,UAAU,EAAE;YACtC,OAAO;SACR;QAED,QACEA,QAACC,aAAM,IACL,KAAK,EAAC,iBAAiB,EACvB,KAAK,EAAC,YAAY,EAClB,OAAO,EAAE,MAAM,IAAI,CAAC,WAAW,EAAE,EACjC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,iBAAiB,CAAC,EAC7C,GAAG,EAAE,CAAC,MAAM;gBACV,IAAI,CAAC,MAAM,EAAE;oBACX,OAAO;iBACR;gBACD,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC;gBACxB,IAAI,CAAC,SAAS,EAAE,CAAC;aAClB,EACD,IAAI,EAAC,QAAQ,GACL,EACV;KACH;;;AApE4B;IAA5BC,sCAAkB,EAAE;oDAA4B;AAIzC;IAFPC,yCAAqB,CAAC,cAAc,CAAC;6DAEQ;;;;;","names":["buildSearchStatus","h","Button","InitializeBindings","BindStateToController"],"sources":["src/components/search/atomic-refine-toggle/atomic-refine-toggle.pcss?tag=atomic-refine-toggle&encapsulation=shadow","src/components/search/atomic-refine-toggle/atomic-refine-toggle.tsx"],"sourcesContent":["@import '../../../global/global.pcss';\n","import {\n  buildSearchStatus,\n  SearchStatusState,\n  SearchStatus,\n} from '@coveo/headless';\nimport {Component, h, Prop, State, Element} from '@stencil/core';\nimport {\n  InitializeBindings,\n  InitializableComponent,\n  BindStateToController,\n} from '../../../utils/initialization-utils';\nimport {Button} from '../../common/button';\nimport {Bindings} from '../atomic-search-interface/atomic-search-interface';\n\n/**\n * The `atomic-refine-toggle` component displays a button that opens a modal containing the facets and the sort components.\n *\n * When this component is added to the `atomic-search-interface`, an `atomic-refine-modal` component is automatically created.\n * @part button - The refine toggle button.\n */\n@Component({\n  tag: 'atomic-refine-toggle',\n  styleUrl: 'atomic-refine-toggle.pcss',\n  shadow: true,\n})\nexport class AtomicRefineToggle implements InitializableComponent {\n  @Element() public host!: HTMLElement;\n  public searchStatus!: SearchStatus;\n  private modalRef?: HTMLAtomicRefineModalElement;\n  private buttonRef?: HTMLButtonElement;\n\n  @InitializeBindings() public bindings!: Bindings;\n  @State() public error!: Error;\n  @BindStateToController('searchStatus')\n  @State()\n  private searchStatusState!: SearchStatusState;\n\n  /**\n   * The number of expanded facets inside the refine modal.\n   * Remaining facets are automatically collapsed.\n   *\n   * Using the value `0` collapses all facets.\n   */\n  @Prop({reflect: true}) public collapseFacetsAfter = 0;\n\n  public initialize() {\n    this.searchStatus = buildSearchStatus(this.bindings.engine);\n  }\n\n  private loadModal() {\n    if (this.modalRef) {\n      return;\n    }\n\n    this.modalRef = document.createElement('atomic-refine-modal');\n    this.host.insertAdjacentElement('beforebegin', this.modalRef);\n    this.modalRef.openButton = this.buttonRef;\n    this.modalRef.collapseFacetsAfter = this.collapseFacetsAfter;\n  }\n\n  private enableModal() {\n    this.modalRef && (this.modalRef.isOpen = true);\n  }\n\n  public render() {\n    if (this.searchStatusState.hasError) {\n      return;\n    }\n\n    if (!this.searchStatusState.firstSearchExecuted) {\n      return (\n        <div\n          part=\"placeholder\"\n          aria-hidden\n          class=\"rounded w-28 h-8 my-2 bg-neutral animate-pulse\"\n        ></div>\n      );\n    }\n\n    if (!this.searchStatusState.hasResults) {\n      return;\n    }\n\n    return (\n      <Button\n        style=\"outline-primary\"\n        class=\"p-3 w-full\"\n        onClick={() => this.enableModal()}\n        text={this.bindings.i18n.t('sort-and-filter')}\n        ref={(button) => {\n          if (!button) {\n            return;\n          }\n          this.buttonRef = button;\n          this.loadModal();\n        }}\n        part=\"button\"\n      ></Button>\n    );\n  }\n}\n"],"version":3}