{"version":3,"names":["atomicRecsResultCss","AtomicRecsResultStyle0","AtomicRecsResult","this","executedRenderingFunctionOnce","display","density","imageSize","classes","resolveResult","event","preventDefault","stopPropagation","detail","result","resolveInteractiveResult","interactiveResult","resolveStopPropagation","resolveResultDisplayConfig","connectedCallback","layout","ItemLayout","content","children","getContentHTML","Array","from","map","child","outerHTML","join","isCustomRenderFunctionMode","renderingFunction","undefined","shouldExecuteRenderFunction","resultRootRef","render","h","Host","class","resultComponentClass","ref","getClasses","concat","innerHTML","componentDidLoad","loadingFlag","store","unsetLoadingFlag","applyFocusVisiblePolyfill","host","componentDidRender","customRenderOutputAsString","className"],"sources":["src/components/recommendations/atomic-recs-result/atomic-recs-result.pcss?tag=atomic-recs-result&encapsulation=shadow","src/components/recommendations/atomic-recs-result/atomic-recs-result.tsx"],"sourcesContent":["@import '../../common/template-system/template-system.pcss';\r\n\r\n@mixin atomic-template-system map(post-css-map-for-sections, search);\r\n","import {Component, h, Prop, Element, Listen, Host} from '@stencil/core';\r\nimport {RecsInteractiveResult, RecsResult} from '..';\r\nimport {applyFocusVisiblePolyfill} from '../../../utils/initialization-utils';\r\nimport {\r\n  InteractiveItemContextEvent,\r\n  ItemContextEvent,\r\n  DisplayConfig,\r\n} from '../../common/item-list/item-decorators';\r\nimport {\r\n  ItemRenderingFunction,\r\n  resultComponentClass,\r\n} from '../../common/item-list/item-list-common';\r\nimport {\r\n  ItemLayout,\r\n  ItemDisplayDensity,\r\n  ItemDisplayImageSize,\r\n  ItemDisplayLayout,\r\n} from '../../common/layout/display-options';\r\nimport {AtomicRecsStore} from '../atomic-recs-interface/store';\r\n\r\n/**\r\n * The `atomic-recs-result` component is used internally by the `atomic-recs-list` component.\r\n */\r\n@Component({\r\n  tag: 'atomic-recs-result',\r\n  styleUrl: 'atomic-recs-result.pcss',\r\n  shadow: true,\r\n})\r\nexport class AtomicRecsResult {\r\n  private layout!: ItemLayout;\r\n  private resultRootRef?: HTMLElement;\r\n  private executedRenderingFunctionOnce = false;\r\n  @Element() host!: HTMLElement;\r\n\r\n  /**\r\n   * Whether an atomic-result-link inside atomic-recs-result should stop click event propagation.\r\n   */\r\n  @Prop() stopPropagation?: boolean;\r\n\r\n  /**\r\n   * The result item.\r\n   */\r\n  @Prop() result!: RecsResult;\r\n\r\n  /**\r\n   * The InteractiveResult item.\r\n   * @internal\r\n   */\r\n  @Prop() interactiveResult!: RecsInteractiveResult;\r\n\r\n  /**\r\n   * Global Atomic state.\r\n   * @internal\r\n   */\r\n  @Prop() store?: AtomicRecsStore;\r\n\r\n  /**\r\n   * The result content to display.\r\n   */\r\n  @Prop() content?: ParentNode;\r\n\r\n  /**\r\n   * The layout to apply to display results.\r\n   */\r\n  @Prop() display: ItemDisplayLayout = 'list';\r\n\r\n  /**\r\n   * The size of the results.\r\n   */\r\n  @Prop() density: ItemDisplayDensity = 'normal';\r\n\r\n  /**\r\n   * The size of the visual section in result list items.\r\n   *\r\n   * This is overwritten by the image size defined in the result content, if it exists.\r\n   */\r\n  @Prop() imageSize: ItemDisplayImageSize = 'icon';\r\n\r\n  /**\r\n   * The classes to add to the result element.\r\n   */\r\n  @Prop() classes = '';\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  @Prop() loadingFlag?: string;\r\n\r\n  /**\r\n   * Internal function used by atomic-recs-list in advanced setups, which lets you bypass the standard HTML template system.\r\n   * Particularly useful for Atomic React\r\n   *\r\n   * @internal\r\n   */\r\n  @Prop() renderingFunction: ItemRenderingFunction;\r\n\r\n  @Listen('atomic/resolveResult')\r\n  public resolveResult(event: ItemContextEvent<RecsResult>) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    event.detail(this.result);\r\n  }\r\n\r\n  @Listen('atomic/resolveInteractiveResult')\r\n  public resolveInteractiveResult(event: InteractiveItemContextEvent) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    event.detail(this.interactiveResult);\r\n  }\r\n\r\n  @Listen('atomic/resolveStopPropagation')\r\n  public resolveStopPropagation(event: CustomEvent) {\r\n    event.detail(this.stopPropagation);\r\n  }\r\n\r\n  @Listen('atomic/resolveResultDisplayConfig')\r\n  public resolveResultDisplayConfig(event: ItemContextEvent<DisplayConfig>) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    event.detail({\r\n      density: this.density,\r\n      imageSize: this.imageSize!,\r\n    });\r\n  }\r\n\r\n  public connectedCallback() {\r\n    this.layout = new ItemLayout(\r\n      this.content!.children,\r\n      this.display,\r\n      this.density,\r\n      this.imageSize\r\n    );\r\n  }\r\n\r\n  private getContentHTML() {\r\n    return Array.from(this.content!.children)\r\n      .map((child) => child.outerHTML)\r\n      .join('');\r\n  }\r\n\r\n  private get isCustomRenderFunctionMode() {\r\n    return this.renderingFunction !== undefined;\r\n  }\r\n\r\n  private shouldExecuteRenderFunction() {\r\n    return (\r\n      this.isCustomRenderFunctionMode &&\r\n      this.resultRootRef &&\r\n      !this.executedRenderingFunctionOnce\r\n    );\r\n  }\r\n\r\n  public render() {\r\n    if (this.isCustomRenderFunctionMode) {\r\n      return (\r\n        <Host class={resultComponentClass}>\r\n          <div\r\n            class=\"result-root\"\r\n            ref={(ref) => (this.resultRootRef = ref)}\r\n          ></div>\r\n        </Host>\r\n      );\r\n    }\r\n    return (\r\n      // deepcode ignore ReactSetInnerHtml: This is not React code\r\n      <Host class={resultComponentClass}>\r\n        <div\r\n          class={`result-root ${this.layout\r\n            .getClasses()\r\n            .concat(this.classes)\r\n            .join(' ')}`}\r\n          innerHTML={this.getContentHTML()}\r\n        ></div>\r\n      </Host>\r\n    );\r\n  }\r\n\r\n  public componentDidLoad() {\r\n    if (this.loadingFlag && this.store) {\r\n      this.store.unsetLoadingFlag(this.loadingFlag);\r\n    }\r\n    applyFocusVisiblePolyfill(this.host);\r\n  }\r\n\r\n  public componentDidRender() {\r\n    if (this.shouldExecuteRenderFunction()) {\r\n      const customRenderOutputAsString = this.renderingFunction!(\r\n        this.result,\r\n        this.resultRootRef!\r\n      );\r\n\r\n      this.resultRootRef!.className += ` ${this.layout\r\n        .getClasses(customRenderOutputAsString)\r\n        .concat(this.classes)\r\n        .join(' ')}`;\r\n\r\n      this.executedRenderingFunctionOnce = true;\r\n    }\r\n  }\r\n}\r\n"],"mappings":"qTAAA,MAAMA,EAAsB,y4mHAC5B,MAAAC,EAAeD,E,MC2BFE,EAAgB,M,yBAGnBC,KAAAC,8BAAgC,MAiChCD,KAAAE,QAA6B,OAK7BF,KAAAG,QAA8B,SAO9BH,KAAAI,UAAkC,OAKlCJ,KAAAK,QAAU,G,+IAjBmB,O,aAKC,S,eAOI,O,aAKxB,G,4DAgBX,aAAAC,CAAcC,GACnBA,EAAMC,iBACND,EAAME,kBACNF,EAAMG,OAAOV,KAAKW,O,CAIb,wBAAAC,CAAyBL,GAC9BA,EAAMC,iBACND,EAAME,kBACNF,EAAMG,OAAOV,KAAKa,kB,CAIb,sBAAAC,CAAuBP,GAC5BA,EAAMG,OAAOV,KAAKS,gB,CAIb,0BAAAM,CAA2BR,GAChCA,EAAMC,iBACND,EAAME,kBACNF,EAAMG,OAAO,CACXP,QAASH,KAAKG,QACdC,UAAWJ,KAAKI,W,CAIb,iBAAAY,GACLhB,KAAKiB,OAAS,IAAIC,EAChBlB,KAAKmB,QAASC,SACdpB,KAAKE,QACLF,KAAKG,QACLH,KAAKI,U,CAID,cAAAiB,GACN,OAAOC,MAAMC,KAAKvB,KAAKmB,QAASC,UAC7BI,KAAKC,GAAUA,EAAMC,YACrBC,KAAK,G,CAGV,8BAAYC,GACV,OAAO5B,KAAK6B,oBAAsBC,S,CAG5B,2BAAAC,GACN,OACE/B,KAAK4B,4BACL5B,KAAKgC,gBACJhC,KAAKC,6B,CAIH,MAAAgC,GACL,GAAIjC,KAAK4B,2BAA4B,CACnC,OACEM,EAACC,EAAI,CAACC,MAAOC,GACXH,EAAA,OACEE,MAAM,cACNE,IAAMA,GAAStC,KAAKgC,cAAgBM,I,CAK5C,OAEEJ,EAACC,EAAI,CAACC,MAAOC,GACXH,EAAA,OACEE,MAAO,eAAepC,KAAKiB,OACxBsB,aACAC,OAAOxC,KAAKK,SACZsB,KAAK,OACRc,UAAWzC,KAAKqB,mB,CAMjB,gBAAAqB,GACL,GAAI1C,KAAK2C,aAAe3C,KAAK4C,MAAO,CAClC5C,KAAK4C,MAAMC,iBAAiB7C,KAAK2C,Y,CAEnCG,EAA0B9C,KAAK+C,K,CAG1B,kBAAAC,GACL,GAAIhD,KAAK+B,8BAA+B,CACtC,MAAMkB,EAA6BjD,KAAK6B,kBACtC7B,KAAKW,OACLX,KAAKgC,eAGPhC,KAAKgC,cAAekB,WAAa,IAAIlD,KAAKiB,OACvCsB,WAAWU,GACXT,OAAOxC,KAAKK,SACZsB,KAAK,OAER3B,KAAKC,8BAAgC,I"}