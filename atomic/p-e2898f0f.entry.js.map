{"version":3,"names":["atomicCommerceProductListCss","AtomicCommerceProductListStyle0","AtomicCommerceProductList","this","loadingFlag","randomID","resultTemplateRegistered","templateHasError","display","density","imageSize","gridCellLinkTarget","setRenderFunction","productRenderingFunction","itemRenderingFunction","focusTarget","nextNewResultTarget","FocusTargetController","initialize","bindings","interfaceElement","type","productListing","buildProductListing","engine","refresh","search","buildSearch","productTemplateProvider","ProductTemplateProvider","includeDefaultTemplate","templateElements","Array","from","host","querySelectorAll","getResultTemplateRegistered","getTemplateHasError","setResultTemplateRegistered","value","setTemplateHasError","productListCommon","ItemListCommon","engineSubscribe","subscribe","getCurrentNumberOfItems","productState","products","length","getIsLoading","isLoading","nextNewItemTarget","store","productListingState","searchState","render","listClasses","computeListDisplayClasses","h","DisplayWrapper","key","ResultsPlaceholdersGuard","displayPlaceholders","isAppLoaded","numberOfPlaceholders","ItemDisplayGuard","firstRequestExecuted","responseId","hasItems","renderAsTable","renderAsGrid","renderAsList","getItemListDisplayClasses","_a","getPropsForAtomicProduct","product","renderingFunction","getResultId","permanentid","content","getTemplateContent","map","i","propsForAtomicProduct","DisplayGrid","item","clickUri","title","ec_name","setRef","element","setNewResultRef","select","Error","beginDelayedSelect","cancelPendingSelect","firstItem","propsForTableColumns","templateContentForFirstItem","DisplayTable","logger","DisplayTableRow","rowIndex","DisplayTableData","renderItem","ref","part","__decorate","InitializeBindings","BindStateToController"],"sources":["src/components/commerce/atomic-commerce-product-list/atomic-commerce-product-list.pcss?tag=atomic-commerce-product-list&encapsulation=shadow","src/components/commerce/atomic-commerce-product-list/atomic-commerce-product-list.tsx"],"sourcesContent":["@import '../../../global/global.pcss';\n@import '../../../global/mixins.pcss';\n@import '../../common/item-list/styles/placeholders.pcss';\n@import '../../common/item-list/styles/table-display.pcss';\n@import '../../common/item-list/styles/list-display.pcss';\n@import '../../common/item-list/styles/grid-display.pcss';\n\n:host {\n  .result-link {\n    @mixin link-style;\n  }\n  .result-grid {\n    grid-template-columns: repeat(5, minmax(0, 1fr));\n    justify-items: center;\n    & a {\n      justify-content: center;\n    }\n  }\n\n  .result-list {\n    display: flex;\n    flex-direction: column;\n\n    & .result-item {\n      width: 100%;\n      max-width: 600px;\n      display: flex;\n      flex-wrap: wrap;\n      & .result-detailsÂ  {\n        align-content: center;\n      }\n    }\n  }\n\n  @screen desktop-only {\n    .result-grid {\n      display: grid;\n    }\n  }\n\n  @screen mobile-only {\n    .result-grid {\n      display: flex;\n      flex-direction: column;\n    }\n  }\n}\n","import {\n  buildProductListing,\n  ProductListingState,\n  ProductListing,\n  buildSearch,\n  SearchState,\n  Search,\n  Product,\n} from '@coveo/headless/commerce';\nimport {Component, Element, Method, Prop, State, h} from '@stencil/core';\nimport {FocusTargetController} from '../../../utils/accessibility-utils';\nimport {\n  BindStateToController,\n  InitializableComponent,\n  InitializeBindings,\n} from '../../../utils/initialization-utils';\nimport {randomID} from '../../../utils/utils';\nimport {ResultsPlaceholdersGuard} from '../../common/atomic-result-placeholder/placeholders';\nimport {DisplayGrid} from '../../common/item-list/display-grid';\nimport {\n  DisplayTable,\n  DisplayTableData,\n  DisplayTableRow,\n} from '../../common/item-list/display-table';\nimport {DisplayWrapper} from '../../common/item-list/display-wrapper';\nimport {ItemDisplayGuard} from '../../common/item-list/item-display-guard';\nimport {\n  ItemListCommon,\n  ItemRenderingFunction,\n} from '../../common/item-list/item-list-common';\nimport {\n  ItemDisplayDensity,\n  ItemDisplayImageSize,\n  ItemDisplayLayout,\n  ItemTarget,\n  getItemListDisplayClasses,\n} from '../../common/layout/display-options';\nimport {CommerceBindings} from '../atomic-commerce-interface/atomic-commerce-interface';\nimport {ProductTemplateProvider} from '../product-list/product-template-provider';\n\n/**\n * @internal\n * The `atomic-commerce-product-list` component is responsible for displaying products.\n */\n@Component({\n  tag: 'atomic-commerce-product-list',\n  styleUrl: 'atomic-commerce-product-list.pcss',\n  shadow: true,\n})\nexport class AtomicCommerceProductList\n  implements InitializableComponent<CommerceBindings>\n{\n  @InitializeBindings() public bindings!: CommerceBindings;\n  public productListing!: ProductListing;\n  public search!: Search;\n  private loadingFlag = randomID('firstProductLoaded-');\n  private itemRenderingFunction: ItemRenderingFunction;\n  private nextNewResultTarget?: FocusTargetController;\n  private productTemplateProvider!: ProductTemplateProvider;\n  private productListCommon!: ItemListCommon;\n\n  @Element() public host!: HTMLDivElement;\n\n  @BindStateToController('productListing')\n  @State()\n  private productListingState!: ProductListingState;\n  @BindStateToController('search')\n  @State()\n  private searchState!: SearchState;\n  @State() private resultTemplateRegistered = false;\n  @State() public error!: Error;\n  @State() private templateHasError = false;\n\n  /**\n   * The desired layout to use when displaying products. Layouts affect how many products to display per row and how visually distinct they are from each other.\n   */\n  @Prop({reflect: true}) display: ItemDisplayLayout = 'grid';\n\n  /**\n   * The spacing of various elements in the product list, including the gap between products, the gap between parts of a product, and the font sizes of different parts in a product.\n   */\n  @Prop({reflect: true}) density: ItemDisplayDensity = 'normal';\n\n  /**\n   * The expected size of the image displayed for products.\n   */\n  @Prop({reflect: true}) imageSize: ItemDisplayImageSize = 'small';\n\n  /**\n   * The target location to open the product link (see [target](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#target)).\n   * This property is only leveraged when `display` is `grid`.\n   * @defaultValue `_self`\n   */\n  @Prop() gridCellLinkTarget: ItemTarget = '_self';\n\n  /**\n   * Sets a rendering function to bypass the standard HTML template mechanism for rendering products.\n   * You can use this function while working with web frameworks that don't use plain HTML syntax, e.g., React, Angular or Vue.\n   *\n   * Do not use this method if you integrate Atomic in a plain HTML deployment.\n   *\n   * @param productRenderingFunction\n   */\n  @Method() public async setRenderFunction(\n    productRenderingFunction: ItemRenderingFunction\n  ) {\n    this.itemRenderingFunction = productRenderingFunction;\n  }\n\n  public get focusTarget() {\n    if (!this.nextNewResultTarget) {\n      this.nextNewResultTarget = new FocusTargetController(this);\n    }\n    return this.nextNewResultTarget;\n  }\n\n  public initialize() {\n    if (this.bindings.interfaceElement.type === 'product-listing') {\n      this.productListing = buildProductListing(this.bindings.engine);\n      this.productListing.refresh();\n    } else if (this.bindings.interfaceElement.type === 'search') {\n      this.search = buildSearch(this.bindings.engine);\n    }\n\n    this.productTemplateProvider = new ProductTemplateProvider({\n      includeDefaultTemplate: true,\n      templateElements: Array.from(\n        this.host.querySelectorAll('atomic-product-template')\n      ),\n      getResultTemplateRegistered: () => this.resultTemplateRegistered,\n      getTemplateHasError: () => this.templateHasError,\n      setResultTemplateRegistered: (value: boolean) => {\n        this.resultTemplateRegistered = value;\n      },\n      setTemplateHasError: (value: boolean) => {\n        this.templateHasError = value;\n      },\n    });\n\n    this.productListCommon = new ItemListCommon({\n      engineSubscribe: this.bindings.engine.subscribe,\n      getCurrentNumberOfItems: () => this.productState.products.length,\n      getIsLoading: () => this.productState.isLoading,\n      host: this.host,\n      loadingFlag: this.loadingFlag,\n      nextNewItemTarget: this.focusTarget,\n      store: this.bindings.store,\n    });\n  }\n\n  get productState() {\n    return this.bindings.interfaceElement.type === 'product-listing'\n      ? this.productListingState\n      : this.searchState;\n  }\n\n  public render() {\n    const listClasses = this.computeListDisplayClasses();\n\n    return (\n      <DisplayWrapper display={this.display} listClasses={listClasses}>\n        <ResultsPlaceholdersGuard\n          density={this.density}\n          display={this.display}\n          imageSize={this.imageSize}\n          displayPlaceholders={!this.bindings.store.isAppLoaded()}\n          numberOfPlaceholders={this.productState.products.length}\n        ></ResultsPlaceholdersGuard>\n        <ItemDisplayGuard\n          firstRequestExecuted={!!this.searchState.responseId}\n          hasItems={this.productState.products.length > 0}\n        >\n          {this.display === 'table'\n            ? this.renderAsTable()\n            : this.display === 'grid'\n              ? this.renderAsGrid()\n              : this.renderAsList()}\n        </ItemDisplayGuard>\n      </DisplayWrapper>\n    );\n  }\n\n  private computeListDisplayClasses() {\n    const displayPlaceholders = !this.bindings.store.isAppLoaded();\n\n    return getItemListDisplayClasses(\n      this.display,\n      this.density,\n      this.imageSize,\n\n      this.productState?.isLoading,\n      displayPlaceholders\n    );\n  }\n\n  private getPropsForAtomicProduct(product: Product) {\n    return {\n      // TODO: add back once interactive result is implemented for products in KIT-3149\n      /* interactiveResult: buildInteractiveResult(this.bindings.engine, {\n        options: {result},\n      }), */\n      product,\n      renderingFunction: this.itemRenderingFunction,\n      loadingFlag: this.loadingFlag,\n      key: this.productListCommon.getResultId(\n        product.permanentid,\n        this.productState.responseId,\n        this.density,\n        this.imageSize\n      ),\n      content: this.productTemplateProvider.getTemplateContent(product),\n      store: this.bindings.store,\n      density: this.density,\n      imageSize: this.imageSize,\n      display: this.display,\n    };\n  }\n\n  private renderAsGrid() {\n    return this.productState.products.map((product, i) => {\n      const propsForAtomicProduct = this.getPropsForAtomicProduct(product);\n      return (\n        <DisplayGrid\n          item={{\n            ...product,\n            clickUri: product.clickUri,\n            title: product.ec_name ?? 'temp',\n          }}\n          // TODO KIT-3149: add back once the interactive result is implemented\n          //{...propsForAtomicProduct.interactiveResult}\n          // TODO KIT-3149: Remove these back once the interactive result is implemented\n          setRef={(element) =>\n            element && this.productListCommon.setNewResultRef(element, i)\n          }\n          select={function (): void {\n            throw new Error('Function not implemented. TODO KIT-3149');\n          }}\n          beginDelayedSelect={function (): void {\n            throw new Error('Function not implemented. TODO KIT-3149');\n          }}\n          cancelPendingSelect={function (): void {\n            throw new Error('Function not implemented. TODO KIT-3149');\n          }}\n        >\n          <atomic-product {...this} {...propsForAtomicProduct}></atomic-product>\n        </DisplayGrid>\n      );\n    });\n  }\n\n  private renderAsTable() {\n    if (this.productState.products.length > 0) {\n      return;\n    }\n    const listClasses = this.computeListDisplayClasses();\n    const firstItem = this.productState.products[0];\n\n    const propsForTableColumns = {\n      firstItem,\n      templateContentForFirstItem:\n        this.productTemplateProvider.getTemplateContent(firstItem),\n    };\n\n    return (\n      <DisplayTable\n        {...propsForTableColumns}\n        listClasses={listClasses}\n        logger={this.bindings.engine.logger}\n        itemRenderingFunction={this.itemRenderingFunction}\n        host={this.host}\n      >\n        {this.productState.products.map((product, i) => {\n          const propsForAtomicProduct = this.getPropsForAtomicProduct(product);\n          return (\n            <DisplayTableRow\n              {...propsForAtomicProduct}\n              rowIndex={i}\n              setRef={(element) =>\n                element && this.productListCommon.setNewResultRef(element, i)\n              }\n            >\n              <DisplayTableData\n                {...propsForTableColumns}\n                {...propsForAtomicProduct}\n                renderItem={(content) => {\n                  return (\n                    <atomic-product\n                      {...this}\n                      {...propsForAtomicProduct}\n                      content={content}\n                    ></atomic-product>\n                  );\n                }}\n              ></DisplayTableData>\n            </DisplayTableRow>\n          );\n        })}\n      </DisplayTable>\n    );\n  }\n\n  private renderAsList() {\n    return this.productState.products.map((product, i) => {\n      const propsForAtomicProduct = this.getPropsForAtomicProduct(product);\n      return (\n        <atomic-product\n          {...this}\n          {...propsForAtomicProduct}\n          ref={(element) =>\n            element && this.productListCommon.setNewResultRef(element, i)\n          }\n          part=\"outline\"\n        ></atomic-product>\n      );\n    });\n  }\n}\n"],"mappings":"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"}