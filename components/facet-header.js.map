{"file":"facet-header.js","mappings":";;;;;;;MAEa,cAAc,GAAwB,CAAC,CAAC,EAAE,QAAQ,MAC7D,WAAK,KAAK,EAAC,oDAAoD,EAAC,IAAI,EAAC,OAAO,IACzE,QAAQ,CACL;;MCcK,WAAW,GAA0C,CAAC,KAAK;IACtE,MAAM,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IACxC,MAAM,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,cAAc,EAAE,EAAC,KAAK,EAAC,CAAC,CAAC;IAC1D,MAAM,aAAa,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,gBAAgB,EAAE,EAAC,KAAK,EAAC,CAAC,CAAC;IAC9D,MAAM,YAAY,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,eAAe,EAAE;QACjD,KAAK,EAAE,KAAK,CAAC,oBAAoB;KAClC,CAAC,CAAC;IACH,MAAM,oBAAoB,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,yBAAyB,EAAE;QACnE,KAAK,EAAE,KAAK,CAAC,oBAAoB;QACjC,KAAK;KACN,CAAC,CAAC;IAEH,OAAO;QACL,EAAC,MAAM,IACL,KAAK,EAAC,kBAAkB,EACxB,IAAI,EAAC,cAAc,EACnB,KAAK,EAAC,sEAAsE,EAC5E,KAAK,EAAE,KAAK,CAAC,WAAW,GAAG,WAAW,GAAG,aAAa,EACtD,OAAO,EAAE,MAAM,KAAK,CAAC,gBAAgB,EAAE,EACvC,YAAY,EAAE,CAAC,CAAC,KAAK,CAAC,WAAW,EAAE,QAAQ,EAAE,EAC7C,GAAG,EAAE,KAAK,CAAC,SAAS;YAEpB,EAAC,OAAO,IAAC,KAAK,EAAE,KAAK,CAAC,YAAY,EAAE,KAAK,EAAC,UAAU,IACjD,KAAK,CACE;YACV,mBACE,IAAI,EAAC,mBAAmB,EACxB,KAAK,EAAC,+BAA+B,EACrC,IAAI,EAAE,KAAK,CAAC,WAAW,GAAGA,SAAe,GAAGC,OAAY,GAC3C,CACR;QACT,KAAK,CAAC,cAAc,IAAI,KAAK,CAAC,oBAAoB,GAAG,CAAC,KACpD,EAAC,MAAM,IACL,KAAK,EAAC,cAAc,EACpB,IAAI,EAAC,cAAc,EACnB,KAAK,EAAC,4CAA4C,EAClD,SAAS,EAAE,oBAAoB,EAC/B,OAAO,EAAE,MAAM,KAAK,CAAC,cAAe,EAAE;YAEtC,mBACE,IAAI,EAAC,mBAAmB,EACxB,KAAK,EAAC,cAAc,EACpB,IAAI,EAAE,SAAS,GACF;YACf,gBAAO,YAAY,CAAQ,CACpB,CACV;KACF,CAAC;AACJ;;;;","names":["ArrowBottomIcon","ArrowTopIcon"],"sources":["src/components/common/facets/facet-container/facet-container.tsx","src/components/common/facets/facet-header/facet-header.tsx"],"sourcesContent":["import {FunctionalComponent, h} from '@stencil/core';\r\n\r\nexport const FacetContainer: FunctionalComponent = (_, children) => (\r\n  <div class=\"bg-background border border-neutral rounded-lg p-4\" part=\"facet\">\r\n    {children}\r\n  </div>\r\n);\r\n","import {FunctionalComponent, h} from '@stencil/core';\r\nimport {i18n} from 'i18next';\r\nimport ArrowBottomIcon from '../../../../images/arrow-bottom-rounded.svg';\r\nimport ArrowTopIcon from '../../../../images/arrow-top-rounded.svg';\r\nimport CloseIcon from '../../../../images/close.svg';\r\nimport {Button} from '../../button';\r\nimport {Heading} from '../../heading';\r\n\r\nexport interface FacetHeaderProps {\r\n  i18n: i18n;\r\n  label: string;\r\n  numberOfActiveValues: number;\r\n  isCollapsed: boolean;\r\n  headingLevel: number;\r\n  onToggleCollapse(): void;\r\n  onClearFilters?(): void;\r\n  headerRef?: (element?: HTMLButtonElement) => void;\r\n}\r\n\r\nexport const FacetHeader: FunctionalComponent<FacetHeaderProps> = (props) => {\r\n  const label = props.i18n.t(props.label);\r\n  const expandFacet = props.i18n.t('expand-facet', {label});\r\n  const collapseFacet = props.i18n.t('collapse-facet', {label});\r\n  const clearFilters = props.i18n.t('clear-filters', {\r\n    count: props.numberOfActiveValues,\r\n  });\r\n  const clearFiltersForFacet = props.i18n.t('clear-filters-for-facet', {\r\n    count: props.numberOfActiveValues,\r\n    label,\r\n  });\r\n\r\n  return [\r\n    <Button\r\n      style=\"text-transparent\"\r\n      part=\"label-button\"\r\n      class=\"flex font-bold justify-between w-full py-1 px-2 text-lg rounded-none\"\r\n      title={props.isCollapsed ? expandFacet : collapseFacet}\r\n      onClick={() => props.onToggleCollapse()}\r\n      ariaExpanded={(!props.isCollapsed).toString()}\r\n      ref={props.headerRef}\r\n    >\r\n      <Heading level={props.headingLevel} class=\"truncate\">\r\n        {label}\r\n      </Heading>\r\n      <atomic-icon\r\n        part=\"label-button-icon\"\r\n        class=\"w-3 self-center shrink-0 ml-4\"\r\n        icon={props.isCollapsed ? ArrowBottomIcon : ArrowTopIcon}\r\n      ></atomic-icon>\r\n    </Button>,\r\n    props.onClearFilters && props.numberOfActiveValues > 0 && (\r\n      <Button\r\n        style=\"text-primary\"\r\n        part=\"clear-button\"\r\n        class=\"flex items-baseline max-w-full p-2 text-sm\"\r\n        ariaLabel={clearFiltersForFacet}\r\n        onClick={() => props.onClearFilters!()}\r\n      >\r\n        <atomic-icon\r\n          part=\"clear-button-icon\"\r\n          class=\"w-2 h-2 mr-1\"\r\n          icon={CloseIcon}\r\n        ></atomic-icon>\r\n        <span>{clearFilters}</span>\r\n      </Button>\r\n    ),\r\n  ];\r\n};\r\n"],"version":3}