{"file":"summary-02300510.js","mappings":";;;MAUa,cAAc,GAA6C,CAAC,EACvE,IAAI,EACJ,OAAO,EACP,aAAa,GACd;IACC,IAAI,CAAC,aAAa,EAAE;QAClB,OAAO;KACR;IACD,QACE,EAAC,MAAM,IACL,KAAK,EAAC,SAAS,EACf,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,mBAAmB,CAAC,EACjC,IAAI,EAAC,0BAA0B,EAC/B,KAAK,EAAC,oBAAoB,EAC1B,OAAO,EAAE,MAAM,OAAO,EAAE,GAChB,EACV;AACJ;;MCzBa,iBAAiB,GAAwB,CAAC,CAAC,EAAE,QAAQ;IAChE,QACE,WAAK,KAAK,EAAC,4BAA4B,EAAC,IAAI,EAAC,WAAW,IACrD,QAAQ,CACL,EACN;AACJ;;MCFa,aAAa,GAA4C,CACpE,EAAC,QAAQ,EAAE,UAAU,EAAC,EACtB,QAAQ;IAER,IAAI,CAAC,QAAQ,IAAI,CAAC,UAAU,EAAE;QAC5B,OAAO;KACR;IACD,OAAO,EAAC,QAAQ,QAAE,QAAQ,CAAY,CAAC;AACzC;;MCPa,mBAAmB,GAE5B,CAAC,EAAC,IAAI,EAAE,EAAE,EAAC;IACb,MAAM,UAAU,GAAG,CAAC,IAAI,GAAG,EAAE,IAAI,GAAG,CAAC;IACrC,MAAM,KAAK,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC;IAC1C,QACE,WAAK,IAAI,EAAC,cAAc,EAAC,KAAK,EAAC,2CAA2C;QACxE,WACE,KAAK,EAAC,wFAAwF,EAC9F,KAAK,EAAE,EAAC,KAAK,EAAC,GACT,CACH,EACN;AACJ;;MCXa,eAAe,GAA8C,CAAC,EACzE,IAAI,EACJ,IAAI,EACJ,EAAE,GACH;IACC,MAAM,aAAa,GAAG,CAAC,OAAe;QACpC,OAAO,+DAA+D,OAAO,SAAS,CAAC;KACxF,CAAC;IAEF,MAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC;IAC7B,MAAM,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,8BAA8B,EAAE;QACrD,aAAa,EAAE,EAAC,WAAW,EAAE,KAAK,EAAC;QACnC,IAAI,EAAE,aAAa,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;QAChD,KAAK,EAAE,aAAa,CAAC,EAAE,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;KAChD,CAAC,CAAC;IAEH,QACE,WACE,KAAK,EAAC,gCAAgC,EACtC,IAAI,EAAC,iBAAiB,EACtB,SAAS,EAAE,OAAO,GACb,EACP;AACJ;;;;","names":[],"sources":["src/components/common/load-more/button.tsx","src/components/common/load-more/container.tsx","src/components/common/load-more/guard.tsx","src/components/common/load-more/progress-bar.tsx","src/components/common/load-more/summary.tsx"],"sourcesContent":["import {FunctionalComponent, h} from '@stencil/core';\r\nimport {i18n} from 'i18next';\r\nimport {Button} from '../button';\r\n\r\ninterface LoadMoreButtonProps {\r\n  i18n: i18n;\r\n  onClick: () => void;\r\n  moreAvailable: boolean;\r\n}\r\n\r\nexport const LoadMoreButton: FunctionalComponent<LoadMoreButtonProps> = ({\r\n  i18n,\r\n  onClick,\r\n  moreAvailable,\r\n}) => {\r\n  if (!moreAvailable) {\r\n    return;\r\n  }\r\n  return (\r\n    <Button\r\n      style=\"primary\"\r\n      text={i18n.t('load-more-results')}\r\n      part=\"load-more-results-button\"\r\n      class=\"font-bold my-2 p-3\"\r\n      onClick={() => onClick()}\r\n    ></Button>\r\n  );\r\n};\r\n","import {FunctionalComponent, h} from '@stencil/core';\r\n\r\nexport const LoadMoreContainer: FunctionalComponent = (_, children) => {\r\n  return (\r\n    <div class=\"flex flex-col items-center\" part=\"container\">\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n","import {Fragment, FunctionalComponent, h} from '@stencil/core';\r\n\r\nexport interface LoadMoreGuardProps {\r\n  isLoaded: boolean;\r\n  hasResults: boolean;\r\n}\r\nexport const LoadMoreGuard: FunctionalComponent<LoadMoreGuardProps> = (\r\n  {isLoaded, hasResults},\r\n  children\r\n) => {\r\n  if (!isLoaded || !hasResults) {\r\n    return;\r\n  }\r\n  return <Fragment>{children}</Fragment>;\r\n};\r\n","import {FunctionalComponent, h} from '@stencil/core';\r\n\r\ninterface LoadMoreProgressBarProps {\r\n  from: number;\r\n  to: number;\r\n}\r\n\r\nexport const LoadMoreProgressBar: FunctionalComponent<\r\n  LoadMoreProgressBarProps\r\n> = ({from, to}) => {\r\n  const percentage = (from / to) * 100;\r\n  const width = `${Math.ceil(percentage)}%`;\r\n  return (\r\n    <div part=\"progress-bar\" class=\"relative w-72 h-1 my-2 rounded bg-neutral\">\r\n      <div\r\n        class=\"progress-bar absolute h-full left-0 top-0 z-1 overflow-hidden rounded bg-gradient-to-r\"\r\n        style={{width}}\r\n      ></div>\r\n    </div>\r\n  );\r\n};\r\n","import {FunctionalComponent, h} from '@stencil/core';\r\nimport {i18n} from 'i18next';\r\n\r\ninterface LoadMoreSummaryProps {\r\n  i18n: i18n;\r\n  from: number;\r\n  to: number;\r\n}\r\n\r\nexport const LoadMoreSummary: FunctionalComponent<LoadMoreSummaryProps> = ({\r\n  i18n,\r\n  from,\r\n  to,\r\n}) => {\r\n  const wrapHighlight = (content: string) => {\r\n    return `<span class=\"font-bold text-on-background\" part=\"highlight\">${content}</span>`;\r\n  };\r\n\r\n  const locale = i18n.language;\r\n  const content = i18n.t('showing-results-of-load-more', {\r\n    interpolation: {escapeValue: false},\r\n    last: wrapHighlight(from.toLocaleString(locale)),\r\n    total: wrapHighlight(to.toLocaleString(locale)),\r\n  });\r\n\r\n  return (\r\n    <div\r\n      class=\"my-2 text-lg text-neutral-dark\"\r\n      part=\"showing-results\"\r\n      innerHTML={content}\r\n    ></div>\r\n  );\r\n};\r\n"],"version":3}