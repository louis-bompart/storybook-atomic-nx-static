{"file":"atomic-result.entry.esm.js","mappings":"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","names":[],"sources":["src/components/search/atomic-result/atomic-result.pcss?tag=atomic-result&encapsulation=shadow","src/components/search/atomic-result/atomic-result.tsx"],"sourcesContent":["@import '../../common/template-system/template-system.pcss';\r\n\r\n@mixin atomic-template-system map(post-css-map-for-sections, search);\r\n","import {FoldedResult, InteractiveResult, Result} from '@coveo/headless';\r\nimport {Component, h, Prop, Element, Listen, Host} from '@stencil/core';\r\nimport {applyFocusVisiblePolyfill} from '../../../utils/initialization-utils';\r\nimport {\r\n  AtomicCommonStore,\r\n  AtomicCommonStoreData,\r\n} from '../../common/interface/store';\r\nimport {DisplayConfig} from '../../common/item-list/item-decorators';\r\nimport {\r\n  ItemRenderingFunction,\r\n  resultComponentClass,\r\n} from '../../common/item-list/item-list-common';\r\nimport {\r\n  ItemLayout,\r\n  ItemDisplayDensity,\r\n  ItemDisplayImageSize,\r\n  ItemDisplayLayout,\r\n} from '../../common/layout/display-options';\r\nimport {\r\n  InteractiveResultContextEvent,\r\n  ResultContextEvent,\r\n} from '../result-template-components/result-template-decorators';\r\n\r\n/**\r\n * The `atomic-result` component is used internally by the `atomic-result-list` component.\r\n */\r\n@Component({\r\n  tag: 'atomic-result',\r\n  styleUrl: 'atomic-result.pcss',\r\n  shadow: true,\r\n})\r\nexport class AtomicResult {\r\n  private layout!: ItemLayout;\r\n\r\n  @Element() host!: HTMLElement;\r\n\r\n  /**\r\n   * Whether an atomic-result-link inside atomic-result should stop click event propagation.\r\n   */\r\n  @Prop() stopPropagation?: boolean;\r\n\r\n  /**\r\n   * The result item.\r\n   */\r\n  @Prop() result!: Result | FoldedResult;\r\n\r\n  /**\r\n   * The InteractiveResult item.\r\n   * @internal\r\n   */\r\n  @Prop() interactiveResult!: InteractiveResult;\r\n\r\n  /**\r\n   * Global Atomic state.\r\n   * @internal\r\n   */\r\n  @Prop() store?: AtomicCommonStore<AtomicCommonStoreData>;\r\n\r\n  /**\r\n   * The result content to display.\r\n   */\r\n  @Prop() content?: ParentNode;\r\n\r\n  /**\r\n   * How results should be displayed.\r\n   */\r\n  @Prop() display: ItemDisplayLayout = 'list';\r\n\r\n  /**\r\n   * How large or small results should be.\r\n   */\r\n  @Prop() density: ItemDisplayDensity = 'normal';\r\n\r\n  /**\r\n   * The size of the visual section in result list items.\r\n   *\r\n   * This is overwritten by the image size defined in the result content, if it exists.\r\n   */\r\n  @Prop() imageSize: ItemDisplayImageSize = 'icon';\r\n\r\n  /**\r\n   * The classes to add to the result element.\r\n   */\r\n  @Prop() classes = '';\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  @Prop() loadingFlag?: string;\r\n\r\n  /**\r\n   * Internal function used by atomic-recs-list in advanced setups, which lets you bypass the standard HTML template system.\r\n   * Particularly useful for Atomic React\r\n   *\r\n   * @internal\r\n   */\r\n  @Prop() renderingFunction: ItemRenderingFunction;\r\n\r\n  private resultRootRef?: HTMLElement;\r\n  private executedRenderingFunctionOnce = false;\r\n\r\n  @Listen('atomic/resolveResult')\r\n  public resolveResult(event: ResultContextEvent<FoldedResult | Result>) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    event.detail(this.result);\r\n  }\r\n\r\n  @Listen('atomic/resolveInteractiveResult')\r\n  public resolveInteractiveResult(event: InteractiveResultContextEvent) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    if (this.interactiveResult) {\r\n      event.detail(this.interactiveResult);\r\n    }\r\n  }\r\n\r\n  @Listen('atomic/resolveStopPropagation')\r\n  public resolveStopPropagation(event: CustomEvent) {\r\n    event.detail(this.stopPropagation);\r\n  }\r\n\r\n  @Listen('atomic/resolveResultDisplayConfig')\r\n  public resolveResultDisplayConfig(event: ResultContextEvent<DisplayConfig>) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    event.detail({\r\n      density: this.density,\r\n      imageSize: this.imageSize!,\r\n    });\r\n  }\r\n\r\n  public connectedCallback() {\r\n    this.layout = new ItemLayout(\r\n      this.content!.children,\r\n      this.display,\r\n      this.density,\r\n      this.imageSize\r\n    );\r\n  }\r\n\r\n  private get isCustomRenderFunctionMode() {\r\n    return this.renderingFunction !== undefined;\r\n  }\r\n\r\n  private getContentHTML() {\r\n    return Array.from(this.content!.children)\r\n      .map((child) => child.outerHTML)\r\n      .join('');\r\n  }\r\n\r\n  private shouldExecuteRenderFunction() {\r\n    return (\r\n      this.isCustomRenderFunctionMode &&\r\n      this.resultRootRef &&\r\n      !this.executedRenderingFunctionOnce\r\n    );\r\n  }\r\n\r\n  public render() {\r\n    if (this.isCustomRenderFunctionMode) {\r\n      return (\r\n        <Host class={resultComponentClass}>\r\n          <div\r\n            class=\"result-root\"\r\n            ref={(ref) => (this.resultRootRef = ref)}\r\n          ></div>\r\n        </Host>\r\n      );\r\n    }\r\n    return (\r\n      // deepcode ignore ReactSetInnerHtml: This is not React code\r\n      <Host class={resultComponentClass}>\r\n        <div\r\n          class={`result-root ${this.layout\r\n            .getClasses()\r\n            .concat(this.classes)\r\n            .join(' ')}`}\r\n          innerHTML={this.getContentHTML()}\r\n        ></div>\r\n      </Host>\r\n    );\r\n  }\r\n\r\n  public componentDidLoad() {\r\n    if (this.loadingFlag && this.store) {\r\n      this.store.unsetLoadingFlag(this.loadingFlag);\r\n    }\r\n    applyFocusVisiblePolyfill(this.host);\r\n  }\r\n\r\n  public componentDidRender() {\r\n    if (this.shouldExecuteRenderFunction()) {\r\n      const customRenderOutputAsString = this.renderingFunction!(\r\n        this.result,\r\n        this.resultRootRef!\r\n      );\r\n\r\n      this.resultRootRef!.className += ` ${this.layout\r\n        .getClasses(customRenderOutputAsString)\r\n        .concat(this.classes)\r\n        .join(' ')}`;\r\n\r\n      this.executedRenderingFunctionOnce = true;\r\n    }\r\n  }\r\n}\r\n"],"version":3}