{"file":"generated-answer-common-bac34d66.js","mappings":"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","names":["this","marked","ArrowTopIcon"],"sources":["src/components/common/switch.tsx","src/components/common/generated-answer/copy-button.tsx","src/components/common/generated-answer/feedback-button.tsx","node_modules/marked/lib/marked.umd.js","src/components/common/generated-answer/generated-content/markdown-utils.ts","src/components/common/generated-answer/generated-content/generated-markdown-content.tsx","src/components/common/generated-answer/generated-content/generated-text-content.tsx","src/components/common/generated-answer/generated-content-container.tsx","src/components/common/generated-answer/rephrase-buttons.tsx","src/components/common/generated-answer/retry-prompt.tsx","src/components/common/generated-answer/show-button.tsx","src/components/common/generated-answer/source-citations.tsx","src/components/common/generated-answer/generated-answer-common.tsx"],"sourcesContent":["import {FunctionalComponent, h} from '@stencil/core';\r\n\r\nexport interface SwitchProps {\r\n  checked?: boolean;\r\n  onToggle?(checked: boolean): void;\r\n  ariaLabel?: string;\r\n  part?: string;\r\n  tabIndex?: number;\r\n  title?: string;\r\n  withToggle?: boolean;\r\n}\r\n\r\nexport const Switch: FunctionalComponent<SwitchProps> = (props) => {\r\n  const attributes = {\r\n    onClick: () => props.onToggle?.(!props.checked),\r\n    'arial-label': props.ariaLabel,\r\n    'aria-checked': String(!!props.checked),\r\n    part: props.part,\r\n    tabIndex: props.tabIndex,\r\n    title: props.title,\r\n  };\r\n\r\n  const containerClasses = [\r\n    'w-12',\r\n    'h-6',\r\n    'p-1',\r\n    'rounded-full',\r\n    props.checked ? 'bg-primary' : 'bg-neutral',\r\n  ].join(' ');\r\n\r\n  const handleClasses = [\r\n    'w-4',\r\n    'h-4',\r\n    'rounded-full',\r\n    'bg-white',\r\n    props.checked ? 'ml-6' : '',\r\n  ].join(' ');\r\n\r\n  const buttonClasses = [\r\n    'rounded-full',\r\n    'btn-outline-neutral',\r\n    props.withToggle ? 'flex' : 'hidden',\r\n  ].join(' ');\r\n\r\n  return (\r\n    <button role=\"switch\" {...attributes} class={buttonClasses}>\r\n      <div class={containerClasses}>\r\n        <div class={handleClasses}></div>\r\n      </div>\r\n    </button>\r\n  );\r\n};\r\n","import {FunctionalComponent, h} from '@stencil/core';\r\nimport CopyIcon from '../../../images/copy.svg';\r\nimport {Button} from '../button';\r\n\r\ninterface CopyButtonProps {\r\n  title: string;\r\n  isCopied: boolean;\r\n  error: boolean;\r\n  onClick: () => void;\r\n}\r\n\r\nexport const CopyButton: FunctionalComponent<CopyButtonProps> = (props) => {\r\n  return (\r\n    <Button\r\n      title={props.title}\r\n      part=\"copy-button\"\r\n      style={'text-transparent'}\r\n      class={`p-2 rounded-md ${props.isCopied ? 'copied' : ''} ${\r\n        props.error ? 'error' : ''\r\n      }`}\r\n      onClick={props.onClick}\r\n    >\r\n      <div class=\"icon-container text-neutral-dark\">\r\n        <atomic-icon class=\"w-5\" icon={CopyIcon}></atomic-icon>\r\n      </div>\r\n    </Button>\r\n  );\r\n};\r\n","import {FunctionalComponent, h} from '@stencil/core';\r\nimport Thumbs from '../../../images/thumbs.svg';\r\nimport {Button} from '../button';\r\n\r\ntype FeedbackVariant = 'like' | 'dislike';\r\n\r\ninterface FeedbackButtonProps {\r\n  title: string;\r\n  variant: FeedbackVariant;\r\n  active: boolean;\r\n  onClick: () => void;\r\n}\r\n\r\nexport const FeedbackButton: FunctionalComponent<FeedbackButtonProps> = (\r\n  props\r\n) => {\r\n  return (\r\n    <Button\r\n      title={props.title}\r\n      style=\"text-transparent\"\r\n      part=\"feedback-button\"\r\n      class={`feedback-button p-2 rounded-md ${props.variant} ${\r\n        props.active ? 'active' : ''\r\n      }`}\r\n      onClick={props.onClick}\r\n      ariaPressed={`${props.active}`}\r\n    >\r\n      <atomic-icon class=\"w-5\" icon={Thumbs}></atomic-icon>\r\n    </Button>\r\n  );\r\n};\r\n","/**\n * marked v12.0.2 - a markdown parser\n * Copyright (c) 2011-2024, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n    typeof define === 'function' && define.amd ? define(['exports'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.marked = {}));\n})(this, (function (exports) { 'use strict';\n\n    /**\n     * Gets the original marked default options.\n     */\n    function _getDefaults() {\n        return {\n            async: false,\n            breaks: false,\n            extensions: null,\n            gfm: true,\n            hooks: null,\n            pedantic: false,\n            renderer: null,\n            silent: false,\n            tokenizer: null,\n            walkTokens: null\n        };\n    }\n    exports.defaults = _getDefaults();\n    function changeDefaults(newDefaults) {\n        exports.defaults = newDefaults;\n    }\n\n    /**\n     * Helpers\n     */\n    const escapeTest = /[&<>\"']/;\n    const escapeReplace = new RegExp(escapeTest.source, 'g');\n    const escapeTestNoEncode = /[<>\"']|&(?!(#\\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\\w+);)/;\n    const escapeReplaceNoEncode = new RegExp(escapeTestNoEncode.source, 'g');\n    const escapeReplacements = {\n        '&': '&amp;',\n        '<': '&lt;',\n        '>': '&gt;',\n        '\"': '&quot;',\n        \"'\": '&#39;'\n    };\n    const getEscapeReplacement = (ch) => escapeReplacements[ch];\n    function escape$1(html, encode) {\n        if (encode) {\n            if (escapeTest.test(html)) {\n                return html.replace(escapeReplace, getEscapeReplacement);\n            }\n        }\n        else {\n            if (escapeTestNoEncode.test(html)) {\n                return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n            }\n        }\n        return html;\n    }\n    const unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n    function unescape(html) {\n        // explicitly match decimal, hex, and named HTML entities\n        return html.replace(unescapeTest, (_, n) => {\n            n = n.toLowerCase();\n            if (n === 'colon')\n                return ':';\n            if (n.charAt(0) === '#') {\n                return n.charAt(1) === 'x'\n                    ? String.fromCharCode(parseInt(n.substring(2), 16))\n                    : String.fromCharCode(+n.substring(1));\n            }\n            return '';\n        });\n    }\n    const caret = /(^|[^\\[])\\^/g;\n    function edit(regex, opt) {\n        let source = typeof regex === 'string' ? regex : regex.source;\n        opt = opt || '';\n        const obj = {\n            replace: (name, val) => {\n                let valSource = typeof val === 'string' ? val : val.source;\n                valSource = valSource.replace(caret, '$1');\n                source = source.replace(name, valSource);\n                return obj;\n            },\n            getRegex: () => {\n                return new RegExp(source, opt);\n            }\n        };\n        return obj;\n    }\n    function cleanUrl(href) {\n        try {\n            href = encodeURI(href).replace(/%25/g, '%');\n        }\n        catch (e) {\n            return null;\n        }\n        return href;\n    }\n    const noopTest = { exec: () => null };\n    function splitCells(tableRow, count) {\n        // ensure that every cell-delimiting pipe has a space\n        // before it to distinguish it from an escaped pipe\n        const row = tableRow.replace(/\\|/g, (match, offset, str) => {\n            let escaped = false;\n            let curr = offset;\n            while (--curr >= 0 && str[curr] === '\\\\')\n                escaped = !escaped;\n            if (escaped) {\n                // odd number of slashes means | is escaped\n                // so we leave it alone\n                return '|';\n            }\n            else {\n                // add space before unescaped |\n                return ' |';\n            }\n        }), cells = row.split(/ \\|/);\n        let i = 0;\n        // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n        if (!cells[0].trim()) {\n            cells.shift();\n        }\n        if (cells.length > 0 && !cells[cells.length - 1].trim()) {\n            cells.pop();\n        }\n        if (count) {\n            if (cells.length > count) {\n                cells.splice(count);\n            }\n            else {\n                while (cells.length < count)\n                    cells.push('');\n            }\n        }\n        for (; i < cells.length; i++) {\n            // leading or trailing whitespace is ignored per the gfm spec\n            cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n        }\n        return cells;\n    }\n    /**\n     * Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n     * /c*$/ is vulnerable to REDOS.\n     *\n     * @param str\n     * @param c\n     * @param invert Remove suffix of non-c chars instead. Default falsey.\n     */\n    function rtrim(str, c, invert) {\n        const l = str.length;\n        if (l === 0) {\n            return '';\n        }\n        // Length of suffix matching the invert condition.\n        let suffLen = 0;\n        // Step left until we fail to match the invert condition.\n        while (suffLen < l) {\n            const currChar = str.charAt(l - suffLen - 1);\n            if (currChar === c && !invert) {\n                suffLen++;\n            }\n            else if (currChar !== c && invert) {\n                suffLen++;\n            }\n            else {\n                break;\n            }\n        }\n        return str.slice(0, l - suffLen);\n    }\n    function findClosingBracket(str, b) {\n        if (str.indexOf(b[1]) === -1) {\n            return -1;\n        }\n        let level = 0;\n        for (let i = 0; i < str.length; i++) {\n            if (str[i] === '\\\\') {\n                i++;\n            }\n            else if (str[i] === b[0]) {\n                level++;\n            }\n            else if (str[i] === b[1]) {\n                level--;\n                if (level < 0) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    }\n\n    function outputLink(cap, link, raw, lexer) {\n        const href = link.href;\n        const title = link.title ? escape$1(link.title) : null;\n        const text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n        if (cap[0].charAt(0) !== '!') {\n            lexer.state.inLink = true;\n            const token = {\n                type: 'link',\n                raw,\n                href,\n                title,\n                text,\n                tokens: lexer.inlineTokens(text)\n            };\n            lexer.state.inLink = false;\n            return token;\n        }\n        return {\n            type: 'image',\n            raw,\n            href,\n            title,\n            text: escape$1(text)\n        };\n    }\n    function indentCodeCompensation(raw, text) {\n        const matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n        if (matchIndentToCode === null) {\n            return text;\n        }\n        const indentToCode = matchIndentToCode[1];\n        return text\n            .split('\\n')\n            .map(node => {\n            const matchIndentInNode = node.match(/^\\s+/);\n            if (matchIndentInNode === null) {\n                return node;\n            }\n            const [indentInNode] = matchIndentInNode;\n            if (indentInNode.length >= indentToCode.length) {\n                return node.slice(indentToCode.length);\n            }\n            return node;\n        })\n            .join('\\n');\n    }\n    /**\n     * Tokenizer\n     */\n    class _Tokenizer {\n        options;\n        rules; // set by the lexer\n        lexer; // set by the lexer\n        constructor(options) {\n            this.options = options || exports.defaults;\n        }\n        space(src) {\n            const cap = this.rules.block.newline.exec(src);\n            if (cap && cap[0].length > 0) {\n                return {\n                    type: 'space',\n                    raw: cap[0]\n                };\n            }\n        }\n        code(src) {\n            const cap = this.rules.block.code.exec(src);\n            if (cap) {\n                const text = cap[0].replace(/^ {1,4}/gm, '');\n                return {\n                    type: 'code',\n                    raw: cap[0],\n                    codeBlockStyle: 'indented',\n                    text: !this.options.pedantic\n                        ? rtrim(text, '\\n')\n                        : text\n                };\n            }\n        }\n        fences(src) {\n            const cap = this.rules.block.fences.exec(src);\n            if (cap) {\n                const raw = cap[0];\n                const text = indentCodeCompensation(raw, cap[3] || '');\n                return {\n                    type: 'code',\n                    raw,\n                    lang: cap[2] ? cap[2].trim().replace(this.rules.inline.anyPunctuation, '$1') : cap[2],\n                    text\n                };\n            }\n        }\n        heading(src) {\n            const cap = this.rules.block.heading.exec(src);\n            if (cap) {\n                let text = cap[2].trim();\n                // remove trailing #s\n                if (/#$/.test(text)) {\n                    const trimmed = rtrim(text, '#');\n                    if (this.options.pedantic) {\n                        text = trimmed.trim();\n                    }\n                    else if (!trimmed || / $/.test(trimmed)) {\n                        // CommonMark requires space before trailing #s\n                        text = trimmed.trim();\n                    }\n                }\n                return {\n                    type: 'heading',\n                    raw: cap[0],\n                    depth: cap[1].length,\n                    text,\n                    tokens: this.lexer.inline(text)\n                };\n            }\n        }\n        hr(src) {\n            const cap = this.rules.block.hr.exec(src);\n            if (cap) {\n                return {\n                    type: 'hr',\n                    raw: cap[0]\n                };\n            }\n        }\n        blockquote(src) {\n            const cap = this.rules.block.blockquote.exec(src);\n            if (cap) {\n                // precede setext continuation with 4 spaces so it isn't a setext\n                let text = cap[0].replace(/\\n {0,3}((?:=+|-+) *)(?=\\n|$)/g, '\\n    $1');\n                text = rtrim(text.replace(/^ *>[ \\t]?/gm, ''), '\\n');\n                const top = this.lexer.state.top;\n                this.lexer.state.top = true;\n                const tokens = this.lexer.blockTokens(text);\n                this.lexer.state.top = top;\n                return {\n                    type: 'blockquote',\n                    raw: cap[0],\n                    tokens,\n                    text\n                };\n            }\n        }\n        list(src) {\n            let cap = this.rules.block.list.exec(src);\n            if (cap) {\n                let bull = cap[1].trim();\n                const isordered = bull.length > 1;\n                const list = {\n                    type: 'list',\n                    raw: '',\n                    ordered: isordered,\n                    start: isordered ? +bull.slice(0, -1) : '',\n                    loose: false,\n                    items: []\n                };\n                bull = isordered ? `\\\\d{1,9}\\\\${bull.slice(-1)}` : `\\\\${bull}`;\n                if (this.options.pedantic) {\n                    bull = isordered ? bull : '[*+-]';\n                }\n                // Get next list item\n                const itemRegex = new RegExp(`^( {0,3}${bull})((?:[\\t ][^\\\\n]*)?(?:\\\\n|$))`);\n                let raw = '';\n                let itemContents = '';\n                let endsWithBlankLine = false;\n                // Check if current bullet point can start a new List Item\n                while (src) {\n                    let endEarly = false;\n                    if (!(cap = itemRegex.exec(src))) {\n                        break;\n                    }\n                    if (this.rules.block.hr.test(src)) { // End list if bullet was actually HR (possibly move into itemRegex?)\n                        break;\n                    }\n                    raw = cap[0];\n                    src = src.substring(raw.length);\n                    let line = cap[2].split('\\n', 1)[0].replace(/^\\t+/, (t) => ' '.repeat(3 * t.length));\n                    let nextLine = src.split('\\n', 1)[0];\n                    let indent = 0;\n                    if (this.options.pedantic) {\n                        indent = 2;\n                        itemContents = line.trimStart();\n                    }\n                    else {\n                        indent = cap[2].search(/[^ ]/); // Find first non-space char\n                        indent = indent > 4 ? 1 : indent; // Treat indented code blocks (> 4 spaces) as having only 1 indent\n                        itemContents = line.slice(indent);\n                        indent += cap[1].length;\n                    }\n                    let blankLine = false;\n                    if (!line && /^ *$/.test(nextLine)) { // Items begin with at most one blank line\n                        raw += nextLine + '\\n';\n                        src = src.substring(nextLine.length + 1);\n                        endEarly = true;\n                    }\n                    if (!endEarly) {\n                        const nextBulletRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:[*+-]|\\\\d{1,9}[.)])((?:[ \\t][^\\\\n]*)?(?:\\\\n|$))`);\n                        const hrRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}((?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$)`);\n                        const fencesBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:\\`\\`\\`|~~~)`);\n                        const headingBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}#`);\n                        // Check if following lines should be included in List Item\n                        while (src) {\n                            const rawLine = src.split('\\n', 1)[0];\n                            nextLine = rawLine;\n                            // Re-align to follow commonmark nesting rules\n                            if (this.options.pedantic) {\n                                nextLine = nextLine.replace(/^ {1,4}(?=( {4})*[^ ])/g, '  ');\n                            }\n                            // End list item if found code fences\n                            if (fencesBeginRegex.test(nextLine)) {\n                                break;\n                            }\n                            // End list item if found start of new heading\n                            if (headingBeginRegex.test(nextLine)) {\n                                break;\n                            }\n                            // End list item if found start of new bullet\n                            if (nextBulletRegex.test(nextLine)) {\n                                break;\n                            }\n                            // Horizontal rule found\n                            if (hrRegex.test(src)) {\n                                break;\n                            }\n                            if (nextLine.search(/[^ ]/) >= indent || !nextLine.trim()) { // Dedent if possible\n                                itemContents += '\\n' + nextLine.slice(indent);\n                            }\n                            else {\n                                // not enough indentation\n                                if (blankLine) {\n                                    break;\n                                }\n                                // paragraph continuation unless last line was a different block level element\n                                if (line.search(/[^ ]/) >= 4) { // indented code block\n                                    break;\n                                }\n                                if (fencesBeginRegex.test(line)) {\n                                    break;\n                                }\n                                if (headingBeginRegex.test(line)) {\n                                    break;\n                                }\n                                if (hrRegex.test(line)) {\n                                    break;\n                                }\n                                itemContents += '\\n' + nextLine;\n                            }\n                            if (!blankLine && !nextLine.trim()) { // Check if current line is blank\n                                blankLine = true;\n                            }\n                            raw += rawLine + '\\n';\n                            src = src.substring(rawLine.length + 1);\n                            line = nextLine.slice(indent);\n                        }\n                    }\n                    if (!list.loose) {\n                        // If the previous item ended with a blank line, the list is loose\n                        if (endsWithBlankLine) {\n                            list.loose = true;\n                        }\n                        else if (/\\n *\\n *$/.test(raw)) {\n                            endsWithBlankLine = true;\n                        }\n                    }\n                    let istask = null;\n                    let ischecked;\n                    // Check for task list items\n                    if (this.options.gfm) {\n                        istask = /^\\[[ xX]\\] /.exec(itemContents);\n                        if (istask) {\n                            ischecked = istask[0] !== '[ ] ';\n                            itemContents = itemContents.replace(/^\\[[ xX]\\] +/, '');\n                        }\n                    }\n                    list.items.push({\n                        type: 'list_item',\n                        raw,\n                        task: !!istask,\n                        checked: ischecked,\n                        loose: false,\n                        text: itemContents,\n                        tokens: []\n                    });\n                    list.raw += raw;\n                }\n                // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n                list.items[list.items.length - 1].raw = raw.trimEnd();\n                (list.items[list.items.length - 1]).text = itemContents.trimEnd();\n                list.raw = list.raw.trimEnd();\n                // Item child tokens handled here at end because we needed to have the final item to trim it first\n                for (let i = 0; i < list.items.length; i++) {\n                    this.lexer.state.top = false;\n                    list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n                    if (!list.loose) {\n                        // Check if list should be loose\n                        const spacers = list.items[i].tokens.filter(t => t.type === 'space');\n                        const hasMultipleLineBreaks = spacers.length > 0 && spacers.some(t => /\\n.*\\n/.test(t.raw));\n                        list.loose = hasMultipleLineBreaks;\n                    }\n                }\n                // Set all items to loose if list is loose\n                if (list.loose) {\n                    for (let i = 0; i < list.items.length; i++) {\n                        list.items[i].loose = true;\n                    }\n                }\n                return list;\n            }\n        }\n        html(src) {\n            const cap = this.rules.block.html.exec(src);\n            if (cap) {\n                const token = {\n                    type: 'html',\n                    block: true,\n                    raw: cap[0],\n                    pre: cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style',\n                    text: cap[0]\n                };\n                return token;\n            }\n        }\n        def(src) {\n            const cap = this.rules.block.def.exec(src);\n            if (cap) {\n                const tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n                const href = cap[2] ? cap[2].replace(/^<(.*)>$/, '$1').replace(this.rules.inline.anyPunctuation, '$1') : '';\n                const title = cap[3] ? cap[3].substring(1, cap[3].length - 1).replace(this.rules.inline.anyPunctuation, '$1') : cap[3];\n                return {\n                    type: 'def',\n                    tag,\n                    raw: cap[0],\n                    href,\n                    title\n                };\n            }\n        }\n        table(src) {\n            const cap = this.rules.block.table.exec(src);\n            if (!cap) {\n                return;\n            }\n            if (!/[:|]/.test(cap[2])) {\n                // delimiter row must have a pipe (|) or colon (:) otherwise it is a setext heading\n                return;\n            }\n            const headers = splitCells(cap[1]);\n            const aligns = cap[2].replace(/^\\||\\| *$/g, '').split('|');\n            const rows = cap[3] && cap[3].trim() ? cap[3].replace(/\\n[ \\t]*$/, '').split('\\n') : [];\n            const item = {\n                type: 'table',\n                raw: cap[0],\n                header: [],\n                align: [],\n                rows: []\n            };\n            if (headers.length !== aligns.length) {\n                // header and align columns must be equal, rows can be different.\n                return;\n            }\n            for (const align of aligns) {\n                if (/^ *-+: *$/.test(align)) {\n                    item.align.push('right');\n                }\n                else if (/^ *:-+: *$/.test(align)) {\n                    item.align.push('center');\n                }\n                else if (/^ *:-+ *$/.test(align)) {\n                    item.align.push('left');\n                }\n                else {\n                    item.align.push(null);\n                }\n            }\n            for (const header of headers) {\n                item.header.push({\n                    text: header,\n                    tokens: this.lexer.inline(header)\n                });\n            }\n            for (const row of rows) {\n                item.rows.push(splitCells(row, item.header.length).map(cell => {\n                    return {\n                        text: cell,\n                        tokens: this.lexer.inline(cell)\n                    };\n                }));\n            }\n            return item;\n        }\n        lheading(src) {\n            const cap = this.rules.block.lheading.exec(src);\n            if (cap) {\n                return {\n                    type: 'heading',\n                    raw: cap[0],\n                    depth: cap[2].charAt(0) === '=' ? 1 : 2,\n                    text: cap[1],\n                    tokens: this.lexer.inline(cap[1])\n                };\n            }\n        }\n        paragraph(src) {\n            const cap = this.rules.block.paragraph.exec(src);\n            if (cap) {\n                const text = cap[1].charAt(cap[1].length - 1) === '\\n'\n                    ? cap[1].slice(0, -1)\n                    : cap[1];\n                return {\n                    type: 'paragraph',\n                    raw: cap[0],\n                    text,\n                    tokens: this.lexer.inline(text)\n                };\n            }\n        }\n        text(src) {\n            const cap = this.rules.block.text.exec(src);\n            if (cap) {\n                return {\n                    type: 'text',\n                    raw: cap[0],\n                    text: cap[0],\n                    tokens: this.lexer.inline(cap[0])\n                };\n            }\n        }\n        escape(src) {\n            const cap = this.rules.inline.escape.exec(src);\n            if (cap) {\n                return {\n                    type: 'escape',\n                    raw: cap[0],\n                    text: escape$1(cap[1])\n                };\n            }\n        }\n        tag(src) {\n            const cap = this.rules.inline.tag.exec(src);\n            if (cap) {\n                if (!this.lexer.state.inLink && /^<a /i.test(cap[0])) {\n                    this.lexer.state.inLink = true;\n                }\n                else if (this.lexer.state.inLink && /^<\\/a>/i.test(cap[0])) {\n                    this.lexer.state.inLink = false;\n                }\n                if (!this.lexer.state.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n                    this.lexer.state.inRawBlock = true;\n                }\n                else if (this.lexer.state.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n                    this.lexer.state.inRawBlock = false;\n                }\n                return {\n                    type: 'html',\n                    raw: cap[0],\n                    inLink: this.lexer.state.inLink,\n                    inRawBlock: this.lexer.state.inRawBlock,\n                    block: false,\n                    text: cap[0]\n                };\n            }\n        }\n        link(src) {\n            const cap = this.rules.inline.link.exec(src);\n            if (cap) {\n                const trimmedUrl = cap[2].trim();\n                if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n                    // commonmark requires matching angle brackets\n                    if (!(/>$/.test(trimmedUrl))) {\n                        return;\n                    }\n                    // ending angle bracket cannot be escaped\n                    const rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n                    if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n                        return;\n                    }\n                }\n                else {\n                    // find closing parenthesis\n                    const lastParenIndex = findClosingBracket(cap[2], '()');\n                    if (lastParenIndex > -1) {\n                        const start = cap[0].indexOf('!') === 0 ? 5 : 4;\n                        const linkLen = start + cap[1].length + lastParenIndex;\n                        cap[2] = cap[2].substring(0, lastParenIndex);\n                        cap[0] = cap[0].substring(0, linkLen).trim();\n                        cap[3] = '';\n                    }\n                }\n                let href = cap[2];\n                let title = '';\n                if (this.options.pedantic) {\n                    // split pedantic href and title\n                    const link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n                    if (link) {\n                        href = link[1];\n                        title = link[3];\n                    }\n                }\n                else {\n                    title = cap[3] ? cap[3].slice(1, -1) : '';\n                }\n                href = href.trim();\n                if (/^</.test(href)) {\n                    if (this.options.pedantic && !(/>$/.test(trimmedUrl))) {\n                        // pedantic allows starting angle bracket without ending angle bracket\n                        href = href.slice(1);\n                    }\n                    else {\n                        href = href.slice(1, -1);\n                    }\n                }\n                return outputLink(cap, {\n                    href: href ? href.replace(this.rules.inline.anyPunctuation, '$1') : href,\n                    title: title ? title.replace(this.rules.inline.anyPunctuation, '$1') : title\n                }, cap[0], this.lexer);\n            }\n        }\n        reflink(src, links) {\n            let cap;\n            if ((cap = this.rules.inline.reflink.exec(src))\n                || (cap = this.rules.inline.nolink.exec(src))) {\n                const linkString = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n                const link = links[linkString.toLowerCase()];\n                if (!link) {\n                    const text = cap[0].charAt(0);\n                    return {\n                        type: 'text',\n                        raw: text,\n                        text\n                    };\n                }\n                return outputLink(cap, link, cap[0], this.lexer);\n            }\n        }\n        emStrong(src, maskedSrc, prevChar = '') {\n            let match = this.rules.inline.emStrongLDelim.exec(src);\n            if (!match)\n                return;\n            // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n            if (match[3] && prevChar.match(/[\\p{L}\\p{N}]/u))\n                return;\n            const nextChar = match[1] || match[2] || '';\n            if (!nextChar || !prevChar || this.rules.inline.punctuation.exec(prevChar)) {\n                // unicode Regex counts emoji as 1 char; spread into array for proper count (used multiple times below)\n                const lLength = [...match[0]].length - 1;\n                let rDelim, rLength, delimTotal = lLength, midDelimTotal = 0;\n                const endReg = match[0][0] === '*' ? this.rules.inline.emStrongRDelimAst : this.rules.inline.emStrongRDelimUnd;\n                endReg.lastIndex = 0;\n                // Clip maskedSrc to same section of string as src (move to lexer?)\n                maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n                while ((match = endReg.exec(maskedSrc)) != null) {\n                    rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n                    if (!rDelim)\n                        continue; // skip single * in __abc*abc__\n                    rLength = [...rDelim].length;\n                    if (match[3] || match[4]) { // found another Left Delim\n                        delimTotal += rLength;\n                        continue;\n                    }\n                    else if (match[5] || match[6]) { // either Left or Right Delim\n                        if (lLength % 3 && !((lLength + rLength) % 3)) {\n                            midDelimTotal += rLength;\n                            continue; // CommonMark Emphasis Rules 9-10\n                        }\n                    }\n                    delimTotal -= rLength;\n                    if (delimTotal > 0)\n                        continue; // Haven't found enough closing delimiters\n                    // Remove extra characters. *a*** -> *a*\n                    rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);\n                    // char length can be >1 for unicode characters;\n                    const lastCharLength = [...match[0]][0].length;\n                    const raw = src.slice(0, lLength + match.index + lastCharLength + rLength);\n                    // Create `em` if smallest delimiter has odd char count. *a***\n                    if (Math.min(lLength, rLength) % 2) {\n                        const text = raw.slice(1, -1);\n                        return {\n                            type: 'em',\n                            raw,\n                            text,\n                            tokens: this.lexer.inlineTokens(text)\n                        };\n                    }\n                    // Create 'strong' if smallest delimiter has even char count. **a***\n                    const text = raw.slice(2, -2);\n                    return {\n                        type: 'strong',\n                        raw,\n                        text,\n                        tokens: this.lexer.inlineTokens(text)\n                    };\n                }\n            }\n        }\n        codespan(src) {\n            const cap = this.rules.inline.code.exec(src);\n            if (cap) {\n                let text = cap[2].replace(/\\n/g, ' ');\n                const hasNonSpaceChars = /[^ ]/.test(text);\n                const hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n                if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n                    text = text.substring(1, text.length - 1);\n                }\n                text = escape$1(text, true);\n                return {\n                    type: 'codespan',\n                    raw: cap[0],\n                    text\n                };\n            }\n        }\n        br(src) {\n            const cap = this.rules.inline.br.exec(src);\n            if (cap) {\n                return {\n                    type: 'br',\n                    raw: cap[0]\n                };\n            }\n        }\n        del(src) {\n            const cap = this.rules.inline.del.exec(src);\n            if (cap) {\n                return {\n                    type: 'del',\n                    raw: cap[0],\n                    text: cap[2],\n                    tokens: this.lexer.inlineTokens(cap[2])\n                };\n            }\n        }\n        autolink(src) {\n            const cap = this.rules.inline.autolink.exec(src);\n            if (cap) {\n                let text, href;\n                if (cap[2] === '@') {\n                    text = escape$1(cap[1]);\n                    href = 'mailto:' + text;\n                }\n                else {\n                    text = escape$1(cap[1]);\n                    href = text;\n                }\n                return {\n                    type: 'link',\n                    raw: cap[0],\n                    text,\n                    href,\n                    tokens: [\n                        {\n                            type: 'text',\n                            raw: text,\n                            text\n                        }\n                    ]\n                };\n            }\n        }\n        url(src) {\n            let cap;\n            if (cap = this.rules.inline.url.exec(src)) {\n                let text, href;\n                if (cap[2] === '@') {\n                    text = escape$1(cap[0]);\n                    href = 'mailto:' + text;\n                }\n                else {\n                    // do extended autolink path validation\n                    let prevCapZero;\n                    do {\n                        prevCapZero = cap[0];\n                        cap[0] = this.rules.inline._backpedal.exec(cap[0])?.[0] ?? '';\n                    } while (prevCapZero !== cap[0]);\n                    text = escape$1(cap[0]);\n                    if (cap[1] === 'www.') {\n                        href = 'http://' + cap[0];\n                    }\n                    else {\n                        href = cap[0];\n                    }\n                }\n                return {\n                    type: 'link',\n                    raw: cap[0],\n                    text,\n                    href,\n                    tokens: [\n                        {\n                            type: 'text',\n                            raw: text,\n                            text\n                        }\n                    ]\n                };\n            }\n        }\n        inlineText(src) {\n            const cap = this.rules.inline.text.exec(src);\n            if (cap) {\n                let text;\n                if (this.lexer.state.inRawBlock) {\n                    text = cap[0];\n                }\n                else {\n                    text = escape$1(cap[0]);\n                }\n                return {\n                    type: 'text',\n                    raw: cap[0],\n                    text\n                };\n            }\n        }\n    }\n\n    /**\n     * Block-Level Grammar\n     */\n    const newline = /^(?: *(?:\\n|$))+/;\n    const blockCode = /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/;\n    const fences = /^ {0,3}(`{3,}(?=[^`\\n]*(?:\\n|$))|~{3,})([^\\n]*)(?:\\n|$)(?:|([\\s\\S]*?)(?:\\n|$))(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/;\n    const hr = /^ {0,3}((?:-[\\t ]*){3,}|(?:_[ \\t]*){3,}|(?:\\*[ \\t]*){3,})(?:\\n+|$)/;\n    const heading = /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/;\n    const bullet = /(?:[*+-]|\\d{1,9}[.)])/;\n    const lheading = edit(/^(?!bull |blockCode|fences|blockquote|heading|html)((?:.|\\n(?!\\s*?\\n|bull |blockCode|fences|blockquote|heading|html))+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/)\n        .replace(/bull/g, bullet) // lists can interrupt\n        .replace(/blockCode/g, / {4}/) // indented code blocks can interrupt\n        .replace(/fences/g, / {0,3}(?:`{3,}|~{3,})/) // fenced code blocks can interrupt\n        .replace(/blockquote/g, / {0,3}>/) // blockquote can interrupt\n        .replace(/heading/g, / {0,3}#{1,6}/) // ATX heading can interrupt\n        .replace(/html/g, / {0,3}<[^\\n>]+>\\n/) // block html can interrupt\n        .getRegex();\n    const _paragraph = /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\\n)[^\\n]+)*)/;\n    const blockText = /^[^\\n]+/;\n    const _blockLabel = /(?!\\s*\\])(?:\\\\.|[^\\[\\]\\\\])+/;\n    const def = edit(/^ {0,3}\\[(label)\\]: *(?:\\n *)?([^<\\s][^\\s]*|<.*?>)(?:(?: +(?:\\n *)?| *\\n *)(title))? *(?:\\n+|$)/)\n        .replace('label', _blockLabel)\n        .replace('title', /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/)\n        .getRegex();\n    const list = edit(/^( {0,3}bull)([ \\t][^\\n]+?)?(?:\\n|$)/)\n        .replace(/bull/g, bullet)\n        .getRegex();\n    const _tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n        + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n        + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n        + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n        + '|p|param|search|section|summary|table|tbody|td|tfoot|th|thead|title'\n        + '|tr|track|ul';\n    const _comment = /<!--(?:-?>|[\\s\\S]*?(?:-->|$))/;\n    const html = edit('^ {0,3}(?:' // optional indentation\n        + '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n        + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n        + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n        + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n        + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n        + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (6)\n        + '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) open tag\n        + '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) closing tag\n        + ')', 'i')\n        .replace('comment', _comment)\n        .replace('tag', _tag)\n        .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n        .getRegex();\n    const paragraph = edit(_paragraph)\n        .replace('hr', hr)\n        .replace('heading', ' {0,3}#{1,6}(?:\\\\s|$)')\n        .replace('|lheading', '') // setext headings don't interrupt commonmark paragraphs\n        .replace('|table', '')\n        .replace('blockquote', ' {0,3}>')\n        .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n        .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n        .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n        .replace('tag', _tag) // pars can be interrupted by type (6) html blocks\n        .getRegex();\n    const blockquote = edit(/^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/)\n        .replace('paragraph', paragraph)\n        .getRegex();\n    /**\n     * Normal Block Grammar\n     */\n    const blockNormal = {\n        blockquote,\n        code: blockCode,\n        def,\n        fences,\n        heading,\n        hr,\n        html,\n        lheading,\n        list,\n        newline,\n        paragraph,\n        table: noopTest,\n        text: blockText\n    };\n    /**\n     * GFM Block Grammar\n     */\n    const gfmTable = edit('^ *([^\\\\n ].*)\\\\n' // Header\n        + ' {0,3}((?:\\\\| *)?:?-+:? *(?:\\\\| *:?-+:? *)*(?:\\\\| *)?)' // Align\n        + '(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)') // Cells\n        .replace('hr', hr)\n        .replace('heading', ' {0,3}#{1,6}(?:\\\\s|$)')\n        .replace('blockquote', ' {0,3}>')\n        .replace('code', ' {4}[^\\\\n]')\n        .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n        .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n        .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n        .replace('tag', _tag) // tables can be interrupted by type (6) html blocks\n        .getRegex();\n    const blockGfm = {\n        ...blockNormal,\n        table: gfmTable,\n        paragraph: edit(_paragraph)\n            .replace('hr', hr)\n            .replace('heading', ' {0,3}#{1,6}(?:\\\\s|$)')\n            .replace('|lheading', '') // setext headings don't interrupt commonmark paragraphs\n            .replace('table', gfmTable) // interrupt paragraphs with table\n            .replace('blockquote', ' {0,3}>')\n            .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n            .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n            .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n            .replace('tag', _tag) // pars can be interrupted by type (6) html blocks\n            .getRegex()\n    };\n    /**\n     * Pedantic grammar (original John Gruber's loose markdown specification)\n     */\n    const blockPedantic = {\n        ...blockNormal,\n        html: edit('^ *(?:comment *(?:\\\\n|\\\\s*$)'\n            + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n            + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n            .replace('comment', _comment)\n            .replace(/tag/g, '(?!(?:'\n            + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n            + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n            + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n            .getRegex(),\n        def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n        heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n        fences: noopTest, // fences not supported\n        lheading: /^(.+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n        paragraph: edit(_paragraph)\n            .replace('hr', hr)\n            .replace('heading', ' *#{1,6} *[^\\n]')\n            .replace('lheading', lheading)\n            .replace('|table', '')\n            .replace('blockquote', ' {0,3}>')\n            .replace('|fences', '')\n            .replace('|list', '')\n            .replace('|html', '')\n            .replace('|tag', '')\n            .getRegex()\n    };\n    /**\n     * Inline-Level Grammar\n     */\n    const escape = /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/;\n    const inlineCode = /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/;\n    const br = /^( {2,}|\\\\)\\n(?!\\s*$)/;\n    const inlineText = /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/;\n    // list of unicode punctuation marks, plus any missing characters from CommonMark spec\n    const _punctuation = '\\\\p{P}\\\\p{S}';\n    const punctuation = edit(/^((?![*_])[\\spunctuation])/, 'u')\n        .replace(/punctuation/g, _punctuation).getRegex();\n    // sequences em should skip over [title](link), `code`, <html>\n    const blockSkip = /\\[[^[\\]]*?\\]\\([^\\(\\)]*?\\)|`[^`]*?`|<[^<>]*?>/g;\n    const emStrongLDelim = edit(/^(?:\\*+(?:((?!\\*)[punct])|[^\\s*]))|^_+(?:((?!_)[punct])|([^\\s_]))/, 'u')\n        .replace(/punct/g, _punctuation)\n        .getRegex();\n    const emStrongRDelimAst = edit('^[^_*]*?__[^_*]*?\\\\*[^_*]*?(?=__)' // Skip orphan inside strong\n        + '|[^*]+(?=[^*])' // Consume to delim\n        + '|(?!\\\\*)[punct](\\\\*+)(?=[\\\\s]|$)' // (1) #*** can only be a Right Delimiter\n        + '|[^punct\\\\s](\\\\*+)(?!\\\\*)(?=[punct\\\\s]|$)' // (2) a***#, a*** can only be a Right Delimiter\n        + '|(?!\\\\*)[punct\\\\s](\\\\*+)(?=[^punct\\\\s])' // (3) #***a, ***a can only be Left Delimiter\n        + '|[\\\\s](\\\\*+)(?!\\\\*)(?=[punct])' // (4) ***# can only be Left Delimiter\n        + '|(?!\\\\*)[punct](\\\\*+)(?!\\\\*)(?=[punct])' // (5) #***# can be either Left or Right Delimiter\n        + '|[^punct\\\\s](\\\\*+)(?=[^punct\\\\s])', 'gu') // (6) a***a can be either Left or Right Delimiter\n        .replace(/punct/g, _punctuation)\n        .getRegex();\n    // (6) Not allowed for _\n    const emStrongRDelimUnd = edit('^[^_*]*?\\\\*\\\\*[^_*]*?_[^_*]*?(?=\\\\*\\\\*)' // Skip orphan inside strong\n        + '|[^_]+(?=[^_])' // Consume to delim\n        + '|(?!_)[punct](_+)(?=[\\\\s]|$)' // (1) #___ can only be a Right Delimiter\n        + '|[^punct\\\\s](_+)(?!_)(?=[punct\\\\s]|$)' // (2) a___#, a___ can only be a Right Delimiter\n        + '|(?!_)[punct\\\\s](_+)(?=[^punct\\\\s])' // (3) #___a, ___a can only be Left Delimiter\n        + '|[\\\\s](_+)(?!_)(?=[punct])' // (4) ___# can only be Left Delimiter\n        + '|(?!_)[punct](_+)(?!_)(?=[punct])', 'gu') // (5) #___# can be either Left or Right Delimiter\n        .replace(/punct/g, _punctuation)\n        .getRegex();\n    const anyPunctuation = edit(/\\\\([punct])/, 'gu')\n        .replace(/punct/g, _punctuation)\n        .getRegex();\n    const autolink = edit(/^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/)\n        .replace('scheme', /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/)\n        .replace('email', /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/)\n        .getRegex();\n    const _inlineComment = edit(_comment).replace('(?:-->|$)', '-->').getRegex();\n    const tag = edit('^comment'\n        + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n        + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n        + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n        + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n        + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>') // CDATA section\n        .replace('comment', _inlineComment)\n        .replace('attribute', /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/)\n        .getRegex();\n    const _inlineLabel = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\n    const link = edit(/^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/)\n        .replace('label', _inlineLabel)\n        .replace('href', /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/)\n        .replace('title', /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/)\n        .getRegex();\n    const reflink = edit(/^!?\\[(label)\\]\\[(ref)\\]/)\n        .replace('label', _inlineLabel)\n        .replace('ref', _blockLabel)\n        .getRegex();\n    const nolink = edit(/^!?\\[(ref)\\](?:\\[\\])?/)\n        .replace('ref', _blockLabel)\n        .getRegex();\n    const reflinkSearch = edit('reflink|nolink(?!\\\\()', 'g')\n        .replace('reflink', reflink)\n        .replace('nolink', nolink)\n        .getRegex();\n    /**\n     * Normal Inline Grammar\n     */\n    const inlineNormal = {\n        _backpedal: noopTest, // only used for GFM url\n        anyPunctuation,\n        autolink,\n        blockSkip,\n        br,\n        code: inlineCode,\n        del: noopTest,\n        emStrongLDelim,\n        emStrongRDelimAst,\n        emStrongRDelimUnd,\n        escape,\n        link,\n        nolink,\n        punctuation,\n        reflink,\n        reflinkSearch,\n        tag,\n        text: inlineText,\n        url: noopTest\n    };\n    /**\n     * Pedantic Inline Grammar\n     */\n    const inlinePedantic = {\n        ...inlineNormal,\n        link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n            .replace('label', _inlineLabel)\n            .getRegex(),\n        reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n            .replace('label', _inlineLabel)\n            .getRegex()\n    };\n    /**\n     * GFM Inline Grammar\n     */\n    const inlineGfm = {\n        ...inlineNormal,\n        escape: edit(escape).replace('])', '~|])').getRegex(),\n        url: edit(/^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/, 'i')\n            .replace('email', /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/)\n            .getRegex(),\n        _backpedal: /(?:[^?!.,:;*_'\"~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_'\"~)]+(?!$))+/,\n        del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n        text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/\n    };\n    /**\n     * GFM + Line Breaks Inline Grammar\n     */\n    const inlineBreaks = {\n        ...inlineGfm,\n        br: edit(br).replace('{2,}', '*').getRegex(),\n        text: edit(inlineGfm.text)\n            .replace('\\\\b_', '\\\\b_| {2,}\\\\n')\n            .replace(/\\{2,\\}/g, '*')\n            .getRegex()\n    };\n    /**\n     * exports\n     */\n    const block = {\n        normal: blockNormal,\n        gfm: blockGfm,\n        pedantic: blockPedantic\n    };\n    const inline = {\n        normal: inlineNormal,\n        gfm: inlineGfm,\n        breaks: inlineBreaks,\n        pedantic: inlinePedantic\n    };\n\n    /**\n     * Block Lexer\n     */\n    class _Lexer {\n        tokens;\n        options;\n        state;\n        tokenizer;\n        inlineQueue;\n        constructor(options) {\n            // TokenList cannot be created in one go\n            this.tokens = [];\n            this.tokens.links = Object.create(null);\n            this.options = options || exports.defaults;\n            this.options.tokenizer = this.options.tokenizer || new _Tokenizer();\n            this.tokenizer = this.options.tokenizer;\n            this.tokenizer.options = this.options;\n            this.tokenizer.lexer = this;\n            this.inlineQueue = [];\n            this.state = {\n                inLink: false,\n                inRawBlock: false,\n                top: true\n            };\n            const rules = {\n                block: block.normal,\n                inline: inline.normal\n            };\n            if (this.options.pedantic) {\n                rules.block = block.pedantic;\n                rules.inline = inline.pedantic;\n            }\n            else if (this.options.gfm) {\n                rules.block = block.gfm;\n                if (this.options.breaks) {\n                    rules.inline = inline.breaks;\n                }\n                else {\n                    rules.inline = inline.gfm;\n                }\n            }\n            this.tokenizer.rules = rules;\n        }\n        /**\n         * Expose Rules\n         */\n        static get rules() {\n            return {\n                block,\n                inline\n            };\n        }\n        /**\n         * Static Lex Method\n         */\n        static lex(src, options) {\n            const lexer = new _Lexer(options);\n            return lexer.lex(src);\n        }\n        /**\n         * Static Lex Inline Method\n         */\n        static lexInline(src, options) {\n            const lexer = new _Lexer(options);\n            return lexer.inlineTokens(src);\n        }\n        /**\n         * Preprocessing\n         */\n        lex(src) {\n            src = src\n                .replace(/\\r\\n|\\r/g, '\\n');\n            this.blockTokens(src, this.tokens);\n            for (let i = 0; i < this.inlineQueue.length; i++) {\n                const next = this.inlineQueue[i];\n                this.inlineTokens(next.src, next.tokens);\n            }\n            this.inlineQueue = [];\n            return this.tokens;\n        }\n        blockTokens(src, tokens = []) {\n            if (this.options.pedantic) {\n                src = src.replace(/\\t/g, '    ').replace(/^ +$/gm, '');\n            }\n            else {\n                src = src.replace(/^( *)(\\t+)/gm, (_, leading, tabs) => {\n                    return leading + '    '.repeat(tabs.length);\n                });\n            }\n            let token;\n            let lastToken;\n            let cutSrc;\n            let lastParagraphClipped;\n            while (src) {\n                if (this.options.extensions\n                    && this.options.extensions.block\n                    && this.options.extensions.block.some((extTokenizer) => {\n                        if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n                            src = src.substring(token.raw.length);\n                            tokens.push(token);\n                            return true;\n                        }\n                        return false;\n                    })) {\n                    continue;\n                }\n                // newline\n                if (token = this.tokenizer.space(src)) {\n                    src = src.substring(token.raw.length);\n                    if (token.raw.length === 1 && tokens.length > 0) {\n                        // if there's a single \\n as a spacer, it's terminating the last line,\n                        // so move it there so that we don't get unnecessary paragraph tags\n                        tokens[tokens.length - 1].raw += '\\n';\n                    }\n                    else {\n                        tokens.push(token);\n                    }\n                    continue;\n                }\n                // code\n                if (token = this.tokenizer.code(src)) {\n                    src = src.substring(token.raw.length);\n                    lastToken = tokens[tokens.length - 1];\n                    // An indented code block cannot interrupt a paragraph.\n                    if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n                        lastToken.raw += '\\n' + token.raw;\n                        lastToken.text += '\\n' + token.text;\n                        this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n                    }\n                    else {\n                        tokens.push(token);\n                    }\n                    continue;\n                }\n                // fences\n                if (token = this.tokenizer.fences(src)) {\n                    src = src.substring(token.raw.length);\n                    tokens.push(token);\n                    continue;\n                }\n                // heading\n                if (token = this.tokenizer.heading(src)) {\n                    src = src.substring(token.raw.length);\n                    tokens.push(token);\n                    continue;\n                }\n                // hr\n                if (token = this.tokenizer.hr(src)) {\n                    src = src.substring(token.raw.length);\n                    tokens.push(token);\n                    continue;\n                }\n                // blockquote\n                if (token = this.tokenizer.blockquote(src)) {\n                    src = src.substring(token.raw.length);\n                    tokens.push(token);\n                    continue;\n                }\n                // list\n                if (token = this.tokenizer.list(src)) {\n                    src = src.substring(token.raw.length);\n                    tokens.push(token);\n                    continue;\n                }\n                // html\n                if (token = this.tokenizer.html(src)) {\n                    src = src.substring(token.raw.length);\n                    tokens.push(token);\n                    continue;\n                }\n                // def\n                if (token = this.tokenizer.def(src)) {\n                    src = src.substring(token.raw.length);\n                    lastToken = tokens[tokens.length - 1];\n                    if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n                        lastToken.raw += '\\n' + token.raw;\n                        lastToken.text += '\\n' + token.raw;\n                        this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n                    }\n                    else if (!this.tokens.links[token.tag]) {\n                        this.tokens.links[token.tag] = {\n                            href: token.href,\n                            title: token.title\n                        };\n                    }\n                    continue;\n                }\n                // table (gfm)\n                if (token = this.tokenizer.table(src)) {\n                    src = src.substring(token.raw.length);\n                    tokens.push(token);\n                    continue;\n                }\n                // lheading\n                if (token = this.tokenizer.lheading(src)) {\n                    src = src.substring(token.raw.length);\n                    tokens.push(token);\n                    continue;\n                }\n                // top-level paragraph\n                // prevent paragraph consuming extensions by clipping 'src' to extension start\n                cutSrc = src;\n                if (this.options.extensions && this.options.extensions.startBlock) {\n                    let startIndex = Infinity;\n                    const tempSrc = src.slice(1);\n                    let tempStart;\n                    this.options.extensions.startBlock.forEach((getStartIndex) => {\n                        tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n                        if (typeof tempStart === 'number' && tempStart >= 0) {\n                            startIndex = Math.min(startIndex, tempStart);\n                        }\n                    });\n                    if (startIndex < Infinity && startIndex >= 0) {\n                        cutSrc = src.substring(0, startIndex + 1);\n                    }\n                }\n                if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n                    lastToken = tokens[tokens.length - 1];\n                    if (lastParagraphClipped && lastToken.type === 'paragraph') {\n                        lastToken.raw += '\\n' + token.raw;\n                        lastToken.text += '\\n' + token.text;\n                        this.inlineQueue.pop();\n                        this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n                    }\n                    else {\n                        tokens.push(token);\n                    }\n                    lastParagraphClipped = (cutSrc.length !== src.length);\n                    src = src.substring(token.raw.length);\n                    continue;\n                }\n                // text\n                if (token = this.tokenizer.text(src)) {\n                    src = src.substring(token.raw.length);\n                    lastToken = tokens[tokens.length - 1];\n                    if (lastToken && lastToken.type === 'text') {\n                        lastToken.raw += '\\n' + token.raw;\n                        lastToken.text += '\\n' + token.text;\n                        this.inlineQueue.pop();\n                        this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n                    }\n                    else {\n                        tokens.push(token);\n                    }\n                    continue;\n                }\n                if (src) {\n                    const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n                    if (this.options.silent) {\n                        console.error(errMsg);\n                        break;\n                    }\n                    else {\n                        throw new Error(errMsg);\n                    }\n                }\n            }\n            this.state.top = true;\n            return tokens;\n        }\n        inline(src, tokens = []) {\n            this.inlineQueue.push({ src, tokens });\n            return tokens;\n        }\n        /**\n         * Lexing/Compiling\n         */\n        inlineTokens(src, tokens = []) {\n            let token, lastToken, cutSrc;\n            // String with links masked to avoid interference with em and strong\n            let maskedSrc = src;\n            let match;\n            let keepPrevChar, prevChar;\n            // Mask out reflinks\n            if (this.tokens.links) {\n                const links = Object.keys(this.tokens.links);\n                if (links.length > 0) {\n                    while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n                        if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n                            maskedSrc = maskedSrc.slice(0, match.index) + '[' + 'a'.repeat(match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n                        }\n                    }\n                }\n            }\n            // Mask out other blocks\n            while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n                maskedSrc = maskedSrc.slice(0, match.index) + '[' + 'a'.repeat(match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n            }\n            // Mask out escaped characters\n            while ((match = this.tokenizer.rules.inline.anyPunctuation.exec(maskedSrc)) != null) {\n                maskedSrc = maskedSrc.slice(0, match.index) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.anyPunctuation.lastIndex);\n            }\n            while (src) {\n                if (!keepPrevChar) {\n                    prevChar = '';\n                }\n                keepPrevChar = false;\n                // extensions\n                if (this.options.extensions\n                    && this.options.extensions.inline\n                    && this.options.extensions.inline.some((extTokenizer) => {\n                        if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n                            src = src.substring(token.raw.length);\n                            tokens.push(token);\n                            return true;\n                        }\n                        return false;\n                    })) {\n                    continue;\n                }\n                // escape\n                if (token = this.tokenizer.escape(src)) {\n                    src = src.substring(token.raw.length);\n                    tokens.push(token);\n                    continue;\n                }\n                // tag\n                if (token = this.tokenizer.tag(src)) {\n                    src = src.substring(token.raw.length);\n                    lastToken = tokens[tokens.length - 1];\n                    if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n                        lastToken.raw += token.raw;\n                        lastToken.text += token.text;\n                    }\n                    else {\n                        tokens.push(token);\n                    }\n                    continue;\n                }\n                // link\n                if (token = this.tokenizer.link(src)) {\n                    src = src.substring(token.raw.length);\n                    tokens.push(token);\n                    continue;\n                }\n                // reflink, nolink\n                if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n                    src = src.substring(token.raw.length);\n                    lastToken = tokens[tokens.length - 1];\n                    if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n                        lastToken.raw += token.raw;\n                        lastToken.text += token.text;\n                    }\n                    else {\n                        tokens.push(token);\n                    }\n                    continue;\n                }\n                // em & strong\n                if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n                    src = src.substring(token.raw.length);\n                    tokens.push(token);\n                    continue;\n                }\n                // code\n                if (token = this.tokenizer.codespan(src)) {\n                    src = src.substring(token.raw.length);\n                    tokens.push(token);\n                    continue;\n                }\n                // br\n                if (token = this.tokenizer.br(src)) {\n                    src = src.substring(token.raw.length);\n                    tokens.push(token);\n                    continue;\n                }\n                // del (gfm)\n                if (token = this.tokenizer.del(src)) {\n                    src = src.substring(token.raw.length);\n                    tokens.push(token);\n                    continue;\n                }\n                // autolink\n                if (token = this.tokenizer.autolink(src)) {\n                    src = src.substring(token.raw.length);\n                    tokens.push(token);\n                    continue;\n                }\n                // url (gfm)\n                if (!this.state.inLink && (token = this.tokenizer.url(src))) {\n                    src = src.substring(token.raw.length);\n                    tokens.push(token);\n                    continue;\n                }\n                // text\n                // prevent inlineText consuming extensions by clipping 'src' to extension start\n                cutSrc = src;\n                if (this.options.extensions && this.options.extensions.startInline) {\n                    let startIndex = Infinity;\n                    const tempSrc = src.slice(1);\n                    let tempStart;\n                    this.options.extensions.startInline.forEach((getStartIndex) => {\n                        tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n                        if (typeof tempStart === 'number' && tempStart >= 0) {\n                            startIndex = Math.min(startIndex, tempStart);\n                        }\n                    });\n                    if (startIndex < Infinity && startIndex >= 0) {\n                        cutSrc = src.substring(0, startIndex + 1);\n                    }\n                }\n                if (token = this.tokenizer.inlineText(cutSrc)) {\n                    src = src.substring(token.raw.length);\n                    if (token.raw.slice(-1) !== '_') { // Track prevChar before string of ____ started\n                        prevChar = token.raw.slice(-1);\n                    }\n                    keepPrevChar = true;\n                    lastToken = tokens[tokens.length - 1];\n                    if (lastToken && lastToken.type === 'text') {\n                        lastToken.raw += token.raw;\n                        lastToken.text += token.text;\n                    }\n                    else {\n                        tokens.push(token);\n                    }\n                    continue;\n                }\n                if (src) {\n                    const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n                    if (this.options.silent) {\n                        console.error(errMsg);\n                        break;\n                    }\n                    else {\n                        throw new Error(errMsg);\n                    }\n                }\n            }\n            return tokens;\n        }\n    }\n\n    /**\n     * Renderer\n     */\n    class _Renderer {\n        options;\n        constructor(options) {\n            this.options = options || exports.defaults;\n        }\n        code(code, infostring, escaped) {\n            const lang = (infostring || '').match(/^\\S*/)?.[0];\n            code = code.replace(/\\n$/, '') + '\\n';\n            if (!lang) {\n                return '<pre><code>'\n                    + (escaped ? code : escape$1(code, true))\n                    + '</code></pre>\\n';\n            }\n            return '<pre><code class=\"language-'\n                + escape$1(lang)\n                + '\">'\n                + (escaped ? code : escape$1(code, true))\n                + '</code></pre>\\n';\n        }\n        blockquote(quote) {\n            return `<blockquote>\\n${quote}</blockquote>\\n`;\n        }\n        html(html, block) {\n            return html;\n        }\n        heading(text, level, raw) {\n            // ignore IDs\n            return `<h${level}>${text}</h${level}>\\n`;\n        }\n        hr() {\n            return '<hr>\\n';\n        }\n        list(body, ordered, start) {\n            const type = ordered ? 'ol' : 'ul';\n            const startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n            return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n        }\n        listitem(text, task, checked) {\n            return `<li>${text}</li>\\n`;\n        }\n        checkbox(checked) {\n            return '<input '\n                + (checked ? 'checked=\"\" ' : '')\n                + 'disabled=\"\" type=\"checkbox\">';\n        }\n        paragraph(text) {\n            return `<p>${text}</p>\\n`;\n        }\n        table(header, body) {\n            if (body)\n                body = `<tbody>${body}</tbody>`;\n            return '<table>\\n'\n                + '<thead>\\n'\n                + header\n                + '</thead>\\n'\n                + body\n                + '</table>\\n';\n        }\n        tablerow(content) {\n            return `<tr>\\n${content}</tr>\\n`;\n        }\n        tablecell(content, flags) {\n            const type = flags.header ? 'th' : 'td';\n            const tag = flags.align\n                ? `<${type} align=\"${flags.align}\">`\n                : `<${type}>`;\n            return tag + content + `</${type}>\\n`;\n        }\n        /**\n         * span level renderer\n         */\n        strong(text) {\n            return `<strong>${text}</strong>`;\n        }\n        em(text) {\n            return `<em>${text}</em>`;\n        }\n        codespan(text) {\n            return `<code>${text}</code>`;\n        }\n        br() {\n            return '<br>';\n        }\n        del(text) {\n            return `<del>${text}</del>`;\n        }\n        link(href, title, text) {\n            const cleanHref = cleanUrl(href);\n            if (cleanHref === null) {\n                return text;\n            }\n            href = cleanHref;\n            let out = '<a href=\"' + href + '\"';\n            if (title) {\n                out += ' title=\"' + title + '\"';\n            }\n            out += '>' + text + '</a>';\n            return out;\n        }\n        image(href, title, text) {\n            const cleanHref = cleanUrl(href);\n            if (cleanHref === null) {\n                return text;\n            }\n            href = cleanHref;\n            let out = `<img src=\"${href}\" alt=\"${text}\"`;\n            if (title) {\n                out += ` title=\"${title}\"`;\n            }\n            out += '>';\n            return out;\n        }\n        text(text) {\n            return text;\n        }\n    }\n\n    /**\n     * TextRenderer\n     * returns only the textual part of the token\n     */\n    class _TextRenderer {\n        // no need for block level renderers\n        strong(text) {\n            return text;\n        }\n        em(text) {\n            return text;\n        }\n        codespan(text) {\n            return text;\n        }\n        del(text) {\n            return text;\n        }\n        html(text) {\n            return text;\n        }\n        text(text) {\n            return text;\n        }\n        link(href, title, text) {\n            return '' + text;\n        }\n        image(href, title, text) {\n            return '' + text;\n        }\n        br() {\n            return '';\n        }\n    }\n\n    /**\n     * Parsing & Compiling\n     */\n    class _Parser {\n        options;\n        renderer;\n        textRenderer;\n        constructor(options) {\n            this.options = options || exports.defaults;\n            this.options.renderer = this.options.renderer || new _Renderer();\n            this.renderer = this.options.renderer;\n            this.renderer.options = this.options;\n            this.textRenderer = new _TextRenderer();\n        }\n        /**\n         * Static Parse Method\n         */\n        static parse(tokens, options) {\n            const parser = new _Parser(options);\n            return parser.parse(tokens);\n        }\n        /**\n         * Static Parse Inline Method\n         */\n        static parseInline(tokens, options) {\n            const parser = new _Parser(options);\n            return parser.parseInline(tokens);\n        }\n        /**\n         * Parse Loop\n         */\n        parse(tokens, top = true) {\n            let out = '';\n            for (let i = 0; i < tokens.length; i++) {\n                const token = tokens[i];\n                // Run any renderer extensions\n                if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n                    const genericToken = token;\n                    const ret = this.options.extensions.renderers[genericToken.type].call({ parser: this }, genericToken);\n                    if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(genericToken.type)) {\n                        out += ret || '';\n                        continue;\n                    }\n                }\n                switch (token.type) {\n                    case 'space': {\n                        continue;\n                    }\n                    case 'hr': {\n                        out += this.renderer.hr();\n                        continue;\n                    }\n                    case 'heading': {\n                        const headingToken = token;\n                        out += this.renderer.heading(this.parseInline(headingToken.tokens), headingToken.depth, unescape(this.parseInline(headingToken.tokens, this.textRenderer)));\n                        continue;\n                    }\n                    case 'code': {\n                        const codeToken = token;\n                        out += this.renderer.code(codeToken.text, codeToken.lang, !!codeToken.escaped);\n                        continue;\n                    }\n                    case 'table': {\n                        const tableToken = token;\n                        let header = '';\n                        // header\n                        let cell = '';\n                        for (let j = 0; j < tableToken.header.length; j++) {\n                            cell += this.renderer.tablecell(this.parseInline(tableToken.header[j].tokens), { header: true, align: tableToken.align[j] });\n                        }\n                        header += this.renderer.tablerow(cell);\n                        let body = '';\n                        for (let j = 0; j < tableToken.rows.length; j++) {\n                            const row = tableToken.rows[j];\n                            cell = '';\n                            for (let k = 0; k < row.length; k++) {\n                                cell += this.renderer.tablecell(this.parseInline(row[k].tokens), { header: false, align: tableToken.align[k] });\n                            }\n                            body += this.renderer.tablerow(cell);\n                        }\n                        out += this.renderer.table(header, body);\n                        continue;\n                    }\n                    case 'blockquote': {\n                        const blockquoteToken = token;\n                        const body = this.parse(blockquoteToken.tokens);\n                        out += this.renderer.blockquote(body);\n                        continue;\n                    }\n                    case 'list': {\n                        const listToken = token;\n                        const ordered = listToken.ordered;\n                        const start = listToken.start;\n                        const loose = listToken.loose;\n                        let body = '';\n                        for (let j = 0; j < listToken.items.length; j++) {\n                            const item = listToken.items[j];\n                            const checked = item.checked;\n                            const task = item.task;\n                            let itemBody = '';\n                            if (item.task) {\n                                const checkbox = this.renderer.checkbox(!!checked);\n                                if (loose) {\n                                    if (item.tokens.length > 0 && item.tokens[0].type === 'paragraph') {\n                                        item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n                                        if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                                            item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                                        }\n                                    }\n                                    else {\n                                        item.tokens.unshift({\n                                            type: 'text',\n                                            text: checkbox + ' '\n                                        });\n                                    }\n                                }\n                                else {\n                                    itemBody += checkbox + ' ';\n                                }\n                            }\n                            itemBody += this.parse(item.tokens, loose);\n                            body += this.renderer.listitem(itemBody, task, !!checked);\n                        }\n                        out += this.renderer.list(body, ordered, start);\n                        continue;\n                    }\n                    case 'html': {\n                        const htmlToken = token;\n                        out += this.renderer.html(htmlToken.text, htmlToken.block);\n                        continue;\n                    }\n                    case 'paragraph': {\n                        const paragraphToken = token;\n                        out += this.renderer.paragraph(this.parseInline(paragraphToken.tokens));\n                        continue;\n                    }\n                    case 'text': {\n                        let textToken = token;\n                        let body = textToken.tokens ? this.parseInline(textToken.tokens) : textToken.text;\n                        while (i + 1 < tokens.length && tokens[i + 1].type === 'text') {\n                            textToken = tokens[++i];\n                            body += '\\n' + (textToken.tokens ? this.parseInline(textToken.tokens) : textToken.text);\n                        }\n                        out += top ? this.renderer.paragraph(body) : body;\n                        continue;\n                    }\n                    default: {\n                        const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n                        if (this.options.silent) {\n                            console.error(errMsg);\n                            return '';\n                        }\n                        else {\n                            throw new Error(errMsg);\n                        }\n                    }\n                }\n            }\n            return out;\n        }\n        /**\n         * Parse Inline Tokens\n         */\n        parseInline(tokens, renderer) {\n            renderer = renderer || this.renderer;\n            let out = '';\n            for (let i = 0; i < tokens.length; i++) {\n                const token = tokens[i];\n                // Run any renderer extensions\n                if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n                    const ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);\n                    if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(token.type)) {\n                        out += ret || '';\n                        continue;\n                    }\n                }\n                switch (token.type) {\n                    case 'escape': {\n                        const escapeToken = token;\n                        out += renderer.text(escapeToken.text);\n                        break;\n                    }\n                    case 'html': {\n                        const tagToken = token;\n                        out += renderer.html(tagToken.text);\n                        break;\n                    }\n                    case 'link': {\n                        const linkToken = token;\n                        out += renderer.link(linkToken.href, linkToken.title, this.parseInline(linkToken.tokens, renderer));\n                        break;\n                    }\n                    case 'image': {\n                        const imageToken = token;\n                        out += renderer.image(imageToken.href, imageToken.title, imageToken.text);\n                        break;\n                    }\n                    case 'strong': {\n                        const strongToken = token;\n                        out += renderer.strong(this.parseInline(strongToken.tokens, renderer));\n                        break;\n                    }\n                    case 'em': {\n                        const emToken = token;\n                        out += renderer.em(this.parseInline(emToken.tokens, renderer));\n                        break;\n                    }\n                    case 'codespan': {\n                        const codespanToken = token;\n                        out += renderer.codespan(codespanToken.text);\n                        break;\n                    }\n                    case 'br': {\n                        out += renderer.br();\n                        break;\n                    }\n                    case 'del': {\n                        const delToken = token;\n                        out += renderer.del(this.parseInline(delToken.tokens, renderer));\n                        break;\n                    }\n                    case 'text': {\n                        const textToken = token;\n                        out += renderer.text(textToken.text);\n                        break;\n                    }\n                    default: {\n                        const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n                        if (this.options.silent) {\n                            console.error(errMsg);\n                            return '';\n                        }\n                        else {\n                            throw new Error(errMsg);\n                        }\n                    }\n                }\n            }\n            return out;\n        }\n    }\n\n    class _Hooks {\n        options;\n        constructor(options) {\n            this.options = options || exports.defaults;\n        }\n        static passThroughHooks = new Set([\n            'preprocess',\n            'postprocess',\n            'processAllTokens'\n        ]);\n        /**\n         * Process markdown before marked\n         */\n        preprocess(markdown) {\n            return markdown;\n        }\n        /**\n         * Process HTML after marked is finished\n         */\n        postprocess(html) {\n            return html;\n        }\n        /**\n         * Process all tokens before walk tokens\n         */\n        processAllTokens(tokens) {\n            return tokens;\n        }\n    }\n\n    class Marked {\n        defaults = _getDefaults();\n        options = this.setOptions;\n        parse = this.#parseMarkdown(_Lexer.lex, _Parser.parse);\n        parseInline = this.#parseMarkdown(_Lexer.lexInline, _Parser.parseInline);\n        Parser = _Parser;\n        Renderer = _Renderer;\n        TextRenderer = _TextRenderer;\n        Lexer = _Lexer;\n        Tokenizer = _Tokenizer;\n        Hooks = _Hooks;\n        constructor(...args) {\n            this.use(...args);\n        }\n        /**\n         * Run callback for every token\n         */\n        walkTokens(tokens, callback) {\n            let values = [];\n            for (const token of tokens) {\n                values = values.concat(callback.call(this, token));\n                switch (token.type) {\n                    case 'table': {\n                        const tableToken = token;\n                        for (const cell of tableToken.header) {\n                            values = values.concat(this.walkTokens(cell.tokens, callback));\n                        }\n                        for (const row of tableToken.rows) {\n                            for (const cell of row) {\n                                values = values.concat(this.walkTokens(cell.tokens, callback));\n                            }\n                        }\n                        break;\n                    }\n                    case 'list': {\n                        const listToken = token;\n                        values = values.concat(this.walkTokens(listToken.items, callback));\n                        break;\n                    }\n                    default: {\n                        const genericToken = token;\n                        if (this.defaults.extensions?.childTokens?.[genericToken.type]) {\n                            this.defaults.extensions.childTokens[genericToken.type].forEach((childTokens) => {\n                                const tokens = genericToken[childTokens].flat(Infinity);\n                                values = values.concat(this.walkTokens(tokens, callback));\n                            });\n                        }\n                        else if (genericToken.tokens) {\n                            values = values.concat(this.walkTokens(genericToken.tokens, callback));\n                        }\n                    }\n                }\n            }\n            return values;\n        }\n        use(...args) {\n            const extensions = this.defaults.extensions || { renderers: {}, childTokens: {} };\n            args.forEach((pack) => {\n                // copy options to new object\n                const opts = { ...pack };\n                // set async to true if it was set to true before\n                opts.async = this.defaults.async || opts.async || false;\n                // ==-- Parse \"addon\" extensions --== //\n                if (pack.extensions) {\n                    pack.extensions.forEach((ext) => {\n                        if (!ext.name) {\n                            throw new Error('extension name required');\n                        }\n                        if ('renderer' in ext) { // Renderer extensions\n                            const prevRenderer = extensions.renderers[ext.name];\n                            if (prevRenderer) {\n                                // Replace extension with func to run new extension but fall back if false\n                                extensions.renderers[ext.name] = function (...args) {\n                                    let ret = ext.renderer.apply(this, args);\n                                    if (ret === false) {\n                                        ret = prevRenderer.apply(this, args);\n                                    }\n                                    return ret;\n                                };\n                            }\n                            else {\n                                extensions.renderers[ext.name] = ext.renderer;\n                            }\n                        }\n                        if ('tokenizer' in ext) { // Tokenizer Extensions\n                            if (!ext.level || (ext.level !== 'block' && ext.level !== 'inline')) {\n                                throw new Error(\"extension level must be 'block' or 'inline'\");\n                            }\n                            const extLevel = extensions[ext.level];\n                            if (extLevel) {\n                                extLevel.unshift(ext.tokenizer);\n                            }\n                            else {\n                                extensions[ext.level] = [ext.tokenizer];\n                            }\n                            if (ext.start) { // Function to check for start of token\n                                if (ext.level === 'block') {\n                                    if (extensions.startBlock) {\n                                        extensions.startBlock.push(ext.start);\n                                    }\n                                    else {\n                                        extensions.startBlock = [ext.start];\n                                    }\n                                }\n                                else if (ext.level === 'inline') {\n                                    if (extensions.startInline) {\n                                        extensions.startInline.push(ext.start);\n                                    }\n                                    else {\n                                        extensions.startInline = [ext.start];\n                                    }\n                                }\n                            }\n                        }\n                        if ('childTokens' in ext && ext.childTokens) { // Child tokens to be visited by walkTokens\n                            extensions.childTokens[ext.name] = ext.childTokens;\n                        }\n                    });\n                    opts.extensions = extensions;\n                }\n                // ==-- Parse \"overwrite\" extensions --== //\n                if (pack.renderer) {\n                    const renderer = this.defaults.renderer || new _Renderer(this.defaults);\n                    for (const prop in pack.renderer) {\n                        if (!(prop in renderer)) {\n                            throw new Error(`renderer '${prop}' does not exist`);\n                        }\n                        if (prop === 'options') {\n                            // ignore options property\n                            continue;\n                        }\n                        const rendererProp = prop;\n                        const rendererFunc = pack.renderer[rendererProp];\n                        const prevRenderer = renderer[rendererProp];\n                        // Replace renderer with func to run extension, but fall back if false\n                        renderer[rendererProp] = (...args) => {\n                            let ret = rendererFunc.apply(renderer, args);\n                            if (ret === false) {\n                                ret = prevRenderer.apply(renderer, args);\n                            }\n                            return ret || '';\n                        };\n                    }\n                    opts.renderer = renderer;\n                }\n                if (pack.tokenizer) {\n                    const tokenizer = this.defaults.tokenizer || new _Tokenizer(this.defaults);\n                    for (const prop in pack.tokenizer) {\n                        if (!(prop in tokenizer)) {\n                            throw new Error(`tokenizer '${prop}' does not exist`);\n                        }\n                        if (['options', 'rules', 'lexer'].includes(prop)) {\n                            // ignore options, rules, and lexer properties\n                            continue;\n                        }\n                        const tokenizerProp = prop;\n                        const tokenizerFunc = pack.tokenizer[tokenizerProp];\n                        const prevTokenizer = tokenizer[tokenizerProp];\n                        // Replace tokenizer with func to run extension, but fall back if false\n                        // @ts-expect-error cannot type tokenizer function dynamically\n                        tokenizer[tokenizerProp] = (...args) => {\n                            let ret = tokenizerFunc.apply(tokenizer, args);\n                            if (ret === false) {\n                                ret = prevTokenizer.apply(tokenizer, args);\n                            }\n                            return ret;\n                        };\n                    }\n                    opts.tokenizer = tokenizer;\n                }\n                // ==-- Parse Hooks extensions --== //\n                if (pack.hooks) {\n                    const hooks = this.defaults.hooks || new _Hooks();\n                    for (const prop in pack.hooks) {\n                        if (!(prop in hooks)) {\n                            throw new Error(`hook '${prop}' does not exist`);\n                        }\n                        if (prop === 'options') {\n                            // ignore options property\n                            continue;\n                        }\n                        const hooksProp = prop;\n                        const hooksFunc = pack.hooks[hooksProp];\n                        const prevHook = hooks[hooksProp];\n                        if (_Hooks.passThroughHooks.has(prop)) {\n                            // @ts-expect-error cannot type hook function dynamically\n                            hooks[hooksProp] = (arg) => {\n                                if (this.defaults.async) {\n                                    return Promise.resolve(hooksFunc.call(hooks, arg)).then(ret => {\n                                        return prevHook.call(hooks, ret);\n                                    });\n                                }\n                                const ret = hooksFunc.call(hooks, arg);\n                                return prevHook.call(hooks, ret);\n                            };\n                        }\n                        else {\n                            // @ts-expect-error cannot type hook function dynamically\n                            hooks[hooksProp] = (...args) => {\n                                let ret = hooksFunc.apply(hooks, args);\n                                if (ret === false) {\n                                    ret = prevHook.apply(hooks, args);\n                                }\n                                return ret;\n                            };\n                        }\n                    }\n                    opts.hooks = hooks;\n                }\n                // ==-- Parse WalkTokens extensions --== //\n                if (pack.walkTokens) {\n                    const walkTokens = this.defaults.walkTokens;\n                    const packWalktokens = pack.walkTokens;\n                    opts.walkTokens = function (token) {\n                        let values = [];\n                        values.push(packWalktokens.call(this, token));\n                        if (walkTokens) {\n                            values = values.concat(walkTokens.call(this, token));\n                        }\n                        return values;\n                    };\n                }\n                this.defaults = { ...this.defaults, ...opts };\n            });\n            return this;\n        }\n        setOptions(opt) {\n            this.defaults = { ...this.defaults, ...opt };\n            return this;\n        }\n        lexer(src, options) {\n            return _Lexer.lex(src, options ?? this.defaults);\n        }\n        parser(tokens, options) {\n            return _Parser.parse(tokens, options ?? this.defaults);\n        }\n        #parseMarkdown(lexer, parser) {\n            return (src, options) => {\n                const origOpt = { ...options };\n                const opt = { ...this.defaults, ...origOpt };\n                // Show warning if an extension set async to true but the parse was called with async: false\n                if (this.defaults.async === true && origOpt.async === false) {\n                    if (!opt.silent) {\n                        console.warn('marked(): The async option was set to true by an extension. The async: false option sent to parse will be ignored.');\n                    }\n                    opt.async = true;\n                }\n                const throwError = this.#onError(!!opt.silent, !!opt.async);\n                // throw error in case of non string input\n                if (typeof src === 'undefined' || src === null) {\n                    return throwError(new Error('marked(): input parameter is undefined or null'));\n                }\n                if (typeof src !== 'string') {\n                    return throwError(new Error('marked(): input parameter is of type '\n                        + Object.prototype.toString.call(src) + ', string expected'));\n                }\n                if (opt.hooks) {\n                    opt.hooks.options = opt;\n                }\n                if (opt.async) {\n                    return Promise.resolve(opt.hooks ? opt.hooks.preprocess(src) : src)\n                        .then(src => lexer(src, opt))\n                        .then(tokens => opt.hooks ? opt.hooks.processAllTokens(tokens) : tokens)\n                        .then(tokens => opt.walkTokens ? Promise.all(this.walkTokens(tokens, opt.walkTokens)).then(() => tokens) : tokens)\n                        .then(tokens => parser(tokens, opt))\n                        .then(html => opt.hooks ? opt.hooks.postprocess(html) : html)\n                        .catch(throwError);\n                }\n                try {\n                    if (opt.hooks) {\n                        src = opt.hooks.preprocess(src);\n                    }\n                    let tokens = lexer(src, opt);\n                    if (opt.hooks) {\n                        tokens = opt.hooks.processAllTokens(tokens);\n                    }\n                    if (opt.walkTokens) {\n                        this.walkTokens(tokens, opt.walkTokens);\n                    }\n                    let html = parser(tokens, opt);\n                    if (opt.hooks) {\n                        html = opt.hooks.postprocess(html);\n                    }\n                    return html;\n                }\n                catch (e) {\n                    return throwError(e);\n                }\n            };\n        }\n        #onError(silent, async) {\n            return (e) => {\n                e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n                if (silent) {\n                    const msg = '<p>An error occurred:</p><pre>'\n                        + escape$1(e.message + '', true)\n                        + '</pre>';\n                    if (async) {\n                        return Promise.resolve(msg);\n                    }\n                    return msg;\n                }\n                if (async) {\n                    return Promise.reject(e);\n                }\n                throw e;\n            };\n        }\n    }\n\n    const markedInstance = new Marked();\n    function marked(src, opt) {\n        return markedInstance.parse(src, opt);\n    }\n    /**\n     * Sets the default options.\n     *\n     * @param options Hash of options\n     */\n    marked.options =\n        marked.setOptions = function (options) {\n            markedInstance.setOptions(options);\n            marked.defaults = markedInstance.defaults;\n            changeDefaults(marked.defaults);\n            return marked;\n        };\n    /**\n     * Gets the original marked default options.\n     */\n    marked.getDefaults = _getDefaults;\n    marked.defaults = exports.defaults;\n    /**\n     * Use Extension\n     */\n    marked.use = function (...args) {\n        markedInstance.use(...args);\n        marked.defaults = markedInstance.defaults;\n        changeDefaults(marked.defaults);\n        return marked;\n    };\n    /**\n     * Run callback for every token\n     */\n    marked.walkTokens = function (tokens, callback) {\n        return markedInstance.walkTokens(tokens, callback);\n    };\n    /**\n     * Compiles markdown to HTML without enclosing `p` tag.\n     *\n     * @param src String of markdown source to be compiled\n     * @param options Hash of options\n     * @return String of compiled HTML\n     */\n    marked.parseInline = markedInstance.parseInline;\n    /**\n     * Expose\n     */\n    marked.Parser = _Parser;\n    marked.parser = _Parser.parse;\n    marked.Renderer = _Renderer;\n    marked.TextRenderer = _TextRenderer;\n    marked.Lexer = _Lexer;\n    marked.lexer = _Lexer.lex;\n    marked.Tokenizer = _Tokenizer;\n    marked.Hooks = _Hooks;\n    marked.parse = marked;\n    const options = marked.options;\n    const setOptions = marked.setOptions;\n    const use = marked.use;\n    const walkTokens = marked.walkTokens;\n    const parseInline = marked.parseInline;\n    const parse = marked;\n    const parser = _Parser.parse;\n    const lexer = _Lexer.lex;\n\n    exports.Hooks = _Hooks;\n    exports.Lexer = _Lexer;\n    exports.Marked = Marked;\n    exports.Parser = _Parser;\n    exports.Renderer = _Renderer;\n    exports.TextRenderer = _TextRenderer;\n    exports.Tokenizer = _Tokenizer;\n    exports.getDefaults = _getDefaults;\n    exports.lexer = lexer;\n    exports.marked = marked;\n    exports.options = options;\n    exports.parse = parse;\n    exports.parseInline = parseInline;\n    exports.parser = parser;\n    exports.setOptions = setOptions;\n    exports.use = use;\n    exports.walkTokens = walkTokens;\n\n}));\n//# sourceMappingURL=marked.umd.js.map\n","import {marked} from 'marked';\r\n\r\nconst unclosedElement = /(\\*{1,3}|`)($|\\w[\\w\\s]*$)/;\r\n\r\nconst completeUnclosedElement = (text: string) => {\r\n  const match = unclosedElement.exec(text);\r\n  if (match) {\r\n    const symbol = match[1];\r\n\r\n    const replacements: Record<string, string> = {\r\n      '***':\r\n        '<strong part=\"answer-strong\"><em part=\"answer-emphasis\">$2</em></strong>',\r\n      '**': '<strong part=\"answer-strong\">$2</strong>',\r\n      '*': '<em part=\"answer-emphasis\">$2</em>',\r\n      '`': '<code part=\"answer-inline-code\">$2</code>',\r\n    };\r\n\r\n    return text.replace(unclosedElement, replacements[symbol]);\r\n  }\r\n\r\n  return text;\r\n};\r\n\r\nconst escapeHtml = (text: string) => {\r\n  return text\r\n    .replace(/&/g, '&amp;')\r\n    .replace(/</g, '&lt;')\r\n    .replace(/>/g, '&gt;')\r\n    .replace(/\"/g, '&quot;')\r\n    .replace(/'/g, '&#39;');\r\n};\r\n\r\nconst customRenderer = {\r\n  blockquote(quote: string) {\r\n    return `<blockquote part=\"answer-quote-block\">${quote}</blockquote>`;\r\n  },\r\n\r\n  code(code: string) {\r\n    return `<pre part=\"answer-code-block\"><code>${escapeHtml(code)}</code></pre>`;\r\n  },\r\n\r\n  codespan(text: string) {\r\n    return `<code part=\"answer-inline-code\">${text}</code>`;\r\n  },\r\n\r\n  em(text: string) {\r\n    return `<em part=\"answer-emphasis\">${text}</em>`;\r\n  },\r\n\r\n  heading(text: string, level: number) {\r\n    return `<div part=\"answer-heading-${level}\" aria-label=\"${text}\">${text}</div>`;\r\n  },\r\n\r\n  list(body: string, ordered: boolean, start: number | '') {\r\n    const type = ordered ? 'ol' : 'ul';\r\n    const part = ordered ? 'answer-ordered-list' : 'answer-unordered-list';\r\n\r\n    const tag =\r\n      ordered && start !== 1\r\n        ? `<${type} part=\"${part}\" start=\"${start}\">`\r\n        : `<${type} part=\"${part}\">`;\r\n\r\n    return `${tag}${body}</${type}>`;\r\n  },\r\n\r\n  /**\r\n   * Custom Marked renderer to remove wrapping `<p>` element around list item content.\r\n   * @param text The element text content.\r\n   * @returns The list item element to render.\r\n   */\r\n  listitem(text: string) {\r\n    const unwrappedText = text\r\n      .replace(/^<p[^>]*>/, '')\r\n      .replace(/<\\/p>\\n?$/, '');\r\n    const withClosedElement = completeUnclosedElement(unwrappedText);\r\n    return `<li part=\"answer-list-item\">${withClosedElement}</li>`;\r\n  },\r\n\r\n  paragraph(text: string) {\r\n    return `<p part=\"answer-paragraph\">${text}</p>`;\r\n  },\r\n\r\n  strong(text: string) {\r\n    return `<strong part=\"answer-strong\">${text}</strong>`;\r\n  },\r\n\r\n  /**\r\n   * Custom Marked renderer to wrap `<table>` element in a scrolling container.\r\n   * @param header The table header content.\r\n   * @param body The table body content.\r\n   * @returns The element to render.\r\n   */\r\n  table(header: string, body: string) {\r\n    return `<div part=\"answer-table-container\" class=\"scrollable-table\"><table part=\"answer-table\"><thead>${header}</thead><tbody>${body}</tbody></table></div>`;\r\n  },\r\n\r\n  tablecell(\r\n    content: string,\r\n    flags: {header: boolean; align: 'center' | 'left' | 'right' | null}\r\n  ) {\r\n    const type = flags.header ? 'th' : 'td';\r\n    const part = flags.header ? 'answer-table-header' : 'answer-table-content';\r\n    const tag = flags.align\r\n      ? `<${type} part=\"${part}\" align=\"${flags.align}\">`\r\n      : `<${type} part=\"${part}\">`;\r\n\r\n    return `${tag}${content}</${type}>`;\r\n  },\r\n\r\n  /**\r\n   * Custom Marked renderer to complete unclosed inline elements such as bold, italic, and code.\r\n   * @param text The text content.\r\n   * @returns The corrected text content.\r\n   */\r\n  text(text: string) {\r\n    return completeUnclosedElement(text);\r\n  },\r\n};\r\n\r\nexport const transformMarkdownToHtml = (text: string): string => {\r\n  return marked.use({renderer: customRenderer}).parse(text) as string;\r\n};\r\n","import {FunctionalComponent, h} from '@stencil/core';\r\nimport DOMPurify from 'dompurify';\r\nimport {transformMarkdownToHtml} from './markdown-utils';\r\n\r\ninterface GeneratedMarkdownContentProps {\r\n  answer?: string;\r\n  isStreaming: boolean;\r\n}\r\n\r\nexport const GeneratedMarkdownContent: FunctionalComponent<\r\n  GeneratedMarkdownContentProps\r\n> = (props) => {\r\n  const answerAsHtml = DOMPurify.sanitize(\r\n    transformMarkdownToHtml(props.answer ?? ''),\r\n    {ADD_ATTR: ['part']}\r\n  );\r\n\r\n  return (\r\n    <div\r\n      part=\"generated-text\"\r\n      class={`mb-0 text-on-background ${props.isStreaming ? 'cursor' : ''}`}\r\n      innerHTML={answerAsHtml}\r\n    />\r\n  );\r\n};\r\n","import {FunctionalComponent, h} from '@stencil/core';\r\n\r\ninterface GeneratedTextContentProps {\r\n  answer?: string;\r\n  isStreaming: boolean;\r\n}\r\n\r\nexport const GeneratedTextContent: FunctionalComponent<\r\n  GeneratedTextContentProps\r\n> = (props) => {\r\n  return (\r\n    <p\r\n      part=\"generated-text\"\r\n      class={`mb-0 text-on-background whitespace-pre-wrap ${\r\n        props.isStreaming ? 'cursor' : ''\r\n      }`}\r\n    >\r\n      {props.answer}\r\n    </p>\r\n  );\r\n};\r\n","import {FunctionalComponent, h} from '@stencil/core';\r\nimport {GeneratedMarkdownContent} from './generated-content/generated-markdown-content';\r\nimport {GeneratedTextContent} from './generated-content/generated-text-content';\r\n\r\ninterface GeneratedContentContainerProps {\r\n  answer?: string;\r\n  answerContentFormat?: string;\r\n  isStreaming: boolean;\r\n}\r\n\r\nexport const GeneratedContentContainer: FunctionalComponent<\r\n  GeneratedContentContainerProps\r\n> = (props, children) => {\r\n  return (\r\n    <div part=\"generated-container\" class=\"mt-6\">\r\n      {props.answerContentFormat === 'text/markdown' ? (\r\n        <GeneratedMarkdownContent\r\n          answer={props.answer}\r\n          isStreaming={props.isStreaming}\r\n        />\r\n      ) : (\r\n        <GeneratedTextContent\r\n          answer={props.answer}\r\n          isStreaming={props.isStreaming}\r\n        />\r\n      )}\r\n      <div class=\"footer mt-6\">{children}</div>\r\n    </div>\r\n  );\r\n};\r\n","import {GeneratedAnswerStyle} from '@coveo/headless';\r\nimport {FunctionalComponent, h} from '@stencil/core';\r\nimport {i18n} from 'i18next';\r\nimport BulletsIcon from '../../../images/bullets.svg';\r\nimport IdeaIcon from '../../../images/idea.svg';\r\nimport StepsIcon from '../../../images/steps.svg';\r\nimport TextIcon from '../../../images/text.svg';\r\nimport {Button} from '../button';\r\n\r\ninterface RephraseOption {\r\n  value: GeneratedAnswerStyle;\r\n  icon: string;\r\n  titleKey: string;\r\n  tooltipKey: string;\r\n}\r\n\r\nconst options: RephraseOption[] = [\r\n  {\r\n    value: 'default',\r\n    icon: TextIcon,\r\n    titleKey: 'auto',\r\n    tooltipKey: 'auto-tooltip',\r\n  },\r\n  {\r\n    value: 'step',\r\n    icon: StepsIcon,\r\n    titleKey: 'steps',\r\n    tooltipKey: 'steps-tooltip',\r\n  },\r\n  {\r\n    value: 'bullet',\r\n    icon: BulletsIcon,\r\n    titleKey: 'bullets',\r\n    tooltipKey: 'bullets-tooltip',\r\n  },\r\n  {\r\n    titleKey: 'summary',\r\n    value: 'concise',\r\n    icon: IdeaIcon,\r\n    tooltipKey: 'summary',\r\n  },\r\n];\r\n\r\ninterface RephraseButtonProps {\r\n  answerStyle: string;\r\n  i18n: i18n;\r\n  onChange: (answerStyle: GeneratedAnswerStyle) => void;\r\n}\r\n\r\nexport const RephraseButtons: FunctionalComponent<RephraseButtonProps> = (\r\n  props\r\n) => {\r\n  const {i18n} = props;\r\n  return (\r\n    <div part=\"rephrase-buttons\" class=\"shrink-0\">\r\n      <p part=\"rephrase-label\" class=\"mb-2 text-neutral-dark shrink-0\">\r\n        {i18n.t('rephrase')}\r\n      </p>\r\n      <div\r\n        part=\"rephrase-buttons-container\"\r\n        class=\"flex flex-wrap gap-2 ml-auto border border-solid rounded-md p-1\"\r\n      >\r\n        {options.map((option) => {\r\n          const isActive = props.answerStyle === option.value;\r\n          return (\r\n            <Button\r\n              title={i18n.t(option.tooltipKey)}\r\n              part=\"rephrase-button\"\r\n              style=\"text-transparent\"\r\n              class={`flex items-center rounded ${isActive ? 'active' : ''}`}\r\n              onClick={() => {\r\n                props.onChange(option.value);\r\n              }}\r\n              ariaPressed={String(isActive)}\r\n            >\r\n              <div class=\"icon-container text-neutral-dark h-full mx-auto shrink-0 relative\">\r\n                <atomic-icon icon={option.icon}></atomic-icon>\r\n              </div>\r\n              <div\r\n                part=\"rephrase-button-label\"\r\n                class=\"hidden text-neutral-dark\"\r\n              >\r\n                {i18n.t(option.titleKey)}\r\n              </div>\r\n            </Button>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import {FunctionalComponent, h} from '@stencil/core';\r\nimport {Button} from '../button';\r\n\r\ninterface RetryPromptProps {\r\n  message: string;\r\n  buttonLabel: string;\r\n  onClick: () => void;\r\n}\r\n\r\nexport const RetryPrompt: FunctionalComponent<RetryPromptProps> = (props) => (\r\n  <div part=\"retry-container\" class=\"mt-4\">\r\n    <div class=\"mx-auto text-center text-neutral-dark\">{props.message}</div>\r\n    <Button\r\n      class=\"block px-4 py-2 mt-4 mx-auto\"\r\n      style=\"outline-primary\"\r\n      onClick={props.onClick}\r\n    >\r\n      {props.buttonLabel}\r\n    </Button>\r\n  </div>\r\n);\r\n","import {FunctionalComponent, h} from '@stencil/core';\r\nimport {i18n} from 'i18next';\r\nimport ArrowBottomIcon from '../../../images/arrow-bottom-rounded.svg';\r\nimport ArrowTopIcon from '../../../images/arrow-top-rounded.svg';\r\nimport {Button} from '../button';\r\n\r\ninterface ShowButtonProps {\r\n  i18n: i18n;\r\n  isCollapsed: boolean;\r\n  onClick: () => void;\r\n}\r\n\r\nexport const ShowButton: FunctionalComponent<ShowButtonProps> = (props) => (\r\n  <Button\r\n    style=\"text-primary\"\r\n    part=\"answer-show-button\"\r\n    class=\"hidden items-center hover:bg-transparent\"\r\n    onClick={() => props.onClick()}\r\n  >\r\n    <div class=\"font-light text-base\">\r\n      {props.isCollapsed\r\n        ? props.i18n.t('show-more')\r\n        : props.i18n.t('show-less')}\r\n    </div>\r\n    <atomic-icon\r\n      part=\"answer-show-icon\"\r\n      class=\"w-3.5 ml-2\"\r\n      icon={props.isCollapsed ? ArrowBottomIcon : ArrowTopIcon}\r\n    ></atomic-icon>\r\n  </Button>\r\n);\r\n","import {FunctionalComponent, h} from '@stencil/core';\r\n\r\ninterface SourceCitationsProps {\r\n  label: string;\r\n  isVisible: boolean;\r\n}\r\n\r\nexport const SourceCitations: FunctionalComponent<SourceCitationsProps> = (\r\n  props,\r\n  children\r\n) =>\r\n  props.isVisible ? (\r\n    <div class=\"source-citations\">\r\n      <p part=\"citations-label\" class=\"mb-2 text-neutral-dark shrink-0\">\r\n        {props.label}\r\n      </p>\r\n      <ol class=\"list-none citations-container gap-2 flex items-center flex-wrap\">\r\n        {children}\r\n      </ol>\r\n    </div>\r\n  ) : null;\r\n","import {\r\n  GeneratedAnswer,\r\n  GeneratedAnswerCitation,\r\n  GeneratedAnswerState,\r\n  GeneratedAnswerStyle,\r\n  InteractiveCitation,\r\n  InteractiveCitationProps,\r\n  SearchStatusState,\r\n} from '@coveo/headless';\r\nimport {h} from '@stencil/core';\r\nimport {\r\n  GeneratedAnswerData,\r\n  SafeStorage,\r\n  StorageItems,\r\n} from '../../../utils/local-storage-utils';\r\nimport {Heading} from '../heading';\r\nimport {AnyBindings} from '../interface/bindings';\r\nimport {Switch} from '../switch';\r\nimport {CopyButton} from './copy-button';\r\nimport {FeedbackButton} from './feedback-button';\r\nimport {GeneratedContentContainer} from './generated-content-container';\r\nimport {RephraseButtons} from './rephrase-buttons';\r\nimport {RetryPrompt} from './retry-prompt';\r\nimport {ShowButton} from './show-button';\r\nimport {SourceCitations} from './source-citations';\r\n\r\ninterface GeneratedAnswerCommonOptions {\r\n  host: HTMLElement;\r\n  withToggle?: boolean;\r\n  collapsible?: boolean;\r\n  getGeneratedAnswer: () => GeneratedAnswer | undefined;\r\n  getGeneratedAnswerState: () => GeneratedAnswerState | undefined;\r\n  getSearchStatusState: () => SearchStatusState | undefined;\r\n  getBindings: () => AnyBindings;\r\n  getCopied: () => boolean;\r\n  setCopied: (isCopied: boolean) => void;\r\n  getCopyError: () => boolean;\r\n  setCopyError: (copyError: boolean) => void;\r\n  setAriaMessage: (message: string) => void;\r\n  buildInteractiveCitation: (\r\n    props: InteractiveCitationProps\r\n  ) => InteractiveCitation;\r\n}\r\n\r\nexport class GeneratedAnswerCommon {\r\n  private storage: SafeStorage = new SafeStorage();\r\n  private _data: GeneratedAnswerData;\r\n  private modalRef?: HTMLAtomicGeneratedAnswerFeedbackModalElement;\r\n\r\n  private contentClasses =\r\n    'mt-0 mb-4 border border-neutral shadow-lg p-6 bg-background rounded-lg p-6 text-on-background';\r\n\r\n  constructor(private props: GeneratedAnswerCommonOptions) {\r\n    this._data = this.readStoredData();\r\n  }\r\n\r\n  public insertFeedbackModal() {\r\n    this.modalRef = document.createElement(\r\n      'atomic-generated-answer-feedback-modal'\r\n    );\r\n    this.modalRef.generatedAnswer = this.props.getGeneratedAnswer()!;\r\n    this.props.host.insertAdjacentElement('beforebegin', this.modalRef);\r\n  }\r\n\r\n  public readStoredData(): GeneratedAnswerData {\r\n    const {withToggle} = this.props;\r\n    const storedData = this.storage.getParsedJSON<GeneratedAnswerData>(\r\n      StorageItems.GENERATED_ANSWER_DATA,\r\n      {isVisible: true}\r\n    );\r\n\r\n    // This check ensures that the answer is visible when the toggle is hidden and visible is set to false in the local storage.\r\n    return {isVisible: (withToggle && storedData.isVisible) || !withToggle};\r\n  }\r\n\r\n  public writeStoredData(data: GeneratedAnswerData) {\r\n    this.storage.setJSON(StorageItems.GENERATED_ANSWER_DATA, data);\r\n  }\r\n\r\n  get data() {\r\n    return this._data;\r\n  }\r\n\r\n  set data(newData: GeneratedAnswerData) {\r\n    this._data = newData;\r\n  }\r\n\r\n  public getGeneratedAnswerStatus() {\r\n    const isHidden = !this.props.getGeneratedAnswerState()?.isVisible;\r\n    const isGenerating = !!this.props.getGeneratedAnswerState()?.isStreaming;\r\n    const hasAnswer = !!this.props.getGeneratedAnswerState()?.answer;\r\n    const hasError = !!this.props.getGeneratedAnswerState()?.error;\r\n\r\n    if (isHidden) {\r\n      return this.props.getBindings().i18n.t('generated-answer-hidden');\r\n    }\r\n\r\n    if (isGenerating) {\r\n      return this.props.getBindings().i18n.t('generating-answer');\r\n    }\r\n\r\n    if (hasError) {\r\n      return this.props.getBindings().i18n.t('answer-could-not-be-generated');\r\n    }\r\n\r\n    if (hasAnswer) {\r\n      return this.props.getBindings().i18n.t('answer-generated', {\r\n        answer: this.props.getGeneratedAnswerState()?.answer,\r\n      });\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  private get hasRetryableError() {\r\n    return (\r\n      !this.props.getSearchStatusState()?.hasError &&\r\n      this.props.getGeneratedAnswerState()?.error?.isRetryable\r\n    );\r\n  }\r\n\r\n  private get shouldBeHidden() {\r\n    const {answer, citations} = this.props.getGeneratedAnswerState() ?? {};\r\n    return (\r\n      answer === undefined && !citations?.length && !this.hasRetryableError\r\n    );\r\n  }\r\n\r\n  private get isAnswerVisible() {\r\n    return this.props.getGeneratedAnswerState()?.isVisible;\r\n  }\r\n\r\n  private get toggleTooltip() {\r\n    const key = this.isAnswerVisible\r\n      ? 'generated-answer-toggle-on'\r\n      : 'generated-answer-toggle-off';\r\n    return this.props.getBindings().i18n.t(key);\r\n  }\r\n\r\n  private get hasClipboard() {\r\n    return !!navigator?.clipboard?.writeText;\r\n  }\r\n\r\n  private get copyToClipboardTooltip() {\r\n    if (this.props.getCopyError()) {\r\n      return this.props.getBindings().i18n.t('failed-to-copy-generated-answer');\r\n    }\r\n\r\n    return !this.props.getCopied()\r\n      ? this.props.getBindings().i18n.t('copy-generated-answer')\r\n      : this.props.getBindings().i18n.t('generated-answer-copied');\r\n  }\r\n\r\n  private async copyToClipboard(answer: string) {\r\n    try {\r\n      await navigator.clipboard.writeText(answer);\r\n      this.props.setCopied(true);\r\n      this.props.getGeneratedAnswer()?.logCopyToClipboard();\r\n    } catch (error) {\r\n      this.props.setCopyError(true);\r\n      this.props\r\n        .getBindings()\r\n        .engine.logger.error(`Failed to copy to clipboard: ${error}`);\r\n    }\r\n\r\n    setTimeout(() => {\r\n      this.props.setCopied(false);\r\n      this.props.setCopyError(false);\r\n    }, 2000);\r\n  }\r\n\r\n  private clickOnShowButton() {\r\n    if (this.props.getGeneratedAnswerState()?.expanded) {\r\n      this.props.getGeneratedAnswer()?.collapse();\r\n    } else {\r\n      this.props.getGeneratedAnswer()?.expand();\r\n    }\r\n  }\r\n\r\n  private getCitation(citation: GeneratedAnswerCitation) {\r\n    const {title} = citation;\r\n    const {i18n} = this.props.getBindings();\r\n\r\n    return title.trim() !== ''\r\n      ? citation\r\n      : {...citation, title: i18n.t('no-title')};\r\n  }\r\n\r\n  private renderCitations() {\r\n    const {\r\n      getGeneratedAnswerState,\r\n      buildInteractiveCitation,\r\n      getGeneratedAnswer,\r\n    } = this.props;\r\n    const {citations} = getGeneratedAnswerState() ?? {};\r\n    const {logCitationHover} = getGeneratedAnswer() ?? {};\r\n\r\n    return citations?.map(\r\n      (citation: GeneratedAnswerCitation, index: number) => {\r\n        const interactiveCitation = buildInteractiveCitation({\r\n          options: {\r\n            citation,\r\n          },\r\n        });\r\n        return (\r\n          <li key={citation.id} class=\"max-w-full\">\r\n            <atomic-citation\r\n              citation={this.getCitation(citation)}\r\n              index={index}\r\n              sendHoverEndEvent={(citationHoverTimeMs: number) => {\r\n                logCitationHover?.(citation.id, citationHoverTimeMs);\r\n              }}\r\n              interactiveCitation={interactiveCitation}\r\n              exportparts=\"citation,citation-popover\"\r\n            />\r\n          </li>\r\n        );\r\n      }\r\n    );\r\n  }\r\n\r\n  private renderFeedbackAndCopyButtons() {\r\n    const {\r\n      getGeneratedAnswerState,\r\n      getBindings,\r\n      getGeneratedAnswer,\r\n      getCopied,\r\n      getCopyError,\r\n    } = this.props;\r\n    const {i18n} = getBindings();\r\n    const {liked, disliked, answer, isStreaming} =\r\n      getGeneratedAnswerState() ?? {};\r\n\r\n    const containerClasses = [\r\n      'feedback-buttons',\r\n      'flex',\r\n      'h-9',\r\n      'absolute',\r\n      'top-6',\r\n      'shrink-0',\r\n      'gap-2',\r\n      this.props.withToggle ? 'right-20' : 'right-6',\r\n    ].join(' ');\r\n\r\n    if (isStreaming) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <div class={containerClasses}>\r\n        <FeedbackButton\r\n          title={i18n.t('this-answer-was-helpful')}\r\n          variant=\"like\"\r\n          active={!!liked}\r\n          onClick={() => getGeneratedAnswer()?.like()}\r\n        />\r\n        <FeedbackButton\r\n          title={i18n.t('this-answer-was-not-helpful')}\r\n          variant=\"dislike\"\r\n          active={!!disliked}\r\n          onClick={() => this.clickDislike()}\r\n        />\r\n        {this.hasClipboard ? (\r\n          <CopyButton\r\n            title={this.copyToClipboardTooltip}\r\n            isCopied={getCopied()}\r\n            error={getCopyError()}\r\n            onClick={async () => {\r\n              if (answer) {\r\n                await this.copyToClipboard(answer);\r\n              }\r\n            }}\r\n          />\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private clickDislike() {\r\n    if (\r\n      this.modalRef &&\r\n      !this.props.getGeneratedAnswerState()?.feedbackSubmitted\r\n    ) {\r\n      this.modalRef.isOpen = true;\r\n    }\r\n    this.props.getGeneratedAnswer()?.dislike();\r\n  }\r\n\r\n  private onChangeAnswerStyle(answerStyle: GeneratedAnswerStyle) {\r\n    if (\r\n      this.props.getGeneratedAnswerState()?.responseFormat.answerStyle !==\r\n      answerStyle\r\n    ) {\r\n      this.props.getGeneratedAnswer()?.rephrase({\r\n        ...this.props.getGeneratedAnswerState()?.responseFormat,\r\n        answerStyle,\r\n      });\r\n    }\r\n  }\r\n\r\n  private renderRephraseButtons() {\r\n    const {getGeneratedAnswerState, getBindings} = this.props;\r\n    const {i18n} = getBindings();\r\n    const {isStreaming, responseFormat} = getGeneratedAnswerState() ?? {};\r\n    const {answerStyle} = responseFormat ?? {};\r\n\r\n    if (isStreaming) {\r\n      return null;\r\n    }\r\n    return (\r\n      <RephraseButtons\r\n        answerStyle={answerStyle ?? 'default'}\r\n        i18n={i18n}\r\n        onChange={(answerStyle) => this.onChangeAnswerStyle(answerStyle)}\r\n      />\r\n    );\r\n  }\r\n\r\n  private renderDisclaimer() {\r\n    const {getGeneratedAnswerState, getBindings} = this.props;\r\n    const {i18n} = getBindings();\r\n    const {isStreaming} = getGeneratedAnswerState() ?? {};\r\n\r\n    if (isStreaming) {\r\n      return null;\r\n    }\r\n    return (\r\n      <div class=\"text-neutral-dark text-xs\">\r\n        <slot name=\"disclaimer\" slot=\"disclaimer\">\r\n          {i18n.t('generated-answer-disclaimer')}\r\n        </slot>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private renderShowButton() {\r\n    const {getGeneratedAnswerState, getBindings, collapsible} = this.props;\r\n    const {i18n} = getBindings();\r\n    const {expanded, isStreaming} = getGeneratedAnswerState() ?? {};\r\n    const canRender = collapsible && !isStreaming;\r\n\r\n    if (!canRender) {\r\n      return null;\r\n    }\r\n    return (\r\n      <ShowButton\r\n        i18n={i18n}\r\n        onClick={() => this.clickOnShowButton()}\r\n        isCollapsed={!expanded}\r\n      ></ShowButton>\r\n    );\r\n  }\r\n\r\n  private renderGeneratingAnswerLabel() {\r\n    const {getGeneratedAnswerState, getBindings, collapsible} = this.props;\r\n    const {i18n} = getBindings();\r\n    const {isStreaming} = getGeneratedAnswerState() ?? {};\r\n\r\n    const canRender = collapsible && isStreaming;\r\n\r\n    if (!canRender) {\r\n      return null;\r\n    }\r\n    return (\r\n      <div\r\n        part=\"is-generating\"\r\n        class=\"hidden text-primary font-light text-base\"\r\n      >\r\n        {i18n.t('generating-answer')}...\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private renderContent() {\r\n    const {getGeneratedAnswerState, getBindings, getGeneratedAnswer} =\r\n      this.props;\r\n    const {i18n} = getBindings();\r\n    const {isStreaming, answer, citations, answerContentFormat} =\r\n      getGeneratedAnswerState() ?? {};\r\n\r\n    return (\r\n      <div part=\"generated-content\">\r\n        <div class=\"flex items-center\">\r\n          <Heading\r\n            level={0}\r\n            part=\"header-label\"\r\n            class=\"text-bg-primary font-medium inline-block rounded-md py-2 px-2.5\"\r\n          >\r\n            {i18n.t('generated-answer-title')}\r\n          </Heading>\r\n          <div class=\"flex h-9 items-center ml-auto\">\r\n            <Switch\r\n              part=\"toggle\"\r\n              checked={this.isAnswerVisible}\r\n              onToggle={(checked) => {\r\n                checked\r\n                  ? getGeneratedAnswer()?.show()\r\n                  : getGeneratedAnswer()?.hide();\r\n              }}\r\n              ariaLabel={i18n.t('generated-answer-title')}\r\n              title={this.toggleTooltip}\r\n              withToggle={this.props.withToggle}\r\n            ></Switch>\r\n          </div>\r\n        </div>\r\n        {this.hasRetryableError && this.isAnswerVisible ? (\r\n          <RetryPrompt\r\n            onClick={() => getGeneratedAnswer()?.retry()}\r\n            buttonLabel={i18n.t('retry')}\r\n            message={i18n.t('retry-stream-message')}\r\n          />\r\n        ) : null}\r\n\r\n        {!this.hasRetryableError && this.isAnswerVisible ? (\r\n          <GeneratedContentContainer\r\n            answer={answer}\r\n            answerContentFormat={answerContentFormat}\r\n            isStreaming={!!isStreaming}\r\n          >\r\n            {this.renderFeedbackAndCopyButtons()}\r\n            <SourceCitations\r\n              label={i18n.t('citations')}\r\n              isVisible={!!citations?.length}\r\n            >\r\n              {this.renderCitations()}\r\n            </SourceCitations>\r\n\r\n            {this.renderRephraseButtons()}\r\n          </GeneratedContentContainer>\r\n        ) : null}\r\n\r\n        {!this.hasRetryableError && this.isAnswerVisible && (\r\n          <div part=\"generated-answer-footer\" class=\"flex justify-end mt-6\">\r\n            {this.renderGeneratingAnswerLabel()}\r\n            {this.renderShowButton()}\r\n            {this.renderDisclaimer()}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  public render() {\r\n    if (this.shouldBeHidden) {\r\n      return null;\r\n    }\r\n    return (\r\n      <div>\r\n        <aside class={`mx-auto ${this.contentClasses}`} part=\"container\">\r\n          <article>{this.renderContent()}</article>\r\n        </aside>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"version":3}