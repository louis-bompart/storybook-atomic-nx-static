{"file":"atomic-rating-range-facet.entry.cjs.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAM,yBAAyB,GAAG,2mwCAA2mwC,CAAC;AAC9owC,qCAAe,yBAAyB;;;;;;;;;;;;MC+D3B,sBAAsB;;;;;;;QAuBH,UAAK,GAAG,UAAU,CAAC;;;;QAQnB,sBAAiB,GAAG,CAAC,CAAC;;;;QAItB,oBAAe,GAAG,IAAI,CAAC,iBAAiB,CAAC;;;;QAIzC,oBAAe,GAAG,CAAC,CAAC;;;;;;;;;;;;;;QAcpB,SAAI,GAAGA,iBAAI,CAAC;;;;QAIG,gBAAW,GAAG,KAAK,CAAC;;;;QAInC,iBAAY,GAAG,CAAC,CAAC;;;;QAIjB,qBAAgB,GAAG,IAAI,CAAC;;;;;;;QAOxB,mBAAc,GAAG,IAAI,CAAC;;;;;;;;;;;;;;;;;;;;QAqB1B,cAAS,GAA2B,EAAE,CAAC;;;;;qBAtE3B,UAAU;;iCAQE,CAAC;+BAIH,IAAI,CAAC,iBAAiB;+BAItB,CAAC;oBAcZA,iBAAI;2BAIkB,KAAK;4BAInB,CAAC;gCAIG,IAAI;8BAON,IAAI;yBAqBW,EAAE;;IAIhE,IAAY,WAAW;QACrB,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YACrB,IAAI,CAAC,WAAW,GAAG,IAAIC,wCAAqB,CAAC,IAAI,CAAC,CAAC;SACpD;QACD,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB;IAEM,UAAU;QACf,IAAI,CAAC,YAAY,GAAGC,eAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QAC5D,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,6BAA6B,EAAE,CAAC;KACtC;IAEM,oBAAoB;;QACzB,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YACzB,OAAO;SACR;QACD,MAAA,IAAI,CAAC,mBAAmB,0CAAE,YAAY,EAAE,CAAC;KAC1C;IAED,IAAY,QAAQ;QAClB,QACE,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM;YAC3B,IAAI,CAAC,iBAAiB,CAAC,QAAQ;YAC/B,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,EACzB;KACH;IAEO,eAAe;QACrB,MAAM,OAAO,GAAwB;YACnC,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,cAAc,EAAE,IAAI,CAAC,iBAAiB;YACtC,aAAa,EAAE,IAAI,CAAC,qBAAqB,EAAE;YAC3C,YAAY,EAAE,YAAY;YAC1B,uBAAuB,EAAE,KAAK;YAC9B,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;YACvC,cAAc,EAAE,IAAI,CAAC,cAAc;SACpC,CAAC;QACF,IAAI,CAAC,KAAK,GAAGC,eAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,EAAC,OAAO,EAAC,CAAC,CAAC;QAChE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC;QACxC,MAAM,SAAS,GAAc;YAC3B,KAAK,EAAE,MAAM,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC;YAC7C,OAAO,EAAE,IAAI,CAAC,OAAQ;YACtB,OAAO,EAAE,IAAI,CAAC,IAAI;YAClB,QAAQ,EAAE,MAAM,IAAI,CAAC,QAAQ;SAC9B,CAAC;QACF,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,aAAa,CAAC,eAAe,EAAE;YACjD,GAAG,SAAS;YACZ,MAAM,EAAE,CAAC,KAAK,KAAK,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC;YAC/C,OAAO,EAAE,CAAC,KAAK,KAAK,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC;SAC9C,CAAC,CAAC;QACHC,6BAAiB,CAAC,IAAI,CAAC,IAAI,EAAE;YAC3B,GAAG,SAAS;YACZ,SAAS,EAAE,MAAM,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM;YAC7C,oBAAoB,EAAE,MAAM,IAAI,CAAC,sBAAsB;SACxD,CAAC,CAAC;KACJ;IAED,IAAY,WAAW;QACrB,OAAO,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,iBAAiB,CAAC;KACtD;IAED,IAAY,sBAAsB;QAChC,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAC,KAAK,EAAC,KAAK,KAAK,KAAK,UAAU,CAAC;aACpE,MAAM,CAAC;KACX;IAEO,6BAA6B;QACnC,IAAI,CAAC,mBAAmB,GAAGC,eAA2B,CACpD,IAAI,CAAC,QAAQ,CAAC,MAAM,EACpB;YACE,OAAO,EAAE,IAAI,CAAC,OAAQ;YACtB,UAAU,EAAEC,wBAAc,CAExB,IAAI,CAAC,SAAS,CAAC;SAClB,CACF,CAAC;KACH;IAEO,qBAAqB;QAC3B,MAAM,aAAa,GAA0B,EAAE,CAAC;QAChD,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC,IAAI,IAAI,CAAC,iBAAiB,EAAE,CAAC,EAAE,EAAE;YACnE,aAAa,CAAC,IAAI,CAChBC,eAAiB,CAAC;gBAChB,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC,GAAG,GAAG;gBACnD,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,eAAe,GAAG,GAAG,CAAC,GAAG,GAAG;gBACjD,YAAY,EAAE,IAAI;aACnB,CAAC,CACH,CAAC;SACH;QACD,OAAO,aAAa,CAAC;KACtB;IAEO,gBAAgB,CAAC,UAA6B;QACpD,IAAI,UAAU,CAAC,KAAK,KAAK,IAAI,CAAC,eAAe,EAAE;YAC7C,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,YAAY,EAAE;gBACxC,KAAK,EAAE,UAAU,CAAC,KAAK;aACxB,CAAC,CAAC;SACJ;QACD,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,aAAa,EAAE;YACzC,KAAK,EAAE,UAAU,CAAC,KAAK;YACvB,KAAK,EAAE,IAAI,CAAC,eAAe;SAC5B,CAAC,CAAC;KACJ;IAEO,aAAa,CAAC,UAA6B;QACjD,QACEC,iBAAK,KAAK,EAAC,mBAAmB,IAC5BA,QAACC,mBAAM,IACL,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,EACxB,kBAAkB,EAAE,IAAI,CAAC,eAAe,EACxC,mBAAmB,EAAE,UAAU,CAAC,KAAK,EACrC,IAAI,EAAE,IAAI,CAAC,IAAI,GACP,EACT,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,CAC7B,EACN;KACH;IAEO,YAAY;QAClB,QACED,QAACE,4BAAW,IACV,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,EACxB,KAAK,EAAE,IAAI,CAAC,KAAK,EACjB,cAAc,EAAE;gBACd,IAAI,CAAC,WAAW,CAAC,gBAAgB,EAAE,CAAC;gBACpC,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC;aAC1B,EACD,oBAAoB,EAAE,IAAI,CAAC,sBAAsB,EACjD,WAAW,EAAE,IAAI,CAAC,WAAW,EAC7B,YAAY,EAAE,IAAI,CAAC,YAAY,EAC/B,gBAAgB,EAAE,OAAO,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,EAC9D,SAAS,EAAE,CAAC,EAAE,KAAK,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,EAAE,CAAC,GACpC,EACf;KACH;IAEO,eAAe,CAAC,UAA6B;QACnD,QACEF,kBACE,IAAI,EAAC,aAAa,EAClB,KAAK,EAAE,qFACL,UAAU,CAAC,KAAK,KAAK,UAAU,GAAG,WAAW,GAAG,EAClD,EAAE,IAED,UAAU,CAAC,KAAK,KAAK,IAAI,CAAC,eAAe,IACxCA,sBAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAQ,KAE3C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,CAC/B,CACI,EACP;KACH;IAEO,WAAW,CAAC,UAA6B,EAAE,OAAmB;QACpE,MAAM,YAAY,GAAG,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC;QACvD,MAAM,UAAU,GAAG,UAAU,CAAC,KAAK,KAAK,UAAU,CAAC;QACnD,QACEA,QAACG,6BAAc,IACb,YAAY,EAAE,YAAY,EAC1B,eAAe,EAAE,UAAU,CAAC,eAAe,EAC3C,UAAU,EAAE,UAAU,EACtB,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,EACxB,OAAO,EAAE,OAAO,IAEf,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAChB,EACjB;KACH;IAEO,qBAAqB,CAAC,QAAiB;QAC7C,QACEH,QAACI,iCAAgB,IAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,IAC3DJ,gBAAI,KAAK,EAAC,MAAM,EAAC,IAAI,EAAC,QAAQ,IAC3B,QAAQ,CACN,CACY,EACnB;KACH;IAEO,YAAY;QAClB,OAAO,IAAI,CAAC,qBAAqB,CAC/B,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,KAAK,KAC5B,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,MAAM,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC,CACpE,CACF,CAAC;KACH;IAED,IAAY,cAAc;QACxB,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CACnC,CAAC,KAAK,KAAK,KAAK,CAAC,eAAe,IAAI,KAAK,CAAC,KAAK,KAAK,MAAM,CAC3D,CAAC;KACH;IAEM,MAAM;QACX,IAAI,IAAI,CAAC,iBAAiB,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,EAAE;YAChE,OAAOA,QAACK,0BAAM,OAAU,CAAC;SAC1B;QAED,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,mBAAmB,EAAE;YAC/C,QACEL,QAACM,iCAAgB,IACf,cAAc,EAAE,IAAI,CAAC,iBAAiB,EACtC,WAAW,EAAE,IAAI,CAAC,WAAW,GACX,EACpB;SACH;QAED,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE;YAC/B,OAAON,QAACK,0BAAM,OAAU,CAAC;SAC1B;QAED,QACEL,QAACO,+BAAc,QACZ,IAAI,CAAC,YAAY,EAAE,EACnB,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,YAAY,EAAE,CAC1B,EACjB;KACH;;;AA3T4B;IAA5BC,sCAAkB,EAAE;wDAA4B;AAQ1C;IAFNC,yCAAqB,CAAC,OAAO,CAAC;0DAEO;AAG/B;IAFNA,yCAAqB,CAAC,cAAc,CAAC;iEAEO;AAiFnB;IAAzBC,kBAAO,EAAE;yDAAuD;;;;;","names":["Star","FocusTargetController","buildSearchStatus","buildNumericFacet","initializePopover","buildFacetConditionsManager","parseDependsOn","buildNumericRange","h","Rating","FacetHeader","FacetValueLink","FacetValuesGroup","Hidden","FacetPlaceholder","FacetContainer","InitializeBindings","BindStateToController","MapProp"],"sources":["src/components/search/facets/atomic-rating-range-facet/atomic-rating-range-facet.pcss?tag=atomic-rating-range-facet&encapsulation=shadow","src/components/search/facets/atomic-rating-range-facet/atomic-rating-range-facet.tsx"],"sourcesContent":["@import '../../../common/facets/facet-common.pcss';\r\n@import '../../../common/atomic-rating/atomic-rating.pcss';\r\n","import {\r\n  NumericFacet,\r\n  buildNumericFacet,\r\n  NumericFacetState,\r\n  NumericFacetOptions,\r\n  SearchStatus,\r\n  SearchStatusState,\r\n  buildSearchStatus,\r\n  NumericFacetValue,\r\n  NumericRangeRequest,\r\n  buildNumericRange,\r\n  buildFacetConditionsManager,\r\n  FacetConditionsManager,\r\n  FacetValueRequest,\r\n  CategoryFacetValueRequest,\r\n} from '@coveo/headless';\r\nimport {Component, h, State, Prop, VNode, Element} from '@stencil/core';\r\nimport Star from '../../../../images/star.svg';\r\nimport {FocusTargetController} from '../../../../utils/accessibility-utils';\r\nimport {\r\n  BindStateToController,\r\n  InitializableComponent,\r\n  InitializeBindings,\r\n} from '../../../../utils/initialization-utils';\r\nimport {MapProp} from '../../../../utils/props-utils';\r\nimport {Rating} from '../../../common/atomic-rating/atomic-rating';\r\nimport {parseDependsOn} from '../../../common/facets/depends-on';\r\nimport {FacetInfo} from '../../../common/facets/facet-common-store';\r\nimport {FacetContainer} from '../../../common/facets/facet-container/facet-container';\r\nimport {FacetHeader} from '../../../common/facets/facet-header/facet-header';\r\nimport {FacetPlaceholder} from '../../../common/facets/facet-placeholder/facet-placeholder';\r\nimport {FacetValueLink} from '../../../common/facets/facet-value-link/facet-value-link';\r\nimport {FacetValuesGroup} from '../../../common/facets/facet-values-group/facet-values-group';\r\nimport {Hidden} from '../../../common/hidden';\r\nimport {Bindings} from '../../atomic-search-interface/atomic-search-interface';\r\nimport {initializePopover} from '../atomic-popover/popover-type';\r\n\r\n/**\r\n * A facet is a list of values for a certain field occurring in the results, ordered using a configurable criteria (e.g., number of occurrences).\r\n * An `atomic-rating-range-facet` displays a facet of the results for the current query as ratings.\r\n * It only supports numeric fields.\r\n *\r\n * @part facet - The wrapper for the entire facet.\r\n * @part placeholder - The placeholder shown before the first search is executed.\r\n *\r\n * @part label-button - The button that displays the label and toggles to expand or collapse the facet.\r\n * @part label-button-icon - The label button icon.\r\n * @part clear-button - The button that resets the actively selected facet values.\r\n * @part clear-button-icon - The clear button icon.\r\n *\r\n * @part values - The facet values container.\r\n * @part value-label - The facet value label, common for all displays.\r\n * @part value-count - The facet value count, common for all displays.\r\n *\r\n * @part value-link - The facet value when display is 'link'.\r\n * @part value-link-selected - The selected facet value when display is 'link'.\r\n * @part value-box - The facet value when display is 'box'.\r\n * @part value-box-selected - The selected facet value when display is 'box'.\r\n */\r\n@Component({\r\n  tag: 'atomic-rating-range-facet',\r\n  styleUrl: 'atomic-rating-range-facet.pcss',\r\n  shadow: true,\r\n})\r\nexport class AtomicRatingRangeFacet implements InitializableComponent {\r\n  @InitializeBindings() public bindings!: Bindings;\r\n  public facet!: NumericFacet;\r\n  private dependenciesManager?: FacetConditionsManager;\r\n  public searchStatus!: SearchStatus;\r\n  @Element() private host!: HTMLElement;\r\n\r\n  @BindStateToController('facet')\r\n  @State()\r\n  public facetState!: NumericFacetState;\r\n  @BindStateToController('searchStatus')\r\n  @State()\r\n  public searchStatusState!: SearchStatusState;\r\n  @State() public error!: Error;\r\n\r\n  /**\r\n   * Specifies a unique identifier for the facet.\r\n   */\r\n  @Prop({mutable: true, reflect: true}) public facetId?: string;\r\n  /**\r\n   * The non-localized label for the facet.\r\n   * Used in the `atomic-breadbox` component through the bindings store.\r\n   */\r\n  @Prop({reflect: true}) public label = 'no-label';\r\n  /**\r\n   * The field whose values you want to display in the facet.\r\n   */\r\n  @Prop({reflect: true}) public field!: string;\r\n  /**\r\n   * The number of options to display in the facet. If `maxValueInIndex` isn't specified, it will be assumed that this is also the maximum number of rating icons.\r\n   */\r\n  @Prop({reflect: true}) public numberOfIntervals = 5;\r\n  /**\r\n   * The maximum value in the field's index and the number of rating icons to display in the facet. This property will default to the same value as `numberOfIntervals`, if not assigned a value.\r\n   */\r\n  @Prop({reflect: true}) public maxValueInIndex = this.numberOfIntervals;\r\n  /**\r\n   * The minimum value of the field.\r\n   */\r\n  @Prop({reflect: true}) public minValueInIndex = 1;\r\n  /**\r\n   * The SVG icon to use to display the rating.\r\n   *\r\n   * - Use a value that starts with `http://`, `https://`, `./`, or `../`, to fetch and display an icon from a given location.\r\n   * - Use a value that starts with `assets://`, to display an icon from the Atomic package.\r\n   * - Use a stringified SVG to display it directly.\r\n   *\r\n   * When using a custom icon, at least part of your icon should have the color set to `fill=\"currentColor\"`.\r\n   * This part of the SVG will take on the colors set in the following [variables](https://developer.mozilla.org/en-US/docs/Web/CSS/Using_CSS_custom_properties):\r\n   *\r\n   * - `--atomic-rating-icon-active-color`\r\n   * - `--atomic-rating-icon-inactive-color`\r\n   */\r\n  @Prop({reflect: true}) public icon = Star;\r\n  /**\r\n   * Specifies whether the facet is collapsed. When the facet is the child of an `atomic-facet-manager` component, the facet manager controls this property.\r\n   */\r\n  @Prop({reflect: true, mutable: true}) public isCollapsed = false;\r\n  /**\r\n   * The [heading level](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements) to use for the heading over the facet, from 1 to 6.\r\n   */\r\n  @Prop({reflect: true}) public headingLevel = 0;\r\n  /**\r\n   * Whether to exclude the parents of folded results when estimating the result count for each facet value.\r\n   */\r\n  @Prop({reflect: true}) public filterFacetCount = true;\r\n  /**\r\n   * The maximum number of results to scan in the index to ensure that the facet lists all potential facet values.\r\n   * Note: A high injectionDepth may negatively impact the facet request performance.\r\n   * Minimum: `0`\r\n   * Default: `1000`\r\n   */\r\n  @Prop({reflect: true}) public injectionDepth = 1000;\r\n\r\n  /**\r\n   * The required facets and values for this facet to be displayed.\r\n   * Examples:\r\n   * ```html\r\n   * <atomic-facet facet-id=\"abc\" field=\"objecttype\" ...></atomic-facet>\r\n   *\r\n   * <!-- To show the facet when any value is selected in the facet with id \"abc\": -->\r\n   * <atomic-rating-range-facet\r\n   *   depends-on-abc\r\n   *   ...\r\n   * ></atomic-rating-range-facet>\r\n   *\r\n   * <!-- To show the facet when value \"doc\" is selected in the facet with id \"abc\": -->\r\n   * <atomic-rating-range-facet\r\n   *   depends-on-abc=\"doc\"\r\n   *   ...\r\n   * ></atomic-rating-range-facet>\r\n   * ```\r\n   */\r\n  @MapProp() @Prop() public dependsOn: Record<string, string> = {};\r\n\r\n  private headerFocus?: FocusTargetController;\r\n\r\n  private get focusTarget() {\r\n    if (!this.headerFocus) {\r\n      this.headerFocus = new FocusTargetController(this);\r\n    }\r\n    return this.headerFocus;\r\n  }\r\n\r\n  public initialize() {\r\n    this.searchStatus = buildSearchStatus(this.bindings.engine);\r\n    this.initializeFacet();\r\n    this.initializeDependenciesManager();\r\n  }\r\n\r\n  public disconnectedCallback() {\r\n    if (this.host.isConnected) {\r\n      return;\r\n    }\r\n    this.dependenciesManager?.stopWatching();\r\n  }\r\n\r\n  private get isHidden() {\r\n    return (\r\n      !this.valuesToRender.length ||\r\n      this.searchStatusState.hasError ||\r\n      !this.facet.state.enabled\r\n    );\r\n  }\r\n\r\n  private initializeFacet() {\r\n    const options: NumericFacetOptions = {\r\n      facetId: this.facetId,\r\n      field: this.field,\r\n      numberOfValues: this.numberOfIntervals,\r\n      currentValues: this.generateCurrentValues(),\r\n      sortCriteria: 'descending',\r\n      generateAutomaticRanges: false,\r\n      filterFacetCount: this.filterFacetCount,\r\n      injectionDepth: this.injectionDepth,\r\n    };\r\n    this.facet = buildNumericFacet(this.bindings.engine, {options});\r\n    this.facetId = this.facet.state.facetId;\r\n    const facetInfo: FacetInfo = {\r\n      label: () => this.bindings.i18n.t(this.label),\r\n      facetId: this.facetId!,\r\n      element: this.host,\r\n      isHidden: () => this.isHidden,\r\n    };\r\n    this.bindings.store.registerFacet('numericFacets', {\r\n      ...facetInfo,\r\n      format: (value) => this.formatFacetValue(value),\r\n      content: (value) => this.ratingContent(value),\r\n    });\r\n    initializePopover(this.host, {\r\n      ...facetInfo,\r\n      hasValues: () => !!this.valuesToRender.length,\r\n      numberOfActiveValues: () => this.numberOfSelectedValues,\r\n    });\r\n  }\r\n\r\n  private get scaleFactor() {\r\n    return this.maxValueInIndex / this.numberOfIntervals;\r\n  }\r\n\r\n  private get numberOfSelectedValues() {\r\n    return this.facetState.values.filter(({state}) => state === 'selected')\r\n      .length;\r\n  }\r\n\r\n  private initializeDependenciesManager() {\r\n    this.dependenciesManager = buildFacetConditionsManager(\r\n      this.bindings.engine,\r\n      {\r\n        facetId: this.facetId!,\r\n        conditions: parseDependsOn<\r\n          FacetValueRequest | CategoryFacetValueRequest\r\n        >(this.dependsOn),\r\n      }\r\n    );\r\n  }\r\n\r\n  private generateCurrentValues() {\r\n    const currentValues: NumericRangeRequest[] = [];\r\n    for (let i = this.minValueInIndex; i <= this.numberOfIntervals; i++) {\r\n      currentValues.push(\r\n        buildNumericRange({\r\n          start: Math.round(i * this.scaleFactor * 100) / 100,\r\n          end: Math.round(this.maxValueInIndex * 100) / 100,\r\n          endInclusive: true,\r\n        })\r\n      );\r\n    }\r\n    return currentValues;\r\n  }\r\n\r\n  private formatFacetValue(facetValue: NumericFacetValue) {\r\n    if (facetValue.start === this.maxValueInIndex) {\r\n      return this.bindings.i18n.t('stars-only', {\r\n        count: facetValue.start,\r\n      });\r\n    }\r\n    return this.bindings.i18n.t('stars-range', {\r\n      value: facetValue.start,\r\n      count: this.maxValueInIndex,\r\n    });\r\n  }\r\n\r\n  private ratingContent(facetValue: NumericFacetValue) {\r\n    return (\r\n      <div class=\"flex items-center\">\r\n        <Rating\r\n          i18n={this.bindings.i18n}\r\n          numberOfTotalIcons={this.maxValueInIndex}\r\n          numberOfActiveIcons={facetValue.start}\r\n          icon={this.icon}\r\n        ></Rating>\r\n        {this.renderLabelText(facetValue)}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private renderHeader() {\r\n    return (\r\n      <FacetHeader\r\n        i18n={this.bindings.i18n}\r\n        label={this.label}\r\n        onClearFilters={() => {\r\n          this.focusTarget.focusAfterSearch();\r\n          this.facet.deselectAll();\r\n        }}\r\n        numberOfActiveValues={this.numberOfSelectedValues}\r\n        isCollapsed={this.isCollapsed}\r\n        headingLevel={this.headingLevel}\r\n        onToggleCollapse={() => (this.isCollapsed = !this.isCollapsed)}\r\n        headerRef={(el) => this.focusTarget.setTarget(el)}\r\n      ></FacetHeader>\r\n    );\r\n  }\r\n\r\n  private renderLabelText(facetValue: NumericFacetValue) {\r\n    return (\r\n      <span\r\n        part=\"value-label\"\r\n        class={`ml-1 flex items-center truncate group-focus:text-primary group-hover:text-primary ${\r\n          facetValue.state === 'selected' ? 'font-bold' : ''\r\n        }`}\r\n      >\r\n        {facetValue.start === this.maxValueInIndex ? (\r\n          <span>{this.bindings.i18n.t('only')}</span>\r\n        ) : (\r\n          this.bindings.i18n.t('and-up')\r\n        )}\r\n      </span>\r\n    );\r\n  }\r\n\r\n  private renderValue(facetValue: NumericFacetValue, onClick: () => void) {\r\n    const displayValue = this.formatFacetValue(facetValue);\r\n    const isSelected = facetValue.state === 'selected';\r\n    return (\r\n      <FacetValueLink\r\n        displayValue={displayValue}\r\n        numberOfResults={facetValue.numberOfResults}\r\n        isSelected={isSelected}\r\n        i18n={this.bindings.i18n}\r\n        onClick={onClick}\r\n      >\r\n        {this.ratingContent(facetValue)}\r\n      </FacetValueLink>\r\n    );\r\n  }\r\n\r\n  private renderValuesContainer(children: VNode[]) {\r\n    return (\r\n      <FacetValuesGroup i18n={this.bindings.i18n} label={this.label}>\r\n        <ul class=\"mt-3\" part=\"values\">\r\n          {children}\r\n        </ul>\r\n      </FacetValuesGroup>\r\n    );\r\n  }\r\n\r\n  private renderValues() {\r\n    return this.renderValuesContainer(\r\n      this.valuesToRender.map((value) =>\r\n        this.renderValue(value, () => this.facet.toggleSingleSelect(value))\r\n      )\r\n    );\r\n  }\r\n\r\n  private get valuesToRender() {\r\n    return this.facet.state.values.filter(\r\n      (value) => value.numberOfResults || value.state !== 'idle'\r\n    );\r\n  }\r\n\r\n  public render() {\r\n    if (this.searchStatusState.hasError || !this.facet.state.enabled) {\r\n      return <Hidden></Hidden>;\r\n    }\r\n\r\n    if (!this.searchStatusState.firstSearchExecuted) {\r\n      return (\r\n        <FacetPlaceholder\r\n          numberOfValues={this.numberOfIntervals}\r\n          isCollapsed={this.isCollapsed}\r\n        ></FacetPlaceholder>\r\n      );\r\n    }\r\n\r\n    if (!this.valuesToRender.length) {\r\n      return <Hidden></Hidden>;\r\n    }\r\n\r\n    return (\r\n      <FacetContainer>\r\n        {this.renderHeader()}\r\n        {!this.isCollapsed && this.renderValues()}\r\n      </FacetContainer>\r\n    );\r\n  }\r\n}\r\n"],"version":3}