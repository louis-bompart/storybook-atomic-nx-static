{"version":3,"names":["getFieldTableColumns","props","itemRenderingFunction","getFieldTableColumnsFromRenderingFunction","getFieldTableColumnsFromHTMLTemplate","contentOfRenderingFunction","document","createElement","contentOfRenderingFunctionAsString","firstItem","innerHTML","Array","from","querySelectorAll","tableElementTagName","templateContentForFirstItem","DisplayTable","children","fieldColumns","length","logger","error","host","h","class","listClasses","part","map","column","value","getAttribute","DisplayTableRow","key","rowIndex","setRef","ref","element","DisplayTableData","renderItem"],"sources":["src/components/common/item-list/display-table.tsx"],"sourcesContent":["import {FunctionalComponent, VNode, h} from '@stencil/core';\nimport {tableElementTagName} from '../../search/atomic-table-result/table-element-utils';\nimport {AnyItem} from '../interface/item';\nimport {ItemRenderingFunction} from './item-list-common';\n\ninterface TableColumnsProps {\n  templateContentForFirstItem: DocumentFragment;\n  firstItem: AnyItem;\n  itemRenderingFunction?: ItemRenderingFunction;\n}\n\nexport interface DisplayTableProps extends TableColumnsProps {\n  logger: Pick<Console, 'error'>;\n  host: HTMLElement;\n  listClasses: string;\n}\n\nexport interface TableDataProps extends TableColumnsProps {\n  key: string;\n}\n\nexport interface DisplayTableRowProps {\n  key: string;\n  rowIndex: number;\n  setRef: (element?: HTMLElement) => void;\n}\n\nconst getFieldTableColumns = (props: TableColumnsProps) => {\n  if (props.itemRenderingFunction) {\n    return getFieldTableColumnsFromRenderingFunction(props);\n  }\n  return getFieldTableColumnsFromHTMLTemplate(props);\n};\n\nconst getFieldTableColumnsFromRenderingFunction = (\n  props: Pick<TableColumnsProps, 'itemRenderingFunction' | 'firstItem'>\n): HTMLAtomicTableElementElement[] => {\n  const contentOfRenderingFunction = document.createElement('div');\n\n  const contentOfRenderingFunctionAsString = props.itemRenderingFunction!(\n    props.firstItem,\n    document.createElement('div')\n  );\n  contentOfRenderingFunction.innerHTML = contentOfRenderingFunctionAsString;\n\n  return Array.from(\n    contentOfRenderingFunction.querySelectorAll(tableElementTagName)\n  );\n};\n\nconst getFieldTableColumnsFromHTMLTemplate = (\n  props: Pick<DisplayTableProps, 'templateContentForFirstItem'>\n): HTMLAtomicTableElementElement[] =>\n  Array.from(\n    props.templateContentForFirstItem.querySelectorAll(tableElementTagName)\n  );\n\nexport const DisplayTable: FunctionalComponent<DisplayTableProps> = (\n  props,\n  children\n) => {\n  const fieldColumns = getFieldTableColumns(props);\n\n  if (!fieldColumns.length) {\n    props.logger.error(\n      'atomic-table-element elements missing in the template to display columns.',\n      props.host\n    );\n  }\n\n  return (\n    <table class={`list-root ${props.listClasses}`} part=\"result-table\">\n      <thead part=\"result-table-heading\">\n        <tr part=\"result-table-heading-row\">\n          {fieldColumns.map((column) => (\n            <th part=\"result-table-heading-cell\">\n              <atomic-text value={column.getAttribute('label')!}></atomic-text>\n            </th>\n          ))}\n        </tr>\n      </thead>\n      <tbody part=\"result-table-body\">{...children}</tbody>\n    </table>\n  );\n};\n\nexport const DisplayTableRow: FunctionalComponent<DisplayTableRowProps> = (\n  {key, rowIndex, setRef},\n  children\n) => {\n  return (\n    <tr\n      key={key}\n      part={\n        'result-table-row ' +\n        (rowIndex % 2 === 1 ? 'result-table-row-even' : 'result-table-row-odd')\n      }\n      ref={(element) => setRef(element)}\n    >\n      {...children}\n    </tr>\n  );\n};\n\nexport const DisplayTableData: FunctionalComponent<\n  TableDataProps & {\n    renderItem: (content: HTMLAtomicTableElementElement) => VNode;\n  }\n> = (props) => {\n  const fieldColumns = getFieldTableColumns(props);\n\n  return fieldColumns.map((column) => {\n    const key = column.getAttribute('label')! + props.key;\n    return (\n      <td key={key} part=\"result-table-cell\">\n        {props.renderItem(column)}\n      </td>\n    );\n  });\n};\n"],"mappings":"wEA2BA,MAAMA,EAAwBC,IAC5B,GAAIA,EAAMC,sBAAuB,CAC/B,OAAOC,EAA0CF,E,CAEnD,OAAOG,EAAqCH,EAAM,EAGpD,MAAME,EACJF,IAEA,MAAMI,EAA6BC,SAASC,cAAc,OAE1D,MAAMC,EAAqCP,EAAMC,sBAC/CD,EAAMQ,UACNH,SAASC,cAAc,QAEzBF,EAA2BK,UAAYF,EAEvC,OAAOG,MAAMC,KACXP,EAA2BQ,iBAAiBC,GAC7C,EAGH,MAAMV,EACJH,GAEAU,MAAMC,KACJX,EAAMc,4BAA4BF,iBAAiBC,I,MAG1CE,EAAuD,CAClEf,EACAgB,KAEA,MAAMC,EAAelB,EAAqBC,GAE1C,IAAKiB,EAAaC,OAAQ,CACxBlB,EAAMmB,OAAOC,MACX,4EACApB,EAAMqB,K,CAIV,OACEC,EAAA,SAAOC,MAAO,aAAavB,EAAMwB,cAAeC,KAAK,gBACnDH,EAAA,SAAOG,KAAK,wBACVH,EAAA,MAAIG,KAAK,4BACNR,EAAaS,KAAKC,GACjBL,EAAA,MAAIG,KAAK,6BACPH,EAAA,eAAaM,MAAOD,EAAOE,aAAa,gBAKhDP,EAAA,SAAOG,KAAK,wBAAwBT,GAC9B,E,MAICc,EAA6D,EACvEC,MAAKC,WAAUC,UAChBjB,IAGEM,EAAA,MACES,IAAKA,EACLN,KACE,qBACCO,EAAW,IAAM,EAAI,wBAA0B,wBAElDE,IAAMC,GAAYF,EAAOE,OAErBnB,G,MAKGoB,EAIRpC,IACH,MAAMiB,EAAelB,EAAqBC,GAE1C,OAAOiB,EAAaS,KAAKC,IACvB,MAAMI,EAAMJ,EAAOE,aAAa,SAAY7B,EAAM+B,IAClD,OACET,EAAA,MAAIS,IAAKA,EAAKN,KAAK,qBAChBzB,EAAMqC,WAAWV,GACf,GAEP,S"}