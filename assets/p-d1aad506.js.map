{"version":3,"names":["shouldDisplayInputForFacetRange","facetRange","hasInput","hasInputRange","searchStatusState","facetValues","hasResults","onlyValuesWithResultsOrActive","filter","value","numberOfResults","state","length","sortFacetVisibility","facetElements","facetInfoMap","visibleFacets","invisibleFacets","forEach","facet","facetId","isHidden","push","collapseFacetsAfter","facets","visibleFacetsCount","index","isCollapsed","isAutomaticFacetGenerator","element","tagName","isPseudoFacet","el","getFacetsInChildren","parent","Array","from","children","child","getAutomaticFacetGenerator","find","get2DMatrix","xSize","ySize","fill","map","findIndiceOfParent","parents","i","_a","contains","triageFacetsByParents","sortedFacets","indice"],"sources":["src/components/common/facets/facet-common.tsx"],"sourcesContent":["import {i18n} from 'i18next';\r\nimport {FacetValue, SearchStatusState} from '../types';\r\n\r\nexport interface FacetValueProps {\r\n  i18n: i18n;\r\n  displayValue: string;\r\n  numberOfResults: number;\r\n  isSelected: boolean;\r\n  onClick(): void;\r\n  searchQuery?: string;\r\n  class?: string;\r\n  part?: string;\r\n  additionalPart?: string;\r\n  buttonRef?: (element?: HTMLButtonElement) => void;\r\n}\r\n\r\nexport function shouldDisplayInputForFacetRange(facetRange: {\r\n  hasInput: boolean;\r\n  hasInputRange: boolean;\r\n  searchStatusState: SearchStatusState;\r\n  facetValues: Pick<FacetValue, 'numberOfResults' | 'state'>[];\r\n}) {\r\n  const {hasInput, hasInputRange, searchStatusState, facetValues} = facetRange;\r\n  if (!hasInput) {\r\n    return false;\r\n  }\r\n\r\n  if (hasInputRange) {\r\n    return true;\r\n  }\r\n\r\n  if (!searchStatusState.hasResults) {\r\n    return false;\r\n  }\r\n\r\n  const onlyValuesWithResultsOrActive =\r\n    facetValues.filter(\r\n      (value) => value.numberOfResults || value.state !== 'idle'\r\n    ) || [];\r\n\r\n  if (!onlyValuesWithResultsOrActive.length) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nexport type BaseFacetElement = HTMLElement & {\r\n  facetId: string;\r\n  isCollapsed: boolean;\r\n};\r\n\r\nexport function sortFacetVisibility(\r\n  facetElements: BaseFacetElement[],\r\n  facetInfoMap: Record<string, {isHidden: () => boolean}>\r\n) {\r\n  const visibleFacets: BaseFacetElement[] = [];\r\n  const invisibleFacets: BaseFacetElement[] = [];\r\n\r\n  facetElements.forEach((facet) => {\r\n    if (facetInfoMap[facet.facetId] && facetInfoMap[facet.facetId].isHidden()) {\r\n      invisibleFacets.push(facet);\r\n    } else {\r\n      visibleFacets.push(facet);\r\n    }\r\n  });\r\n\r\n  return {visibleFacets, invisibleFacets};\r\n}\r\n\r\nexport function collapseFacetsAfter(\r\n  facets: BaseFacetElement[],\r\n  visibleFacetsCount: number\r\n) {\r\n  if (visibleFacetsCount === -1) {\r\n    return;\r\n  }\r\n\r\n  facets.forEach((facet, index) => {\r\n    facet.isCollapsed = index + 1 > visibleFacetsCount;\r\n  });\r\n}\r\n\r\nexport function isAutomaticFacetGenerator(\r\n  element: HTMLElement\r\n): element is HTMLAtomicAutomaticFacetGeneratorElement {\r\n  return element.tagName === 'ATOMIC-AUTOMATIC-FACET-GENERATOR';\r\n}\r\n\r\nfunction isPseudoFacet(el: Element): el is BaseFacetElement {\r\n  return 'facetId' in el;\r\n}\r\n\r\nexport function getFacetsInChildren(parent: HTMLElement): BaseFacetElement[] {\r\n  const facets = Array.from(parent.children).filter((child) =>\r\n    isPseudoFacet(child)\r\n  ) as BaseFacetElement[];\r\n\r\n  return facets;\r\n}\r\nexport function getAutomaticFacetGenerator(\r\n  parent: HTMLElement\r\n): HTMLAtomicAutomaticFacetGeneratorElement | undefined {\r\n  return (Array.from(parent.children) as HTMLElement[]).find(\r\n    isAutomaticFacetGenerator\r\n  );\r\n}\r\n\r\nconst get2DMatrix = (xSize: number, ySize: number = 0) =>\r\n  new Array(xSize).fill(null).map(() => new Array(ySize));\r\n\r\nfunction findIndiceOfParent(\r\n  facet: BaseFacetElement,\r\n  parents: (HTMLElement | null)[]\r\n) {\r\n  for (let i = 0; i < parents.length; i++) {\r\n    if (parents[i]?.contains(facet)) {\r\n      return i;\r\n    }\r\n  }\r\n  return parents.length;\r\n}\r\n\r\n/**\r\n * Triage elements by their parents.\r\n * @param facets Facet Elements\r\n * @param parents Elements that may contains the facets\r\n * @returns an array in the same order as the parents, containing the facets that are contained by the corresponding parent.\r\n * The last element of the array contains the facets that are not contained by any of the parents.\r\n */\r\nexport function triageFacetsByParents(\r\n  facets: BaseFacetElement[],\r\n  ...parents: (HTMLElement | null)[]\r\n) {\r\n  const sortedFacets: BaseFacetElement[][] = get2DMatrix(parents.length + 1);\r\n  for (const facet of facets) {\r\n    const indice = findIndiceOfParent(facet, parents);\r\n    sortedFacets[indice].push(facet);\r\n  }\r\n  return sortedFacets;\r\n}\r\n"],"mappings":"SAgBgBA,EAAgCC,GAM9C,MAAMC,SAACA,EAAQC,cAAEA,EAAaC,kBAAEA,EAAiBC,YAAEA,GAAeJ,EAClE,IAAKC,EAAU,CACb,OAAO,K,CAGT,GAAIC,EAAe,CACjB,OAAO,I,CAGT,IAAKC,EAAkBE,WAAY,CACjC,OAAO,K,CAGT,MAAMC,EACJF,EAAYG,QACTC,GAAUA,EAAMC,iBAAmBD,EAAME,QAAU,UACjD,GAEP,IAAKJ,EAA8BK,OAAQ,CACzC,OAAO,K,CAGT,OAAO,IACT,C,SAOgBC,EACdC,EACAC,GAEA,MAAMC,EAAoC,GAC1C,MAAMC,EAAsC,GAE5CH,EAAcI,SAASC,IACrB,GAAIJ,EAAaI,EAAMC,UAAYL,EAAaI,EAAMC,SAASC,WAAY,CACzEJ,EAAgBK,KAAKH,E,KAChB,CACLH,EAAcM,KAAKH,E,KAIvB,MAAO,CAACH,gBAAeC,kBACzB,C,SAEgBM,EACdC,EACAC,GAEA,GAAIA,KAAwB,EAAG,CAC7B,M,CAGFD,EAAON,SAAQ,CAACC,EAAOO,KACrBP,EAAMQ,YAAcD,EAAQ,EAAID,CAAkB,GAEtD,C,SAEgBG,EACdC,GAEA,OAAOA,EAAQC,UAAY,kCAC7B,CAEA,SAASC,EAAcC,GACrB,MAAO,YAAaA,CACtB,C,SAEgBC,EAAoBC,GAClC,MAAMV,EAASW,MAAMC,KAAKF,EAAOG,UAAU7B,QAAQ8B,GACjDP,EAAcO,KAGhB,OAAOd,CACT,C,SACgBe,EACdL,GAEA,OAAQC,MAAMC,KAAKF,EAAOG,UAA4BG,KACpDZ,EAEJ,CAEA,MAAMa,EAAc,CAACC,EAAeC,EAAgB,IAClD,IAAIR,MAAMO,GAAOE,KAAK,MAAMC,KAAI,IAAM,IAAIV,MAAMQ,KAElD,SAASG,EACP3B,EACA4B,G,MAEA,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAQnC,OAAQoC,IAAK,CACvC,IAAIC,EAAAF,EAAQC,MAAE,MAAAC,SAAA,SAAAA,EAAEC,SAAS/B,GAAQ,CAC/B,OAAO6B,C,EAGX,OAAOD,EAAQnC,MACjB,C,SASgBuC,EACd3B,KACGuB,GAEH,MAAMK,EAAqCX,EAAYM,EAAQnC,OAAS,GACxE,IAAK,MAAMO,KAASK,EAAQ,CAC1B,MAAM6B,EAASP,EAAmB3B,EAAO4B,GACzCK,EAAaC,GAAQ/B,KAAKH,E,CAE5B,OAAOiC,CACT,Q"}