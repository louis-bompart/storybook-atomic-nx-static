{"version":3,"names":["AtomicAriaLive","this","regions","messagesQueue","buildDebouncedQueue","delay","id","randomID","onFindAriaLive","detail","args","element","isInSearchInterface","host","tagName","parentElement","updateMessage","region","message","assertive","updateRegion","enqueue","cancelActionIfQueued","registerRegion","disconnectedCallback","clear","render","h","Host","key","style","position","display","height","overflow","margin","Object","entries","map","regionName","role"],"sources":["src/components/search/atomic-search-interface/atomic-aria-live.tsx"],"sourcesContent":["import {\n  Component,\n  h,\n  Host,\n  State,\n  Element,\n  Method,\n  Listen,\n} from '@stencil/core';\nimport {FindAriaLiveEventArgs} from '../../../utils/accessibility-utils';\nimport {buildDebouncedQueue} from '../../../utils/debounce-utils';\nimport {randomID} from '../../../utils/utils';\n\ntype Regions = {[regionName: string]: {assertive: boolean; message: string}};\n\n/**\n * The `atomic-aria-live` component notifies screen readers of changes in the search interface.\n */\n@Component({\n  tag: 'atomic-aria-live',\n  shadow: false,\n})\nexport class AtomicAriaLive {\n  @Element() private host!: HTMLAtomicAriaLiveElement;\n  @State() private regions: Readonly<Regions> = {};\n\n  private messagesQueue = buildDebouncedQueue({delay: 500});\n  private id = randomID('aria-live-');\n\n  @Listen('atomic/accessibility/findAriaLive', {target: 'document'})\n  protected onFindAriaLive({detail: args}: CustomEvent<FindAriaLiveEventArgs>) {\n    if (!args.element || !this.isInSearchInterface) {\n      args.element = this.host;\n    }\n  }\n\n  private get isInSearchInterface() {\n    let element: Element | null = this.host;\n    while (element) {\n      if (element.tagName === 'ATOMIC-SEARCH-INTERFACE') {\n        return true;\n      }\n      element = element.parentElement;\n    }\n    return false;\n  }\n\n  /**\n   * @internal\n   */\n  @Method()\n  public async updateMessage(\n    region: string,\n    message: string,\n    assertive: boolean\n  ) {\n    const updateRegion = () =>\n      (this.regions = {...this.regions, [region]: {assertive, message}});\n\n    if (message) {\n      this.messagesQueue.enqueue(updateRegion, region);\n    } else {\n      this.messagesQueue.cancelActionIfQueued(region);\n      updateRegion();\n    }\n  }\n\n  /**\n   * @internal\n   */\n  @Method()\n  public async registerRegion(region: string, assertive: boolean) {\n    if (region in this.regions) {\n      return;\n    }\n    this.regions = {...this.regions, [region]: {assertive, message: ''}};\n  }\n\n  public disconnectedCallback() {\n    this.messagesQueue.clear();\n  }\n\n  public render() {\n    return (\n      <Host\n        style={{\n          position: 'absolute',\n          display: 'block',\n          height: '0',\n          overflow: 'hidden',\n          margin: '0',\n        }}\n      >\n        {Object.entries(this.regions).map(\n          ([regionName, {assertive, message}]) => (\n            <div\n              key={regionName}\n              id={`${this.id}-${regionName}`}\n              aria-live={assertive ? 'assertive' : 'polite'}\n              role=\"status\"\n            >\n              {message}\n            </div>\n          )\n        )}\n      </Host>\n    );\n  }\n}\n"],"mappings":"0JAsBaA,EAAc,M,yBAERC,KAAAC,QAA6B,GAEtCD,KAAAE,cAAgBC,EAAoB,CAACC,MAAO,MAC5CJ,KAAAK,GAAKC,EAAS,c,aAHwB,E,CAMpC,cAAAC,EAAgBC,OAAQC,IAChC,IAAKA,EAAKC,UAAYV,KAAKW,oBAAqB,CAC9CF,EAAKC,QAAUV,KAAKY,I,EAIxB,uBAAYD,GACV,IAAID,EAA0BV,KAAKY,KACnC,MAAOF,EAAS,CACd,GAAIA,EAAQG,UAAY,0BAA2B,CACjD,OAAO,I,CAETH,EAAUA,EAAQI,a,CAEpB,OAAO,K,CAOF,mBAAMC,CACXC,EACAC,EACAC,GAEA,MAAMC,EAAe,IAClBnB,KAAKC,QAAU,IAAID,KAAKC,QAASe,CAACA,GAAS,CAACE,YAAWD,YAE1D,GAAIA,EAAS,CACXjB,KAAKE,cAAckB,QAAQD,EAAcH,E,KACpC,CACLhB,KAAKE,cAAcmB,qBAAqBL,GACxCG,G,EAQG,oBAAMG,CAAeN,EAAgBE,GAC1C,GAAIF,KAAUhB,KAAKC,QAAS,CAC1B,M,CAEFD,KAAKC,QAAU,IAAID,KAAKC,QAASe,CAACA,GAAS,CAACE,YAAWD,QAAS,I,CAG3D,oBAAAM,GACLvB,KAAKE,cAAcsB,O,CAGd,MAAAC,GACL,OACEC,EAACC,EAAI,CAAAC,IAAA,2CACHC,MAAO,CACLC,SAAU,WACVC,QAAS,QACTC,OAAQ,IACRC,SAAU,SACVC,OAAQ,MAGTC,OAAOC,QAAQpC,KAAKC,SAASoC,KAC5B,EAAEC,GAAapB,YAAWD,cACxBS,EAAA,OACEE,IAAKU,EACLjC,GAAI,GAAGL,KAAKK,MAAMiC,IAAY,YACnBpB,EAAY,YAAc,SACrCqB,KAAK,UAEJtB,K"}