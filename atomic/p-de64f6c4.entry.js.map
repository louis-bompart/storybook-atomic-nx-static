{"version":3,"names":["atomicCommerceFacetCss","AtomicCommerceFacetStyle0","AtomicCommerceFacet","this","isCollapsed","initialize","initSummary","initAriaLive","initPopover","registerFacet","componentShouldUpdate","next","prev","propName","isFacetState","shouldUpdateFacetSearchComponent","facetSearch","render","hasError","firstSearchExecuted","summary","state","h","FacetGuard","key","enabled","hasResults","facetState","values","length","FacetContainer","FacetHeader","i18n","bindings","label","displayName","onClearFilters","focusTargets","header","focusAfterSearch","facet","deselectAll","numberOfActiveValues","activeValues","headingLevel","onToggleCollapse","headerRef","el","setTarget","renderBody","FacetPlaceholder","numberOfValues","Fragment","FacetSearchInputGuard","canShowMoreValues","numberOfDisplayedValues","withSearch","FacetSearchInput","onChange","value","clear","updateText","search","onClear","query","shouldDisplaySearchResults","renderSearchResults","renderMatches","renderValues","renderShowMoreLess","renderValuesContainer","children","FacetValuesGroup","part","map","FacetSearchValue","facetValueProps","facetCount","count","onExclude","exclude","onSelect","select","facetValue","rawValue","i","shouldFocusOnShowLessAfterInteraction","shouldFocusOnShowMoreAfterInteraction","FacetValue","numberOfResults","toggleExclude","toggleSelect","setRef","btn","_a","showLessFocus","_b","showMoreFocus","FacetShowMoreLess","onShowMore","showMore","showMoreValues","onShowLess","showLess","showLessValues","canShowLessValues","FacetSearchMatches","numberOfMatches","hasMoreMatches","moreValuesAvailable","filter","facetSearchQuery","displayValuesAs","enableExclusion","field","isHidden","store","facetInfo","initializePopover","host","hasValues","interfaceElement","type","buildListingSummary","engine","buildSearchSummary","announceFacetSearchResultsWithAriaLive","msg","facetSearchAriaMessage","t","facetId","element","FocusTargetController","headerFocus","__decorate","InitializeBindings","BindStateToController","AriaLiveRegion"],"sources":["src/components/commerce/facets/atomic-commerce-facet/atomic-commerce-facet.pcss?tag=atomic-commerce-facet&encapsulation=shadow","src/components/commerce/facets/atomic-commerce-facet/atomic-commerce-facet.tsx"],"sourcesContent":["@import '../../../../global/global.pcss';\n@import '../../../common/facets/facet-search/facet-search.pcss';\n@import '../../../common/facets/facet-common.pcss';\n@import '../../../common/facets/facet-value-checkbox/facet-value-checkbox.pcss';\n@import '../../../common/facets/facet-value-exclude/facet-value-exclude.pcss';\n@import '../../../common/facets/facet-value-box/facet-value-box.pcss';\n","import {\n  RegularFacet,\n  RegularFacetState,\n  buildListingSummary,\n  buildSearchSummary,\n  SearchSummary,\n  ListingSummary,\n} from '@coveo/headless/commerce';\nimport {\n  Component,\n  h,\n  State,\n  Prop,\n  Element,\n  VNode,\n  Fragment,\n} from '@stencil/core';\nimport {\n  AriaLiveRegion,\n  FocusTargetController,\n} from '../../../../utils/accessibility-utils';\nimport {\n  BindStateToController,\n  InitializableComponent,\n  InitializeBindings,\n} from '../../../../utils/initialization-utils';\nimport {FacetInfo} from '../../../common/facets/facet-common-store';\nimport {FacetContainer} from '../../../common/facets/facet-container/facet-container';\nimport {FacetGuard} from '../../../common/facets/facet-guard';\nimport {FacetHeader} from '../../../common/facets/facet-header/facet-header';\nimport {FacetPlaceholder} from '../../../common/facets/facet-placeholder/facet-placeholder';\nimport {announceFacetSearchResultsWithAriaLive} from '../../../common/facets/facet-search/facet-search-aria-live';\nimport {FacetSearchInput} from '../../../common/facets/facet-search/facet-search-input';\nimport {FacetSearchInputGuard} from '../../../common/facets/facet-search/facet-search-input-guard';\nimport {FacetSearchMatches} from '../../../common/facets/facet-search/facet-search-matches';\nimport {\n  shouldDisplaySearchResults,\n  shouldUpdateFacetSearchComponent,\n} from '../../../common/facets/facet-search/facet-search-utils';\nimport {FacetSearchValue} from '../../../common/facets/facet-search/facet-search-value';\nimport {FacetShowMoreLess} from '../../../common/facets/facet-show-more-less/facet-show-more-less';\nimport {\n  FacetValueProps,\n  FacetValue,\n} from '../../../common/facets/facet-value/facet-value';\nimport {FacetValuesGroup} from '../../../common/facets/facet-values-group/facet-values-group';\nimport {initializePopover} from '../../../search/facets/atomic-popover/popover-type';\nimport {CommerceBindings as Bindings} from '../../atomic-commerce-interface/atomic-commerce-interface';\n\n/**\n * The `atomic-commerce-facet` component renders a commerce facet that the end user can interact with to filter products.\n *\n * @internal\n */\n@Component({\n  tag: 'atomic-commerce-facet',\n  styleUrl: 'atomic-commerce-facet.pcss',\n  shadow: true,\n})\nexport class AtomicCommerceFacet implements InitializableComponent<Bindings> {\n  @InitializeBindings() public bindings!: Bindings;\n  public summary!: SearchSummary | ListingSummary;\n  @Element() private host!: HTMLElement;\n\n  @Prop() public facet!: RegularFacet;\n\n  @BindStateToController('facet')\n  @State()\n  public facetState!: RegularFacetState;\n\n  @State() public error!: Error;\n\n  private isCollapsed = false;\n  private showLessFocus?: FocusTargetController;\n  private showMoreFocus?: FocusTargetController;\n  private headerFocus?: FocusTargetController;\n\n  @AriaLiveRegion('facet-search')\n  protected facetSearchAriaMessage!: string;\n\n  public initialize() {\n    this.initSummary();\n    this.initAriaLive();\n    this.initPopover();\n    this.registerFacet();\n  }\n\n  public componentShouldUpdate(\n    next: unknown,\n    prev: unknown,\n    propName: keyof AtomicCommerceFacet\n  ) {\n    if (\n      this.isFacetState(prev, propName) &&\n      this.isFacetState(next, propName)\n    ) {\n      return shouldUpdateFacetSearchComponent(\n        next.facetSearch,\n        prev.facetSearch\n      );\n    }\n    return true;\n  }\n\n  public render() {\n    const {hasError, firstSearchExecuted} = this.summary.state;\n    return (\n      <FacetGuard\n        enabled={true}\n        hasError={hasError}\n        firstSearchExecuted={firstSearchExecuted}\n        hasResults={this.facetState.values.length > 0}\n      >\n        {firstSearchExecuted ? (\n          <FacetContainer>\n            <FacetHeader\n              i18n={this.bindings.i18n}\n              label={this.displayName}\n              onClearFilters={() => {\n                this.focusTargets.header.focusAfterSearch();\n                this.facet.deselectAll();\n              }}\n              numberOfActiveValues={this.activeValues.length}\n              isCollapsed={this.isCollapsed}\n              headingLevel={0}\n              onToggleCollapse={() => (this.isCollapsed = !this.isCollapsed)}\n              headerRef={(el) => this.focusTargets.header.setTarget(el)}\n            ></FacetHeader>\n            {this.renderBody()}\n          </FacetContainer>\n        ) : (\n          <FacetPlaceholder numberOfValues={8} isCollapsed={this.isCollapsed} />\n        )}\n      </FacetGuard>\n    );\n  }\n\n  private renderBody() {\n    if (this.isCollapsed) {\n      return;\n    }\n    return (\n      <Fragment>\n        <FacetSearchInputGuard\n          canShowMoreValues={this.facetState.canShowMoreValues}\n          numberOfDisplayedValues={this.facetState.values.length}\n          withSearch={true}\n        >\n          <FacetSearchInput\n            i18n={this.bindings.i18n}\n            label={this.displayName}\n            onChange={(value) => {\n              if (value === '') {\n                this.facet.facetSearch.clear();\n                return;\n              }\n              this.facet.facetSearch.updateText(value);\n              this.facet.facetSearch.search();\n            }}\n            onClear={() => this.facet.facetSearch.clear()}\n            query={this.facetState.facetSearch.query}\n          />\n        </FacetSearchInputGuard>\n        {shouldDisplaySearchResults(this.facetState.facetSearch)\n          ? [this.renderSearchResults(), this.renderMatches()]\n          : [this.renderValues(), this.renderShowMoreLess()]}\n      </Fragment>\n    );\n  }\n\n  private renderValuesContainer(children: VNode[], query?: string) {\n    return (\n      <FacetValuesGroup\n        i18n={this.bindings.i18n}\n        label={this.displayName}\n        query={query}\n      >\n        <ul part=\"values\">{children}</ul>\n      </FacetValuesGroup>\n    );\n  }\n\n  private renderSearchResults() {\n    return this.renderValuesContainer(\n      this.facet.state.facetSearch.values.map((value) => (\n        <FacetSearchValue\n          {...this.facetValueProps}\n          facetCount={value.count}\n          onExclude={() => this.facet.facetSearch.exclude(value)}\n          onSelect={() => this.facet.facetSearch.select(value)}\n          facetValue={value.rawValue}\n        />\n      ))\n    );\n  }\n\n  private renderValues() {\n    return this.renderValuesContainer(\n      this.facet.state.values.map((value, i) => {\n        const shouldFocusOnShowLessAfterInteraction = i === 0;\n        const shouldFocusOnShowMoreAfterInteraction = i === 0;\n\n        return (\n          <FacetValue\n            {...this.facetValueProps}\n            facetCount={value.numberOfResults}\n            onExclude={() => this.facet.toggleExclude(value)}\n            onSelect={() => this.facet.toggleSelect(value)}\n            facetValue={value.value}\n            facetState={value.state}\n            setRef={(btn) => {\n              if (shouldFocusOnShowLessAfterInteraction) {\n                this.showLessFocus?.setTarget(btn);\n              }\n              if (shouldFocusOnShowMoreAfterInteraction) {\n                this.showMoreFocus?.setTarget(btn);\n              }\n            }}\n          />\n        );\n      })\n    );\n  }\n\n  private renderShowMoreLess() {\n    return (\n      <FacetShowMoreLess\n        label={this.displayName}\n        i18n={this.bindings.i18n}\n        onShowMore={() => {\n          this.focusTargets.showMore.focusAfterSearch();\n          this.facet.showMoreValues();\n        }}\n        onShowLess={() => {\n          this.focusTargets.showLess.focusAfterSearch();\n          this.facet.showLessValues();\n        }}\n        canShowMoreValues={this.facet.state.canShowMoreValues}\n        canShowLessValues={this.facet.state.canShowLessValues}\n      ></FacetShowMoreLess>\n    );\n  }\n\n  private renderMatches() {\n    return (\n      <FacetSearchMatches\n        i18n={this.bindings.i18n}\n        query={this.facet.state.facetSearch.query}\n        numberOfMatches={this.facet.state.facetSearch.values.length}\n        hasMoreMatches={this.facet.state.facetSearch.moreValuesAvailable}\n      ></FacetSearchMatches>\n    );\n  }\n\n  private get activeValues() {\n    return this.facet.state.values.filter(({state}) => state !== 'idle');\n  }\n\n  private get displayName() {\n    return this.facet.state.displayName || 'no-label';\n  }\n\n  private get facetValueProps(): Pick<\n    FacetValueProps,\n    | 'facetSearchQuery'\n    | 'enableExclusion'\n    | 'field'\n    | 'i18n'\n    | 'displayValuesAs'\n  > {\n    return {\n      facetSearchQuery: this.facetState.facetSearch.query,\n      displayValuesAs: 'checkbox',\n      enableExclusion: false,\n      field: this.facetState.field,\n      i18n: this.bindings.i18n,\n    };\n  }\n\n  private get isHidden() {\n    return !this.facetState.values.length;\n  }\n\n  private registerFacet() {\n    this.bindings.store.registerFacet('facets', this.facetInfo);\n  }\n\n  private initPopover() {\n    initializePopover(this.host, {\n      ...this.facetInfo,\n      hasValues: () => !!this.facet.state.values.length,\n      numberOfActiveValues: () => this.activeValues.length,\n    });\n  }\n\n  private initSummary() {\n    if (this.bindings.interfaceElement.type === 'product-listing') {\n      this.summary = buildListingSummary(this.bindings.engine);\n    } else {\n      this.summary = buildSearchSummary(this.bindings.engine);\n    }\n  }\n\n  private initAriaLive() {\n    announceFacetSearchResultsWithAriaLive(\n      this.facet,\n      this.displayName,\n      (msg) => (this.facetSearchAriaMessage = msg),\n      this.bindings.i18n\n    );\n  }\n\n  private get facetInfo(): FacetInfo {\n    return {\n      label: () => this.bindings.i18n.t(this.displayName),\n      facetId: this.facet.state.facetId,\n      element: this.host,\n      isHidden: () => this.isHidden,\n    };\n  }\n\n  private get focusTargets(): {\n    showLess: FocusTargetController;\n    showMore: FocusTargetController;\n    header: FocusTargetController;\n  } {\n    if (!this.showLessFocus) {\n      this.showLessFocus = new FocusTargetController(this);\n    }\n    if (!this.showMoreFocus) {\n      this.showMoreFocus = new FocusTargetController(this);\n    }\n    if (!this.headerFocus) {\n      this.headerFocus = new FocusTargetController(this);\n    }\n\n    return {\n      showLess: this.showLessFocus,\n      showMore: this.showMoreFocus,\n      header: this.headerFocus,\n    };\n  }\n\n  private isFacetState(\n    state: unknown,\n    propName: string\n  ): state is RegularFacetState {\n    return (\n      propName === 'facetState' &&\n      typeof (state as RegularFacetState)?.facetId === 'string'\n    );\n  }\n}\n"],"mappings":"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"}