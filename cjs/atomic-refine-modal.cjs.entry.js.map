{"file":"atomic-refine-modal.entry.cjs.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAM,oBAAoB,GAAG,wxuCAAwxuC,CAAC;AACtzuC,gCAAe,oBAAoB;;;;;;;;;;;;MCiFtB,iBAAiB;;;QAuBU,WAAM,GAAG,KAAK,CAAC;;;;;;;QAQvB,wBAAmB,GAAG,CAAC,CAAC;;;;;;;sBARP,KAAK;mCAQA,CAAC;;IAGrD,YAAY,CAAC,MAAe;QAC1B,IAAI,MAAM,EAAE;YACV,IAAI,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC,EAAE;gBACjD,OAAO;aACR;YAED,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC;SAC1C;KACF;IAEM,UAAU;QACf,IAAI,CAAC,iBAAiB,GAAGA,eAAsB,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACtE,IAAI,CAAC,IAAI,GAAGC,eAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QAC5C,IAAI,CAAC,YAAY,GAAGC,eAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QAC5D,IAAI,CAAC,YAAY,GAAGC,eAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QAC5D,IAAI,CAAC,YAAY,GAAGC,eAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QAC5D,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KAChC;IAEO,eAAe;QACrB,MAAM,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC9C,OAAO,CAAC,YAAY,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;QACvC,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,CAAC;QAEpC,MAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,gBAAgB,EAAwB,CAAC;QAC5E,MAAM,qBAAqB,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,yBAAyB,CAAE,CAAC;QAC5E,MAAM,aAAa,GAAGC,oBAAW,CAAC,qBAAqB,EAAE,QAAQ,CAAC,CAAC;QACnE,MAAM,uBAAuB,GAAGA,oBAAW,CACzC,qBAAqB,EACrB,mBAAmB,CACpB,CAAC;QACF,MAAM,aAAa,GAAGC,iCAAqB,CACzC,MAAM,EACN,uBAAuB,EACvB,aAAa,CACd,CAAC;QACF,MAAM,CAAC,6BAA6B,EAAE,mBAAmB,EAAE,cAAc,CAAC,GACxE,aAAa,CAAC,GAAG,CAAC,CAAC,WAAW,KAC5B,WAAW,CAAC,IAAI,CAACC,4BAAsB,CAAC,CACzC,CAAC;QACJ,MAAM,YAAY,GAAG;YACnB,GAAG,mBAAmB;YACtB,GAAG,6BAA6B;YAChC,GAAG,cAAc;SAClB,CAAC;QAEF,MAAM,EAAC,aAAa,EAAE,eAAe,EAAC,GAAGC,+BAAmB,CAC1D,YAAY,EACZ,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,YAAY,EAAE,CACnC,CAAC;QAEF,MAAM,kBAAkB,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;QAC3D,MAAM,oBAAoB,GAAG,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC;QAE/DC,+BAAmB,CAAC,kBAAkB,EAAE,IAAI,CAAC,mBAAmB,CAAC,CAAC;QAElE,OAAO,CAAC,MAAM,CAAC,GAAG,kBAAkB,CAAC,CAAC;QACtC,OAAO,CAAC,MAAM,CAAC,GAAG,oBAAoB,CAAC,CAAC;QAExC,MAAM,SAAS,GAAG,IAAI,CAAC,2BAA2B,EAAE,CAAC;QACrD,IAAI,SAAS,EAAE;YACb,SAAS,CAAC,+CAA+C,CACvD,IAAI,CAAC,mBAAmB,EACxB,aAAa,CAAC,MAAM,CACrB,CAAC;YACF,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;SAC3B;QAED,OAAO,OAAO,CAAC;KAChB;IAEO,WAAW,CAAC,MAA0B;QAC5C,OAAO,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC;YACzB,KAAK,CAAC,SAAS,CAAC,MAAM,CAACC,wBAAY,CAAC,CAAC;YACrC,KAAK,CAAC,YAAY,CAACC,wBAAkB,EAAE,EAAE,CAAC,CAAC;YAC3C,MAAM,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC,IAAI,CAAqB,CAAC;YACxD,KAAK,CAAC,WAAW;gBACf,IAAI,CAAC,mBAAmB,KAAK,CAAC,CAAC;sBAC3B,KAAK;sBACL,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,mBAAmB,CAAC;YACvC,OAAO,KAAK,CAAC;SACd,CAAC,CAAC;KACJ;IAEO,2BAA2B;;QACjC,IAAI,EAAC,MAAA,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,iBAAiB,0CAAE,YAAY,CAAA,EAAE;YAC/D,OAAO;SACR;QACD,MAAM,SAAS,GAAG,QAAQ,CAAC,aAAa,CACtC,kCAAkC,CACnC,CAAC;QAEF,SAAS,CAAC,YAAY,CACpB,eAAe,EACf,GAAG,MAAA,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,iBAAiB,0CAAE,YAAY,EAAE,CAChE,CAAC;QACF,IAAI,CAAC,qBAAqB,CAAC,SAAS,CAAC,CAAC;QAEtC,OAAO,SAAS,CAAC;KAClB;IAEO,qBAAqB,CAAC,EAAe;QAC3C,EAAE,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;QAC1B,EAAE,CAAC,KAAK,CAAC,aAAa,GAAG,QAAQ,CAAC;QAClC,EAAE,CAAC,KAAK,CAAC,GAAG,GAAG,+CAA+C,CAAC;KAChE;IAED,IAAY,OAAO;QACjB,OAAO,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,WAAW,CAAC;KAC9C;IAEO,MAAM,CAAC,CAAQ;QACrB,MAAM,MAAM,GAAG,CAAC,CAAC,YAAY,EAAE,CAAC,CAAC,CAAsB,CAAC;QACxD,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAC9B,CAAC,MAAM,KAAK,MAAM,CAAC,UAAU,KAAK,MAAM,CAAC,KAAK,CAC/C,CAAC;QACF,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;KAC7C;IAEO,WAAW,CAAC,EAAC,UAAU,EAAE,QAAQ,EAAE,KAAK,EAAqB;QACnE,QACEC,oBAAQ,KAAK,EAAE,UAAU,EAAE,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAChE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CACrB,EACT;KACH;IAEO,UAAU;QAChB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;YACxB,OAAO;SACR;QAED,QACEA,QAACC,cAAQ,QACPD,gBACE,IAAI,EAAC,kCAAkC,EACvC,KAAK,EAAC,kCAAkC,IAEvC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAC1B,EACLA,iBAAK,IAAI,EAAC,gBAAgB,EAAC,KAAK,EAAC,UAAU,IACzCA,oBACE,KAAK,EAAC,uGAAuG,EAC7G,IAAI,EAAC,QAAQ,gBACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,EAC3C,QAAQ,EAAE,CAAC,MAAM,KAAK,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAExC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,KAAK,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAChD,EACTA,iBACE,IAAI,EAAC,qBAAqB,EAC1B,KAAK,EAAC,2FAA2F,IAEjGA,yBACE,IAAI,EAAC,aAAa,EAClB,IAAI,EAAE,QAAQ,EACd,KAAK,EAAC,SAAS,GACF,CACX,CACF,CACG,EACX;KACH;IAEO,aAAa;;QACnB,MAAM,gBAAgB,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,gBAAgB,EAAE,CAAC,MAAM,GAAG,CAAC,CAAC;QAC3E,MAAM,kBAAkB,GACtB,CAAA,MAAA,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,iBAAiB,0CAAE,GAAG,MAAK,SAAS,CAAC;QAElE,IAAI,CAAC,gBAAgB,IAAI,CAAC,kBAAkB,EAAE;YAC5C,OAAO;SACR;QAED,QACEA,QAACC,cAAQ,QACPD,iBACE,IAAI,EAAC,gBAAgB,EACrB,KAAK,EAAC,uCAAuC,IAE7CA,gBACE,IAAI,EAAC,qCAAqC,EAC1C,KAAK,EAAC,6BAA6B,IAElC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,CAC7B,EACJ,IAAI,CAAC,sBAAsB,CAAC,cAAc,KACzCA,QAACE,aAAM,IACL,OAAO,EAAE,MAAM,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,EACnD,KAAK,EAAC,cAAc,EACpB,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,EACnC,KAAK,EAAC,WAAW,EACjB,IAAI,EAAC,kBAAkB,GACf,CACX,CACG,EACNF,kBAAM,IAAI,EAAC,QAAQ,GAAQ,EAC3BA,kBAAM,IAAI,EAAC,kBAAkB,GAAQ,CAC5B,EACX;KACH;IAEO,UAAU;QAChB,QACEA,mBACE,IAAI,EAAC,SAAS,EACd,IAAI,EAAC,MAAM,EACX,KAAK,EAAC,4CAA4C,IAEjD,IAAI,CAAC,UAAU,EAAE,EACjB,IAAI,CAAC,aAAa,EAAE,CACf,EACR;KACH;IAEM,MAAM;QACX,QACEA,QAACG,mCAAiB,qDAChB,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,IAAI,EAAE,IAAI,CAAC,IAAI,EACf,MAAM,EAAE,IAAI,CAAC,MAAM,EACnB,OAAO,EAAE,OAAO,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,EACpC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,iBAAiB,CAAC,EAC9C,iBAAiB,EAAE,IAAI,CAAC,iBAAiB,EACzC,UAAU,EAAE,IAAI,CAAC,UAAU,IAE1B,IAAI,CAAC,UAAU,EAAE,CACA,EACpB;KACH;IAEM,gBAAgB;QACrB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,EAAE,CAAC;KAC9B;;;;;;AApQ4B;IAA5BC,sCAAkB,EAAE;mDAA4B;AAK1C;IAFNC,yCAAqB,CAAC,cAAc,CAAC;4DAEO;AAGrC;IAFPA,yCAAqB,CAAC,mBAAmB,CAAC;iEAEa;AAGjD;IAFNA,yCAAqB,CAAC,cAAc,CAAC;4DAEO;AACE;IAArCA,yCAAqB,CAAC,MAAM,CAAC;oDAA8B;;;;;","names":["buildBreadcrumbManager","buildSort","buildQuerySummary","buildSearchStatus","buildFacetManager","findSection","triageFacetsByParents","sortByDocumentPosition","sortFacetVisibility","collapseFacetsAfter","popoverClass","isRefineModalFacet","h","Fragment","Button","RefineModalCommon","InitializeBindings","BindStateToController"],"sources":["src/components/search/atomic-refine-modal/atomic-refine-modal.pcss?tag=atomic-refine-modal&encapsulation=shadow","src/components/search/atomic-refine-modal/atomic-refine-modal.tsx"],"sourcesContent":["@import '../../common/refine-modal/refine-modal-common.pcss';\n\n:host {\n  position: absolute;\n}\n\n/**\n * @prop --atomic-refine-modal-facet-margin: The spacing between the modal's facets.\n */\nselect:hover + div,\nselect:focus-visible + div {\n  @apply text-primary-light;\n}\n","import {\n  BreadcrumbManager,\n  buildBreadcrumbManager,\n  BreadcrumbManagerState,\n  QuerySummary,\n  QuerySummaryState,\n  FacetManagerState,\n  Sort,\n  buildSort,\n  SortState,\n  buildQuerySummary,\n  buildSearchStatus,\n  SearchStatus,\n  FacetManager,\n  buildFacetManager,\n} from '@coveo/headless';\nimport {\n  Component,\n  h,\n  State,\n  Prop,\n  Element,\n  Watch,\n  Fragment,\n} from '@stencil/core';\nimport SortIcon from '../../../images/sort.svg';\nimport {\n  BindStateToController,\n  InitializableComponent,\n  InitializeBindings,\n} from '../../../utils/initialization-utils';\nimport {sortByDocumentPosition} from '../../../utils/utils';\nimport {findSection} from '../../common/atomic-layout-section/sections';\nimport {Button} from '../../common/button';\nimport {\n  BaseFacetElement,\n  sortFacetVisibility,\n  triageFacetsByParents,\n  collapseFacetsAfter,\n} from '../../common/facets/facet-common';\nimport {isRefineModalFacet} from '../../common/interface/store';\nimport {RefineModalCommon} from '../../common/refine-modal/refine-modal-common';\nimport {Bindings} from '../atomic-search-interface/atomic-search-interface';\nimport {SortDropdownOption} from '../atomic-search-interface/store';\nimport {popoverClass} from '../facets/atomic-popover/popover-type';\n\n/**\n * The `atomic-refine-modal` is automatically created as a child of the `atomic-search-interface` when the `atomic-refine-toggle` is initialized.\n *\n * When the modal is opened, the class `atomic-modal-opened` is added to the interface element and the body, allowing further customization.\n *\n * @part container - The modal's outermost container.\n * @part header-wrapper - The wrapper around the header.\n * @part header - The header of the modal, containing the title.\n * @part title - The title of the modal.\n * @part close-button - The button in the header that closes the modal.\n * @part close-icon - The icon of the close button.\n * @part header-ruler - The horizontal ruler underneath the header.\n * @part body-wrapper - The wrapper around the body.\n * @part body - The body of the modal, between the header and the footer.\n * @part content - The wrapper around the content inside the body of the modal.\n * @part section-title - The title for each section.\n * @part section-sort-title - The title for the sort section.\n * @part section-filters-title - The title for the filters section.\n * @part select-wrapper - The wrapper around the select element, used to position the icon.\n * @part select - The `<select>` element of the dropdown list.\n * @part select-icon-wrapper - The wrapper around the sort icon that's used to align it.\n * @part select-icon - The select dropdown's sort icon.\n * @part filter-section - The section containing facets and the \"filters\" title.\n * @part filter-clear-all - The button that resets all actively selected facet values.\n * @part footer-wrapper - The wrapper with a shadow or background color around the footer.\n * @part footer - The footer of the modal.\n * @part footer-content - The wrapper around the content inside the footer of the modal, containing the button to view results.\n * @part footer-button - The button in the footer that closes the modal.\n * @part footer-button-text - The text inside the button in the footer that closes the modal.\n * @part footer-button-count - The count inside the button in the footer that closes the modal.\n */\n@Component({\n  tag: 'atomic-refine-modal',\n  styleUrl: 'atomic-refine-modal.pcss',\n  shadow: true,\n})\nexport class AtomicRefineModal implements InitializableComponent {\n  private sort!: Sort;\n  private breadcrumbManager!: BreadcrumbManager;\n  public querySummary!: QuerySummary;\n  public searchStatus!: SearchStatus;\n  public facetManager!: FacetManager;\n  @InitializeBindings() public bindings!: Bindings;\n  @Element() public host!: HTMLElement;\n\n  @BindStateToController('querySummary')\n  @State()\n  public querySummaryState!: QuerySummaryState;\n  @BindStateToController('breadcrumbManager')\n  @State()\n  private breadcrumbManagerState!: BreadcrumbManagerState;\n  @BindStateToController('facetManager')\n  @State()\n  public facetManagerState!: FacetManagerState;\n  @State() @BindStateToController('sort') public sortState!: SortState;\n  @State() public error!: Error;\n\n  @Prop({mutable: true}) openButton?: HTMLElement;\n\n  @Prop({reflect: true, mutable: true}) isOpen = false;\n\n  /**\n   * The number of expanded facets inside the refine modal.\n   * Remaining facets are automatically collapsed.\n   *\n   * Using the value `0` collapses all facets.\n   */\n  @Prop({reflect: true}) public collapseFacetsAfter = 0;\n\n  @Watch('isOpen')\n  watchEnabled(isOpen: boolean) {\n    if (isOpen) {\n      if (this.host.querySelector('div[slot=\"facets\"]')) {\n        return;\n      }\n\n      this.host.append(this.createFacetSlot());\n    }\n  }\n\n  public initialize() {\n    this.breadcrumbManager = buildBreadcrumbManager(this.bindings.engine);\n    this.sort = buildSort(this.bindings.engine);\n    this.querySummary = buildQuerySummary(this.bindings.engine);\n    this.searchStatus = buildSearchStatus(this.bindings.engine);\n    this.facetManager = buildFacetManager(this.bindings.engine);\n    this.watchEnabled(this.isOpen);\n  }\n\n  private createFacetSlot(): HTMLDivElement {\n    const divSlot = document.createElement('div');\n    divSlot.setAttribute('slot', 'facets');\n    this.addFacetColumnStyling(divSlot);\n\n    const facets = this.bindings.store.getFacetElements() as BaseFacetElement[];\n    const atomicSearchInterface = this.host.closest('atomic-search-interface')!;\n    const facetsSection = findSection(atomicSearchInterface, 'facets');\n    const horizontalFacetsSection = findSection(\n      atomicSearchInterface,\n      'horizontal-facets'\n    );\n    const triagedFacets = triageFacetsByParents(\n      facets,\n      horizontalFacetsSection,\n      facetsSection\n    );\n    const [horizontalFacetsSectionFacets, facetsSectionFacets, orphanedFacets] =\n      triagedFacets.map((facetsArray) =>\n        facetsArray.sort(sortByDocumentPosition)\n      );\n    const sortedFacets = [\n      ...facetsSectionFacets,\n      ...horizontalFacetsSectionFacets,\n      ...orphanedFacets,\n    ];\n\n    const {visibleFacets, invisibleFacets} = sortFacetVisibility(\n      sortedFacets,\n      this.bindings.store.getAllFacets()\n    );\n\n    const visibleFacetsClone = this.cloneFacets(visibleFacets);\n    const invisibleFacetsClone = this.cloneFacets(invisibleFacets);\n\n    collapseFacetsAfter(visibleFacetsClone, this.collapseFacetsAfter);\n\n    divSlot.append(...visibleFacetsClone);\n    divSlot.append(...invisibleFacetsClone);\n\n    const generator = this.makeAutomaticFacetGenerator();\n    if (generator) {\n      generator.updateCollapseFacetsDependingOnFacetsVisibility(\n        this.collapseFacetsAfter,\n        visibleFacets.length\n      );\n      divSlot.append(generator);\n    }\n\n    return divSlot;\n  }\n\n  private cloneFacets(facets: BaseFacetElement[]): BaseFacetElement[] {\n    return facets.map((facet, i) => {\n      facet.classList.remove(popoverClass);\n      facet.setAttribute(isRefineModalFacet, '');\n      const clone = facet.cloneNode(true) as BaseFacetElement;\n      clone.isCollapsed =\n        this.collapseFacetsAfter === -1\n          ? false\n          : i + 1 > this.collapseFacetsAfter;\n      return clone;\n    });\n  }\n\n  private makeAutomaticFacetGenerator() {\n    if (!this.bindings.engine.state.automaticFacetSet?.desiredCount) {\n      return;\n    }\n    const generator = document.createElement(\n      'atomic-automatic-facet-generator'\n    );\n\n    generator.setAttribute(\n      'desired-count',\n      `${this.bindings.engine.state.automaticFacetSet?.desiredCount}`\n    );\n    this.addFacetColumnStyling(generator);\n\n    return generator;\n  }\n\n  private addFacetColumnStyling(el: HTMLElement) {\n    el.style.display = 'flex';\n    el.style.flexDirection = 'column';\n    el.style.gap = 'var(--atomic-refine-modal-facet-margin, 20px)';\n  }\n\n  private get options() {\n    return this.bindings.store.state.sortOptions;\n  }\n\n  private select(e: Event) {\n    const select = e.composedPath()[0] as HTMLSelectElement;\n    const option = this.options.find(\n      (option) => option.expression === select.value\n    );\n    option && this.sort.sortBy(option.criteria);\n  }\n\n  private buildOption({expression, criteria, label}: SortDropdownOption) {\n    return (\n      <option value={expression} selected={this.sort.isSortedBy(criteria)}>\n        {this.bindings.i18n.t(label)}\n      </option>\n    );\n  }\n\n  private renderSort() {\n    if (!this.options.length) {\n      return;\n    }\n\n    return (\n      <Fragment>\n        <h1\n          part=\"section-title section-sort-title\"\n          class=\"text-2xl font-bold truncate mb-3\"\n        >\n          {this.bindings.i18n.t('sort')}\n        </h1>\n        <div part=\"select-wrapper\" class=\"relative\">\n          <select\n            class=\"btn-outline-neutral w-full cursor-pointer text-lg font-bold grow appearance-none rounded-lg px-6 py-5\"\n            part=\"select\"\n            aria-label={this.bindings.i18n.t('sort-by')}\n            onChange={(option) => this.select(option)}\n          >\n            {this.options.map((option) => this.buildOption(option))}\n          </select>\n          <div\n            part=\"select-icon-wrapper\"\n            class=\"absolute pointer-events-none top-0 bottom-0 right-0 flex justify-center items-center pr-6\"\n          >\n            <atomic-icon\n              part=\"select-icon\"\n              icon={SortIcon}\n              class=\"w-6 h-6\"\n            ></atomic-icon>\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n\n  private renderFilters() {\n    const hasFacetElements = this.bindings.store.getFacetElements().length > 0;\n    const hasAutomaticFacets =\n      this.bindings.engine.state.automaticFacetSet?.set !== undefined;\n\n    if (!hasFacetElements && !hasAutomaticFacets) {\n      return;\n    }\n\n    return (\n      <Fragment>\n        <div\n          part=\"filter-section\"\n          class=\"w-full flex justify-between mt-8 mb-3\"\n        >\n          <h1\n            part=\"section-title section-filters-title\"\n            class=\"text-2xl font-bold truncate\"\n          >\n            {this.bindings.i18n.t('filters')}\n          </h1>\n          {this.breadcrumbManagerState.hasBreadcrumbs && (\n            <Button\n              onClick={() => this.breadcrumbManager.deselectAll()}\n              style=\"text-primary\"\n              text={this.bindings.i18n.t('clear')}\n              class=\"px-2 py-1\"\n              part=\"filter-clear-all\"\n            ></Button>\n          )}\n        </div>\n        <slot name=\"facets\"></slot>\n        <slot name=\"automatic-facets\"></slot>\n      </Fragment>\n    );\n  }\n\n  private renderBody() {\n    return (\n      <aside\n        part=\"content\"\n        slot=\"body\"\n        class=\"flex flex-col w-full adjust-for-scroll-bar\"\n      >\n        {this.renderSort()}\n        {this.renderFilters()}\n      </aside>\n    );\n  }\n\n  public render() {\n    return (\n      <RefineModalCommon\n        bindings={this.bindings}\n        host={this.host}\n        isOpen={this.isOpen}\n        onClose={() => (this.isOpen = false)}\n        title={this.bindings.i18n.t('sort-and-filter')}\n        querySummaryState={this.querySummaryState}\n        openButton={this.openButton}\n      >\n        {this.renderBody()}\n      </RefineModalCommon>\n    );\n  }\n\n  public componentDidLoad() {\n    this.host.style.display = '';\n  }\n}\n"],"version":3}