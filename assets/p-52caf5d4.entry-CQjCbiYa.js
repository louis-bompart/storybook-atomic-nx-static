import{N as c,g as d,O as f}from"./preview-C4e5QyPH.js";import{M as g}from"./p-abea0bd2-55DIQVI1.js";import{m as u}from"./p-107c3d7f-C4HwDtxk.js";import{t as m}from"./p-659d3ea8-bIeC0PRq.js";import{e as p}from"./p-849728b4-BFbNO7U7.js";import"./p-f5723aee-BNyovPuY.js";import"./iframe-DZOcfrC1.js";import"../sb-preview/runtime.js";import"./chunk-GKNNPQCW-BkHQSocK.js";import"./p-1580513b-3LX64KEr.js";import"./p-529fdce5-CfCZs-Ro.js";import"./p-e9c4f463-BPmi-3c5.js";const b="atomic-result-image{display:grid;place-items:center;grid-template-rows:100%;width:100%;height:100%}atomic-result-image img{width:100%;height:100%;-o-object-fit:contain;object-fit:contain}",y=b;var h=function(t,e,r,a){var l=arguments.length,i=l<3?e:a===null?a=Object.getOwnPropertyDescriptor(e,r):a,o;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,a);else for(var s=t.length-1;s>=0;s--)(o=t[s])&&(i=(l<3?o(i):l>3?o(e,r,i):o(e,r))||i);return l>3&&i&&Object.defineProperty(e,r,i),i};const n=class{constructor(t){c(this,t),this.useFallback=!1,this.useFallback=!1,this.field=void 0,this.fallback=void 0}get url(){const t=g.getResultProperty(this.result,this.field);return Array.isArray(t)?t[0]:t}logWarning(t){this.bindings.engine.logger.warn(t,this.host)}handleImageError(){const t=`The image url "${this.url}" is not valid or could not be loaded. You might want to add a "fallback" property.`;this.fallback?this.useFallback=!0:this.logWarning(t)}handleMissingFallback(t){return this.fallback?this.fallback:(this.logWarning(t),this.host.remove(),null)}validateUrl(t){if(!t){const e=`"${this.field}" is missing. Please review your indexation. You might want to add a "fallback" property.`;return this.handleMissingFallback(e)}if(typeof t!="string"){const e=`Expected "${this.field}" to be a text field. Please review your indexation. You might want to add a "fallback" property.`;return this.handleMissingFallback(e)}return t}render(){let t=this.useFallback?this.fallback:this.url;if(!(!this.useFallback&&(t=this.validateUrl(t),!t)))return d("img",{alt:`${this.field} image`,src:m(t),onError:()=>this.handleImageError(),loading:"lazy"})}get host(){return f(this)}};h([u()],n.prototype,"bindings",void 0);h([p()],n.prototype,"result",void 0);n.style=y;export{n as atomic_result_image};
