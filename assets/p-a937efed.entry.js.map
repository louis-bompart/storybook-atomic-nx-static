{"version":3,"names":["AtomicFormatCurrency","this","format","value","languages","toLocaleString","style","currency","componentWillLoad","dispatchNumberFormatEvent","host","error","render","h","key","element","AtomicProductNumber","formatter","defaultNumberFormatter","valueToDisplay","setFormat","event","preventDefault","stopPropagation","detail","parseValue","ProductTemplatesHelpers","getProductProperty","product","field","valueAsNumber","parseFloat","Number","isNaN","Error","formatValue","bindings","i18n","toString","updateValueToDisplay","componentWillRender","remove","__decorate","InitializeBindings","ProductContext"],"sources":["src/components/search/formats/atomic-format-currency.tsx","src/components/commerce/product-template-components/atomic-product-numeric-field-value/atomic-product-numeric-field-value.tsx"],"sourcesContent":["import {Component, Element, Prop, State, h} from '@stencil/core';\r\nimport {\r\n  dispatchNumberFormatEvent,\r\n  NumberFormatter,\r\n} from '../../common/formats/format-common';\r\n\r\n/**\r\n * The `atomic-format-currency` component is used for formatting currencies.\r\n * The numerical format of compatible parents will be set according to the currency property of this component.\r\n */\r\n@Component({\r\n  tag: 'atomic-format-currency',\r\n  shadow: true,\r\n})\r\nexport class AtomicFormatCurrency {\r\n  @Element() private host!: HTMLElement;\r\n\r\n  @State() public error!: Error;\r\n\r\n  /**\r\n   * The currency to use in currency formatting. Possible values are the ISO 4217 currency codes, such as \"USD\" for the US dollar, \"EUR\" for the euro, or \"CNY\" for the Chinese RMB.\r\n   * See the current [currency & funds code list](https://www.six-group.com/en/products-services/financial-information/data-standards.html#scrollTo=maintenance-agency).\r\n   */\r\n  @Prop({reflect: true}) public currency!: string;\r\n\r\n  componentWillLoad() {\r\n    try {\r\n      dispatchNumberFormatEvent(\r\n        (value, languages) => this.format(value, languages),\r\n        this.host\r\n      );\r\n    } catch (error) {\r\n      this.error = error as Error;\r\n    }\r\n  }\r\n\r\n  private format: NumberFormatter = (value, languages) => {\r\n    return value.toLocaleString(languages, {\r\n      style: 'currency',\r\n      currency: this.currency,\r\n    });\r\n  };\r\n\r\n  public render() {\r\n    if (this.error) {\r\n      return (\r\n        <atomic-component-error\r\n          element={this.host}\r\n          error={this.error}\r\n        ></atomic-component-error>\r\n      );\r\n    }\r\n  }\r\n}\r\n","import {Product, ProductTemplatesHelpers} from '@coveo/headless/commerce';\r\nimport {Component, Prop, Element, State, Listen} from '@stencil/core';\r\nimport {Bindings} from '../../../../components';\r\nimport {InitializeBindings} from '../../../../utils/initialization-utils';\r\nimport {\r\n  defaultNumberFormatter,\r\n  NumberFormatter,\r\n} from '../../../common/formats/format-common';\r\nimport {ProductContext} from '../product-template-decorators';\r\n\r\n/**\r\n * @internal\r\n * The `atomic-product-numeric-field-value` component renders the value of a number product field.\r\n *\r\n * The number can be formatted by adding a `atomic-format-number`, `atomic-format-currency` or `atomic-format-unit` component into this component.\r\n */\r\n@Component({\r\n  tag: 'atomic-product-numeric-field-value',\r\n  shadow: false,\r\n})\r\nexport class AtomicProductNumber {\r\n  @InitializeBindings() public bindings!: Bindings;\r\n  @ProductContext() private product!: Product;\r\n\r\n  @Element() host!: HTMLElement;\r\n\r\n  @State() public error!: Error;\r\n\r\n  /**\r\n   * The field that the component should use.\r\n   * The component will try to find this field in the `Product.additionalFields` object unless it finds it in the `Product` object first.\r\n   */\r\n  @Prop({reflect: true}) field!: string;\r\n\r\n  @State() formatter: NumberFormatter = defaultNumberFormatter;\r\n\r\n  @State() valueToDisplay: string | null = null;\r\n\r\n  @Listen('atomic/numberFormat')\r\n  public setFormat(event: CustomEvent<NumberFormatter>) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    this.formatter = event.detail;\r\n  }\r\n\r\n  private parseValue() {\r\n    const value = ProductTemplatesHelpers.getProductProperty(\r\n      this.product,\r\n      this.field\r\n    );\r\n    if (value === null) {\r\n      return null;\r\n    }\r\n    const valueAsNumber = parseFloat(`${value}`);\r\n    if (Number.isNaN(valueAsNumber)) {\r\n      this.error = new Error(\r\n        `Could not parse \"${value}\" from field \"${this.field}\" as a number.`\r\n      );\r\n      return null;\r\n    }\r\n    return valueAsNumber;\r\n  }\r\n\r\n  private formatValue(value: number) {\r\n    try {\r\n      return this.formatter(value, this.bindings.i18n.languages as string[]);\r\n    } catch (error) {\r\n      this.error = error as Error;\r\n      return value.toString();\r\n    }\r\n  }\r\n\r\n  private updateValueToDisplay() {\r\n    const value = this.parseValue();\r\n    if (value !== null) {\r\n      this.valueToDisplay = this.formatValue(value);\r\n    }\r\n  }\r\n\r\n  componentWillRender() {\r\n    this.updateValueToDisplay();\r\n  }\r\n\r\n  public render() {\r\n    if (this.valueToDisplay === null) {\r\n      this.host.remove();\r\n      return;\r\n    }\r\n    return this.valueToDisplay;\r\n  }\r\n}\r\n"],"mappings":"+SAcaA,EAAoB,M,yBAsBvBC,KAAAC,OAA0B,CAACC,EAAOC,IACjCD,EAAME,eAAeD,EAAW,CACrCE,MAAO,WACPC,SAAUN,KAAKM,W,6CAdnB,iBAAAC,GACE,IACEC,GACE,CAACN,EAAOC,IAAcH,KAAKC,OAAOC,EAAOC,IACzCH,KAAKS,K,CAEP,MAAOC,GACPV,KAAKU,MAAQA,C,EAWV,MAAAC,GACL,GAAIX,KAAKU,MAAO,CACd,OACEE,EAAA,0BAAAC,IAAA,2CACEC,QAASd,KAAKS,KACdC,MAAOV,KAAKU,O,+YC5BTK,EAAmB,M,yBAcrBf,KAAAgB,UAA6BC,EAE7BjB,KAAAkB,eAAgC,K,yDAFHD,E,oBAEG,I,CAGlC,SAAAE,CAAUC,GACfA,EAAMC,iBACND,EAAME,kBACNtB,KAAKgB,UAAYI,EAAMG,M,CAGjB,UAAAC,GACN,MAAMtB,EAAQuB,EAAwBC,mBACpC1B,KAAK2B,QACL3B,KAAK4B,OAEP,GAAI1B,IAAU,KAAM,CAClB,OAAO,I,CAET,MAAM2B,EAAgBC,WAAW,GAAG5B,KACpC,GAAI6B,OAAOC,MAAMH,GAAgB,CAC/B7B,KAAKU,MAAQ,IAAIuB,MACf,oBAAoB/B,kBAAsBF,KAAK4B,uBAEjD,OAAO,I,CAET,OAAOC,C,CAGD,WAAAK,CAAYhC,GAClB,IACE,OAAOF,KAAKgB,UAAUd,EAAOF,KAAKmC,SAASC,KAAKjC,U,CAChD,MAAOO,GACPV,KAAKU,MAAQA,EACb,OAAOR,EAAMmC,U,EAIT,oBAAAC,GACN,MAAMpC,EAAQF,KAAKwB,aACnB,GAAItB,IAAU,KAAM,CAClBF,KAAKkB,eAAiBlB,KAAKkC,YAAYhC,E,EAI3C,mBAAAqC,GACEvC,KAAKsC,sB,CAGA,MAAA3B,GACL,GAAIX,KAAKkB,iBAAmB,KAAM,CAChClB,KAAKS,KAAK+B,SACV,M,CAEF,OAAOxC,KAAKkB,c,6BAnEeuB,EAAA,CAA5BC,K,+BACyBD,EAAA,CAAzBE,K"}