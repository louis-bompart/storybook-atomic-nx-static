{"file":"atomic-ipx-refine-modal.entry.js","mappings":";;;;;;;;;;;;;;AAAA,MAAM,uBAAuB,GAAG,6muCAA6muC,CAAC;AAC9ouC,mCAAe,uBAAuB;;;;;;;;;;;;MC6BzB,oBAAoB;;;QAoBO,WAAM,GAAG,KAAK,CAAC;;;;;;;QAQvB,wBAAmB,GAAG,CAAC,CAAC;;;;;;sBARP,KAAK;mCAQA,CAAC;;IAMrD,YAAY,CAAC,MAAe;QAC1B,IAAI,MAAM,EAAE;YACV,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC,EAAE;gBAClD,IAAI,CAAC,IAAI,CAAC,MAAM,CACd,sBAAsB,CACpB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,gBAAgB,EAAE,EACtC,IAAI,CAAC,mBAAmB,EACxB,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAC/B,CACF,CAAC;aACH;SACF;KACF;IAEM,UAAU;QACf,IAAI,CAAC,iBAAiB,GAAGA,EAAsB,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACtE,IAAI,CAAC,YAAY,GAAGC,EAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;KAC7D;IAEO,YAAY;QAClB,QACE,WAAK,KAAK,EAAC,kCAAkC,IAC1C,IAAI,CAAC,sBAAsB,CAAC,cAAc,KACzC,EAAC,MAAM,IACL,OAAO,EAAE,MAAM,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,EACnD,KAAK,EAAC,cAAc,EACpB,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,mBAAmB,CAAC,EAC/C,KAAK,EAAC,WAAW,GACT,CACX,CACG,EACN;KACH;IAEO,UAAU;QAChB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,gBAAgB,EAAE,CAAC,MAAM,EAAE;YAClD,OAAO,EAAC,MAAM,OAAU,CAAC;SAC1B;QAED,QACE,aAAO,IAAI,EAAC,MAAM,EAAC,KAAK,EAAC,4CAA4C,IAClE,IAAI,CAAC,YAAY,EAAE,EACpB,YAAM,IAAI,EAAC,QAAQ,GAAQ,CACrB,EACR;KACH;IAEM,MAAM;QACX,QACE,EAAC,IAAI,uDACH,EAAC,iBAAiB,qDAChB,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,IAAI,EAAE,IAAI,CAAC,IAAI,EACf,MAAM,EAAE,IAAI,CAAC,MAAM,EACnB,OAAO,EAAE,OAAO,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,EACpC,iBAAiB,EAAE,IAAI,CAAC,iBAAiB,EACzC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,EACtC,UAAU,EAAE,IAAI,CAAC,UAAU,EAC3B,QAAQ,EAAC,SAAS,EAClB,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,gBAAgB,IAEpC,IAAI,CAAC,UAAU,EAAE,CACA,CACf,EACP;KACH;IAEM,gBAAgB;QACrB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,EAAE,CAAC;KAC9B;;;;;;AAtG4B;IAA5B,kBAAkB,EAAE;sDAA4B;AAK1C;IAFN,qBAAqB,CAAC,cAAc,CAAC;+DAEO;AAItC;IAFN,qBAAqB,CAAC,mBAAmB,CAAC;oEAEY;;;;;","names":["buildBreadcrumbManager","buildQuerySummary"],"sources":["src/components/ipx/atomic-ipx-refine-modal/atomic-ipx-refine-modal.pcss?tag=atomic-ipx-refine-modal&encapsulation=shadow","src/components/ipx/atomic-ipx-refine-modal/atomic-ipx-refine-modal.tsx"],"sourcesContent":["@import '../../common/refine-modal/refine-modal-common.pcss';\n\n:host::part(container) {\n  @apply rounded;\n}\n","import {\n  BreadcrumbManager,\n  BreadcrumbManagerState,\n  buildBreadcrumbManager,\n  buildQuerySummary,\n  QuerySummary,\n  QuerySummaryState,\n} from '@coveo/headless';\nimport {Component, h, State, Prop, Element, Watch, Host} from '@stencil/core';\nimport {\n  BindStateToController,\n  InitializableComponent,\n  InitializeBindings,\n} from '../../../utils/initialization-utils';\nimport {Button} from '../../common/button';\nimport {Hidden} from '../../common/hidden';\nimport {\n  getClonedFacetElements,\n  RefineModalCommon,\n} from '../../common/refine-modal/refine-modal-common';\nimport {Bindings} from '../../search/atomic-search-interface/atomic-search-interface';\n\n/**\n * @internal\n */\n@Component({\n  tag: 'atomic-ipx-refine-modal',\n  styleUrl: 'atomic-ipx-refine-modal.pcss',\n  shadow: true,\n})\nexport class AtomicIPXRefineModal implements InitializableComponent {\n  @InitializeBindings() public bindings!: Bindings;\n  @Element() public host!: HTMLElement;\n\n  @BindStateToController('querySummary')\n  @State()\n  public querySummaryState!: QuerySummaryState;\n\n  @BindStateToController('breadcrumbManager')\n  @State()\n  public breadcrumbManagerState!: BreadcrumbManagerState;\n\n  @State()\n  public error!: Error;\n\n  @State()\n  public interfaceDimensions?: DOMRect;\n\n  @Prop({mutable: true}) openButton?: HTMLElement;\n\n  @Prop({reflect: true, mutable: true}) isOpen = false;\n\n  /**\n   * The number of expanded facets inside the refine modal.\n   * Remaining facets are automatically collapsed.\n   *\n   * Using the value `0` collapses all facets.\n   */\n  @Prop({reflect: true}) public collapseFacetsAfter = 0;\n\n  private breadcrumbManager!: BreadcrumbManager;\n  public querySummary!: QuerySummary;\n\n  @Watch('isOpen')\n  watchEnabled(isOpen: boolean) {\n    if (isOpen) {\n      if (!this.host.querySelector('div[slot=\"facets\"]')) {\n        this.host.append(\n          getClonedFacetElements(\n            this.bindings.store.getFacetElements(),\n            this.collapseFacetsAfter,\n            this.bindings.interfaceElement\n          )\n        );\n      }\n    }\n  }\n\n  public initialize() {\n    this.breadcrumbManager = buildBreadcrumbManager(this.bindings.engine);\n    this.querySummary = buildQuerySummary(this.bindings.engine);\n  }\n\n  private renderHeader() {\n    return (\n      <div class=\"w-full flex justify-between mb-3\">\n        {this.breadcrumbManagerState.hasBreadcrumbs && (\n          <Button\n            onClick={() => this.breadcrumbManager.deselectAll()}\n            style=\"text-primary\"\n            text={this.bindings.i18n.t('clear-all-filters')}\n            class=\"px-2 py-1\"\n          ></Button>\n        )}\n      </div>\n    );\n  }\n\n  private renderBody() {\n    if (!this.bindings.store.getFacetElements().length) {\n      return <Hidden></Hidden>;\n    }\n\n    return (\n      <aside slot=\"body\" class=\"flex flex-col w-full adjust-for-scroll-bar\">\n        {this.renderHeader()}\n        <slot name=\"facets\"></slot>\n      </aside>\n    );\n  }\n\n  public render() {\n    return (\n      <Host>\n        <RefineModalCommon\n          bindings={this.bindings}\n          host={this.host}\n          isOpen={this.isOpen}\n          onClose={() => (this.isOpen = false)}\n          querySummaryState={this.querySummaryState}\n          title={this.bindings.i18n.t('filters')}\n          openButton={this.openButton}\n          boundary=\"element\"\n          scope={this.bindings.interfaceElement}\n        >\n          {this.renderBody()}\n        </RefineModalCommon>\n      </Host>\n    );\n  }\n\n  public componentDidLoad() {\n    this.host.style.display = '';\n  }\n}\n"],"version":3}