{"version":3,"names":["atomicSegmentedFacetScrollableCss","AtomicSegmentedFacetScrollableStyle0","AtomicSegmentedFacetScrollable","this","hideLeftArrow","hideRightArrow","initialize","searchStatus","buildSearchStatus","bindings","engine","componentDidLoad","observer","ResizeObserver","handleScroll","Array","from","host","children","forEach","el","observe","horizontalScrollRef","disconnectedCallback","disconnect","container","isScrollable","clientWidth","scrollWidth","isLeftEdge","Math","floor","scrollLeft","isRightEdge","ceil","slideHorizontally","direction","arrowsWidth","arrowRef","pixelsToScroll","renderArrow","hide","hiddenClass","transitionClass","store","isAppLoaded","h","part","class","Button","style","ariaHidden","tabIndex","onClick","ref","icon","ArrowLeftIcon","ArrowRightIcon","render","state","hasError","Hidden","__decorate","InitializeBindings","BindStateToController"],"sources":["src/components/search/facets/atomic-segmented-facet-scrollable/atomic-segmented-facet-scrollable.pcss?tag=atomic-segmented-facet-scrollable&encapsulation=shadow","src/components/search/facets/atomic-segmented-facet-scrollable/atomic-segmented-facet-scrollable.tsx"],"sourcesContent":["@import '../../../../global/global.pcss';\r\n\r\n.wrapper-segmented {\r\n  @mixin hide-scrollbar;\r\n}\r\n\r\n::slotted(atomic-segmented-facet:not(.atomic-hidden)) {\r\n  @apply mr-2;\r\n}\r\n","import {\r\n  buildSearchStatus,\r\n  SearchStatus,\r\n  SearchStatusState,\r\n} from '@coveo/headless';\r\nimport {Component, Element, h, Listen, State} from '@stencil/core';\r\nimport {Bindings} from '../../../..';\r\nimport ArrowLeftIcon from '../../../../images/arrow-left-rounded.svg';\r\nimport ArrowRightIcon from '../../../../images/arrow-right-rounded.svg';\r\nimport {\r\n  BindStateToController,\r\n  InitializableComponent,\r\n  InitializeBindings,\r\n} from '../../../../utils/initialization-utils';\r\nimport {Button} from '../../../common/button';\r\nimport {Hidden} from '../../../common/hidden';\r\n\r\ntype ArrowDirection = 'right' | 'left';\r\n\r\n/**\r\n * The 'atomic-segmented-facet-scrollable' component wraps around one or several 'atomic-segmented-facet' to provide horizontal scrolling capabilities.\r\n *\r\n * @slot default - One or multiple atomic-segmented-facet components\r\n *\r\n * @part scrollable-container - The wrapper for the entire component including the horizontal-scroll container and the arrow buttons.\r\n * @part horizontal-scroll - The scrollable container for the segmented facets.\r\n * @part left-arrow-wrapper - The wrapper for the arrow button & fade on the left.\r\n * @part right-arrow-wrapper - The wrapper for the arrow button & fade on the right.\r\n * @part left-arrow-button - The arrow button used to scroll on the left.\r\n * @part right-arrow-button - The arrow button used to scroll on the right.\r\n * @part left-arrow-icon - The arrow icon on the left.\r\n * @part right-arrow-icon - The arrow icon on the right.\r\n * @part left-fade - The white to transparent gradient on the left.\r\n * @part right-fade - The white to transparent gradient on the right.\r\n */\r\n@Component({\r\n  tag: 'atomic-segmented-facet-scrollable',\r\n  styleUrl: 'atomic-segmented-facet-scrollable.pcss',\r\n  shadow: true,\r\n})\r\nexport class AtomicSegmentedFacetScrollable implements InitializableComponent {\r\n  @Element() private host!: HTMLElement;\r\n  private horizontalScrollRef?: HTMLElement;\r\n  private arrowRef?: HTMLElement;\r\n  private observer!: ResizeObserver;\r\n\r\n  @InitializeBindings()\r\n  public bindings!: Bindings;\r\n  public searchStatus!: SearchStatus;\r\n  @BindStateToController('searchStatus')\r\n  @State()\r\n  public searchStatusState!: SearchStatusState;\r\n  @State()\r\n  public error!: Error;\r\n  @State() private hideLeftArrow = true;\r\n  @State() private hideRightArrow = true;\r\n\r\n  public initialize() {\r\n    this.searchStatus = buildSearchStatus(this.bindings.engine);\r\n  }\r\n\r\n  public componentDidLoad() {\r\n    this.observer = new ResizeObserver(() => {\r\n      this.handleScroll();\r\n    });\r\n\r\n    Array.from(this.host.children).forEach((el) => this.observer.observe(el));\r\n    this.observer.observe(this.horizontalScrollRef!);\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    this.observer.disconnect();\r\n  }\r\n\r\n  @Listen('wheel')\r\n  @Listen('touchmove')\r\n  @Listen('keydown')\r\n  public handleScroll() {\r\n    if (!this.horizontalScrollRef) {\r\n      return;\r\n    }\r\n    const container = this.horizontalScrollRef;\r\n    const isScrollable = container.clientWidth < container.scrollWidth;\r\n\r\n    const isLeftEdge = Math.floor(container.scrollLeft) <= 0;\r\n    const isRightEdge =\r\n      Math.ceil(container.scrollLeft) >=\r\n      container.scrollWidth - container.clientWidth;\r\n\r\n    this.hideLeftArrow = !isScrollable || isLeftEdge;\r\n    this.hideRightArrow = !isScrollable || isRightEdge;\r\n  }\r\n\r\n  private slideHorizontally(direction: ArrowDirection) {\r\n    const container = this.horizontalScrollRef!;\r\n    const arrowsWidth = this.arrowRef!.clientWidth * 2;\r\n\r\n    const pixelsToScroll = (container.clientWidth - arrowsWidth) * 0.7;\r\n\r\n    const isLeftEdge = Math.floor(container.scrollLeft - pixelsToScroll) <= 0;\r\n    const isRightEdge =\r\n      Math.ceil(container.scrollLeft + pixelsToScroll) >=\r\n      container.scrollWidth - container.clientWidth;\r\n\r\n    this.hideLeftArrow = false;\r\n    this.hideRightArrow = false;\r\n\r\n    if (direction === 'left') {\r\n      container.scrollLeft -= pixelsToScroll;\r\n      this.hideLeftArrow = isLeftEdge;\r\n      return;\r\n    }\r\n\r\n    container.scrollLeft += pixelsToScroll;\r\n    this.hideRightArrow = isRightEdge;\r\n  }\r\n\r\n  private renderArrow(direction: ArrowDirection) {\r\n    const hide =\r\n      (direction === 'left' && this.hideLeftArrow) ||\r\n      (direction === 'right' && this.hideRightArrow);\r\n    const hiddenClass = hide ? 'invisible opacity-0' : '';\r\n    const transitionClass = this.bindings.store.isAppLoaded()\r\n      ? 'transition-visi-opacity ease-in-out duration-300'\r\n      : '';\r\n\r\n    return (\r\n      <div\r\n        part={`${direction}-arrow-wrapper`}\r\n        class={`${hiddenClass} ${transitionClass}`}\r\n      >\r\n        <Button\r\n          part={`${direction}-arrow-button`}\r\n          style=\"square-neutral\"\r\n          class={`flex shrink-0 basis-8 justify-center items-center rounded absolute z-1 h-10 w-10 top-0 bottom-0 ${\r\n            direction === 'left' ? 'left-0' : 'right-0'\r\n          }`}\r\n          ariaHidden=\"true\"\r\n          tabIndex=\"-1\"\r\n          onClick={() => this.slideHorizontally(direction)}\r\n          ref={(el) => (this.arrowRef = el)}\r\n        >\r\n          <atomic-icon\r\n            part={`${direction}-arrow-icon`}\r\n            class=\"w-3.5\"\r\n            icon={direction === 'left' ? ArrowLeftIcon : ArrowRightIcon}\r\n          ></atomic-icon>\r\n        </Button>\r\n        <div\r\n          part={`${direction}-fade`}\r\n          class={`w-20 h-10 absolute top-0 z-0 pointer-events-none from-background-60 ${\r\n            direction === 'left'\r\n              ? 'left-0 bg-gradient-to-r'\r\n              : 'right-0 bg-gradient-to-l'\r\n          }`}\r\n        ></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  public render() {\r\n    if (this.searchStatus.state.hasError) {\r\n      return <Hidden></Hidden>;\r\n    }\r\n\r\n    return (\r\n      <div part=\"scrollable-container\" class=\"flex relative\">\r\n        {this.renderArrow('left')}\r\n        <div\r\n          part=\"horizontal-scroll\"\r\n          class=\"wrapper-segmented flex flex-row overflow-x-scroll scroll-smooth\"\r\n          ref={(el) => (this.horizontalScrollRef = el)}\r\n        >\r\n          <slot></slot>\r\n        </div>\r\n        {this.renderArrow('right')}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"uWAAA,MAAMA,EAAoC,squCAC1C,MAAAC,EAAeD,E,iXCuCFE,EAA8B,M,yBAcxBC,KAAAC,cAAgB,KAChBD,KAAAE,eAAiB,K,yEADD,K,oBACC,I,CAE3B,UAAAC,GACLH,KAAKI,aAAeC,EAAkBL,KAAKM,SAASC,O,CAG/C,gBAAAC,GACLR,KAAKS,SAAW,IAAIC,gBAAe,KACjCV,KAAKW,cAAc,IAGrBC,MAAMC,KAAKb,KAAKc,KAAKC,UAAUC,SAASC,GAAOjB,KAAKS,SAASS,QAAQD,KACrEjB,KAAKS,SAASS,QAAQlB,KAAKmB,oB,CAG7B,oBAAAC,GACEpB,KAAKS,SAASY,Y,CAMT,YAAAV,GACL,IAAKX,KAAKmB,oBAAqB,CAC7B,M,CAEF,MAAMG,EAAYtB,KAAKmB,oBACvB,MAAMI,EAAeD,EAAUE,YAAcF,EAAUG,YAEvD,MAAMC,EAAaC,KAAKC,MAAMN,EAAUO,aAAe,EACvD,MAAMC,EACJH,KAAKI,KAAKT,EAAUO,aACpBP,EAAUG,YAAcH,EAAUE,YAEpCxB,KAAKC,eAAiBsB,GAAgBG,EACtC1B,KAAKE,gBAAkBqB,GAAgBO,C,CAGjC,iBAAAE,CAAkBC,GACxB,MAAMX,EAAYtB,KAAKmB,oBACvB,MAAMe,EAAclC,KAAKmC,SAAUX,YAAc,EAEjD,MAAMY,GAAkBd,EAAUE,YAAcU,GAAe,GAE/D,MAAMR,EAAaC,KAAKC,MAAMN,EAAUO,WAAaO,IAAmB,EACxE,MAAMN,EACJH,KAAKI,KAAKT,EAAUO,WAAaO,IACjCd,EAAUG,YAAcH,EAAUE,YAEpCxB,KAAKC,cAAgB,MACrBD,KAAKE,eAAiB,MAEtB,GAAI+B,IAAc,OAAQ,CACxBX,EAAUO,YAAcO,EACxBpC,KAAKC,cAAgByB,EACrB,M,CAGFJ,EAAUO,YAAcO,EACxBpC,KAAKE,eAAiB4B,C,CAGhB,WAAAO,CAAYJ,GAClB,MAAMK,EACHL,IAAc,QAAUjC,KAAKC,eAC7BgC,IAAc,SAAWjC,KAAKE,eACjC,MAAMqC,EAAcD,EAAO,sBAAwB,GACnD,MAAME,EAAkBxC,KAAKM,SAASmC,MAAMC,cACxC,mDACA,GAEJ,OACEC,EAAA,OACEC,KAAM,GAAGX,kBACTY,MAAO,GAAGN,KAAeC,KAEzBG,EAACG,EAAM,CACLF,KAAM,GAAGX,iBACTc,MAAM,iBACNF,MAAO,mGACLZ,IAAc,OAAS,SAAW,YAEpCe,WAAW,OACXC,SAAS,KACTC,QAAS,IAAMlD,KAAKgC,kBAAkBC,GACtCkB,IAAMlC,GAAQjB,KAAKmC,SAAWlB,GAE9B0B,EAAA,eACEC,KAAM,GAAGX,eACTY,MAAM,QACNO,KAAMnB,IAAc,OAASoB,EAAgBC,KAGjDX,EAAA,OACEC,KAAM,GAAGX,SACTY,MAAO,uEACLZ,IAAc,OACV,0BACA,+B,CAOP,MAAAsB,GACL,GAAIvD,KAAKI,aAAaoD,MAAMC,SAAU,CACpC,OAAOd,EAACe,EAAM,K,CAGhB,OACEf,EAAA,OAAKC,KAAK,uBAAuBC,MAAM,iBACpC7C,KAAKqC,YAAY,QAClBM,EAAA,OACEC,KAAK,oBACLC,MAAM,kEACNM,IAAMlC,GAAQjB,KAAKmB,oBAAsBF,GAEzC0B,EAAA,cAED3C,KAAKqC,YAAY,S,6BAhIjBsB,EAAA,CADNC,K,+BAKMD,EAAA,CAFNE,EAAsB,iB"}