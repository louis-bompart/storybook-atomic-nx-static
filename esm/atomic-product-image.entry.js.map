{"file":"atomic-product-image.entry.js","mappings":"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","names":["ArrowRight","ProductTemplatesHelpers"],"sources":["src/components/common/image-carousel/image-carousel-indicators.tsx","src/components/common/image-carousel/image-carousel.tsx","src/components/commerce/product-template-components/atomic-product-image/atomic-product-image.pcss?tag=atomic-product-image&encapsulation=shadow","src/components/commerce/product-template-components/atomic-product-image/atomic-product-image.tsx"],"sourcesContent":["/* eslint-disable @cspell/spellchecker */\r\nimport {FunctionalComponent, h} from '@stencil/core';\r\n\r\ninterface CarouselIndicatorProps {\r\n  numberOfImages: number;\r\n  currentImage: number;\r\n  navigateToImage: (index: number) => void;\r\n  maxImagesBeforeAndAfter?: number;\r\n}\r\n\r\nconst CarouselIndicator: FunctionalComponent<CarouselIndicatorProps> = ({\r\n  numberOfImages,\r\n  currentImage: currentImage,\r\n  navigateToImage: navigateToImage,\r\n  maxImagesBeforeAndAfter = 2,\r\n}) => {\r\n  return (\r\n    <ul\r\n      part=\"indicators\"\r\n      class=\"mb-1 absolute flex items-center justify-center gap-2 mt-6 bottom-2 max-w-[80%]\"\r\n    >\r\n      {Array.from({length: numberOfImages}, (_, index) => {\r\n        const isActive = index === currentImage % numberOfImages;\r\n\r\n        const shouldDisplay =\r\n          index >= Math.max(0, currentImage - maxImagesBeforeAndAfter) &&\r\n          index <=\r\n            Math.min(\r\n              currentImage + maxImagesBeforeAndAfter,\r\n              numberOfImages - 1\r\n            );\r\n\r\n        const isLastDisplayed =\r\n          index ===\r\n            Math.min(\r\n              currentImage + maxImagesBeforeAndAfter,\r\n              numberOfImages - 1\r\n            ) && index < numberOfImages - 1;\r\n\r\n        const isFirstDisplayed =\r\n          index === Math.max(0, currentImage - maxImagesBeforeAndAfter) &&\r\n          index > 0;\r\n\r\n        return (\r\n          <li\r\n            part={`indicator ${isActive ? 'active-indicator' : ''}`}\r\n            class={`rounded-md shadow cursor-pointer hover:bg-primary-light transition-all duration-200 ease-in-out ${\r\n              isActive ? 'bg-primary' : 'bg-neutral'\r\n            } ${isLastDisplayed || isFirstDisplayed ? 'w-1 h-1 mobile-only:w-2 mobile-only:h-2 transform scale-75' : 'h-2 w-2 mobile-only:w-3 mobile-only:h-3 transform scale-100'} ${\r\n              shouldDisplay\r\n                ? 'opacity-80 pointer-events-auto'\r\n                : 'opacity-0 pointer-events-none hidden'\r\n            }`}\r\n            onClick={() => navigateToImage(index)}\r\n          ></li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default CarouselIndicator;\r\n","import {h, FunctionalComponent, Fragment} from '@stencil/core';\r\nimport {JSXBase} from '@stencil/core/internal';\r\nimport ArrowRight from '../../../images/arrow-right.svg';\r\nimport {Button} from '../button';\r\nimport {AnyBindings} from '../interface/bindings';\r\nimport CarouselIndicator from './image-carousel-indicators';\r\n\r\nexport interface CarouselProps {\r\n  bindings: AnyBindings;\r\n  previousImage(): void;\r\n  nextImage(): void;\r\n  navigateToImage(index: number): void;\r\n  numberOfImages: number;\r\n  currentImage: number;\r\n}\r\n\r\nexport const ImageCarousel: FunctionalComponent<\r\n  CarouselProps & JSXBase.HTMLAttributes<HTMLHeadingElement>\r\n> = (props, children) => {\r\n  const commonPaginationClasses =\r\n    'w-6 h-6 grid mobile-only:w-10 mobile-only:h-10 justify-center items-center z-1 group rounded-full duration-200 opacity-50 hover:opacity-100 focus:opacity-100 transition-opacity hover:shadow bottom-0 mb-1 absolute';\r\n  const commonArrowClasses =\r\n    'w-4 align-middle text-on-background group-hover:text-primary';\r\n\r\n  function renderPreviousButton() {\r\n    return (\r\n      <Button\r\n        style=\"text-primary\"\r\n        ariaLabel={props.bindings.i18n.t('previous')}\r\n        onClick={() => props.previousImage()}\r\n        part=\"previous-button\"\r\n        class={`${commonPaginationClasses} left-0 ml-1`}\r\n      >\r\n        <atomic-icon\r\n          icon={ArrowRight}\r\n          class={`${commonArrowClasses} rotate-180`}\r\n        ></atomic-icon>\r\n      </Button>\r\n    );\r\n  }\r\n\r\n  function renderNextButton() {\r\n    return (\r\n      <Button\r\n        style=\"text-primary\"\r\n        ariaLabel={props.bindings.i18n.t('next')}\r\n        onClick={() => props.nextImage()}\r\n        part=\"next-button\"\r\n        class={`${commonPaginationClasses} right-0 mr-1`}\r\n      >\r\n        <atomic-icon icon={ArrowRight} class={commonArrowClasses}></atomic-icon>\r\n      </Button>\r\n    );\r\n  }\r\n  function renderIndicators() {\r\n    return (\r\n      <CarouselIndicator\r\n        numberOfImages={props.numberOfImages}\r\n        currentImage={props.currentImage}\r\n        navigateToImage={props.navigateToImage}\r\n      />\r\n    );\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <div class=\"relative flex items-center justify-center w-full min-w-full\">\r\n        {renderPreviousButton()}\r\n        {children}\r\n        {renderNextButton()}\r\n        {renderIndicators()}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n","@import '../../../../global/global.pcss';\r\n@import '../../../common/item-list/styles/mixins.pcss';\r\n@import '../../../common/item-list/styles/placeholders.pcss';\r\n\r\n@mixin atomic-grid-clickable-elements;\r\n@mixin atomic-grid-display-common;\r\n\r\n:host {\r\n  display: grid;\r\n  place-items: center;\r\n  grid-template-rows: 100%;\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  img {\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: contain;\r\n  }\r\n}\r\n","import {Product, ProductTemplatesHelpers} from '@coveo/headless/commerce';\r\nimport {Component, h, Prop, Element, State, Method} from '@stencil/core';\r\nimport {Bindings} from '../../../../components';\r\nimport {\r\n  InitializeBindings,\r\n  InitializableComponent,\r\n} from '../../../../utils/initialization-utils';\r\nimport {filterProtocol} from '../../../../utils/xss-utils';\r\nimport {ImageCarousel} from '../../../common/image-carousel/image-carousel';\r\nimport {ProductContext} from '../product-template-decorators';\r\n\r\ntype Image = {\r\n  src: string;\r\n  alt: string;\r\n};\r\n\r\n/**\r\n * The `atomic-product-image` component renders an image from a product field.\r\n * @internal\r\n */\r\n@Component({\r\n  tag: 'atomic-product-image',\r\n  styleUrl: 'atomic-product-image.pcss',\r\n  shadow: true,\r\n})\r\nexport class AtomicProductImage implements InitializableComponent {\r\n  @InitializeBindings() public bindings!: Bindings;\r\n  @ProductContext() private product!: Product;\r\n  @Element() private host!: HTMLElement;\r\n  @State() private useFallback = false;\r\n  @State() private currentImage = 0;\r\n  @State() private images: Image[] = [];\r\n\r\n  public error!: Error;\r\n\r\n  /**\r\n   * The product field which the component should use. This will look for the field in the product object first, then in the product.additionalFields object.\r\n   */\r\n  @Prop({reflect: true}) field: string = 'ec_thumbnails';\r\n\r\n  /**\r\n   * An fallback image URL that will be used in case the specified image is not available or an error is encountered.\r\n   */\r\n  @Prop({reflect: true}) fallback: string =\r\n    // eslint-disable-next-line @cspell/spellchecker\r\n    'data:image/svg+xml,%3Csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"50\" height=\"50\" viewBox=\"0 0 50 50\"%3E%3Crect width=\"50\" height=\"50\" fill=\"none\" stroke=\"none\"%3E%3C/rect%3E%3C/svg%3E';\r\n\r\n  /**\r\n   * Moves to the previous image, when the carousel is activated.\r\n   */\r\n  @Method() public async previousImage() {\r\n    this.currentImage =\r\n      this.currentImage - 1 < 0\r\n        ? this.numberOfImages - 1\r\n        : this.currentImage - 1;\r\n  }\r\n\r\n  /**\r\n   * Moves to the next image, when the carousel is activated.\r\n   */\r\n  @Method() public async nextImage() {\r\n    this.currentImage = (this.currentImage + 1) % this.numberOfImages;\r\n  }\r\n\r\n  /**\r\n   * Navigates to the specified image index.\r\n   *\r\n   * @param index - The index of the image to navigate to.\r\n   */\r\n  @Method() public async navigateToImage(index: number) {\r\n    this.currentImage = index;\r\n  }\r\n\r\n  private logWarning(message: string) {\r\n    this.bindings.engine.logger.warn(message, this.host);\r\n  }\r\n\r\n  private handleImageError(event: Event) {\r\n    const image = event.target as HTMLImageElement;\r\n    const message = `The image url \"${image.src}\" is not valid or could not be loaded. You might want to add a \"fallback\" property.`;\r\n    if (this.fallback && image.src !== this.fallback) {\r\n      this.useFallback = true;\r\n      image.src = this.fallback;\r\n    } else if (image.src === this.fallback) {\r\n      this.logWarning('The fallback image failed to load.');\r\n    } else {\r\n      this.logWarning(message);\r\n    }\r\n  }\r\n\r\n  private handleMissingFallback(message: string) {\r\n    if (!this.fallback) {\r\n      this.logWarning(message);\r\n      this.host.remove();\r\n      return null;\r\n    }\r\n    return this.fallback;\r\n  }\r\n\r\n  private validateUrl(url: string | undefined) {\r\n    if (!url) {\r\n      const message = `Image for ${this.product.ec_name} is missing. Please review your indexation. You might want to add a \"fallback\" property.`;\r\n      return this.handleMissingFallback(message);\r\n    }\r\n\r\n    if (typeof url !== 'string') {\r\n      const message = `Expected \"${this.field}\" to be a text field. Please review your indexation. You might want to add a \"fallback\" property.`;\r\n      return this.handleMissingFallback(message);\r\n    }\r\n\r\n    return url;\r\n  }\r\n\r\n  componentWillLoad(): void {\r\n    const validImages = this.imageUrls.filter(\r\n      (image) => typeof image === 'string'\r\n    );\r\n\r\n    this.images = validImages.map((url, index) => {\r\n      const finalUrl = this.useFallback ? this.fallback : url;\r\n\r\n      this.validateUrl(finalUrl);\r\n\r\n      return {\r\n        src: filterProtocol(finalUrl),\r\n        alt: `Image ${index + 1} out of ${validImages?.length} for ${this.product.ec_name}`,\r\n      };\r\n    }) as Image[];\r\n  }\r\n\r\n  private get imageUrls() {\r\n    const value = ProductTemplatesHelpers.getProductProperty(\r\n      this.product,\r\n      this.field\r\n    );\r\n\r\n    return Array.isArray(value) ? value : [value];\r\n  }\r\n\r\n  private get numberOfImages() {\r\n    return this.images?.length ?? 0;\r\n  }\r\n\r\n  private renderCurrentImage(image: Image | null) {\r\n    if (image === null) {\r\n      return;\r\n    }\r\n\r\n    return (\r\n      <img\r\n        class=\"aspect-square\"\r\n        alt={image.alt}\r\n        src={image.src}\r\n        onError={(image) => this.handleImageError(image)}\r\n        loading=\"lazy\"\r\n      />\r\n    );\r\n  }\r\n\r\n  public render() {\r\n    const imagesToRender = this.images.map((image: Image, index: number) => {\r\n      return {\r\n        src: image.src,\r\n        alt: `Image ${index} out of ${this.images?.length} for ${this.product.ec_name}`,\r\n      };\r\n    });\r\n    if (this.images.length === 0) {\r\n      this.validateUrl(this.fallback);\r\n      return (\r\n        <img alt={'No image available'} src={this.fallback} loading=\"eager\" />\r\n      );\r\n    }\r\n    if (this.images.length === 1) {\r\n      return this.renderCurrentImage(imagesToRender[this.currentImage]);\r\n    }\r\n\r\n    return (\r\n      // TODO: handle small/icon image sizes better on mobile\r\n      <ImageCarousel\r\n        bindings={this.bindings}\r\n        currentImage={this.currentImage}\r\n        navigateToImage={(index) => this.navigateToImage(index)}\r\n        nextImage={() => this.nextImage()}\r\n        previousImage={() => this.previousImage()}\r\n        numberOfImages={this.numberOfImages}\r\n      >\r\n        {this.renderCurrentImage(this.images[this.currentImage])}\r\n      </ImageCarousel>\r\n    );\r\n  }\r\n}\r\n"],"version":3}