{"file":"atomic-insight-smart-snippet-suggestions.js","mappings":";;;;;;;AAAA,MAAM,uCAAuC,GAAG,85wCAA85wC,CAAC;AAC/8wC,mDAAe,uCAAuC;;;;;;;;;;;;MCuBzCA,sCAAoC;;;;;;;;QAgBjB,iBAAY,GAAG,CAAC,CAAC;QAgBvC,OAAE,GAAG,QAAQ,CAAC,mCAAmC,CAAC,CAAC;;4BAhBd,CAAC;;;IAkBvC,UAAU;QACf,IAAI,CAAC,yBAAyB,GAAGC,EAAqC,CACpE,IAAI,CAAC,QAAQ,CAAC,MAAM,CACrB,CAAC;QAEF,IAAI,CAAC,gCAAgC,GAAG,IAAI,4BAA4B,CAAC;YACvE,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,OAAO,EAAE,MAAM,IAAI,CAAC,IAAI;YACxB,WAAW,EAAE,MAAM,IAAI,CAAC,QAAQ;YAChC,eAAe,EAAE,MAAM,IAAI,CAAC,YAAY;YACxC,QAAQ,EAAE,MAAM,IAAI,CAAC,8BAA8B;YACnD,gBAAgB,EAAE,MAAM,IAAI,CAAC,yBAAyB;YACtD,eAAe,EAAE,MAAM,IAAI,CAAC,YAAY;SACzC,CAAC,CAAC;QAEH,IAAI,CAAC,gCAAgC,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;QAC7D,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,kBAAkB,CAAC;YACrC,IAAI,CAAC,gCAAgC,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;SAC/D,CAAC,CAAC;KACJ;IAEM,qBAAqB,CAC1B,eAAmD,EACnD,KAAa;QAEb,OAAO,IAAI,CAAC,gCAAgC,CAAC,qBAAqB,CAChE,eAAe,EACf,KAAK,CACN,CAAC;KACH;IAEM,MAAM;QACX,OAAO,IAAI,CAAC,gCAAgC,CAAC,MAAM,EAAE,CAAC;KACvD;;;;;;;;AAhE4B;IAA5B,kBAAkB,EAAE;wEAAmC;AAIjD;IAFN,qBAAqB,CAAC,2BAA2B,CAAC;8FAE2B;;;;;;;;;;;;;;;;;;;;;;;;;","names":["AtomicInsightSmartSnippetSuggestions","buildInsightSmartSnippetQuestionsList"],"sources":["src/components/insight/smart-snippets/atomic-insight-smart-snippet-suggestions/atomic-insight-smart-snippet-suggestions.pcss?tag=atomic-insight-smart-snippet-suggestions&encapsulation=shadow","src/components/insight/smart-snippets/atomic-insight-smart-snippet-suggestions/atomic-insight-smart-snippet-suggestions.tsx"],"sourcesContent":["@import '../../../common/smart-snippets/atomic-smart-snippet-suggestions/atomic-smart-snippet-suggestions.pcss';\n","import {Component, Prop, State, Element} from '@stencil/core';\nimport {\n  buildInsightSmartSnippetQuestionsList,\n  InsightSmartSnippetQuestionsList,\n  InsightSmartSnippetQuestionsListState,\n  InsightSmartSnippetRelatedQuestion,\n} from '../..';\nimport {\n  InitializableComponent,\n  InitializeBindings,\n  BindStateToController,\n} from '../../../../utils/initialization-utils';\nimport {randomID} from '../../../../utils/utils';\nimport {SmartSnippetSuggestionCommon} from '../../../common/smart-snippets/atomic-smart-snippet-suggestions/smart-snippet-suggestions-common';\nimport {InsightBindings} from '../../atomic-insight-interface/atomic-insight-interface';\n\n/**\n * @internal\n */\n@Component({\n  tag: 'atomic-insight-smart-snippet-suggestions',\n  styleUrl: 'atomic-insight-smart-snippet-suggestions.pcss',\n  shadow: true,\n})\nexport class AtomicInsightSmartSnippetSuggestions\n  implements InitializableComponent<InsightBindings>\n{\n  @InitializeBindings() public bindings!: InsightBindings;\n  public smartSnippetQuestionsList!: InsightSmartSnippetQuestionsList;\n  @BindStateToController('smartSnippetQuestionsList')\n  @State()\n  public smartSnippetQuestionsListState!: InsightSmartSnippetQuestionsListState;\n  public error!: Error;\n  @Element() public host!: HTMLElement;\n\n  private smartSnippetSuggestionListCommon!: SmartSnippetSuggestionCommon;\n\n  /**\n   * The [heading level](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements) to use for the \"People also ask\" heading over the snippets, from 1 to 5.\n   */\n  @Prop({reflect: true}) public headingLevel = 0;\n\n  /**\n   * Sets the style of the snippets.\n   *\n   * Example:\n   * ```ts\n   * smartSnippet.snippetStyle = `\n   *   b {\n   *     color: blue;\n   *   }\n   * `;\n   * ```\n   */\n  @Prop() snippetStyle?: string;\n\n  private id = randomID('atomic-smart-snippet-suggestions-');\n\n  public initialize() {\n    this.smartSnippetQuestionsList = buildInsightSmartSnippetQuestionsList(\n      this.bindings.engine\n    );\n\n    this.smartSnippetSuggestionListCommon = new SmartSnippetSuggestionCommon({\n      id: this.id,\n      getHost: () => this.host,\n      getBindings: () => this.bindings,\n      getHeadingLevel: () => this.headingLevel,\n      getState: () => this.smartSnippetQuestionsListState,\n      getQuestionsList: () => this.smartSnippetQuestionsList,\n      getSnippetStyle: () => this.snippetStyle,\n    });\n\n    this.smartSnippetSuggestionListCommon.hideDuringRender(true);\n    this.bindings.store.waitUntilAppLoaded(() => {\n      this.smartSnippetSuggestionListCommon.hideDuringRender(false);\n    });\n  }\n\n  public renderRelatedQuestion(\n    relatedQuestion: InsightSmartSnippetRelatedQuestion,\n    index: number\n  ) {\n    return this.smartSnippetSuggestionListCommon.renderRelatedQuestion(\n      relatedQuestion,\n      index\n    );\n  }\n\n  public render() {\n    return this.smartSnippetSuggestionListCommon.render();\n  }\n}\n"],"version":3}