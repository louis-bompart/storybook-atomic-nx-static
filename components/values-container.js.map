{"file":"values-container.js","mappings":";;;;;;;MAqBa,mBAAmB,GAAG,CAAC,EAClC,YAAY,EACZ,KAAK,EACL,IAAI,EACJ,UAAU,EACV,MAAM,EACN,SAAS,GACa;;IACtB,MAAM,gBAAgB,GAAG,MAAA,YAAY,CAAC,IAAI,CAAC,CAAC,KAAK,KAC/C,cAAc,CAAC,KAAK,EAAE,UAAU,CAAC,CAClC,0CAAE,KAAK,CAAC;IACT,OAAO,gBAAgB;UACnB,oBAAoB,CAAC,KAAK,EAAE,gBAAgB,EAAE,IAAI,CAAC;UACnD,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE;YACX,KAAK,EAAE,qBAAqB,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,CAAC;YACvE,GAAG,EAAE,qBAAqB,CAAC,UAAU,CAAC,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,CAAC;SACpE,CAAC,CAAC;AACT,EAAE;AAEK,MAAM,qBAAqB,GAAG,CACnC,KAAa,EACb,IAAmC,EACnC,MAAuC,EACvC,SAA6C;IAE7C,IAAI;QACF,OAAO,SAAS,CAAC,KAAK,EAAE,IAAI,CAAC,SAAqB,CAAC,CAAC;KACrD;IAAC,OAAO,KAAK,EAAE;QACd,MAAM,CAAC,KAAK,CACV,qCAAqC,KAAK,qCAAqC,EAC/E,KAAK,CACN,CAAC;QACF,OAAO,KAAK,CAAC;KACd;AACH,CAAC,CAAC;AAEF,MAAM,cAAc,GAAG,CACrB,UAA2B,EAC3B,WAA4B;IAE5B,QACE,UAAU,CAAC,KAAK,KAAK,WAAW,CAAC,KAAK;QACtC,UAAU,CAAC,GAAG,KAAK,WAAW,CAAC,GAAG;QAClC,UAAU,CAAC,YAAY,KAAK,WAAW,CAAC,YAAY,EACpD;AACJ,CAAC;;MCtDY,qBAAqB,GAE9B,CAAC,KAAK;IACR,MAAM,EAAC,UAAU,EAAE,eAAe,EAAE,IAAI,EAAE,OAAO,EAAC,GAAG,KAAK,CAAC;IAC3D,MAAM,YAAY,GAAG,mBAAmB,CAAC,KAAK,CAAC,CAAC;IAChD,MAAM,UAAU,GAAG,UAAU,CAAC,KAAK,KAAK,UAAU,CAAC;IACnD,QAAQ,eAAe;QACrB,KAAK,UAAU;YACb,QACE,EAAC,kBAAkB,IACjB,YAAY,EAAE,YAAY,EAC1B,eAAe,EAAE,UAAU,CAAC,eAAe,EAC3C,UAAU,EAAE,UAAU,EACtB,IAAI,EAAE,IAAI,EACV,OAAO,EAAE,MAAM,OAAO,EAAE;gBAExB,EAAC,wBAAwB,IACvB,YAAY,EAAE,YAAY,EAC1B,UAAU,EAAE,UAAU,GACI,CACT,EACrB;QACJ,KAAK,MAAM;YACT,QACE,EAAC,cAAc,IACb,YAAY,EAAE,YAAY,EAC1B,eAAe,EAAE,UAAU,CAAC,eAAe,EAC3C,UAAU,EAAE,UAAU,EACtB,IAAI,EAAE,IAAI,EACV,OAAO,EAAE,OAAO;gBAEhB,EAAC,wBAAwB,IACvB,YAAY,EAAE,YAAY,EAC1B,UAAU,EAAE,UAAU,GACI,CACb,EACjB;KACL;AACH;;MC1Ca,2BAA2B,GAEpC,CAAC,EAAC,IAAI,EAAE,KAAK,EAAC,EAAE,QAAQ;IAC1B,QACE,EAAC,gBAAgB,IAAC,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK;QACxC,UAAI,KAAK,EAAC,MAAM,EAAC,IAAI,EAAC,QAAQ,IAC3B,QAAQ,CACN,CACY,EACnB;AACJ;;;;","names":[],"sources":["src/components/common/facets/numeric-facet/formatter.ts","src/components/common/facets/numeric-facet/value-link.tsx","src/components/common/facets/numeric-facet/values-container.tsx"],"sourcesContent":["import {i18n} from 'i18next';\nimport {getFieldValueCaption} from '../../../../utils/field-utils';\nimport {NumberFormatter} from '../../formats/format-common';\n\nexport interface FacetValueRange {\n  endInclusive: boolean;\n  start: number;\n  end: number;\n  label?: string;\n  state: 'selected' | 'idle' | 'excluded';\n}\n\nexport interface FormatFacetValueRange {\n  field: string;\n  facetValue: FacetValueRange & {numberOfResults: number};\n  manualRanges: FacetValueRange[];\n  i18n: i18n;\n  logger: Pick<Console, 'error'>;\n  formatter: NumberFormatter;\n}\n\nexport const formatHumanReadable = ({\n  manualRanges,\n  field,\n  i18n,\n  facetValue,\n  logger,\n  formatter,\n}: FormatFacetValueRange) => {\n  const manualRangeLabel = manualRanges.find((range) =>\n    areRangesEqual(range, facetValue)\n  )?.label;\n  return manualRangeLabel\n    ? getFieldValueCaption(field, manualRangeLabel, i18n)\n    : i18n.t('to', {\n        start: formatNumberLocalized(facetValue.start, i18n, logger, formatter),\n        end: formatNumberLocalized(facetValue.end, i18n, logger, formatter),\n      });\n};\n\nexport const formatNumberLocalized = (\n  value: number,\n  i18n: FormatFacetValueRange['i18n'],\n  logger: FormatFacetValueRange['logger'],\n  formatter: FormatFacetValueRange['formatter']\n) => {\n  try {\n    return formatter(value, i18n.languages as string[]);\n  } catch (error) {\n    logger.error(\n      `atomic-numeric-facet facet value \"${value}\" could not be formatted correctly.`,\n      error\n    );\n    return value;\n  }\n};\n\nconst areRangesEqual = (\n  firstRange: FacetValueRange,\n  secondRange: FacetValueRange\n) => {\n  return (\n    firstRange.start === secondRange.start &&\n    firstRange.end === secondRange.end &&\n    firstRange.endInclusive === secondRange.endInclusive\n  );\n};\n","import {FunctionalComponent, h} from '@stencil/core';\nimport {FacetValueCheckbox} from '../facet-value-checkbox/facet-value-checkbox';\nimport {FacetValueLabelHighlight} from '../facet-value-label-highlight/facet-value-label-highlight';\nimport {FacetValueLink} from '../facet-value-link/facet-value-link';\nimport {FormatFacetValueRange, formatHumanReadable} from './formatter';\n\ninterface NumericFacetValueLinkProps extends FormatFacetValueRange {\n  onClick: () => void;\n  logger: Pick<Console, 'error'>;\n  displayValuesAs: 'checkbox' | 'link';\n}\n\nexport const NumericFacetValueLink: FunctionalComponent<\n  NumericFacetValueLinkProps\n> = (props) => {\n  const {facetValue, displayValuesAs, i18n, onClick} = props;\n  const displayValue = formatHumanReadable(props);\n  const isSelected = facetValue.state === 'selected';\n  switch (displayValuesAs) {\n    case 'checkbox':\n      return (\n        <FacetValueCheckbox\n          displayValue={displayValue}\n          numberOfResults={facetValue.numberOfResults}\n          isSelected={isSelected}\n          i18n={i18n}\n          onClick={() => onClick()}\n        >\n          <FacetValueLabelHighlight\n            displayValue={displayValue}\n            isSelected={isSelected}\n          ></FacetValueLabelHighlight>\n        </FacetValueCheckbox>\n      );\n    case 'link':\n      return (\n        <FacetValueLink\n          displayValue={displayValue}\n          numberOfResults={facetValue.numberOfResults}\n          isSelected={isSelected}\n          i18n={i18n}\n          onClick={onClick}\n        >\n          <FacetValueLabelHighlight\n            displayValue={displayValue}\n            isSelected={isSelected}\n          ></FacetValueLabelHighlight>\n        </FacetValueLink>\n      );\n  }\n};\n","import {FunctionalComponent, h} from '@stencil/core';\nimport {i18n} from 'i18next';\nimport {FacetValuesGroup} from '../facet-values-group/facet-values-group';\n\ninterface NumericFacetValuesContainerProps {\n  i18n: i18n;\n  label: string;\n}\nexport const NumericFacetValuesContainer: FunctionalComponent<\n  NumericFacetValuesContainerProps\n> = ({i18n, label}, children) => {\n  return (\n    <FacetValuesGroup i18n={i18n} label={label}>\n      <ul class=\"mt-3\" part=\"values\">\n        {children}\n      </ul>\n    </FacetValuesGroup>\n  );\n};\n"],"version":3}