{"file":"search-layout-a5d30198.js","mappings":";;SAKgB,gBAAgB,CAAC,gBAAwB;IACvD,OAAO,+BAA+B,gBAAgB,GAAG,CAAC;AAC5D,CAAC;SACe,uBAAuB,CACrC,OAAoB,EACpB,gBAAwB,EACxB,yBAAiC,EACjC,4BAAoC;IAEpC,MAAM,EAAE,GAAG,OAAO,CAAC,EAAE,CAAC;IACtB,MAAM,cAAc,GAAG,GAAG,yBAAyB,IAAI,EAAE,EAAE,CAAC;IAC5D,MAAM,mBAAmB,GAAG,GAAG,4BAA4B,SAAS,4BAA4B,iBAAiB,4BAA4B,SAAS,CAAC;IACvJ,MAAM,kBAAkB,GAAG,UAAU,gBAAgB,CAAC,gBAAgB,CAAC,EAAE,CAAC;IAE1E,MAAM,OAAO,GAAG,GAAG,cAAc,oBAAoB,CAAC;IACtD,MAAM,MAAM,GAAG,GAAG,kBAAkB;MAChC,cAAc,IAAI,eAAe,CAAC,QAAQ,CAAC;;;;IAI7C,CAAC;IAEH,MAAM,MAAM,GAAG;QACb,MAAM,aAAa,GAAG,WAAW,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;QACrD,MAAM,WAAW,GAAG,WAAW,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;QACjD,IAAI,CAAC,aAAa,IAAI,CAAC,WAAW,EAAE;YAClC,OAAO,EAAE,CAAC;SACX;QAED,MAAM,SAAS,GAAG,aAAa,CAAC,QAAQ,IAAI,OAAO,CAAC;QACpD,MAAM,SAAS,GAAG,aAAa,CAAC,QAAQ,IAAI,OAAO,CAAC;QACpD,MAAM,OAAO,GAAG,WAAW,CAAC,QAAQ,IAAI,KAAK,CAAC;QAC9C,MAAM,OAAO,GAAG,WAAW,CAAC,QAAQ,IAAI,OAAO,CAAC;QAEhD,OAAO,GAAG,kBAAkB;QACxB,cAAc;;;;;uBAKC,SAAS,KAAK,SAAS,YAAY,OAAO,KAAK,OAAO;;;;QAIrE,mBAAmB,IAAI,cAAc;;;;;;;QAOrC,mBAAmB,IAAI,cAAc,IAAI,eAAe,CAAC,QAAQ,CAAC;;;MAGpE,CAAC;KACJ,CAAC;IAEF,MAAM,MAAM,GAAG;QACb,MAAM,aAAa,GAAG,WAAW,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;QACrD,IAAI,CAAC,aAAa,EAAE;YAClB,OAAO,EAAE,CAAC;SACX;QAED,MAAM,YAAY,GAAG,aAAa,CAAC,aAAa,CAAC,sBAAsB,CAAC,CAAC;QACzE,IAAI,CAAC,YAAY,EAAE;YACjB,OAAO,EAAE,CAAC;SACX;QAED,MAAM,cAAc,GAAG,GAAG,cAAc,IAAI,eAAe,CAAC,QAAQ,CAAC,EAAE,CAAC;QACxE,OAAO,GAAG,cAAc;;;;MAItB,kBAAkB;OACjB,cAAc;;;;QAIb,cAAc;;;MAGhB,CAAC;KACJ,CAAC;IAEF,MAAM,gBAAgB,GAAG;QACvB,OAAO,GAAG,kBAAkB;QACxB,cAAc,IAAI,eAAe,CACjC,mBAAmB,CACpB;;;MAGD,CAAC;KACJ,CAAC;IAEF,OAAO,CAAC,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,EAAE,MAAM,EAAE,EAAE,gBAAgB,EAAE,CAAC;SAC7D,MAAM,CAAC,CAAC,WAAW,KAAK,WAAW,KAAK,EAAE,CAAC;SAC3C,IAAI,CAAC,MAAM,CAAC,CAAC;AAClB;;;;","names":[],"sources":["src/components/common/atomic-layout-section/search-layout.ts"],"sourcesContent":["import {\r\n  findSection,\r\n  sectionSelector,\r\n} from '../../common/atomic-layout-section/sections';\r\n\r\nexport function makeDesktopQuery(mobileBreakpoint: string) {\r\n  return `only screen and (min-width: ${mobileBreakpoint})`;\r\n}\r\nexport function buildSearchLayoutCommon(\r\n  element: HTMLElement,\r\n  mobileBreakpoint: string,\r\n  layoutWebComponentTagName: string,\r\n  containerWebComponentTagName: string\r\n) {\r\n  const id = element.id;\r\n  const layoutSelector = `${layoutWebComponentTagName}#${id}`;\r\n  const cleanStatusSelector = `${containerWebComponentTagName}:not(.${containerWebComponentTagName}-no-results, .${containerWebComponentTagName}-error)`;\r\n  const mediaQuerySelector = `@media ${makeDesktopQuery(mobileBreakpoint)}`;\r\n\r\n  const display = `${layoutSelector} { display: grid }`;\r\n  const search = `${mediaQuerySelector} {\r\n    ${layoutSelector} ${sectionSelector('search')} {\r\n      justify-self: start;\r\n      width: 80%;\r\n    }\r\n  }`;\r\n\r\n  const facets = () => {\r\n    const facetsSection = findSection(element, 'facets');\r\n    const mainSection = findSection(element, 'main');\r\n    if (!facetsSection || !mainSection) {\r\n      return '';\r\n    }\r\n\r\n    const facetsMin = facetsSection.minWidth || '17rem';\r\n    const facetsMax = facetsSection.maxWidth || '22rem';\r\n    const mainMin = mainSection.minWidth || '50%';\r\n    const mainMax = mainSection.maxWidth || '70rem';\r\n\r\n    return `${mediaQuerySelector} {\r\n      ${layoutSelector} {\r\n        grid-template-areas:\r\n        '. .                     atomic-section-search .'\r\n        '. atomic-section-main   atomic-section-main   .';\r\n        grid-template-columns:\r\n          1fr minmax(${facetsMin}, ${facetsMax}) minmax(${mainMin}, ${mainMax}) 1fr;\r\n        column-gap: var(--atomic-layout-spacing-x);\r\n      }\r\n\r\n      ${cleanStatusSelector} ${layoutSelector} {\r\n        grid-template-areas:\r\n          '. .                     atomic-section-search .'\r\n          '. atomic-section-facets atomic-section-main   .'\r\n          '. atomic-section-facets .                     .';\r\n      }\r\n\r\n      ${cleanStatusSelector} ${layoutSelector} ${sectionSelector('facets')} {\r\n        display: block;\r\n      }\r\n    }`;\r\n  };\r\n\r\n  const refine = () => {\r\n    const statusSection = findSection(element, 'status');\r\n    if (!statusSection) {\r\n      return '';\r\n    }\r\n\r\n    const refineToggle = statusSection.querySelector('atomic-refine-toggle');\r\n    if (!refineToggle) {\r\n      return '';\r\n    }\r\n\r\n    const statusSelector = `${layoutSelector} ${sectionSelector('status')}`;\r\n    return `${statusSelector} atomic-sort-dropdown {\r\n      display: none;\r\n    }\r\n\r\n    ${mediaQuerySelector} {\r\n     ${statusSelector} atomic-sort-dropdown {\r\n       display: block;\r\n      }\r\n\r\n      ${statusSelector} atomic-refine-toggle {\r\n        display: none;\r\n       }\r\n    }`;\r\n  };\r\n\r\n  const horizontalFacets = () => {\r\n    return `${mediaQuerySelector} {\r\n      ${layoutSelector} ${sectionSelector(\r\n        'horizontal-facets'\r\n      )} > atomic-popover:not(.atomic-hidden) {\r\n        display: block;\r\n      }\r\n    }`;\r\n  };\r\n\r\n  return [display, search, facets(), refine(), horizontalFacets()]\r\n    .filter((declaration) => declaration !== '')\r\n    .join('\\n\\n');\r\n}\r\n"],"version":3}