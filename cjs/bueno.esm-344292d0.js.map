{"file":"bueno.esm-344292d0.js","mappings":"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","names":[],"sources":["../bueno/dist/browser/bueno.esm.js"],"sourcesContent":["/**\n * @license\n *\n * Copyright 2024 Coveo Solutions Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *       http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// src/schema.ts\nfunction buildSchemaValidationError(errors, context) {\n  const message = `\n  The following properties are invalid:\n\n    ${errors.join(\"\\n\t\")}\n  \n  ${context}\n  `;\n  return new SchemaValidationError(message);\n}\nvar SchemaValidationError = class extends Error {\n  constructor(message) {\n    super(message);\n    this.name = \"SchemaValidationError\";\n  }\n};\nvar Schema = class {\n  constructor(definition) {\n    this.definition = definition;\n  }\n  validate(values = {}, message = \"\") {\n    const mergedValues = {\n      ...this.default,\n      ...values\n    };\n    const errors = [];\n    for (const property in this.definition) {\n      const error = this.definition[property].validate(mergedValues[property]);\n      error && errors.push(`${property}: ${error}`);\n    }\n    if (errors.length) {\n      throw buildSchemaValidationError(errors, message);\n    }\n    return mergedValues;\n  }\n  get default() {\n    const defaultValues = {};\n    for (const property in this.definition) {\n      const defaultValue = this.definition[property].default;\n      if (defaultValue !== void 0) {\n        defaultValues[property] = defaultValue;\n      }\n    }\n    return defaultValues;\n  }\n};\n\n// src/values/value.ts\nvar Value = class {\n  constructor(baseConfig = {}) {\n    this.baseConfig = baseConfig;\n  }\n  validate(value) {\n    if (this.baseConfig.required && isNullOrUndefined(value)) {\n      return \"value is required.\";\n    }\n    return null;\n  }\n  get default() {\n    return this.baseConfig.default instanceof Function ? this.baseConfig.default() : this.baseConfig.default;\n  }\n  get required() {\n    return this.baseConfig.required === true;\n  }\n};\nfunction isUndefined(value) {\n  return value === void 0;\n}\nfunction isNull(value) {\n  return value === null;\n}\nfunction isNullOrUndefined(value) {\n  return isUndefined(value) || isNull(value);\n}\n\n// src/values/number-value.ts\nvar NumberValue = class {\n  constructor(config = {}) {\n    this.config = config;\n    this.value = new Value(config);\n  }\n  validate(value) {\n    const valueValidation = this.value.validate(value);\n    if (valueValidation) {\n      return valueValidation;\n    }\n    if (!isNumberOrUndefined(value)) {\n      return \"value is not a number.\";\n    }\n    if (value < this.config.min) {\n      return `minimum value of ${this.config.min} not respected.`;\n    }\n    if (value > this.config.max) {\n      return `maximum value of ${this.config.max} not respected.`;\n    }\n    return null;\n  }\n  get default() {\n    return this.value.default;\n  }\n  get required() {\n    return this.value.required;\n  }\n};\nfunction isNumberOrUndefined(value) {\n  return isUndefined(value) || isNumber(value);\n}\nfunction isNumber(value) {\n  return typeof value === \"number\" && !isNaN(value);\n}\n\n// src/values/boolean-value.ts\nvar BooleanValue = class {\n  constructor(config = {}) {\n    this.value = new Value(config);\n  }\n  validate(value) {\n    const valueValidation = this.value.validate(value);\n    if (valueValidation) {\n      return valueValidation;\n    }\n    if (!isBooleanOrUndefined(value)) {\n      return \"value is not a boolean.\";\n    }\n    return null;\n  }\n  get default() {\n    return this.value.default;\n  }\n  get required() {\n    return this.value.required;\n  }\n};\nfunction isBooleanOrUndefined(value) {\n  return isUndefined(value) || isBoolean(value);\n}\nfunction isBoolean(value) {\n  return typeof value === \"boolean\";\n}\n\n// src/values/string-value.ts\nvar urlRegex = /^(?:(?:(?:https?|ftp):)?\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})).?)(?::\\d{2,5})?(?:[/?#]\\S*)?$/i;\nvar StringValue = class {\n  constructor(config = {}) {\n    this.config = {\n      emptyAllowed: true,\n      url: false,\n      ...config\n    };\n    this.value = new Value(this.config);\n  }\n  validate(value) {\n    const { emptyAllowed, url, regex, constrainTo } = this.config;\n    const valueValidation = this.value.validate(value);\n    if (valueValidation) {\n      return valueValidation;\n    }\n    if (isUndefined(value)) {\n      return null;\n    }\n    if (!isString(value)) {\n      return \"value is not a string.\";\n    }\n    if (!emptyAllowed && !value.length) {\n      return \"value is an empty string.\";\n    }\n    if (url && !urlRegex.test(value)) {\n      return \"value is not a valid URL.\";\n    }\n    if (regex && !regex.test(value)) {\n      return `value did not match provided regex ${regex}`;\n    }\n    if (constrainTo && !constrainTo.includes(value)) {\n      const values = constrainTo.join(\", \");\n      return `value should be one of: ${values}.`;\n    }\n    return null;\n  }\n  get default() {\n    return this.value.default;\n  }\n  get required() {\n    return this.value.required;\n  }\n};\nfunction isString(value) {\n  return Object.prototype.toString.call(value) === \"[object String]\";\n}\n\n// src/values/complex-value.ts\nvar RecordValue = class {\n  constructor(config = {}) {\n    this.config = {\n      options: { required: false },\n      values: {},\n      ...config\n    };\n  }\n  validate(input) {\n    if (isUndefined(input)) {\n      return this.config.options.required ? \"value is required and is currently undefined\" : null;\n    }\n    if (!isRecord(input)) {\n      return \"value is not an object\";\n    }\n    for (const [k, v] of Object.entries(this.config.values)) {\n      if (v.required && isNullOrUndefined(input[k])) {\n        return `value does not contain ${k}`;\n      }\n    }\n    let out = \"\";\n    for (const [key, validator] of Object.entries(this.config.values)) {\n      const value = input[key];\n      const invalidValue = validator.validate(value);\n      if (invalidValue !== null) {\n        out += \" \" + invalidValue;\n      }\n    }\n    return out === \"\" ? null : out;\n  }\n  get default() {\n    return void 0;\n  }\n  get required() {\n    return !!this.config.options.required;\n  }\n};\nfunction isRecord(value) {\n  return value !== void 0 && typeof value === \"object\";\n}\nvar ArrayValue = class {\n  constructor(config = {}) {\n    this.config = config;\n    this.value = new Value(this.config);\n  }\n  validate(input) {\n    if (!isNullOrUndefined(input) && !Array.isArray(input)) {\n      return \"value is not an array\";\n    }\n    const invalid = this.value.validate(input);\n    if (invalid !== null) {\n      return invalid;\n    }\n    if (isNullOrUndefined(input)) {\n      return null;\n    }\n    if (this.config.max !== void 0 && input.length > this.config.max) {\n      return `value contains more than ${this.config.max}`;\n    }\n    if (this.config.min !== void 0 && input.length < this.config.min) {\n      return `value contains less than ${this.config.min}`;\n    }\n    if (this.config.each !== void 0) {\n      let out = \"\";\n      input.forEach((el) => {\n        if (this.config.each.required && isNullOrUndefined(el)) {\n          out = `value is null or undefined: ${input.join(\",\")}`;\n        }\n        const isInvalid = this.validatePrimitiveValue(el, this.config.each);\n        if (isInvalid !== null) {\n          out += \" \" + isInvalid;\n        }\n      });\n      return out === \"\" ? null : out;\n    }\n    return null;\n  }\n  validatePrimitiveValue(v, validator) {\n    if (isBoolean(v)) {\n      return validator.validate(v);\n    } else if (isString(v)) {\n      return validator.validate(v);\n    } else if (isNumber(v)) {\n      return validator.validate(v);\n    } else if (isRecord(v)) {\n      return validator.validate(v);\n    }\n    return \"value is not a primitive value\";\n  }\n  get default() {\n    return void 0;\n  }\n  get required() {\n    return this.value.required;\n  }\n};\nfunction isArray(value) {\n  return Array.isArray(value);\n}\n\n// src/values/enum-value.ts\nvar EnumValue = class {\n  constructor(config) {\n    this.config = config;\n    this.value = new Value(config);\n  }\n  validate(value) {\n    const invalid = this.value.validate(value);\n    if (invalid !== null) {\n      return invalid;\n    }\n    if (isUndefined(value)) {\n      return null;\n    }\n    const valueInEnum = Object.values(this.config.enum).find(\n      (enumValue) => enumValue === value\n    );\n    if (!valueInEnum) {\n      return \"value is not in enum.\";\n    }\n    return null;\n  }\n  get default() {\n    return this.value.default;\n  }\n  get required() {\n    return this.value.required;\n  }\n};\nexport {\n  ArrayValue,\n  BooleanValue,\n  EnumValue,\n  NumberValue,\n  RecordValue,\n  Schema,\n  SchemaValidationError,\n  StringValue,\n  Value,\n  isArray,\n  isBoolean,\n  isBooleanOrUndefined,\n  isNull,\n  isNullOrUndefined,\n  isNumber,\n  isNumberOrUndefined,\n  isRecord,\n  isString,\n  isUndefined\n};\n"],"version":3}