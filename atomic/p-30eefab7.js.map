{"version":3,"names":["foldedItemListContextEventName","FoldedItemListContext","component","foldedList","componentWillRender","element","getElement","this","event","buildCustomEvent","foldedItemList","canceled","dispatchEvent","call","foldedItemListStateContextEventName","FoldedItemListStateContext","foldedListState","subscribe","state"],"sources":["src/components/common/item-list/item-list-decorators.tsx"],"sourcesContent":["import {ComponentInterface, getElement} from '@stencil/core';\nimport {buildCustomEvent} from '../../../utils/event-utils';\n\ntype FoldedItemListContextEventHandler = (foldedItemList: unknown) => void;\nexport type FoldedItemListContextEvent =\n  CustomEvent<FoldedItemListContextEventHandler>;\nconst foldedItemListContextEventName = 'atomic/resolveFoldedResultList';\n\n/**\n * A [StencilJS property decorator](https://stenciljs.com/) to be used for elements nested within a folded item list.\n * This allows the Stencil component to modify the folded item list rendered levels.\n */\nexport function FoldedItemListContext() {\n  return (component: ComponentInterface, foldedList: string) => {\n    const {componentWillRender} = component;\n    component.componentWillRender = function () {\n      const element = getElement(this);\n      const event = buildCustomEvent(\n        foldedItemListContextEventName,\n        (foldedItemList: unknown) => {\n          this[foldedList] = foldedItemList;\n        }\n      );\n\n      const canceled = element.dispatchEvent(event);\n      if (canceled) {\n        return;\n      }\n      return componentWillRender && componentWillRender.call(this);\n    };\n  };\n}\n\ntype FoldedItemListStateContextEventHandler = (foldedItemList: unknown) => void;\nexport type FoldedItemListStateContextEvent =\n  CustomEvent<FoldedItemListStateContextEventHandler>;\nconst foldedItemListStateContextEventName = 'atomic/resolveFoldedResultList';\n\n/**\n * A [StencilJS property decorator](https://stenciljs.com/) to be used for elements nested within a folded item list.\n * This allows the Stencil component to modify the folded item list rendered levels.\n */\nexport function FoldedItemListStateContext() {\n  return (component: ComponentInterface, foldedListState: string) => {\n    const {componentWillRender} = component;\n    component.componentWillRender = function () {\n      const element = getElement(this);\n      const event = buildCustomEvent(\n        foldedItemListStateContextEventName,\n        (foldedItemList: {\n          subscribe: (callback: () => void) => unknown;\n          state: unknown;\n        }) => {\n          foldedItemList?.subscribe(() => {\n            this[foldedListState] = foldedItemList.state;\n          });\n        }\n      );\n\n      const canceled = element.dispatchEvent(event);\n      if (canceled) {\n        return;\n      }\n      return componentWillRender && componentWillRender.call(this);\n    };\n  };\n}\n"],"mappings":"wEAMA,MAAMA,EAAiC,iC,SAMvBC,IACd,MAAO,CAACC,EAA+BC,KACrC,MAAMC,oBAACA,GAAuBF,EAC9BA,EAAUE,oBAAsB,WAC9B,MAAMC,EAAUC,EAAWC,MAC3B,MAAMC,EAAQC,EACZT,GACCU,IACCH,KAAKJ,GAAcO,CAAc,IAIrC,MAAMC,EAAWN,EAAQO,cAAcJ,GACvC,GAAIG,EAAU,CACZ,M,CAEF,OAAOP,GAAuBA,EAAoBS,KAAKN,K,CACxD,CAEL,CAKA,MAAMO,EAAsC,iC,SAM5BC,IACd,MAAO,CAACb,EAA+Bc,KACrC,MAAMZ,oBAACA,GAAuBF,EAC9BA,EAAUE,oBAAsB,WAC9B,MAAMC,EAAUC,EAAWC,MAC3B,MAAMC,EAAQC,EACZK,GACCJ,IAICA,IAAc,MAAdA,SAAc,SAAdA,EAAgBO,WAAU,KACxBV,KAAKS,GAAmBN,EAAeQ,KAAK,GAC5C,IAIN,MAAMP,EAAWN,EAAQO,cAAcJ,GACvC,GAAIG,EAAU,CACZ,M,CAEF,OAAOP,GAAuBA,EAAoBS,KAAKN,K,CACxD,CAEL,Q"}