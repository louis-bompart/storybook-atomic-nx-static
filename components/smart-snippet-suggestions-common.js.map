{"file":"smart-snippet-suggestions-common.js","mappings":"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","names":["ArrowRight"],"sources":["src/components/common/smart-snippets/atomic-smart-snippet-suggestions/smart-snippet-suggestions-common.tsx"],"sourcesContent":["import {\r\n  SmartSnippetRelatedQuestion,\r\n  SmartSnippetQuestionsList,\r\n  SmartSnippetQuestionsListState,\r\n} from '@coveo/headless';\r\nimport {h} from '@stencil/core';\r\nimport ArrowDown from '../../../../images/arrow-down.svg';\r\nimport ArrowRight from '../../../../images/arrow-right.svg';\r\nimport {Button} from '../../button';\r\nimport {Heading} from '../../heading';\r\nimport {Hidden} from '../../hidden';\r\nimport {AnyBindings} from '../../interface/bindings';\r\n\r\ninterface SmartSnippetSuggestionProps {\r\n  id: string;\r\n  getSourceAnchorAttributes?: () => Attr[] | undefined;\r\n  getHost: () => HTMLElement;\r\n  getBindings: () => AnyBindings;\r\n  getHeadingLevel: () => number;\r\n  getState: () => SmartSnippetQuestionsListState;\r\n  getQuestionsList: () => SmartSnippetQuestionsList;\r\n  getSnippetStyle: () => string | undefined;\r\n}\r\n\r\nexport class SmartSnippetSuggestionCommon {\r\n  constructor(private props: SmartSnippetSuggestionProps) {}\r\n\r\n  private get style() {\r\n    const styleTag = this.props\r\n      .getHost()\r\n      .querySelector('template')\r\n      ?.content.querySelector('style');\r\n    if (!styleTag) {\r\n      return this.props.getSnippetStyle();\r\n    }\r\n    return styleTag.innerHTML;\r\n  }\r\n\r\n  private getRelatedQuestionId(index: number) {\r\n    return `${this.props.id}-${index}`;\r\n  }\r\n\r\n  private getQuestionPart(\r\n    prefix: string,\r\n    relatedQuestion: SmartSnippetRelatedQuestion\r\n  ) {\r\n    return prefix + (relatedQuestion.expanded ? '-expanded' : '-collapsed');\r\n  }\r\n\r\n  private toggleQuestion(relatedQuestion: SmartSnippetRelatedQuestion) {\r\n    if (relatedQuestion.expanded) {\r\n      this.props.getQuestionsList().collapse(relatedQuestion.questionAnswerId);\r\n    } else {\r\n      this.props.getQuestionsList().expand(relatedQuestion.questionAnswerId);\r\n    }\r\n  }\r\n\r\n  private renderQuestion(\r\n    relatedQuestion: SmartSnippetRelatedQuestion,\r\n    index: number\r\n  ) {\r\n    const headingLevel = this.props.getHeadingLevel();\r\n    return (\r\n      <Button\r\n        style=\"text-neutral\"\r\n        part={this.getQuestionPart('question-button', relatedQuestion)}\r\n        onClick={() => this.toggleQuestion(relatedQuestion)}\r\n        class=\"flex items-center px-4\"\r\n        ariaExpanded={`${relatedQuestion.expanded}`}\r\n        ariaControls={this.getRelatedQuestionId(index)}\r\n      >\r\n        <atomic-icon\r\n          icon={relatedQuestion.expanded ? ArrowDown : ArrowRight}\r\n          part={this.getQuestionPart('question-icon', relatedQuestion)}\r\n          class=\"w-2.5 mr-3 stroke-[1.25]\"\r\n        ></atomic-icon>\r\n        <Heading\r\n          level={headingLevel ? headingLevel + 1 : headingLevel}\r\n          class=\"text-left text-xl font-bold py-4\"\r\n          part={this.getQuestionPart('question-text', relatedQuestion)}\r\n        >\r\n          {relatedQuestion.question}\r\n        </Heading>\r\n      </Button>\r\n    );\r\n  }\r\n\r\n  private renderContent(relatedQuestion: SmartSnippetRelatedQuestion) {\r\n    return (\r\n      <atomic-smart-snippet-answer\r\n        exportparts=\"answer\"\r\n        htmlContent={relatedQuestion.answer}\r\n        innerStyle={this.style}\r\n        onSelectInlineLink={(e) =>\r\n          this.props\r\n            .getQuestionsList()\r\n            .selectInlineLink(relatedQuestion.questionAnswerId, e.detail)\r\n        }\r\n        onBeginDelayedSelectInlineLink={(e) =>\r\n          this.props\r\n            .getQuestionsList()\r\n            .beginDelayedSelectInlineLink(\r\n              relatedQuestion.questionAnswerId,\r\n              e.detail\r\n            )\r\n        }\r\n        onCancelPendingSelectInlineLink={(e) =>\r\n          this.props\r\n            .getQuestionsList()\r\n            .cancelPendingSelectInlineLink(\r\n              relatedQuestion.questionAnswerId,\r\n              e.detail\r\n            )\r\n        }\r\n      ></atomic-smart-snippet-answer>\r\n    );\r\n  }\r\n\r\n  private renderSource(relatedQuestion: SmartSnippetRelatedQuestion) {\r\n    const {source} = relatedQuestion;\r\n    if (!source) {\r\n      return [];\r\n    }\r\n    return (\r\n      <footer\r\n        part=\"footer\"\r\n        aria-label={this.props.getBindings().i18n.t('smart-snippet-source')}\r\n      >\r\n        {\r\n          <atomic-smart-snippet-source\r\n            source={source}\r\n            anchorAttributes={this.props.getSourceAnchorAttributes?.()}\r\n            onSelectSource={() =>\r\n              this.props\r\n                .getQuestionsList()\r\n                .selectSource(relatedQuestion.questionAnswerId)\r\n            }\r\n            onBeginDelayedSelectSource={() =>\r\n              this.props\r\n                .getQuestionsList()\r\n                .beginDelayedSelectSource(relatedQuestion.questionAnswerId)\r\n            }\r\n            onCancelPendingSelectSource={() =>\r\n              this.props\r\n                .getQuestionsList()\r\n                .cancelPendingSelectSource(relatedQuestion.questionAnswerId)\r\n            }\r\n          ></atomic-smart-snippet-source>\r\n        }\r\n      </footer>\r\n    );\r\n  }\r\n\r\n  public hideDuringRender(shouldHide: boolean) {\r\n    const host = this.props.getHost();\r\n    host.style.visibility = shouldHide ? 'hidden' : '';\r\n    host.style.position = shouldHide ? 'absolute' : '';\r\n  }\r\n\r\n  public renderRelatedQuestion(\r\n    relatedQuestion: SmartSnippetRelatedQuestion,\r\n    index: number\r\n  ) {\r\n    return (\r\n      <li\r\n        key={relatedQuestion.questionAnswerId}\r\n        part={this.getQuestionPart('question-answer', relatedQuestion)}\r\n        class=\"flex flex-col\"\r\n      >\r\n        <article class=\"contents\">\r\n          {this.renderQuestion(relatedQuestion, index)}\r\n          {relatedQuestion.expanded && (\r\n            <div\r\n              part=\"answer-and-source\"\r\n              class=\"pl-10 pr-6 pb-6\"\r\n              id={this.getRelatedQuestionId(index)}\r\n            >\r\n              {this.renderContent(relatedQuestion)}\r\n              {this.renderSource(relatedQuestion)}\r\n            </div>\r\n          )}\r\n        </article>\r\n      </li>\r\n    );\r\n  }\r\n\r\n  public render() {\r\n    if (!this.props.getState().questions.length) {\r\n      return <Hidden></Hidden>;\r\n    }\r\n\r\n    return (\r\n      <aside\r\n        part=\"container\"\r\n        class=\"bg-background border border-neutral rounded-lg text-on-background overflow-hidden\"\r\n      >\r\n        <Heading\r\n          level={this.props.getHeadingLevel()}\r\n          part=\"heading\"\r\n          class=\"px-6 py-4 text-xl leading-8 border-b border-neutral\"\r\n        >\r\n          {this.props.getBindings().i18n.t('smart-snippet-people-also-ask')}\r\n        </Heading>\r\n        <ul part=\"questions\" class=\"divide-neutral divide-y\">\r\n          {this.props\r\n            .getState()\r\n            .questions.map((relatedQuestion, i) =>\r\n              this.renderRelatedQuestion(relatedQuestion, i)\r\n            )}\r\n        </ul>\r\n      </aside>\r\n    );\r\n  }\r\n}\r\n"],"version":3}