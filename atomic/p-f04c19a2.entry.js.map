{"version":3,"names":["atomicRefineModalCss","AtomicRefineModalStyle0","AtomicRefineModal","this","isOpen","collapseFacetsAfter","watchEnabled","host","querySelector","append","createFacetSlot","initialize","breadcrumbManager","buildBreadcrumbManager","bindings","engine","sort","buildSort","querySummary","buildQuerySummary","searchStatus","buildSearchStatus","facetManager","buildFacetManager","divSlot","document","createElement","setAttribute","addFacetColumnStyling","facets","store","getFacetElements","atomicSearchInterface","closest","facetsSection","findSection","horizontalFacetsSection","triagedFacets","triageFacetsByParents","horizontalFacetsSectionFacets","facetsSectionFacets","orphanedFacets","map","facetsArray","sortByDocumentPosition","sortedFacets","visibleFacets","invisibleFacets","sortFacetVisibility","getAllFacets","visibleFacetsClone","cloneFacets","invisibleFacetsClone","generator","makeAutomaticFacetGenerator","updateCollapseFacetsDependingOnFacetsVisibility","length","facet","i","classList","remove","popoverClass","isRefineModalFacet","clone","cloneNode","isCollapsed","_a","state","automaticFacetSet","desiredCount","_b","el","style","display","flexDirection","gap","options","sortOptions","select","e","composedPath","option","find","expression","value","sortBy","criteria","buildOption","label","h","selected","isSortedBy","i18n","t","renderSort","Fragment","part","class","onChange","icon","SortIcon","renderFilters","hasFacetElements","hasAutomaticFacets","set","undefined","breadcrumbManagerState","hasBreadcrumbs","Button","onClick","deselectAll","text","name","renderBody","slot","render","RefineModalCommon","key","onClose","title","querySummaryState","openButton","componentDidLoad","__decorate","InitializeBindings","BindStateToController"],"sources":["src/components/search/atomic-refine-modal/atomic-refine-modal.pcss?tag=atomic-refine-modal&encapsulation=shadow","src/components/search/atomic-refine-modal/atomic-refine-modal.tsx"],"sourcesContent":["@import '../../common/refine-modal/refine-modal-common.pcss';\n\n:host {\n  position: absolute;\n}\n\n/**\n * @prop --atomic-refine-modal-facet-margin: The spacing between the modal's facets.\n */\nselect:hover + div,\nselect:focus-visible + div {\n  @apply text-primary-light;\n}\n","import {\n  BreadcrumbManager,\n  buildBreadcrumbManager,\n  BreadcrumbManagerState,\n  QuerySummary,\n  QuerySummaryState,\n  FacetManagerState,\n  Sort,\n  buildSort,\n  SortState,\n  buildQuerySummary,\n  buildSearchStatus,\n  SearchStatus,\n  FacetManager,\n  buildFacetManager,\n} from '@coveo/headless';\nimport {\n  Component,\n  h,\n  State,\n  Prop,\n  Element,\n  Watch,\n  Fragment,\n} from '@stencil/core';\nimport SortIcon from '../../../images/sort.svg';\nimport {\n  BindStateToController,\n  InitializableComponent,\n  InitializeBindings,\n} from '../../../utils/initialization-utils';\nimport {sortByDocumentPosition} from '../../../utils/utils';\nimport {findSection} from '../../common/atomic-layout-section/sections';\nimport {Button} from '../../common/button';\nimport {\n  BaseFacetElement,\n  sortFacetVisibility,\n  triageFacetsByParents,\n  collapseFacetsAfter,\n} from '../../common/facets/facet-common';\nimport {isRefineModalFacet} from '../../common/interface/store';\nimport {RefineModalCommon} from '../../common/refine-modal/refine-modal-common';\nimport {Bindings} from '../atomic-search-interface/atomic-search-interface';\nimport {SortDropdownOption} from '../atomic-search-interface/store';\nimport {popoverClass} from '../facets/atomic-popover/popover-type';\n\n/**\n * The `atomic-refine-modal` is automatically created as a child of the `atomic-search-interface` when the `atomic-refine-toggle` is initialized.\n *\n * When the modal is opened, the class `atomic-modal-opened` is added to the interface element and the body, allowing further customization.\n *\n * @part container - The modal's outermost container.\n * @part header-wrapper - The wrapper around the header.\n * @part header - The header of the modal, containing the title.\n * @part title - The title of the modal.\n * @part close-button - The button in the header that closes the modal.\n * @part close-icon - The icon of the close button.\n * @part header-ruler - The horizontal ruler underneath the header.\n * @part body-wrapper - The wrapper around the body.\n * @part body - The body of the modal, between the header and the footer.\n * @part content - The wrapper around the content inside the body of the modal.\n * @part section-title - The title for each section.\n * @part section-sort-title - The title for the sort section.\n * @part section-filters-title - The title for the filters section.\n * @part select-wrapper - The wrapper around the select element, used to position the icon.\n * @part select - The `<select>` element of the dropdown list.\n * @part select-icon-wrapper - The wrapper around the sort icon that's used to align it.\n * @part select-icon - The select dropdown's sort icon.\n * @part filter-section - The section containing facets and the \"filters\" title.\n * @part filter-clear-all - The button that resets all actively selected facet values.\n * @part footer-wrapper - The wrapper with a shadow or background color around the footer.\n * @part footer - The footer of the modal.\n * @part footer-content - The wrapper around the content inside the footer of the modal, containing the button to view results.\n * @part footer-button - The button in the footer that closes the modal.\n * @part footer-button-text - The text inside the button in the footer that closes the modal.\n * @part footer-button-count - The count inside the button in the footer that closes the modal.\n */\n@Component({\n  tag: 'atomic-refine-modal',\n  styleUrl: 'atomic-refine-modal.pcss',\n  shadow: true,\n})\nexport class AtomicRefineModal implements InitializableComponent {\n  private sort!: Sort;\n  private breadcrumbManager!: BreadcrumbManager;\n  public querySummary!: QuerySummary;\n  public searchStatus!: SearchStatus;\n  public facetManager!: FacetManager;\n  @InitializeBindings() public bindings!: Bindings;\n  @Element() public host!: HTMLElement;\n\n  @BindStateToController('querySummary')\n  @State()\n  public querySummaryState!: QuerySummaryState;\n  @BindStateToController('breadcrumbManager')\n  @State()\n  private breadcrumbManagerState!: BreadcrumbManagerState;\n  @BindStateToController('facetManager')\n  @State()\n  public facetManagerState!: FacetManagerState;\n  @State() @BindStateToController('sort') public sortState!: SortState;\n  @State() public error!: Error;\n\n  @Prop({mutable: true}) openButton?: HTMLElement;\n\n  @Prop({reflect: true, mutable: true}) isOpen = false;\n\n  /**\n   * The number of expanded facets inside the refine modal.\n   * Remaining facets are automatically collapsed.\n   *\n   * Using the value `0` collapses all facets.\n   */\n  @Prop({reflect: true}) public collapseFacetsAfter = 0;\n\n  @Watch('isOpen')\n  watchEnabled(isOpen: boolean) {\n    if (isOpen) {\n      if (this.host.querySelector('div[slot=\"facets\"]')) {\n        return;\n      }\n\n      this.host.append(this.createFacetSlot());\n    }\n  }\n\n  public initialize() {\n    this.breadcrumbManager = buildBreadcrumbManager(this.bindings.engine);\n    this.sort = buildSort(this.bindings.engine);\n    this.querySummary = buildQuerySummary(this.bindings.engine);\n    this.searchStatus = buildSearchStatus(this.bindings.engine);\n    this.facetManager = buildFacetManager(this.bindings.engine);\n    this.watchEnabled(this.isOpen);\n  }\n\n  private createFacetSlot(): HTMLDivElement {\n    const divSlot = document.createElement('div');\n    divSlot.setAttribute('slot', 'facets');\n    this.addFacetColumnStyling(divSlot);\n\n    const facets = this.bindings.store.getFacetElements() as BaseFacetElement[];\n    const atomicSearchInterface = this.host.closest('atomic-search-interface')!;\n    const facetsSection = findSection(atomicSearchInterface, 'facets');\n    const horizontalFacetsSection = findSection(\n      atomicSearchInterface,\n      'horizontal-facets'\n    );\n    const triagedFacets = triageFacetsByParents(\n      facets,\n      horizontalFacetsSection,\n      facetsSection\n    );\n    const [horizontalFacetsSectionFacets, facetsSectionFacets, orphanedFacets] =\n      triagedFacets.map((facetsArray) =>\n        facetsArray.sort(sortByDocumentPosition)\n      );\n    const sortedFacets = [\n      ...facetsSectionFacets,\n      ...horizontalFacetsSectionFacets,\n      ...orphanedFacets,\n    ];\n\n    const {visibleFacets, invisibleFacets} = sortFacetVisibility(\n      sortedFacets,\n      this.bindings.store.getAllFacets()\n    );\n\n    const visibleFacetsClone = this.cloneFacets(visibleFacets);\n    const invisibleFacetsClone = this.cloneFacets(invisibleFacets);\n\n    collapseFacetsAfter(visibleFacetsClone, this.collapseFacetsAfter);\n\n    divSlot.append(...visibleFacetsClone);\n    divSlot.append(...invisibleFacetsClone);\n\n    const generator = this.makeAutomaticFacetGenerator();\n    if (generator) {\n      generator.updateCollapseFacetsDependingOnFacetsVisibility(\n        this.collapseFacetsAfter,\n        visibleFacets.length\n      );\n      divSlot.append(generator);\n    }\n\n    return divSlot;\n  }\n\n  private cloneFacets(facets: BaseFacetElement[]): BaseFacetElement[] {\n    return facets.map((facet, i) => {\n      facet.classList.remove(popoverClass);\n      facet.setAttribute(isRefineModalFacet, '');\n      const clone = facet.cloneNode(true) as BaseFacetElement;\n      clone.isCollapsed =\n        this.collapseFacetsAfter === -1\n          ? false\n          : i + 1 > this.collapseFacetsAfter;\n      return clone;\n    });\n  }\n\n  private makeAutomaticFacetGenerator() {\n    if (!this.bindings.engine.state.automaticFacetSet?.desiredCount) {\n      return;\n    }\n    const generator = document.createElement(\n      'atomic-automatic-facet-generator'\n    );\n\n    generator.setAttribute(\n      'desired-count',\n      `${this.bindings.engine.state.automaticFacetSet?.desiredCount}`\n    );\n    this.addFacetColumnStyling(generator);\n\n    return generator;\n  }\n\n  private addFacetColumnStyling(el: HTMLElement) {\n    el.style.display = 'flex';\n    el.style.flexDirection = 'column';\n    el.style.gap = 'var(--atomic-refine-modal-facet-margin, 20px)';\n  }\n\n  private get options() {\n    return this.bindings.store.state.sortOptions;\n  }\n\n  private select(e: Event) {\n    const select = e.composedPath()[0] as HTMLSelectElement;\n    const option = this.options.find(\n      (option) => option.expression === select.value\n    );\n    option && this.sort.sortBy(option.criteria);\n  }\n\n  private buildOption({expression, criteria, label}: SortDropdownOption) {\n    return (\n      <option value={expression} selected={this.sort.isSortedBy(criteria)}>\n        {this.bindings.i18n.t(label)}\n      </option>\n    );\n  }\n\n  private renderSort() {\n    if (!this.options.length) {\n      return;\n    }\n\n    return (\n      <Fragment>\n        <h1\n          part=\"section-title section-sort-title\"\n          class=\"text-2xl font-bold truncate mb-3\"\n        >\n          {this.bindings.i18n.t('sort')}\n        </h1>\n        <div part=\"select-wrapper\" class=\"relative\">\n          <select\n            class=\"btn-outline-neutral w-full cursor-pointer text-lg font-bold grow appearance-none rounded-lg px-6 py-5\"\n            part=\"select\"\n            aria-label={this.bindings.i18n.t('sort-by')}\n            onChange={(option) => this.select(option)}\n          >\n            {this.options.map((option) => this.buildOption(option))}\n          </select>\n          <div\n            part=\"select-icon-wrapper\"\n            class=\"absolute pointer-events-none top-0 bottom-0 right-0 flex justify-center items-center pr-6\"\n          >\n            <atomic-icon\n              part=\"select-icon\"\n              icon={SortIcon}\n              class=\"w-6 h-6\"\n            ></atomic-icon>\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n\n  private renderFilters() {\n    const hasFacetElements = this.bindings.store.getFacetElements().length > 0;\n    const hasAutomaticFacets =\n      this.bindings.engine.state.automaticFacetSet?.set !== undefined;\n\n    if (!hasFacetElements && !hasAutomaticFacets) {\n      return;\n    }\n\n    return (\n      <Fragment>\n        <div\n          part=\"filter-section\"\n          class=\"w-full flex justify-between mt-8 mb-3\"\n        >\n          <h1\n            part=\"section-title section-filters-title\"\n            class=\"text-2xl font-bold truncate\"\n          >\n            {this.bindings.i18n.t('filters')}\n          </h1>\n          {this.breadcrumbManagerState.hasBreadcrumbs && (\n            <Button\n              onClick={() => this.breadcrumbManager.deselectAll()}\n              style=\"text-primary\"\n              text={this.bindings.i18n.t('clear')}\n              class=\"px-2 py-1\"\n              part=\"filter-clear-all\"\n            ></Button>\n          )}\n        </div>\n        <slot name=\"facets\"></slot>\n        <slot name=\"automatic-facets\"></slot>\n      </Fragment>\n    );\n  }\n\n  private renderBody() {\n    return (\n      <aside\n        part=\"content\"\n        slot=\"body\"\n        class=\"flex flex-col w-full adjust-for-scroll-bar\"\n      >\n        {this.renderSort()}\n        {this.renderFilters()}\n      </aside>\n    );\n  }\n\n  public render() {\n    return (\n      <RefineModalCommon\n        bindings={this.bindings}\n        host={this.host}\n        isOpen={this.isOpen}\n        onClose={() => (this.isOpen = false)}\n        title={this.bindings.i18n.t('sort-and-filter')}\n        querySummaryState={this.querySummaryState}\n        openButton={this.openButton}\n      >\n        {this.renderBody()}\n      </RefineModalCommon>\n    );\n  }\n\n  public componentDidLoad() {\n    this.host.style.display = '';\n  }\n}\n"],"mappings":"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"}