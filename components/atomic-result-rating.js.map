{"file":"atomic-result-rating.js","mappings":";;;;;;;;AAAA,MAAM,qBAAqB,GAAG,4tuCAA4tuC,CAAC;AAC3vuC,iCAAe,qBAAqB;;;;;;;;;;;;MCoBvBA,oBAAkB;;;;;;;;QAaC,oBAAe,GAAG,CAAC,CAAC;;;;;;;;;;;;;;QAepB,SAAI,GAAG,IAAI,CAAC;QAIjC,kBAAa,GAAkB,IAAI,CAAC;;+BAnBG,CAAC;oBAeZ,IAAI;;6BAID,IAAI;;IAEpC,mBAAmB;QACzB,MAAM,KAAK,GAAGC,EAAsB,CAAC,iBAAiB,CACpD,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,KAAK,CACX,CAAC;QACF,IAAI;YACF,IAAI,CAAC,aAAa,GAAG,oBAAoB,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;SAC9D;QAAC,OAAO,KAAK,EAAE;YACd,IAAI,CAAC,KAAK,GAAG,KAAK,YAAY,KAAK,GAAG,KAAK,GAAG,IAAI,KAAK,CAAC,GAAG,KAAK,EAAE,CAAC,CAAC;YACpE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;SAC3B;KACF;IAED,mBAAmB;QACjB,IAAI,CAAC,mBAAmB,EAAE,CAAC;KAC5B;IAED,MAAM;QACJ,IAAI,IAAI,CAAC,aAAa,KAAK,IAAI,EAAE;YAC/B,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;YACnB,OAAO;SACR;QACD,QACE,EAAC,MAAM,IACL,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,EACxB,IAAI,EAAE,IAAI,CAAC,IAAI,EACf,kBAAkB,EAAE,IAAI,CAAC,eAAe,EACxC,mBAAmB,EAAE,IAAI,CAAC,aAAa,EACvC,QAAQ,EAAE,KAAK,GACP,EACV;KACH;;;;;;;;;;AAhE4B;IAA5B,kBAAkB,EAAE;sDAA4B;AACxB;IAAxB,aAAa,EAAE;oDAAyB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":["AtomicResultRating","ResultTemplatesHelpers"],"sources":["src/components/search/result-template-components/atomic-result-rating/atomic-result-rating.pcss?tag=atomic-result-rating&encapsulation=shadow","src/components/search/result-template-components/atomic-result-rating/atomic-result-rating.tsx"],"sourcesContent":["@import '../../../../global/global.pcss';\r\n@import '../../../common/atomic-rating/atomic-rating.pcss';\r\n","import {Result, ResultTemplatesHelpers} from '@coveo/headless';\r\nimport {Component, Element, Prop, h, State} from '@stencil/core';\r\nimport Star from '../../../../images/star.svg';\r\nimport {InitializeBindings} from '../../../../utils/initialization-utils';\r\nimport {\r\n  Rating,\r\n  computeNumberOfStars,\r\n} from '../../../common/atomic-rating/atomic-rating';\r\nimport {Bindings} from '../../atomic-search-interface/atomic-search-interface';\r\nimport {ResultContext} from '../result-template-decorators';\r\n\r\n/**\r\n * The `atomic-result-rating` element renders a star rating.\r\n *\r\n *  @part value-rating - The wrapper that contains the row of inactive stars and the row of active stars.\r\n */\r\n@Component({\r\n  tag: 'atomic-result-rating',\r\n  styleUrl: 'atomic-result-rating.pcss',\r\n  shadow: true,\r\n})\r\nexport class AtomicResultRating {\r\n  @InitializeBindings() public bindings!: Bindings;\r\n  @ResultContext() private result!: Result;\r\n  @Element() host!: HTMLElement;\r\n\r\n  /**\r\n   * The field whose values you want to display as a rating.\r\n   */\r\n  @Prop({reflect: true}) public field!: string;\r\n\r\n  /**\r\n   * The maximum value of the field. This value is also used as the number of icons to be displayed.\r\n   */\r\n  @Prop({reflect: true}) public maxValueInIndex = 5;\r\n\r\n  /**\r\n   * The SVG icon to use to display the rating.\r\n   *\r\n   * - Use a value that starts with `http://`, `https://`, `./`, or `../`, to fetch and display an icon from a given location.\r\n   * - Use a value that starts with `assets://`, to display an icon from the Atomic package.\r\n   * - Use a stringified SVG to display it directly.\r\n   *\r\n   * When using a custom icon, at least part of your icon should have the color set to `fill=\"currentColor\"`.\r\n   * This part of the SVG will take on the colors set in the following [variables](https://developer.mozilla.org/en-US/docs/Web/CSS/Using_CSS_custom_properties):\r\n   *\r\n   * - `--atomic-rating-icon-active-color`\r\n   * - `--atomic-rating-icon-inactive-color`\r\n   */\r\n  @Prop({reflect: true}) public icon = Star;\r\n\r\n  @State() public error!: Error;\r\n\r\n  @State() numberOfStars: number | null = null;\r\n\r\n  private updateNumberOfStars() {\r\n    const value = ResultTemplatesHelpers.getResultProperty(\r\n      this.result,\r\n      this.field\r\n    );\r\n    try {\r\n      this.numberOfStars = computeNumberOfStars(value, this.field);\r\n    } catch (error) {\r\n      this.error = error instanceof Error ? error : new Error(`${error}`);\r\n      this.numberOfStars = null;\r\n    }\r\n  }\r\n\r\n  componentWillRender() {\r\n    this.updateNumberOfStars();\r\n  }\r\n\r\n  render() {\r\n    if (this.numberOfStars === null) {\r\n      this.host.remove();\r\n      return;\r\n    }\r\n    return (\r\n      <Rating\r\n        i18n={this.bindings.i18n}\r\n        icon={this.icon}\r\n        numberOfTotalIcons={this.maxValueInIndex}\r\n        numberOfActiveIcons={this.numberOfStars}\r\n        iconSize={0.875}\r\n      ></Rating>\r\n    );\r\n  }\r\n}\r\n"],"version":3}