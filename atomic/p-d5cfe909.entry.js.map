{"version":3,"names":["atomicSmartSnippetFeedbackModalCss","AtomicSmartSnippetFeedbackModalStyle0","AtomicSmartSnippetFeedbackModal","this","isOpen","formId","randomID","watchToggleOpen","smartSnippet","openFeedbackModal","currentAnswer","undefined","initialize","buildSmartSnippet","bindings","engine","smartSnippetFeedbackModalCommon","SmartSnippetFeedbackModalCommon","getHost","host","getBindings","getCurrentAnswer","getSmartSnippet","getDetailsInputRef","detailsInputRef","getFeedbackSent","feedbackSent","getSource","source","getIsOpen","setIsOpen","bind","setCurrentAnswer","setDetailsInputRef","answer","ref","render","__decorate","InitializeBindings"],"sources":["src/components/search/smart-snippets/atomic-smart-snippet-feedback-modal/atomic-smart-snippet-feedback-modal.pcss?tag=atomic-smart-snippet-feedback-modal&encapsulation=shadow","src/components/search/smart-snippets/atomic-smart-snippet-feedback-modal/atomic-smart-snippet-feedback-modal.tsx"],"sourcesContent":["@import '../../../common/smart-snippets/atomic-smart-snippet-feedback-modal/atomic-smart-snippet-feedback-modal.pcss';\n","import {\n  buildSmartSnippet,\n  SmartSnippet,\n  SmartSnippetFeedback,\n} from '@coveo/headless';\nimport {\n  Component,\n  State,\n  Prop,\n  Watch,\n  Element,\n  Event,\n  EventEmitter,\n} from '@stencil/core';\nimport {\n  InitializableComponent,\n  InitializeBindings,\n} from '../../../../utils/initialization-utils';\nimport {randomID} from '../../../../utils/utils';\nimport {SmartSnippetFeedbackModalCommon} from '../../../common/smart-snippets/atomic-smart-snippet-feedback-modal/smart-snippet-feedback-modal-common';\nimport {Bindings} from '../../atomic-search-interface/atomic-search-interface';\n\n/**\n * The `atomic-smart-snippet-feedback-modal` is automatically created as a child of the `atomic-search-interface` when the `atomic-smart-snippet` is initialized.\n *\n * When the modal is opened, the class `atomic-modal-opened` is added to the body, allowing further customization.\n *\n * @part backdrop - The transparent backdrop hiding the content behind the modal.\n * @part container - The modal's outermost container with the outline and background.\n * @part header-wrapper - The wrapper around the header.\n * @part header - The header of the modal, containing the title.\n * @part header-ruler - The horizontal ruler underneath the header.\n * @part body-wrapper - The wrapper around the body.\n * @part body - The body of the modal, between the header and the footer.\n * @part form - The wrapper around the reason and details.\n * @part reason-title - The title above the reason radio buttons.\n * @part reason - A wrapper around the radio button and the label of a reason.\n * @part reason-radio - A radio button representing a reason.\n * @part reason-label - A label linked to a radio button representing a reason.\n * @part details-title - The title above the details input.\n * @part details-input - The input to specify additional details.\n * @part footer-wrapper - The wrapper with a shadow around the footer.\n * @part footer - The footer at the bottom of the modal.\n * @part buttons - The wrapper around the cancel and submit buttons.\n * @part cancel-button - The cancel button.\n * @part submit-button - The submit button.\n */\n@Component({\n  tag: 'atomic-smart-snippet-feedback-modal',\n  styleUrl: 'atomic-smart-snippet-feedback-modal.pcss',\n  shadow: true,\n})\nexport class AtomicSmartSnippetFeedbackModal implements InitializableComponent {\n  @InitializeBindings() public bindings!: Bindings;\n  @Element() public host!: HTMLElement;\n  public smartSnippet!: SmartSnippet;\n\n  @State() public error!: Error;\n\n  private smartSnippetFeedbackModalCommon!: SmartSnippetFeedbackModalCommon;\n\n  @Prop({mutable: true}) source?: HTMLElement;\n  @Prop({reflect: true, mutable: true}) isOpen = false;\n\n  @State() currentAnswer?: SmartSnippetFeedback | 'other' | undefined;\n  private detailsInputRef?: HTMLTextAreaElement;\n  private readonly formId = randomID(\n    'atomic-smart-snippet-feedback-modal-form-'\n  );\n\n  @Event() feedbackSent!: EventEmitter;\n\n  @Watch('isOpen')\n  watchToggleOpen(isOpen: boolean) {\n    if (isOpen) {\n      this.smartSnippet.openFeedbackModal();\n      this.currentAnswer = undefined;\n    }\n  }\n\n  initialize() {\n    this.smartSnippet = buildSmartSnippet(this.bindings.engine);\n    this.smartSnippetFeedbackModalCommon = new SmartSnippetFeedbackModalCommon({\n      formId: this.formId,\n      getHost: () => this.host,\n      getBindings: () => this.bindings,\n      getCurrentAnswer: () => this.currentAnswer,\n      getSmartSnippet: () => this.smartSnippet,\n      getDetailsInputRef: () => this.detailsInputRef,\n      getFeedbackSent: () => this.feedbackSent,\n      getSource: () => this.source,\n      getIsOpen: () => this.isOpen,\n      setIsOpen: this.setIsOpen.bind(this),\n      setCurrentAnswer: this.setCurrentAnswer.bind(this),\n      setDetailsInputRef: this.setDetailsInputRef.bind(this),\n    });\n  }\n\n  private setIsOpen(isOpen: boolean) {\n    this.isOpen = isOpen;\n  }\n\n  private setCurrentAnswer(answer: SmartSnippetFeedback | 'other') {\n    this.currentAnswer = answer;\n  }\n\n  private setDetailsInputRef(ref?: HTMLTextAreaElement) {\n    this.detailsInputRef = ref;\n  }\n\n  public render() {\n    return this.smartSnippetFeedbackModalCommon.render();\n  }\n}\n"],"mappings":"6UAAA,MAAMA,EAAqC,o2uCAC3C,MAAAC,EAAeD,E,iXCmDFE,EAA+B,M,oEAUJC,KAAAC,OAAS,MAI9BD,KAAAE,OAASC,EACxB,6C,uDAL6C,M,6BAW/C,eAAAC,CAAgBH,GACd,GAAIA,EAAQ,CACVD,KAAKK,aAAaC,oBAClBN,KAAKO,cAAgBC,S,EAIzB,UAAAC,GACET,KAAKK,aAAeK,EAAkBV,KAAKW,SAASC,QACpDZ,KAAKa,gCAAkC,IAAIC,EAAgC,CACzEZ,OAAQF,KAAKE,OACba,QAAS,IAAMf,KAAKgB,KACpBC,YAAa,IAAMjB,KAAKW,SACxBO,iBAAkB,IAAMlB,KAAKO,cAC7BY,gBAAiB,IAAMnB,KAAKK,aAC5Be,mBAAoB,IAAMpB,KAAKqB,gBAC/BC,gBAAiB,IAAMtB,KAAKuB,aAC5BC,UAAW,IAAMxB,KAAKyB,OACtBC,UAAW,IAAM1B,KAAKC,OACtB0B,UAAW3B,KAAK2B,UAAUC,KAAK5B,MAC/B6B,iBAAkB7B,KAAK6B,iBAAiBD,KAAK5B,MAC7C8B,mBAAoB9B,KAAK8B,mBAAmBF,KAAK5B,O,CAI7C,SAAA2B,CAAU1B,GAChBD,KAAKC,OAASA,C,CAGR,gBAAA4B,CAAiBE,GACvB/B,KAAKO,cAAgBwB,C,CAGf,kBAAAD,CAAmBE,GACzBhC,KAAKqB,gBAAkBW,C,CAGlB,MAAAC,GACL,OAAOjC,KAAKa,gCAAgCoB,Q,sFA1DjBC,EAAA,CAA5BC,K"}