{"version":3,"names":["AtomicSearchBoxInstantResults","this","results","display","templateHasError","maxResultsPerQuery","density","imageSize","setRenderFunction","resultRenderingFunction","itemRenderingFunction","componentWillLoad","dispatchSearchBoxSuggestionsEvent","bindings","initialize","host","error","getLink","el","atomicResult","tagName","querySelector","_a","shadowRoot","handleLinkClick","hasModifier","setTarget","value","setAttribute","initialTarget","getAttribute","click","renderItems","suggestedQuery","store","isMobile","instantResults","state","length","elements","map","result","partialItem","getPartialInstantItemElement","i18n","ariaLabelGenerator","call","title","uniqueId","content","h","key","encodeForDomAttribute","part","interactiveResult","buildInteractiveInstantResult","engine","options","itemTemplateProvider","getTemplateContent","stopPropagation","renderingFunction","onSelect","e","link","target","ctrlKey","metaKey","getPartialInstantItemShowAllElement","push","InstantItemShowAllButton","clearSuggestions","searchBoxController","updateText","q","submit","buildInstantResults","ItemTemplateProvider","includeDefaultTemplate","templateElements","Array","from","querySelectorAll","getResultTemplateRegistered","setResultTemplateRegistered","getTemplateHasError","setTemplateHasError","position","parentNode","children","indexOf","panel","onSuggestedQueryChange","updateQuery","getSuggestionElements","console","warn","Promise","resolve","unsubscribe","subscribe","isLoading","render","element"],"sources":["src/components/search/search-box-suggestions/atomic-search-box-instant-results/atomic-search-box-instant-results.tsx"],"sourcesContent":["import {\n  buildInstantResults,\n  buildInteractiveInstantResult,\n  InstantResults,\n  Result,\n  SearchBox,\n} from '@coveo/headless';\nimport {Component, Element, State, h, Prop, Method} from '@stencil/core';\nimport {InitializableComponent} from '../../../../utils/initialization-utils';\nimport {encodeForDomAttribute} from '../../../../utils/string-utils';\nimport {ItemRenderingFunction} from '../../../common/item-list/item-list-common';\nimport {ItemTemplateProvider} from '../../../common/item-list/item-template-provider';\nimport {\n  ItemDisplayDensity,\n  ItemDisplayImageSize,\n  ItemDisplayLayout,\n} from '../../../common/layout/display-options';\nimport {\n  getPartialInstantItemElement,\n  getPartialInstantItemShowAllElement,\n  InstantItemShowAllButton,\n} from '../../../common/suggestions/instant-item';\nimport {\n  dispatchSearchBoxSuggestionsEvent,\n  SearchBoxSuggestionElement,\n  SearchBoxSuggestions,\n  SearchBoxSuggestionsBindings,\n} from '../../../common/suggestions/suggestions-common';\nimport {Bindings} from '../../atomic-search-interface/atomic-search-interface';\n\nexport type AriaLabelGenerator = (\n  bindings: Bindings,\n  result: Result\n) => string | undefined;\n\n/**\n * The `atomic-search-box-instant-results` component can be added as a child of an `atomic-search-box` component, allowing for the configuration of instant results behavior.\n *\n * This component does not support accessibility out-of-the-box. To do so, see [Instant Results Accessibility](https://docs.coveo.com/en/atomic/latest/usage/accessibility/#instant-results-accessibility).\n *\n * This component is not supported on mobile.\n */\n@Component({\n  tag: 'atomic-search-box-instant-results',\n  shadow: true,\n})\nexport class AtomicSearchBoxInstantResults implements InitializableComponent {\n  public bindings!: SearchBoxSuggestionsBindings<SearchBox, Bindings>;\n  private itemRenderingFunction: ItemRenderingFunction;\n  private results: Result[] = [];\n  private itemTemplateProvider!: ItemTemplateProvider;\n  private instantResults!: InstantResults;\n  private display: ItemDisplayLayout = 'list';\n\n  @Element() public host!: HTMLElement;\n\n  @State() public error!: Error;\n  @State() private templateHasError = false;\n\n  /**\n   * Sets a rendering function to bypass the standard HTML template mechanism for rendering results.\n   * You can use this function while working with web frameworks that don't use plain HTML syntax, e.g., React, Angular or Vue.\n   *\n   * Do not use this method if you integrate Atomic in a plain HTML deployment.\n   *\n   * @param resultRenderingFunction\n   */\n  @Method() public async setRenderFunction(\n    resultRenderingFunction: ItemRenderingFunction\n  ) {\n    this.itemRenderingFunction = resultRenderingFunction;\n  }\n  /**\n   * The maximum number of results to show.\n   */\n  @Prop({reflect: true}) public maxResultsPerQuery = 4;\n  /**\n   * The spacing of various elements in the result list, including the gap between results, the gap between parts of a result, and the font sizes of different parts in a result.\n   */\n  @Prop({reflect: true}) public density: ItemDisplayDensity = 'normal';\n  /**\n   * The expected size of the image displayed in the results.\n   */\n  @Prop({reflect: true}) public imageSize: ItemDisplayImageSize = 'icon';\n  /**\n   * The callback to generate an [`aria-label`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label) for a given result so that accessibility tools can fully describe what's visually rendered by a result.\n   *\n   * By default, or if an empty string is returned, `result.title` is used.\n   */\n  @Prop() public ariaLabelGenerator?: AriaLabelGenerator;\n\n  public componentWillLoad() {\n    try {\n      dispatchSearchBoxSuggestionsEvent<SearchBox, Bindings>((bindings) => {\n        this.bindings = bindings;\n        return this.initialize();\n      }, this.host);\n    } catch (error) {\n      this.error = error as Error;\n    }\n  }\n\n  private getLink(el: HTMLElement): HTMLElement | null {\n    const atomicResult =\n      el.tagName === 'ATOMIC-RESULT' ? el : el?.querySelector('atomic-result');\n\n    return (\n      atomicResult?.shadowRoot?.querySelector('atomic-result-link a') || null\n    );\n  }\n\n  private handleLinkClick(el: HTMLElement, hasModifier: boolean) {\n    const setTarget = (value: string) => el.setAttribute('target', value);\n    const initialTarget = el.getAttribute('target');\n\n    hasModifier && setTarget('_blank');\n    el.click();\n    hasModifier && setTarget(initialTarget || '');\n\n    return true;\n  }\n\n  private renderItems(): SearchBoxSuggestionElement[] {\n    if (!this.bindings.suggestedQuery() || this.bindings.store.isMobile()) {\n      return [];\n    }\n    const results = this.instantResults.state.results.length\n      ? this.instantResults.state.results\n      : this.results;\n\n    const elements: SearchBoxSuggestionElement[] = results.map(\n      (result: Result) => {\n        const partialItem = getPartialInstantItemElement(\n          this.bindings.i18n,\n          this.ariaLabelGenerator?.(this.bindings, result) || result.title,\n          result.uniqueId\n        );\n        return {\n          ...partialItem,\n          content: (\n            <atomic-result\n              key={`instant-result-${encodeForDomAttribute(result.uniqueId)}`}\n              part=\"outline\"\n              result={result}\n              interactiveResult={buildInteractiveInstantResult(\n                this.bindings.engine,\n                {\n                  options: {result},\n                }\n              )}\n              display={this.display}\n              density={this.density}\n              imageSize={this.imageSize}\n              content={this.itemTemplateProvider.getTemplateContent(result)}\n              stopPropagation={false}\n              renderingFunction={this.itemRenderingFunction}\n            ></atomic-result>\n          ),\n          onSelect: (e: MouseEvent) => {\n            const link = this.getLink(e.target as HTMLElement);\n\n            if (!link) {\n              return;\n            }\n            this.handleLinkClick(link, e.ctrlKey || e.metaKey);\n          },\n        };\n      }\n    );\n    if (elements.length) {\n      const partialItem = getPartialInstantItemShowAllElement(\n        this.bindings.i18n\n      );\n      elements.push({\n        ...partialItem,\n        content: <InstantItemShowAllButton i18n={this.bindings.i18n} />,\n        onSelect: () => {\n          this.bindings.clearSuggestions();\n          this.bindings.searchBoxController.updateText(\n            this.instantResults.state.q\n          );\n          this.bindings.searchBoxController.submit();\n        },\n      });\n    }\n    return elements;\n  }\n\n  public initialize(): SearchBoxSuggestions {\n    this.instantResults = buildInstantResults(this.bindings.engine, {\n      options: {\n        maxResultsPerQuery: this.maxResultsPerQuery,\n      },\n    });\n\n    this.itemTemplateProvider = new ItemTemplateProvider({\n      includeDefaultTemplate: true,\n      templateElements: Array.from(\n        this.host.querySelectorAll('atomic-result-template')\n      ),\n      getResultTemplateRegistered: () => true,\n      setResultTemplateRegistered: () => {},\n      getTemplateHasError: () => this.templateHasError,\n      setTemplateHasError: (value: boolean) => {\n        this.templateHasError = value;\n      },\n      bindings: this.bindings,\n    });\n\n    return {\n      position: Array.from(this.host.parentNode!.children).indexOf(this.host),\n      panel: 'right',\n      onSuggestedQueryChange: (q) => {\n        this.instantResults.updateQuery(q);\n        return this.onSuggestedQueryChange();\n      },\n      renderItems: () => this.renderItems(),\n    };\n  }\n\n  private onSuggestedQueryChange() {\n    if (\n      !this.bindings.getSuggestionElements().length &&\n      !this.bindings.searchBoxController.state.value\n    ) {\n      console.warn(\n        \"There doesn't seem to be any query suggestions configured. Make sure to include either an atomic-search-box-query-suggestions or atomic-search-box-recent-queries in your search box in order to see some instant results.\"\n      );\n    }\n\n    return new Promise<void>((resolve) => {\n      const unsubscribe = this.instantResults.subscribe(() => {\n        const state = this.instantResults.state;\n        if (!state.isLoading) {\n          if (state.results.length) {\n            this.results = state.results;\n          }\n          unsubscribe();\n          resolve();\n        }\n      });\n    });\n  }\n\n  public render() {\n    if (this.error) {\n      return (\n        <atomic-component-error\n          element={this.host}\n          error={this.error}\n        ></atomic-component-error>\n      );\n    }\n  }\n}\n"],"mappings":"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"}