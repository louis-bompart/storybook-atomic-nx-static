{"version":3,"names":["atomicSortDropdownCss","AtomicSortDropdownStyle0","AtomicSortDropdown","this","id","randomID","initialize","buildOptions","searchStatus","buildSearchStatus","bindings","engine","sort","buildSort","initialState","criterion","_a","store","state","sortOptions","criteria","sortExpressionElements","Array","from","host","querySelectorAll","length","error","Error","set","map","expression","label","Schema","StringValue","emptyAllowed","required","validate","parseCriterionExpression","options","select","e","composedPath","option","find","value","sortBy","render","hasError","hasResults","firstSearchExecuted","searchStatusState","i18n","h","SortGuard","key","SortContainer","SortLabel","SortSelect","onSelect","evt","SortOption","selected","isSortedBy","__decorate","InitializeBindings","BindStateToController"],"sources":["src/components/search/atomic-sort-dropdown/atomic-sort-dropdown.pcss?tag=atomic-sort-dropdown&encapsulation=shadow","src/components/search/atomic-sort-dropdown/atomic-sort-dropdown.tsx"],"sourcesContent":["@import '../../../global/global.pcss';\r\n\r\nselect:hover + div,\r\nselect:focus-visible + div {\r\n  @apply border-primary-light text-primary-light;\r\n}\r\n","import {Schema, StringValue} from '@coveo/bueno';\r\nimport {\r\n  Sort,\r\n  buildSort,\r\n  SortState,\r\n  parseCriterionExpression,\r\n  buildSearchStatus,\r\n  SearchStatus,\r\n  SearchStatusState,\r\n} from '@coveo/headless';\r\nimport {Component, h, State, Element} from '@stencil/core';\r\nimport {\r\n  BindStateToController,\r\n  InitializableComponent,\r\n  InitializeBindings,\r\n} from '../../../utils/initialization-utils';\r\nimport {randomID} from '../../../utils/utils';\r\nimport {SortContainer} from '../../common/sort/container';\r\nimport {SortGuard} from '../../common/sort/guard';\r\nimport {SortLabel} from '../../common/sort/label';\r\nimport {SortOption} from '../../common/sort/option';\r\nimport {SortSelect} from '../../common/sort/select';\r\nimport {Bindings} from '../atomic-search-interface/atomic-search-interface';\r\n\r\n/**\r\n * The `atomic-sort-dropdown` component renders a dropdown that the end user can interact with to select the criteria to use when sorting query results.\r\n *\r\n * @part label - The \"Sort by\" label of the `<select>` element.\r\n * @part select-parent - The `<select>` element parent.\r\n * @part select - The `<select>` element of the dropdown list.\r\n * @part select-separator - The element separating the select from the icon.\r\n * @part placeholder - The dropdown placeholder for while the search interface is initializing.\r\n */\r\n@Component({\r\n  tag: 'atomic-sort-dropdown',\r\n  styleUrl: 'atomic-sort-dropdown.pcss',\r\n  shadow: true,\r\n})\r\nexport class AtomicSortDropdown implements InitializableComponent {\r\n  @InitializeBindings() public bindings!: Bindings;\r\n  private sort!: Sort;\r\n  public searchStatus!: SearchStatus;\r\n  private id = randomID('atomic-sort-dropdown-');\r\n\r\n  @Element() host!: HTMLElement;\r\n\r\n  @State() @BindStateToController('sort') public sortState!: SortState;\r\n  @BindStateToController('searchStatus')\r\n  @State()\r\n  private searchStatusState!: SearchStatusState;\r\n  @State() public error!: Error;\r\n\r\n  public initialize() {\r\n    this.buildOptions();\r\n    this.searchStatus = buildSearchStatus(this.bindings.engine);\r\n    this.sort = buildSort(this.bindings.engine, {\r\n      initialState: {\r\n        criterion: this.bindings.store.state.sortOptions[0]?.criteria,\r\n      },\r\n    });\r\n  }\r\n\r\n  private buildOptions() {\r\n    const sortExpressionElements = Array.from(\r\n      this.host.querySelectorAll('atomic-sort-expression')\r\n    );\r\n\r\n    if (!sortExpressionElements.length) {\r\n      this.error = new Error(\r\n        'The \"atomic-sort-dropdown\" element requires at least one \"atomic-sort-expression\" child.'\r\n      );\r\n      return;\r\n    }\r\n\r\n    this.bindings.store.set(\r\n      'sortOptions',\r\n      sortExpressionElements.map(({expression, label}) => {\r\n        new Schema({\r\n          label: new StringValue({emptyAllowed: false, required: true}),\r\n        }).validate({label});\r\n\r\n        return {\r\n          criteria: parseCriterionExpression(expression),\r\n          expression,\r\n          label,\r\n        };\r\n      })\r\n    );\r\n  }\r\n\r\n  private get options() {\r\n    return this.bindings.store.state.sortOptions;\r\n  }\r\n\r\n  private select(e: Event) {\r\n    const select = e.composedPath()[0] as HTMLSelectElement;\r\n    const option = this.options.find(\r\n      (option) => option.expression === select.value\r\n    );\r\n    option && this.sort.sortBy(option.criteria);\r\n  }\r\n\r\n  public render() {\r\n    const {hasError, hasResults, firstSearchExecuted} = this.searchStatusState;\r\n    const {\r\n      bindings: {i18n},\r\n      id,\r\n    } = this;\r\n\r\n    return [\r\n      <SortGuard\r\n        firstSearchExecuted={firstSearchExecuted}\r\n        hasError={hasError}\r\n        hasResults={hasResults}\r\n      >\r\n        <SortContainer>\r\n          <SortLabel i18n={i18n} id={id} />\r\n          <SortSelect i18n={i18n} id={id} onSelect={(evt) => this.select(evt)}>\r\n            {this.options.map(({label, criteria, expression}) => (\r\n              <SortOption\r\n                i18n={i18n}\r\n                label={label}\r\n                selected={this.sort.isSortedBy(criteria)}\r\n                value={expression}\r\n              />\r\n            ))}\r\n          </SortSelect>\r\n        </SortContainer>\r\n      </SortGuard>,\r\n      <slot></slot>,\r\n    ];\r\n  }\r\n}\r\n"],"mappings":"iWAAA,MAAMA,EAAwB,8wuCAC9B,MAAAC,EAAeD,E,iXCqCFE,EAAkB,M,yBAIrBC,KAAAC,GAAKC,EAAS,yB,+EAUf,UAAAC,G,MACLH,KAAKI,eACLJ,KAAKK,aAAeC,EAAkBN,KAAKO,SAASC,QACpDR,KAAKS,KAAOC,EAAUV,KAAKO,SAASC,OAAQ,CAC1CG,aAAc,CACZC,WAAWC,EAAAb,KAAKO,SAASO,MAAMC,MAAMC,YAAY,MAAE,MAAAH,SAAA,SAAAA,EAAEI,W,CAKnD,YAAAb,GACN,MAAMc,EAAyBC,MAAMC,KACnCpB,KAAKqB,KAAKC,iBAAiB,2BAG7B,IAAKJ,EAAuBK,OAAQ,CAClCvB,KAAKwB,MAAQ,IAAIC,MACf,4FAEF,M,CAGFzB,KAAKO,SAASO,MAAMY,IAClB,cACAR,EAAuBS,KAAI,EAAEC,aAAYC,YACvC,IAAIC,EAAO,CACTD,MAAO,IAAIE,EAAY,CAACC,aAAc,MAAOC,SAAU,SACtDC,SAAS,CAACL,UAEb,MAAO,CACLZ,SAAUkB,EAAyBP,GACnCA,aACAC,QACD,I,CAKP,WAAYO,GACV,OAAOpC,KAAKO,SAASO,MAAMC,MAAMC,W,CAG3B,MAAAqB,CAAOC,GACb,MAAMD,EAASC,EAAEC,eAAe,GAChC,MAAMC,EAASxC,KAAKoC,QAAQK,MACzBD,GAAWA,EAAOZ,aAAeS,EAAOK,QAE3CF,GAAUxC,KAAKS,KAAKkC,OAAOH,EAAOvB,S,CAG7B,MAAA2B,GACL,MAAMC,SAACA,EAAQC,WAAEA,EAAUC,oBAAEA,GAAuB/C,KAAKgD,kBACzD,MACEzC,UAAU0C,KAACA,GAAKhD,GAChBA,GACED,KAEJ,MAAO,CACLkD,EAACC,EAAS,CAAAC,IAAA,2CACRL,oBAAqBA,EACrBF,SAAUA,EACVC,WAAYA,GAEZI,EAACG,EAAa,CAAAD,IAAA,4CACZF,EAACI,EAAS,CAAAF,IAAA,2CAACH,KAAMA,EAAMhD,GAAIA,IAC3BiD,EAACK,EAAU,CAAAH,IAAA,2CAACH,KAAMA,EAAMhD,GAAIA,EAAIuD,SAAWC,GAAQzD,KAAKqC,OAAOoB,IAC5DzD,KAAKoC,QAAQT,KAAI,EAAEE,QAAOZ,WAAUW,gBACnCsB,EAACQ,EAAU,CACTT,KAAMA,EACNpB,MAAOA,EACP8B,SAAU3D,KAAKS,KAAKmD,WAAW3C,GAC/ByB,MAAOd,SAMjBsB,EAAA,QAAAE,IAAA,6C,6BA1FyBS,EAAA,CAA5BC,K,+BAO8CD,EAAA,CAArCE,EAAsB,S,gCAGxBF,EAAA,CAFPE,EAAsB,iB"}