{"file":"atomic-breadbox.js","mappings":"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","names":["AtomicBreadbox","buildBreadcrumbManager","buildFacetManager"],"sources":["src/components/search/atomic-breadbox/atomic-breadbox.pcss?tag=atomic-breadbox&encapsulation=shadow","src/components/search/atomic-breadbox/atomic-breadbox.tsx"],"sourcesContent":["@import '../../../global/global.pcss';\n@import '../../common/atomic-rating/atomic-rating.pcss';\n\n.max-w-snippet {\n  max-width: 30ch;\n}\n\n[part='breadcrumb-label'].excluded,\n[part='breadcrumb-value'].excluded {\n  text-decoration: line-through;\n  color: var(--atomic-error);\n}\n\n/* When excluded, strikethrough line must be continuous, so we must prepend empty character instead of margin */\n[part='breadcrumb-value']::before {\n  content: '\\00a0';\n}\n","import {NumberValue, Schema} from '@coveo/bueno';\nimport {\n  BreadcrumbManagerState,\n  BreadcrumbManager,\n  buildBreadcrumbManager,\n  FacetManager,\n  FacetManagerState,\n  buildFacetManager,\n  FacetValueState,\n} from '@coveo/headless';\nimport {Component, h, State, Element, VNode, Prop} from '@stencil/core';\nimport CloseIcon from '../../../images/close.svg';\nimport {FocusTargetController} from '../../../utils/accessibility-utils';\nimport {getFieldValueCaption} from '../../../utils/field-utils';\nimport {\n  InitializableComponent,\n  BindStateToController,\n  InitializeBindings,\n} from '../../../utils/initialization-utils';\nimport {Button} from '../../common/button';\nimport {Hidden} from '../../common/hidden';\nimport {Bindings} from '../atomic-search-interface/atomic-search-interface';\n\ninterface Breadcrumb {\n  facetId: string;\n  label: string;\n  formattedValue: string[];\n  state?: FacetValueState;\n  content?: VNode;\n  deselect: () => void;\n}\n\nconst SEPARATOR = ' / ';\nconst ELLIPSIS = '...';\n\n/**\n * The `atomic-breadbox` component creates breadcrumbs that display a summary of the currently active facet values.\n *\n * @part container - The container of the whole component, list & label.\n * @part breadcrumb-list-container - The container of the list of breadcrumb buttons.\n * @part breadcrumb-list - The list of breadcrumb buttons.\n * @part breadcrumb-button - A single breadcrumb button.\n * @part breadcrumb-label - The breadcrumb label, associated with the facet.\n * @part breadcrumb-value - The breadcrumb formatted value.\n * @part breadcrumb-clear - The button to clear individual filters.\n * @part show-more - The button to display all breadcrumbs.\n * @part show-less - The button to display less breadcrumbs.\n * @part label - The \"Filters\" label.\n * @part clear - The button to clear all filters.\n */\n@Component({\n  tag: 'atomic-breadbox',\n  styleUrl: 'atomic-breadbox.pcss',\n  shadow: true,\n})\nexport class AtomicBreadbox implements InitializableComponent {\n  @InitializeBindings() public bindings!: Bindings;\n  private breadcrumbManager!: BreadcrumbManager;\n  private resizeObserver?: ResizeObserver;\n  private showMore!: HTMLButtonElement;\n  private showLess!: HTMLButtonElement;\n  private lastRemovedBreadcrumbIndex = 0;\n  private numberOfBreadcrumbs = 0;\n  private numberOfCollapsedBreadcrumbs = 0;\n  private firstExpandedBreadcrumbIndex?: number;\n  facetManager!: FacetManager;\n\n  @Element() private host!: HTMLElement;\n\n  @BindStateToController('breadcrumbManager')\n  @State()\n  private breadcrumbManagerState!: BreadcrumbManagerState;\n  @BindStateToController('facetManager')\n  @State()\n  public facetManagerState!: FacetManagerState;\n  @State() public error!: Error;\n  @State() private isCollapsed = true;\n\n  private breadcrumbRemovedFocus?: FocusTargetController;\n\n  private breadcrumbShowMoreFocus?: FocusTargetController;\n\n  private breadcrumbShowLessFocus?: FocusTargetController;\n\n  /**\n   * This prop allows you to control the display depth\n   * of the path by specifying the number of parent or ancestor\n   * breadcrumbs links relative to the currently selected value.\n   *\n   * If the path size is equal to or less than the pathLimit, all values in\n   * the path will be displayed without truncation.\n   *\n   * If the path size exceeds the pathLimit, it will truncate the path by\n   * replacing the middle values with ellipses ('...').\n   *\n   * Minimum: `1`\n   * @defaultValue `3`\n   */\n  @Prop() public pathLimit = 3;\n\n  public initialize() {\n    this.validateProps();\n    this.breadcrumbManager = buildBreadcrumbManager(this.bindings.engine);\n    this.facetManager = buildFacetManager(this.bindings.engine);\n\n    if (window.ResizeObserver) {\n      this.resizeObserver = new ResizeObserver(() => this.adaptBreadcrumbs());\n      this.resizeObserver.observe(this.host.parentElement!);\n    }\n  }\n\n  private validateProps() {\n    new Schema({\n      pathLimit: new NumberValue({\n        default: 3,\n        min: 1,\n        required: false,\n      }),\n    }).validate({\n      pathLimit: this.pathLimit,\n    });\n  }\n\n  public disconnectedCallback() {\n    this.resizeObserver?.disconnect();\n  }\n\n  private get focusTargets() {\n    if (!this.breadcrumbRemovedFocus) {\n      this.breadcrumbRemovedFocus = new FocusTargetController(this);\n    }\n    if (!this.breadcrumbShowLessFocus) {\n      this.breadcrumbShowLessFocus = new FocusTargetController(this);\n    }\n    if (!this.breadcrumbShowMoreFocus) {\n      this.breadcrumbShowMoreFocus = new FocusTargetController(this);\n    }\n    return {\n      breadcrumbRemovedFocus: this.breadcrumbRemovedFocus,\n      breadcrumbShowLessFocus: this.breadcrumbShowLessFocus,\n      breadcrumbShowMoreFocus: this.breadcrumbShowMoreFocus,\n    };\n  }\n\n  private get breadcrumbs() {\n    return Array.from(\n      this.host.shadowRoot!.querySelectorAll('li.breadcrumb')\n    ) as HTMLElement[];\n  }\n\n  private hide(element: HTMLElement) {\n    element.style.display = 'none';\n  }\n\n  private show(element: HTMLElement) {\n    element.style.display = '';\n  }\n\n  private showAllBreadcrumbs() {\n    this.breadcrumbs.forEach((breadcrumb) => this.show(breadcrumb));\n  }\n\n  private hideOverflowingBreadcrumbs() {\n    let hiddenBreadcrumbs = 0;\n    for (\n      let i = this.breadcrumbs.length - 1;\n      this.isOverflowing && i >= 0;\n      i--\n    ) {\n      this.hide(this.breadcrumbs[i]);\n      hiddenBreadcrumbs++;\n    }\n    this.updateShowMoreValue(hiddenBreadcrumbs);\n  }\n\n  private updateShowLessDisplay() {\n    this.show(this.showLess);\n    if (this.showLess.offsetTop === 0) {\n      this.hide(this.showLess);\n    }\n  }\n\n  private adaptBreadcrumbs() {\n    if (!this.breadcrumbs.length) {\n      return;\n    }\n    this.showAllBreadcrumbs();\n\n    if (!this.isCollapsed) {\n      this.updateShowLessDisplay();\n      return;\n    }\n\n    this.updateShowMoreValue(this.breadcrumbs.length);\n    this.hideOverflowingBreadcrumbs();\n  }\n\n  private get isOverflowing() {\n    const listElement = this.host.shadowRoot!.querySelector('ul');\n    if (!listElement) {\n      return false;\n    }\n    return listElement.scrollWidth > listElement.clientWidth;\n  }\n\n  private limitPath(path: string[]) {\n    if (path.length <= this.pathLimit) {\n      return path.join(SEPARATOR);\n    }\n\n    if (this.pathLimit === 1 && path.length > 1) {\n      return [ELLIPSIS, path[path.length - 1]].join(SEPARATOR);\n    }\n\n    const ellipsedPath = [\n      path[0],\n      ELLIPSIS,\n      ...path.slice(-(this.pathLimit - 1)),\n    ];\n    return ellipsedPath.join(SEPARATOR);\n  }\n\n  private renderBreadcrumb(\n    breadcrumb: Breadcrumb,\n    index: number,\n    totalBreadcrumbs: number\n  ) {\n    const classNames = [\n      'py-2',\n      'px-3',\n      'flex',\n      'items-center',\n      'btn-pill',\n      'group',\n    ];\n\n    const fullValue = Array.isArray(breadcrumb.formattedValue)\n      ? breadcrumb.formattedValue.join(SEPARATOR)\n      : breadcrumb.formattedValue;\n    const value = Array.isArray(breadcrumb.formattedValue)\n      ? this.limitPath(breadcrumb.formattedValue)\n      : breadcrumb.formattedValue;\n    const title = `${breadcrumb.label}: ${fullValue}`;\n    const isLastBreadcrumb = totalBreadcrumbs === 1;\n    const isExclusion = breadcrumb.state === 'excluded';\n    const activeColor = isExclusion ? 'error' : 'primary';\n\n    return (\n      <li class=\"breadcrumb\" key={value}>\n        <Button\n          part=\"breadcrumb-button\"\n          style={isExclusion ? 'outline-error' : 'outline-bg-neutral'}\n          class={classNames.join(' ')}\n          title={title}\n          // TODO: [KIT-2939] Replace `remove-filter-on` by `remove-include-filter-on`.\n          ariaLabel={this.bindings.i18n.t(\n            isExclusion ? 'remove-exclusion-filter-on' : 'remove-filter-on',\n            {\n              value: title,\n            }\n          )}\n          onClick={() => {\n            if (isLastBreadcrumb) {\n              this.bindings.store.state.resultList?.focusOnFirstResultAfterNextSearch();\n            } else if (this.numberOfBreadcrumbs > 1) {\n              this.focusTargets.breadcrumbRemovedFocus.focusAfterSearch();\n            }\n\n            this.lastRemovedBreadcrumbIndex = index;\n            breadcrumb.deselect();\n          }}\n          ref={(ref) => {\n            if (this.lastRemovedBreadcrumbIndex === index) {\n              this.focusTargets.breadcrumbRemovedFocus.setTarget(ref);\n            }\n            if (this.firstExpandedBreadcrumbIndex === index) {\n              this.focusTargets.breadcrumbShowMoreFocus.setTarget(ref);\n            }\n          }}\n        >\n          <span\n            part=\"breadcrumb-label\"\n            class={`max-w-snippet truncate group-hover:text-${activeColor} group-focus-visible:text-${activeColor} ${breadcrumb.state}`}\n          >\n            {this.bindings.i18n.t('with-colon', {text: breadcrumb.label})}\n          </span>\n          <span\n            part=\"breadcrumb-value\"\n            class={\n              breadcrumb.content\n                ? ''\n                : `max-w-snippet truncate ${breadcrumb.state}`\n            }\n          >\n            {breadcrumb.content ?? value}\n          </span>\n          <atomic-icon\n            part=\"breadcrumb-clear\"\n            class=\"w-2.5 h-2.5 ml-2 mt-px\"\n            icon={CloseIcon}\n          ></atomic-icon>\n        </Button>\n      </li>\n    );\n  }\n\n  private updateShowMoreValue(value: number) {\n    this.numberOfCollapsedBreadcrumbs = value;\n    if (value === 0) {\n      this.hide(this.showMore);\n      return;\n    }\n\n    this.show(this.showMore);\n    this.showMore.textContent = `+ ${value.toLocaleString(\n      this.bindings.i18n.language\n    )}`;\n\n    this.showMore.setAttribute(\n      'aria-label',\n      this.bindings.i18n.t('show-n-more-filters', {\n        value,\n      })\n    );\n  }\n\n  private renderShowMore() {\n    return (\n      <li key=\"show-more\">\n        <Button\n          ref={(ref) => {\n            this.focusTargets.breadcrumbShowLessFocus.setTarget(ref!);\n            this.showMore = ref!;\n          }}\n          part=\"show-more\"\n          style=\"outline-primary\"\n          class=\"p-2 btn-pill whitespace-nowrap\"\n          onClick={() => {\n            this.firstExpandedBreadcrumbIndex =\n              this.numberOfBreadcrumbs - this.numberOfCollapsedBreadcrumbs;\n            this.focusTargets.breadcrumbShowMoreFocus.focusOnNextTarget();\n            this.isCollapsed = false;\n          }}\n        ></Button>\n      </li>\n    );\n  }\n\n  private renderShowLess() {\n    return (\n      <li key=\"show-less\">\n        <Button\n          ref={(ref) => (this.showLess = ref!)}\n          part=\"show-less\"\n          style=\"outline-primary\"\n          text={this.bindings.i18n.t('show-less')}\n          class=\"p-2 btn-pill\"\n          onClick={() => {\n            this.focusTargets.breadcrumbShowLessFocus.focusOnNextTarget();\n            this.isCollapsed = true;\n          }}\n        ></Button>\n      </li>\n    );\n  }\n\n  private renderClearAll() {\n    const isFocusTarget =\n      this.lastRemovedBreadcrumbIndex === this.numberOfBreadcrumbs;\n    return (\n      <li key=\"clear-all\">\n        <Button\n          part=\"clear\"\n          style=\"text-primary\"\n          text={this.bindings.i18n.t('clear')}\n          class=\"p-2 btn-pill\"\n          ariaLabel={this.bindings.i18n.t('clear-all-filters')}\n          onClick={async () => {\n            this.breadcrumbManager.deselectAll();\n            this.bindings.store.state.resultList?.focusOnFirstResultAfterNextSearch();\n          }}\n          ref={\n            isFocusTarget\n              ? this.focusTargets.breadcrumbRemovedFocus.setTarget\n              : undefined\n          }\n        ></Button>\n      </li>\n    );\n  }\n\n  private get facetBreadcrumbs(): Breadcrumb[] {\n    return this.breadcrumbManagerState.facetBreadcrumbs\n      .map(({facetId, field, values}) =>\n        values.map((value) => ({value, facetId, field}))\n      )\n      .flat()\n      .filter(({facetId}) => this.bindings.store.state.facets[facetId])\n      .map(({value, facetId, field}) => ({\n        facetId,\n        label: this.bindings.store.state.facets[facetId]?.label(),\n        state: value.value.state,\n        deselect: value.deselect,\n        formattedValue: [\n          getFieldValueCaption(field, value.value.value, this.bindings.i18n),\n        ],\n      }));\n  }\n\n  private get categoryFacetBreadcrumbs(): Breadcrumb[] {\n    return this.breadcrumbManagerState.categoryFacetBreadcrumbs.map(\n      ({facetId, field, path, deselect}) => ({\n        facetId,\n        label: this.bindings.store.state.categoryFacets[facetId].label(),\n        deselect: deselect,\n        formattedValue: path.map((pathValue) =>\n          getFieldValueCaption(field, pathValue.value, this.bindings.i18n)\n        ),\n      })\n    );\n  }\n\n  private get numericFacetBreadcrumbs(): Breadcrumb[] {\n    return this.breadcrumbManagerState.numericFacetBreadcrumbs\n      .map(({facetId, field, values}) =>\n        values.map((value) => ({value, facetId, field}))\n      )\n      .flat()\n      .map(({value, facetId}) => ({\n        facetId,\n        label: this.bindings.store.state.numericFacets[facetId].label(),\n        state: value.value.state,\n        deselect: value.deselect,\n        formattedValue: [\n          this.bindings.store.state.numericFacets[facetId].format(value.value),\n        ],\n        content: this.bindings.store.state.numericFacets[facetId].content?.(\n          value.value\n        ),\n      }));\n  }\n\n  private get dateFacetBreadcrumbs(): Breadcrumb[] {\n    return this.breadcrumbManagerState.dateFacetBreadcrumbs\n      .map(({facetId, field, values}) =>\n        values.map((value) => ({value, facetId, field}))\n      )\n      .flat()\n      .map(({value, facetId}) => ({\n        facetId,\n        label: this.bindings.store.state.dateFacets[facetId].label(),\n        state: value.value.state,\n        deselect: value.deselect,\n        formattedValue: [\n          this.bindings.store.state.dateFacets[facetId].format(value.value),\n        ],\n      }));\n  }\n\n  private get automaticFacetBreadcrumbs(): Breadcrumb[] {\n    return this.breadcrumbManagerState.automaticFacetBreadcrumbs\n      .flatMap(({facetId, field, label, values}) =>\n        values.map((value) => ({value, facetId, field, label}))\n      )\n      .map(({value, facetId, field, label}) => ({\n        facetId,\n        state: value.value.state,\n        label: label ? label : field,\n        deselect: value.deselect,\n        formattedValue: [\n          getFieldValueCaption(field, value.value.value, this.bindings.i18n),\n        ],\n      }));\n  }\n\n  private get allBreadcrumbs(): Breadcrumb[] {\n    return [\n      ...this.facetBreadcrumbs,\n      ...this.categoryFacetBreadcrumbs,\n      ...this.numericFacetBreadcrumbs,\n      ...this.dateFacetBreadcrumbs,\n      ...this.automaticFacetBreadcrumbs,\n    ];\n  }\n\n  private renderBreadcrumbs(allBreadcrumbs: Breadcrumb[]) {\n    const sortedBreadcrumbs = allBreadcrumbs.sort((a, b) => {\n      const indexA = this.facetManagerState.facetIds.indexOf(a.facetId);\n      const indexB = this.facetManagerState.facetIds.indexOf(b.facetId);\n      return indexA - indexB;\n    });\n    this.numberOfBreadcrumbs = sortedBreadcrumbs.length;\n\n    return [\n      sortedBreadcrumbs.map((breadcrumb, i) =>\n        this.renderBreadcrumb(breadcrumb, i, allBreadcrumbs.length)\n      ),\n      this.isCollapsed && this.renderShowMore(),\n      !this.isCollapsed && this.renderShowLess(),\n      this.renderClearAll(),\n    ];\n  }\n\n  public render() {\n    const allBreadcrumbs = this.allBreadcrumbs;\n\n    if (!allBreadcrumbs.length) {\n      return <Hidden></Hidden>;\n    }\n\n    return (\n      <div part=\"container\" class=\"text-on-background text-sm flex\">\n        <span part=\"label\" class=\"font-bold py-[0.625rem] pl-0 pr-2\">\n          {this.bindings.i18n.t('with-colon', {\n            text: this.bindings.i18n.t('filters'),\n          })}\n        </span>\n        <div part=\"breadcrumb-list-container\" class=\"relative grow\">\n          <ul\n            part=\"breadcrumb-list\"\n            class={`flex gap-1 ${\n              this.isCollapsed ? 'flex-nowrap absolute w-full' : 'flex-wrap'\n            }`}\n          >\n            {this.renderBreadcrumbs(allBreadcrumbs)}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n\n  public componentDidRender() {\n    this.adaptBreadcrumbs();\n  }\n}\n"],"version":3}