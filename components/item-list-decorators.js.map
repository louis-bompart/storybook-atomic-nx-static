{"file":"item-list-decorators.js","mappings":";;;AAMA,MAAM,8BAA8B,GAAG,gCAAgC,CAAC;AAExE;;;;SAIgB,qBAAqB;IACnC,OAAO,CAAC,SAA6B,EAAE,UAAkB;QACvD,MAAM,EAAC,mBAAmB,EAAC,GAAG,SAAS,CAAC;QACxC,SAAS,CAAC,mBAAmB,GAAG;YAC9B,MAAM,OAAO,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC;YACjC,MAAM,KAAK,GAAG,gBAAgB,CAC5B,8BAA8B,EAC9B,CAAC,cAAuB;gBACtB,IAAI,CAAC,UAAU,CAAC,GAAG,cAAc,CAAC;aACnC,CACF,CAAC;YAEF,MAAM,QAAQ,GAAG,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAC9C,IAAI,QAAQ,EAAE;gBACZ,OAAO;aACR;YACD,OAAO,mBAAmB,IAAI,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC9D,CAAC;KACH,CAAC;AACJ,CAAC;AAKD,MAAM,mCAAmC,GAAG,gCAAgC,CAAC;AAE7E;;;;SAIgB,0BAA0B;IACxC,OAAO,CAAC,SAA6B,EAAE,eAAuB;QAC5D,MAAM,EAAC,mBAAmB,EAAC,GAAG,SAAS,CAAC;QACxC,SAAS,CAAC,mBAAmB,GAAG;YAC9B,MAAM,OAAO,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC;YACjC,MAAM,KAAK,GAAG,gBAAgB,CAC5B,mCAAmC,EACnC,CAAC,cAGA;gBACC,cAAc,aAAd,cAAc,uBAAd,cAAc,CAAE,SAAS,CAAC;oBACxB,IAAI,CAAC,eAAe,CAAC,GAAG,cAAc,CAAC,KAAK,CAAC;iBAC9C,CAAC,CAAC;aACJ,CACF,CAAC;YAEF,MAAM,QAAQ,GAAG,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAC9C,IAAI,QAAQ,EAAE;gBACZ,OAAO;aACR;YACD,OAAO,mBAAmB,IAAI,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC9D,CAAC;KACH,CAAC;AACJ;;;;","names":[],"sources":["src/components/common/item-list/item-list-decorators.tsx"],"sourcesContent":["import {ComponentInterface, getElement} from '@stencil/core';\nimport {buildCustomEvent} from '../../../utils/event-utils';\n\ntype FoldedItemListContextEventHandler = (foldedItemList: unknown) => void;\nexport type FoldedItemListContextEvent =\n  CustomEvent<FoldedItemListContextEventHandler>;\nconst foldedItemListContextEventName = 'atomic/resolveFoldedResultList';\n\n/**\n * A [StencilJS property decorator](https://stenciljs.com/) to be used for elements nested within a folded item list.\n * This allows the Stencil component to modify the folded item list rendered levels.\n */\nexport function FoldedItemListContext() {\n  return (component: ComponentInterface, foldedList: string) => {\n    const {componentWillRender} = component;\n    component.componentWillRender = function () {\n      const element = getElement(this);\n      const event = buildCustomEvent(\n        foldedItemListContextEventName,\n        (foldedItemList: unknown) => {\n          this[foldedList] = foldedItemList;\n        }\n      );\n\n      const canceled = element.dispatchEvent(event);\n      if (canceled) {\n        return;\n      }\n      return componentWillRender && componentWillRender.call(this);\n    };\n  };\n}\n\ntype FoldedItemListStateContextEventHandler = (foldedItemList: unknown) => void;\nexport type FoldedItemListStateContextEvent =\n  CustomEvent<FoldedItemListStateContextEventHandler>;\nconst foldedItemListStateContextEventName = 'atomic/resolveFoldedResultList';\n\n/**\n * A [StencilJS property decorator](https://stenciljs.com/) to be used for elements nested within a folded item list.\n * This allows the Stencil component to modify the folded item list rendered levels.\n */\nexport function FoldedItemListStateContext() {\n  return (component: ComponentInterface, foldedListState: string) => {\n    const {componentWillRender} = component;\n    component.componentWillRender = function () {\n      const element = getElement(this);\n      const event = buildCustomEvent(\n        foldedItemListStateContextEventName,\n        (foldedItemList: {\n          subscribe: (callback: () => void) => unknown;\n          state: unknown;\n        }) => {\n          foldedItemList?.subscribe(() => {\n            this[foldedListState] = foldedItemList.state;\n          });\n        }\n      );\n\n      const canceled = element.dispatchEvent(event);\n      if (canceled) {\n        return;\n      }\n      return componentWillRender && componentWillRender.call(this);\n    };\n  };\n}\n"],"version":3}