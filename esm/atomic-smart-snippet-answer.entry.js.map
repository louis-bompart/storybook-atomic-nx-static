{"file":"atomic-smart-snippet-answer.entry.js","mappings":"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","names":["sanitize"],"sources":["src/components/common/smart-snippets/atomic-smart-snippet-answer/atomic-smart-snippet-answer.pcss?tag=atomic-smart-snippet-answer&encapsulation=shadow","src/components/common/smart-snippets/atomic-smart-snippet-answer/atomic-smart-snippet-answer.tsx"],"sourcesContent":[":host {\r\n  color: var(--atomic-on-background);\r\n  font-size: var(--atomic-text-lg);\r\n  line-height: calc(var(--atomic-text-lg) * var(--atomic-line-height-ratio));\r\n\r\n  .wrapper {\r\n    display: flow-root;\r\n    .margin {\r\n      margin: 1rem 0;\r\n    }\r\n  }\r\n}\r\n","import {InlineLink} from '@coveo/headless';\r\nimport {\r\n  Component,\r\n  h,\r\n  Prop,\r\n  Event,\r\n  EventEmitter,\r\n  Host,\r\n  Element,\r\n} from '@stencil/core';\r\nimport {sanitize} from 'dompurify';\r\nimport {sanitizeStyle} from '../../../../utils/utils';\r\nimport {bindAnalyticsToLink} from '../../item-link/item-link';\r\n\r\n/**\r\n * @part answer - The container displaying the full document excerpt.\r\n * @internal\r\n */\r\n@Component({\r\n  tag: 'atomic-smart-snippet-answer',\r\n  styleUrl: 'atomic-smart-snippet-answer.pcss',\r\n  shadow: true,\r\n})\r\nexport class AtomicSmartSnippetAnswer {\r\n  @Prop() htmlContent!: string;\r\n  @Prop() innerStyle?: string;\r\n\r\n  @Element() public host!: HTMLElement;\r\n\r\n  @Event({bubbles: false})\r\n  private answerSizeUpdated!: EventEmitter<{height: number}>;\r\n  @Event({bubbles: false})\r\n  private selectInlineLink!: EventEmitter<InlineLink>;\r\n  @Event({bubbles: false})\r\n  private beginDelayedSelectInlineLink!: EventEmitter<InlineLink>;\r\n  @Event({bubbles: false})\r\n  private cancelPendingSelectInlineLink!: EventEmitter<InlineLink>;\r\n  private wrapperElement?: HTMLElement;\r\n  private isRendering = true;\r\n  private resizeObserver: ResizeObserver | undefined;\r\n\r\n  public componentWillRender() {\r\n    this.isRendering = true;\r\n  }\r\n\r\n  public componentDidRender() {\r\n    this.isRendering = false;\r\n    this.emitCurrentHeight();\r\n  }\r\n\r\n  public componentDidLoad() {\r\n    // Prevents initial transition\r\n    setTimeout(() => {\r\n      this.host.classList.add('loaded');\r\n    }, 0);\r\n  }\r\n\r\n  public connectedCallback() {\r\n    if (this.wrapperElement && this.resizeObserver) {\r\n      this.resizeObserver.observe(this.wrapperElement);\r\n    }\r\n  }\r\n\r\n  public disconnectedCallback() {\r\n    this.resizeObserver?.disconnect();\r\n  }\r\n\r\n  public setWrapperElement(element: HTMLElement) {\r\n    this.wrapperElement = element;\r\n    if (this.resizeObserver) {\r\n      this.resizeObserver.disconnect();\r\n    }\r\n    this.resizeObserver = new ResizeObserver(() => this.emitCurrentHeight());\r\n    this.resizeObserver.observe(element);\r\n  }\r\n\r\n  private get sanitizedStyle() {\r\n    if (!this.innerStyle) {\r\n      return undefined;\r\n    }\r\n    return sanitizeStyle(this.innerStyle);\r\n  }\r\n\r\n  private emitCurrentHeight() {\r\n    if (this.isRendering) {\r\n      return;\r\n    }\r\n    this.answerSizeUpdated.emit({height: this.wrapperElement!.scrollHeight});\r\n  }\r\n\r\n  private bindAnalyticsToLink(element: HTMLAnchorElement) {\r\n    const link: InlineLink = {\r\n      linkText: element.innerText,\r\n      linkURL: element.href,\r\n    };\r\n    bindAnalyticsToLink(element, {\r\n      stopPropagation: false,\r\n      onSelect: () => this.selectInlineLink.emit(link),\r\n      onBeginDelayedSelect: () => this.beginDelayedSelectInlineLink.emit(link),\r\n      onCancelPendingSelect: () =>\r\n        this.cancelPendingSelectInlineLink.emit(link),\r\n    });\r\n  }\r\n\r\n  private bindAnalyticsToLinks(root: HTMLElement) {\r\n    Array.from(root.querySelectorAll('a')).forEach((link) =>\r\n      this.bindAnalyticsToLink(link)\r\n    );\r\n  }\r\n\r\n  private renderStyle() {\r\n    const style = this.sanitizedStyle;\r\n    if (!style) {\r\n      return;\r\n    }\r\n    // deepcode ignore ReactSetInnerHtml: Defined by implementer and sanitized by dompurify\r\n    return <style innerHTML={style}></style>;\r\n  }\r\n\r\n  private renderContent() {\r\n    return (\r\n      <div\r\n        class=\"wrapper\"\r\n        ref={(element) => element && this.setWrapperElement(element)}\r\n      >\r\n        {/* deepcode ignore ReactSetInnerHtml: Sanitized by back-end + dompurify */}\r\n        <div\r\n          innerHTML={sanitize(this.htmlContent, {\r\n            USE_PROFILES: {html: true},\r\n          })}\r\n          ref={(element) => element && this.bindAnalyticsToLinks(element)}\r\n          part=\"answer\"\r\n          class=\"margin\"\r\n        ></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <Host>\r\n        {this.renderStyle()}\r\n        {this.renderContent()}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"version":3}