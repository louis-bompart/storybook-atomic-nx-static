{"file":"atomic-ipx-button.entry.js","mappings":"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","names":["loadRecommendationActions"],"sources":["src/components/ipx/atomic-ipx-button/atomic-ipx-button.pcss?tag=atomic-ipx-button&encapsulation=shadow","src/components/ipx/atomic-ipx-button/atomic-ipx-button.tsx"],"sourcesContent":["@import '../../../global/global.pcss';\n\n/**\n * @prop --atomic-ipx-button-height: height of the IPX button.\n */\n:host {\n  &::part(ipx-button) {\n    @apply btn-primary fixed bottom-1 right-12 block px-3 whitespace-nowrap;\n    height: var(--atomic-ipx-button-height, 2.75rem);\n    background-color: var(--atomic-primary);\n  }\n\n  &::part(button-icon) {\n    @apply p-0 inline-block mr-2 w-4 h-4 align-middle relative;\n    font-size: 100%;\n  }\n\n  &::part(button-text) {\n    @apply overflow-hidden;\n  }\n\n  &::part(ipx-close-icon),\n  &::part(ipx-open-icon) {\n    @apply absolute left-0;\n    transition: transform 500ms;\n  }\n}\n","import {loadRecommendationActions} from '@coveo/headless/recommendation';\nimport {Component, Element, Fragment, h, Prop, State} from '@stencil/core';\nimport CloseIcon from '../../../images/close.svg';\nimport SearchIcon from '../../../images/search.svg';\nimport {\n  InitializableComponent,\n  InitializeBindings,\n} from '../../../utils/initialization-utils';\nimport {Button} from '../../common/button';\nimport {Bindings} from '../../search/atomic-search-interface/atomic-search-interface';\n\nconst numberOrPixelValuePattern = new RegExp(/^(?=.*(?:\\d+|px)$).*$/);\n\n/**\n * @internal\n */\n@Component({\n  tag: 'atomic-ipx-button',\n  styleUrl: './atomic-ipx-button.pcss',\n  shadow: true,\n})\nexport class AtomicIPXButton implements InitializableComponent {\n  @InitializeBindings() public bindings!: Bindings;\n\n  @State() public error!: Error;\n\n  @Element() public host!: HTMLElement;\n\n  /**\n   * The label that will be shown to the user.\n   */\n  @Prop({reflect: true}) public label?: string;\n\n  /**\n   * The close icon of the button.\n   */\n  @Prop({reflect: true}) public closeIcon = CloseIcon;\n\n  /**\n   * The open icon of the button.\n   */\n  @Prop({reflect: true}) public openIcon = SearchIcon;\n\n  /**\n   * Whether the IPX modal is open.\n   */\n  @Prop({mutable: true, reflect: true}) public isModalOpen = false;\n\n  private recommendationsLoaded = false;\n\n  private async getRecommendations() {\n    const recsEngine = this.bindings.interfaceElement.querySelector(\n      'atomic-recs-interface'\n    )?.engine;\n    if (recsEngine) {\n      this.recommendationsLoaded = true;\n      recsEngine.dispatch(\n        loadRecommendationActions(recsEngine).getRecommendations()\n      );\n    }\n  }\n\n  private async onClick() {\n    if (!this.recommendationsLoaded) {\n      this.getRecommendations();\n    }\n    this.isModalOpen ? this.close() : this.open();\n    this.render();\n  }\n\n  private renderIPXButton() {\n    return (\n      <Button\n        style=\"primary\"\n        part=\"ipx-button\"\n        class=\"my-2\"\n        onClick={() => this.onClick()}\n      >\n        <span part=\"button-icon\">\n          <atomic-icon\n            part=\"ipx-close-icon\"\n            icon={this.getIcon(this.closeIcon)}\n          ></atomic-icon>\n          <atomic-icon\n            part=\"ipx-open-icon\"\n            icon={this.getIcon(this.openIcon)}\n          ></atomic-icon>\n        </span>\n        <span part=\"button-text\">{this.label}</span>\n      </Button>\n    );\n  }\n\n  public render() {\n    const [displayedIcon, hiddenIcon] = this.isModalOpen\n      ? ['ipx-close-icon', 'ipx-open-icon']\n      : ['ipx-open-icon', 'ipx-close-icon'];\n    if (this.isModalOpen && !this.recommendationsLoaded) {\n      this.getRecommendations();\n    }\n\n    return (\n      <Fragment>\n        {\n          <style>\n            {`\n              [part=${displayedIcon}] {\n                transform: translateY(0rem);\n              }\n\n              [part=${hiddenIcon}] {\n                transform: translateY(3rem);\n              }\n                \n              .btn-open {\n                [part=${displayedIcon}] {\n                  transform: translateY(3rem);\n                }\n              \n                [part=${hiddenIcon}] {\n                  transform: translateY(0rem);\n                }\n              }`}\n          </style>\n        }\n        <div class=\"flex flex-col items-center\" part=\"container\">\n          {this.renderIPXButton()}\n        </div>\n      </Fragment>\n    );\n  }\n\n  private get ipxModal() {\n    return this.bindings.interfaceElement.querySelector('atomic-ipx-modal')!;\n  }\n\n  private open() {\n    this.isModalOpen = true;\n    this.host.classList.add('btn-open');\n    this.ipxModal.setAttribute('is-open', 'true');\n  }\n\n  private close() {\n    this.isModalOpen = false;\n    this.host.classList.remove('btn-open');\n    this.ipxModal.setAttribute('is-open', 'false');\n  }\n\n  private getIcon(icon: string) {\n    const initialDiv = document.createElement('div')!;\n    initialDiv.innerHTML = icon;\n    const iconElement = initialDiv.querySelector('svg');\n    if (!iconElement) {\n      return initialDiv.innerHTML;\n    }\n    // here, we grab the icon width and height to set a viewbox (which keeps the svg looking normal), then remove styles from the icon to let the icon stretch into the space it is given.\n    const iconWidth = this.getIconWidth(iconElement);\n    const iconHeight = this.getIconHeight(iconElement);\n    this.cleanupSVGStyles(iconElement);\n    if (iconWidth && iconHeight) {\n      iconElement.setAttribute('viewBox', `0 0 ${iconWidth} ${iconHeight}`);\n    }\n    return initialDiv.innerHTML;\n  }\n\n  private cleanupSVGStyles(iconElement: SVGSVGElement) {\n    iconElement.removeAttribute('style');\n    iconElement.removeAttribute('width');\n    iconElement.removeAttribute('height');\n  }\n\n  private getIconWidth(icon: SVGSVGElement) {\n    const width = icon.getAttribute('width') ?? '';\n    if (numberOrPixelValuePattern.test(width)) {\n      return width;\n    }\n    return null;\n  }\n\n  private getIconHeight(icon: SVGSVGElement) {\n    const height = icon.getAttribute('height') ?? '';\n    if (numberOrPixelValuePattern.test(height)) {\n      return height;\n    }\n    return null;\n  }\n}\n"],"version":3}