{"file":"atomic-result-rating.entry.js","mappings":";;;;;;;;;;AAAA,MAAM,qBAAqB,GAAG,4tuCAA4tuC,CAAC;AAC3vuC,iCAAe,qBAAqB;;;;;;;;;;;;MCoBvB,kBAAkB;;;;;;QAaC,oBAAe,GAAG,CAAC,CAAC;;;;;;;;;;;;;;QAepB,SAAI,GAAG,IAAI,CAAC;QAIjC,kBAAa,GAAkB,IAAI,CAAC;;+BAnBG,CAAC;oBAeZ,IAAI;;6BAID,IAAI;;IAEpC,mBAAmB;QACzB,MAAM,KAAK,GAAGA,EAAsB,CAAC,iBAAiB,CACpD,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,KAAK,CACX,CAAC;QACF,IAAI;YACF,IAAI,CAAC,aAAa,GAAG,oBAAoB,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;SAC9D;QAAC,OAAO,KAAK,EAAE;YACd,IAAI,CAAC,KAAK,GAAG,KAAK,YAAY,KAAK,GAAG,KAAK,GAAG,IAAI,KAAK,CAAC,GAAG,KAAK,EAAE,CAAC,CAAC;YACpE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;SAC3B;KACF;IAED,mBAAmB;QACjB,IAAI,CAAC,mBAAmB,EAAE,CAAC;KAC5B;IAED,MAAM;QACJ,IAAI,IAAI,CAAC,aAAa,KAAK,IAAI,EAAE;YAC/B,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;YACnB,OAAO;SACR;QACD,QACE,EAAC,MAAM,IACL,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,EACxB,IAAI,EAAE,IAAI,CAAC,IAAI,EACf,kBAAkB,EAAE,IAAI,CAAC,eAAe,EACxC,mBAAmB,EAAE,IAAI,CAAC,aAAa,EACvC,QAAQ,EAAE,KAAK,GACP,EACV;KACH;;;AAhE4B;IAA5B,kBAAkB,EAAE;oDAA4B;AACxB;IAAxB,aAAa,EAAE;kDAAyB;;;;;","names":["ResultTemplatesHelpers"],"sources":["src/components/search/result-template-components/atomic-result-rating/atomic-result-rating.pcss?tag=atomic-result-rating&encapsulation=shadow","src/components/search/result-template-components/atomic-result-rating/atomic-result-rating.tsx"],"sourcesContent":["@import '../../../../global/global.pcss';\n@import '../../../common/atomic-rating/atomic-rating.pcss';\n","import {Result, ResultTemplatesHelpers} from '@coveo/headless';\nimport {Component, Element, Prop, h, State} from '@stencil/core';\nimport Star from '../../../../images/star.svg';\nimport {InitializeBindings} from '../../../../utils/initialization-utils';\nimport {\n  Rating,\n  computeNumberOfStars,\n} from '../../../common/atomic-rating/atomic-rating';\nimport {Bindings} from '../../atomic-search-interface/atomic-search-interface';\nimport {ResultContext} from '../result-template-decorators';\n\n/**\n * The `atomic-result-rating` element renders a star rating.\n *\n *  @part value-rating - The wrapper that contains the row of inactive stars and the row of active stars.\n */\n@Component({\n  tag: 'atomic-result-rating',\n  styleUrl: 'atomic-result-rating.pcss',\n  shadow: true,\n})\nexport class AtomicResultRating {\n  @InitializeBindings() public bindings!: Bindings;\n  @ResultContext() private result!: Result;\n  @Element() host!: HTMLElement;\n\n  /**\n   * The field whose values you want to display as a rating.\n   */\n  @Prop({reflect: true}) public field!: string;\n\n  /**\n   * The maximum value of the field. This value is also used as the number of icons to be displayed.\n   */\n  @Prop({reflect: true}) public maxValueInIndex = 5;\n\n  /**\n   * The SVG icon to use to display the rating.\n   *\n   * - Use a value that starts with `http://`, `https://`, `./`, or `../`, to fetch and display an icon from a given location.\n   * - Use a value that starts with `assets://`, to display an icon from the Atomic package.\n   * - Use a stringified SVG to display it directly.\n   *\n   * When using a custom icon, at least part of your icon should have the color set to `fill=\"currentColor\"`.\n   * This part of the SVG will take on the colors set in the following [variables](https://developer.mozilla.org/en-US/docs/Web/CSS/Using_CSS_custom_properties):\n   *\n   * - `--atomic-rating-icon-active-color`\n   * - `--atomic-rating-icon-inactive-color`\n   */\n  @Prop({reflect: true}) public icon = Star;\n\n  @State() public error!: Error;\n\n  @State() numberOfStars: number | null = null;\n\n  private updateNumberOfStars() {\n    const value = ResultTemplatesHelpers.getResultProperty(\n      this.result,\n      this.field\n    );\n    try {\n      this.numberOfStars = computeNumberOfStars(value, this.field);\n    } catch (error) {\n      this.error = error instanceof Error ? error : new Error(`${error}`);\n      this.numberOfStars = null;\n    }\n  }\n\n  componentWillRender() {\n    this.updateNumberOfStars();\n  }\n\n  render() {\n    if (this.numberOfStars === null) {\n      this.host.remove();\n      return;\n    }\n    return (\n      <Rating\n        i18n={this.bindings.i18n}\n        icon={this.icon}\n        numberOfTotalIcons={this.maxValueInIndex}\n        numberOfActiveIcons={this.numberOfStars}\n        iconSize={0.875}\n      ></Rating>\n    );\n  }\n}\n"],"version":3}