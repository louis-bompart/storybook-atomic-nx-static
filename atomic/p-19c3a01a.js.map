{"version":3,"names":["matchHtmlRegExp","escapeHtml_1","escapeHtml","string","str","match","exec","escape","html","index","lastIndex","length","charCodeAt","substring","shouldUpdateFacetSearchComponent","nextFacetSearchState","prevFacetSearchState","hasQuery","query","stillNoValues","values","hasFinishedLoading","isLoading","shouldDisplaySearchResults","facetSearchState","hasValues","highlightSearchResult","resultValue","searchQuery","sanitizedResult","trim","regex","RegExp","regexEncode","replace","FacetValueLabelHighlight","props","h","title","displayValue","part","class","isSelected","isExcluded","innerHTML"],"sources":["../../node_modules/escape-html/index.js","src/components/common/facets/facet-search/facet-search-utils.ts","src/components/common/facets/facet-value-label-highlight/facet-value-label-highlight.tsx"],"sourcesContent":["/*!\n * escape-html\n * Copyright(c) 2012-2013 TJ Holowaychuk\n * Copyright(c) 2015 Andreas Lubbe\n * Copyright(c) 2015 Tiancheng \"Timothy\" Gu\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module variables.\n * @private\n */\n\nvar matchHtmlRegExp = /[\"'&<>]/;\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = escapeHtml;\n\n/**\n * Escape special characters in the given string of html.\n *\n * @param  {string} string The string to escape for inserting into HTML\n * @return {string}\n * @public\n */\n\nfunction escapeHtml(string) {\n  var str = '' + string;\n  var match = matchHtmlRegExp.exec(str);\n\n  if (!match) {\n    return str;\n  }\n\n  var escape;\n  var html = '';\n  var index = 0;\n  var lastIndex = 0;\n\n  for (index = match.index; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34: // \"\n        escape = '&quot;';\n        break;\n      case 38: // &\n        escape = '&amp;';\n        break;\n      case 39: // '\n        escape = '&#39;';\n        break;\n      case 60: // <\n        escape = '&lt;';\n        break;\n      case 62: // >\n        escape = '&gt;';\n        break;\n      default:\n        continue;\n    }\n\n    if (lastIndex !== index) {\n      html += str.substring(lastIndex, index);\n    }\n\n    lastIndex = index + 1;\n    html += escape;\n  }\n\n  return lastIndex !== index\n    ? html + str.substring(lastIndex, index)\n    : html;\n}\n","import escape from 'escape-html';\nimport {regexEncode} from '../../../../utils/string-utils';\n\ninterface FacetSearchState {\n  query: string;\n  values: unknown[];\n  isLoading: boolean;\n}\n\n/**\n * Meant to be used inside the `componentShouldUpdate` lifecycle method.\n * It prevents updating the facet between two matchless facet searches.\n * It also prevents updating the facet until the first search has loaded.\n */\nexport function shouldUpdateFacetSearchComponent(\n  nextFacetSearchState: FacetSearchState,\n  prevFacetSearchState: FacetSearchState\n) {\n  const hasQuery = nextFacetSearchState.query !== '';\n  const stillNoValues =\n    !nextFacetSearchState.values.length && !prevFacetSearchState.values.length;\n  const hasFinishedLoading =\n    !nextFacetSearchState.isLoading && prevFacetSearchState.isLoading;\n\n  if (hasQuery && stillNoValues) {\n    return hasFinishedLoading;\n  }\n\n  return true;\n}\n\nexport function shouldDisplaySearchResults(facetSearchState: FacetSearchState) {\n  const hasQuery = facetSearchState.query !== '';\n  const isLoading = facetSearchState.isLoading;\n  const hasValues = !!facetSearchState.values.length;\n\n  if (!hasQuery) {\n    return false;\n  }\n\n  if (hasValues) {\n    return true;\n  }\n\n  return !isLoading;\n}\n\nexport function highlightSearchResult(resultValue: string, searchQuery = '') {\n  const sanitizedResult = escape(resultValue);\n\n  if (searchQuery.trim() === '') {\n    return sanitizedResult;\n  }\n\n  const regex = new RegExp(`(${regexEncode(searchQuery)})`, 'i');\n  return escape(resultValue).replace(\n    regex,\n    '<span part=\"search-highlight\" class=\"font-bold\">$1</span>'\n  );\n}\n","import {FunctionalComponent, h} from '@stencil/core';\nimport {highlightSearchResult} from '../facet-search/facet-search-utils';\n\ninterface FacetValueLabelHighlightProps {\n  displayValue: string;\n  searchQuery?: string;\n  isSelected: boolean;\n  isExcluded?: boolean;\n}\n\nexport const FacetValueLabelHighlight: FunctionalComponent<\n  FacetValueLabelHighlightProps\n> = (props) => {\n  return (\n    // deepcode ignore ReactSetInnerHtml: This is not React code\n    <span\n      title={props.displayValue}\n      part=\"value-label\"\n      class={`value-label truncate peer-hover:text-error ${\n        props.isSelected || !!props.isExcluded ? 'font-bold' : ''\n      }`}\n      innerHTML={highlightSearchResult(props.displayValue, props.searchQuery)}\n    ></span>\n  );\n};\n"],"mappings":";;;;;;;GAeA,IAAIA,EAAkB,U,IAOtBC,EAAiBC,EAUjB,SAASA,EAAWC,GAClB,IAAIC,EAAM,GAAKD,EACf,IAAIE,EAAQL,EAAgBM,KAAKF,GAEjC,IAAKC,EAAO,CACV,OAAOD,CACX,CAEE,IAAIG,EACJ,IAAIC,EAAO,GACX,IAAIC,EAAQ,EACZ,IAAIC,EAAY,EAEhB,IAAKD,EAAQJ,EAAMI,MAAOA,EAAQL,EAAIO,OAAQF,IAAS,CACrD,OAAQL,EAAIQ,WAAWH,IACrB,KAAK,GACHF,EAAS,SACT,MACF,KAAK,GACHA,EAAS,QACT,MACF,KAAK,GACHA,EAAS,QACT,MACF,KAAK,GACHA,EAAS,OACT,MACF,KAAK,GACHA,EAAS,OACT,MACF,QACE,SAGJ,GAAIG,IAAcD,EAAO,CACvBD,GAAQJ,EAAIS,UAAUH,EAAWD,EACvC,CAEIC,EAAYD,EAAQ,EACpBD,GAAQD,CACZ,CAEE,OAAOG,IAAcD,EACjBD,EAAOJ,EAAIS,UAAUH,EAAWD,GAChCD,CACN,C,SC/DgBM,EACdC,EACAC,GAEA,MAAMC,EAAWF,EAAqBG,QAAU,GAChD,MAAMC,GACHJ,EAAqBK,OAAOT,SAAWK,EAAqBI,OAAOT,OACtE,MAAMU,GACHN,EAAqBO,WAAaN,EAAqBM,UAE1D,GAAIL,GAAYE,EAAe,CAC7B,OAAOE,C,CAGT,OAAO,IACT,C,SAEgBE,EAA2BC,GACzC,MAAMP,EAAWO,EAAiBN,QAAU,GAC5C,MAAMI,EAAYE,EAAiBF,UACnC,MAAMG,IAAcD,EAAiBJ,OAAOT,OAE5C,IAAKM,EAAU,CACb,OAAO,K,CAGT,GAAIQ,EAAW,CACb,OAAO,I,CAGT,OAAQH,CACV,C,SAEgBI,EAAsBC,EAAqBC,EAAc,IACvE,MAAMC,EAAkBtB,EAAOoB,GAE/B,GAAIC,EAAYE,SAAW,GAAI,CAC7B,OAAOD,C,CAGT,MAAME,EAAQ,IAAIC,OAAO,IAAIC,EAAYL,MAAiB,KAC1D,OAAOrB,EAAOoB,GAAaO,QACzBH,EACA,4DAEJ,C,MCjDaI,EAERC,GAGDC,EAAA,QACEC,MAAOF,EAAMG,aACbC,KAAK,cACLC,MAAO,8CACLL,EAAMM,cAAgBN,EAAMO,WAAa,YAAc,KAEzDC,UAAWlB,EAAsBU,EAAMG,aAAcH,EAAMR,sB"}