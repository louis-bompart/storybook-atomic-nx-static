{"file":"atomic-result-link.atomic-result-placeholder.atomic-result-section-actions.atomic-result-section-badges.atomic-result-section-bottom-metadata.atomic-result-section-excerpt.atomic-result-section-title.atomic-result-section-visual.atomic-result-table-placeholder.entry.cjs.js","mappings":"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","names":["buildCustomEvent","getDefaultSlotFromHost","getAttributesFromLinkSlot","isUndefined","buildStringTemplateFromResult","h","LinkWithItemAnalytics","InitializeBindings","ResultContext","InteractiveResultContext","placeholderClasses","getItemDisplayClasses","hideEmptySection"],"sources":["src/components/search/result-template-components/atomic-result-link/atomic-result-link.pcss?tag=atomic-result-link","src/components/search/result-template-components/atomic-result-link/atomic-result-link.tsx","src/components/common/atomic-result-placeholder/atomic-result-placeholder.pcss?tag=atomic-result-placeholder&encapsulation=shadow","src/components/common/atomic-result-placeholder/atomic-result-placeholder.tsx","src/components/search/result-template-components/atomic-result-sections/atomic-result-section-actions.tsx","src/components/search/result-template-components/atomic-result-sections/atomic-result-section-badges.tsx","src/components/search/result-template-components/atomic-result-sections/atomic-result-section-bottom-metadata.tsx","src/components/search/result-template-components/atomic-result-sections/atomic-result-section-excerpt.tsx","src/components/search/result-template-components/atomic-result-sections/atomic-result-section-title.tsx","src/components/search/result-template-components/atomic-result-sections/atomic-result-section-visual.tsx","src/components/search/atomic-result-table-placeholder/atomic-result-table-placeholder.pcss?tag=atomic-result-table-placeholder&encapsulation=shadow","src/components/search/atomic-result-table-placeholder/atomic-result-table-placeholder.tsx"],"sourcesContent":["@import '../../../../global/mixins.pcss';\r\n\r\natomic-result-link {\r\n  a {\r\n    @mixin link-style;\r\n  }\r\n}\r\n","import {isUndefined} from '@coveo/bueno';\r\nimport {InteractiveResult} from '@coveo/headless';\r\nimport {Component, h, Prop, Element} from '@stencil/core';\r\nimport {buildCustomEvent} from '../../../../utils/event-utils';\r\nimport {\r\n  InitializableComponent,\r\n  InitializeBindings,\r\n} from '../../../../utils/initialization-utils';\r\nimport {buildStringTemplateFromResult} from '../../../../utils/result-utils';\r\nimport {getDefaultSlotFromHost} from '../../../../utils/slot-utils';\r\nimport {AnyUnfoldedItem} from '../../../common/interface/item';\r\nimport {getAttributesFromLinkSlot} from '../../../common/item-link/attributes-slot';\r\nimport {LinkWithItemAnalytics} from '../../../common/item-link/item-link';\r\nimport {Bindings} from '../../atomic-search-interface/atomic-search-interface';\r\nimport {\r\n  InteractiveResultContext,\r\n  ResultContext,\r\n} from '../result-template-decorators';\r\n\r\n/**\r\n * The `atomic-result-link` component automatically transforms a search result title into a clickable link that points to the original item.\r\n * @slot default - Lets you display alternative content inside the link\r\n * @slot attributes - Lets you pass [attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#attributes) down to the link element, overriding other attributes, to be used exclusively with an \"a\" tag such as `<a slot=\"attributes\" target=\"_blank\" download></a>`.\r\n */\r\n@Component({\r\n  tag: 'atomic-result-link',\r\n  styleUrl: 'atomic-result-link.pcss',\r\n  shadow: false,\r\n})\r\nexport class AtomicResultLink implements InitializableComponent {\r\n  @InitializeBindings() public bindings!: Bindings;\r\n  public error!: Error;\r\n\r\n  @ResultContext() private result!: AnyUnfoldedItem;\r\n  @InteractiveResultContext() private interactiveResult!: InteractiveResult;\r\n\r\n  @Element() private host!: HTMLElement;\r\n\r\n  /**\r\n   * Specifies a template literal from which to generate the `href` attribute value (see\r\n   * [Template literals](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Template_literals)).\r\n   *\r\n   * The template literal can reference any number of result properties from the parent result. It can also reference the window object.\r\n   *\r\n   * For example, the following markup generates an `href` value such as `http://uri.com?id=itemTitle`, using the result's `clickUri` and `itemtitle` fields.\r\n   * ```html\r\n   * <atomic-result-link href-template='${clickUri}?id=${raw.itemtitle}'></atomic-result-link>\r\n   * ```\r\n   */\r\n  @Prop({reflect: true}) hrefTemplate?: string;\r\n\r\n  private hasDefaultSlot!: boolean;\r\n  private linkAttributes?: Attr[];\r\n  private stopPropagation?: boolean;\r\n\r\n  public initialize() {\r\n    this.host.dispatchEvent(\r\n      buildCustomEvent(\r\n        'atomic/resolveStopPropagation',\r\n        (stopPropagation: boolean) => {\r\n          this.stopPropagation = stopPropagation;\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  public connectedCallback() {\r\n    const slotName = 'attributes';\r\n    this.hasDefaultSlot = !!getDefaultSlotFromHost(this.host);\r\n    this.linkAttributes = getAttributesFromLinkSlot(this.host, slotName);\r\n  }\r\n\r\n  public render() {\r\n    const href = isUndefined(this.hrefTemplate)\r\n      ? this.result.clickUri\r\n      : buildStringTemplateFromResult(\r\n          this.hrefTemplate,\r\n          this.result,\r\n          this.bindings\r\n        );\r\n\r\n    return (\r\n      <LinkWithItemAnalytics\r\n        href={href}\r\n        onSelect={() => this.interactiveResult.select()}\r\n        onBeginDelayedSelect={() => this.interactiveResult.beginDelayedSelect()}\r\n        onCancelPendingSelect={() =>\r\n          this.interactiveResult.cancelPendingSelect()\r\n        }\r\n        attributes={this.linkAttributes}\r\n        stopPropagation={this.stopPropagation}\r\n      >\r\n        {this.hasDefaultSlot ? (\r\n          <slot />\r\n        ) : (\r\n          <atomic-result-text\r\n            field=\"title\"\r\n            default=\"no-title\"\r\n          ></atomic-result-text>\r\n        )}\r\n      </LinkWithItemAnalytics>\r\n    );\r\n  }\r\n}\r\n","@import '../template-system/template-system.pcss';\r\n\r\n@mixin atomic-template-system map(post-css-map-for-sections, search);\r\n\r\n.result-root {\r\n  &.display-grid {\r\n    atomic-result-section-actions {\r\n      display: none;\r\n    }\r\n  }\r\n\r\n  .badge {\r\n    width: 14rem;\r\n  }\r\n\r\n  .action {\r\n    width: 10rem;\r\n  }\r\n\r\n  .title {\r\n    display: grid;\r\n    grid-auto-flow: column;\r\n    grid-gap: 0.5rem;\r\n    height: var(--line-height);\r\n    width: 30rem;\r\n    max-width: 100%;\r\n  }\r\n\r\n  .fields-placeholder {\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill, min(11rem, 40%));\r\n    grid-column-gap: 0.5rem;\r\n\r\n    .field-value-placeholder {\r\n      height: var(--font-size);\r\n      margin: calc((var(--line-height) - var(--font-size)) / 2) 0;\r\n    }\r\n  }\r\n}\r\n","import {Component, h, Prop} from '@stencil/core';\r\nimport {\r\n  ItemDisplayLayout,\r\n  ItemDisplayDensity,\r\n  ItemDisplayImageSize,\r\n  getItemDisplayClasses,\r\n} from '../../common/layout/display-options';\r\n\r\nconst placeholderClasses = 'block bg-neutral w-full h-full rounded';\r\n\r\n/**\r\n * The `atomic-result-placeholder` component provides an intermediate visual state that is rendered before the first results are available.\r\n * @internal\r\n */\r\n@Component({\r\n  tag: 'atomic-result-placeholder',\r\n  styleUrl: 'atomic-result-placeholder.pcss',\r\n  shadow: true,\r\n})\r\nexport class AtomicResultPlaceholder {\r\n  @Prop() display!: ItemDisplayLayout;\r\n  @Prop() density!: ItemDisplayDensity;\r\n  @Prop() imageSize!: ItemDisplayImageSize;\r\n\r\n  private renderExcerptLine(width: string) {\r\n    return (\r\n      <div\r\n        style={{\r\n          height: 'var(--line-height)',\r\n          width,\r\n        }}\r\n      >\r\n        <div\r\n          class={placeholderClasses}\r\n          style={{height: 'var(--font-size)'}}\r\n        ></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div\r\n        class={`result-root placeholder with-sections animate-pulse ${getItemDisplayClasses(\r\n          this.display,\r\n          this.density,\r\n          this.imageSize\r\n        )\r\n          .join(' ')\r\n          .trim()}`}\r\n      >\r\n        <atomic-result-section-visual>\r\n          <div class={placeholderClasses}></div>\r\n        </atomic-result-section-visual>\r\n        <atomic-result-section-badges>\r\n          <div class={`badge ${placeholderClasses}`}></div>\r\n        </atomic-result-section-badges>\r\n        <atomic-result-section-actions>\r\n          <div class={`action ${placeholderClasses}`}></div>\r\n        </atomic-result-section-actions>\r\n        <atomic-result-section-title>\r\n          <div class={`title ${placeholderClasses}`}></div>\r\n        </atomic-result-section-title>\r\n        <atomic-result-section-excerpt>\r\n          {this.renderExcerptLine('100%')}\r\n          {this.renderExcerptLine('95%')}\r\n          {this.renderExcerptLine('98%')}\r\n        </atomic-result-section-excerpt>\r\n        <atomic-result-section-bottom-metadata>\r\n          <div class=\"fields-placeholder\">\r\n            {Array.from({length: 4}, () => (\r\n              <div\r\n                class={`field-value-placeholder ${placeholderClasses}`}\r\n              ></div>\r\n            ))}\r\n          </div>\r\n        </atomic-result-section-bottom-metadata>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import {Element, Component} from '@stencil/core';\r\nimport {hideEmptySection} from '../../../../utils/item-section-utils';\r\n\r\n/**\r\n * This section allows the information seeker to perform an action on an item without having to view its details.\r\n * For example, in Commerce you can add an item to the cart directly or add it to a wish list to view at a later time.\r\n *\r\n * Behavior:\r\n * * Exposes the `--line-height` CSS variable so child elements can adjust to the current line height.\r\n * ** You should ensure that elements inside of it have `height: var(--line-height)`.\r\n * * Is a wrapping flexbox with a gap.\r\n * * May appear over, next to, or beneath the visual section.\r\n */\r\n@Component({\r\n  tag: 'atomic-result-section-actions',\r\n  shadow: false,\r\n})\r\nexport class AtomicResultSectionActions {\r\n  @Element() private host!: HTMLElement;\r\n\r\n  public componentDidRender() {\r\n    hideEmptySection(this.host);\r\n  }\r\n}\r\n","import {Element, Component} from '@stencil/core';\r\nimport {hideEmptySection} from '../../../../utils/item-section-utils';\r\n\r\n/**\r\n * This section provides badges that highlight special features of the item.\r\n *\r\n * Behavior:\r\n * * Exposes the `--line-height` CSS variable so child elements can adjust to the current line height.\r\n * ** You should ensure that elements inside of it have `height: var(--line-height)`.\r\n * * Is a wrapping flexbox with a gap.\r\n * * May appear over, next to, or beneath the visual section.\r\n */\r\n@Component({\r\n  tag: 'atomic-result-section-badges',\r\n  shadow: false,\r\n})\r\nexport class AtomicResultSectionBadges {\r\n  @Element() private host!: HTMLElement;\r\n\r\n  public componentDidRender() {\r\n    hideEmptySection(this.host);\r\n  }\r\n}\r\n","import {Element, Component} from '@stencil/core';\r\nimport {hideEmptySection} from '../../../../utils/item-section-utils';\r\n\r\n/**\r\n * This section displays additional descriptive information about the item.\r\n *\r\n * Behavior:\r\n * * Has a maximum height of two lines.\r\n * ** We recommend that you use `atomic-result-fields-list` to ensure that the fields in this section don’t overflow.\r\n * * Exposes the `--line-height` variable so child elements can adjust to the current line height.\r\n * * Has a defined CSS `color` property for text.\r\n * * Has a font weight.\r\n */\r\n@Component({\r\n  tag: 'atomic-result-section-bottom-metadata',\r\n  shadow: false,\r\n})\r\nexport class AtomicResultSectionBottomMetadata {\r\n  @Element() private host!: HTMLElement;\r\n\r\n  public componentDidRender() {\r\n    hideEmptySection(this.host);\r\n  }\r\n}\r\n","import {Element, Component} from '@stencil/core';\r\nimport {hideEmptySection} from '../../../../utils/item-section-utils';\r\n\r\n/**\r\n * This section contains an informative summary of the item's content.\r\n *\r\n * Behavior:\r\n * * Has a fixed height of one to three lines, depending on the layout and density.\r\n * * Ellipses overflowing text.\r\n * * Exposes the `--line-height` CSS variable so child elements can adjust to the current line height.\r\n * * Has a defined CSS `color` property for text.\r\n */\r\n@Component({\r\n  tag: 'atomic-result-section-excerpt',\r\n  shadow: false,\r\n})\r\nexport class AtomicResultSectionExcerpt {\r\n  @Element() private host!: HTMLElement;\r\n\r\n  public componentDidRender() {\r\n    hideEmptySection(this.host);\r\n  }\r\n}\r\n","import {Element, Component} from '@stencil/core';\r\nimport {hideEmptySection} from '../../../../utils/item-section-utils';\r\n\r\n/**\r\n * This section identifies the item by its name, and its main use is to make the result list scannable.\r\n * This is usually the page title.\r\n *\r\n * Behavior:\r\n * * Has a fixed height of two lines on grid layouts.\r\n * * Exposes the `--line-height` CSS variable so child elements can adjust to the current line height.\r\n * * Has a defined CSS `color` property for text.\r\n */\r\n@Component({\r\n  tag: 'atomic-result-section-title',\r\n  shadow: false,\r\n})\r\nexport class AtomicResultSectionTitle {\r\n  @Element() private host!: HTMLElement;\r\n\r\n  public componentDidRender() {\r\n    hideEmptySection(this.host);\r\n  }\r\n}\r\n","import {Element, Component, Prop} from '@stencil/core';\r\nimport {hideEmptySection} from '../../../../utils/item-section-utils';\r\nimport {ItemDisplayImageSize} from '../../../common/layout/display-options';\r\n\r\n/**\r\n * This section provides visual information about the item.\r\n * For example, in Commerce, an image is a great shorthand for a product category.\r\n * An icon can quickly show the item type, or an avatar can help identify to whom it is related.\r\n *\r\n * Behavior:\r\n * * Has a fixed size that depends on the specified image size, the layout, the density, and the screen size.\r\n * ** When the image size is set to `icon`, this section stays very small.\r\n * ** You should ensure that elements inside of it take the available space.\r\n * * Always has a 1:1 aspect ratio.\r\n */\r\n@Component({\r\n  tag: 'atomic-result-section-visual',\r\n  shadow: false,\r\n})\r\nexport class AtomicResultSectionVisual {\r\n  @Element() private host!: HTMLElement;\r\n\r\n  /**\r\n   * How large or small the visual section of results using this template should be.\r\n   */\r\n  @Prop({reflect: true}) public imageSize?: ItemDisplayImageSize;\r\n\r\n  public componentDidRender() {\r\n    hideEmptySection(this.host);\r\n  }\r\n}\r\n","@import '../../../global/global.pcss';\r\n@import '../../common/item-list/styles/mixins.pcss';\r\n\r\n:host {\r\n  display: grid;\r\n}\r\n\r\n.list-root.display-table {\r\n  @mixin atomic-result-table;\r\n  border: 1px solid var(--atomic-neutral);\r\n  border-radius: var(--atomic-border-radius-xl);\r\n\r\n  thead tr,\r\n  tbody tr:not(:last-child) {\r\n    position: relative;\r\n\r\n    &::after {\r\n      content: ' ';\r\n      display: block;\r\n      position: absolute;\r\n      height: 1px;\r\n      bottom: 0;\r\n      left: var(--padding);\r\n      right: var(--padding);\r\n      background-color: var(--atomic-neutral);\r\n    }\r\n  }\r\n\r\n  th,\r\n  td {\r\n    border-color: transparent;\r\n    border-radius: initial;\r\n  }\r\n\r\n  th {\r\n    background-color: transparent;\r\n  }\r\n}\r\n","import {Component, h, Prop} from '@stencil/core';\r\nimport {\r\n  ItemDisplayDensity,\r\n  ItemDisplayImageSize,\r\n  getItemDisplayClasses,\r\n} from '../../common/layout/display-options';\r\n\r\nconst placeholderClasses = 'block bg-neutral rounded';\r\n\r\n/**\r\n * The `atomic-result-table-placeholder` component provides an intermediate visual state that is rendered before the first results are available.\r\n * @internal\r\n */\r\n@Component({\r\n  tag: 'atomic-result-table-placeholder',\r\n  styleUrl: 'atomic-result-table-placeholder.pcss',\r\n  shadow: true,\r\n})\r\nexport class AtomicResultTablePlaceholder {\r\n  @Prop() density!: ItemDisplayDensity;\r\n  @Prop() imageSize!: ItemDisplayImageSize;\r\n  @Prop() rows!: number;\r\n\r\n  private getClasses() {\r\n    return getItemDisplayClasses('table', this.density, this.imageSize);\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <table class={`list-root animate-pulse ${this.getClasses().join(' ')}`}>\r\n        <thead>\r\n          <tr>\r\n            <th>\r\n              <div\r\n                class={`h-8 mt-2 ${placeholderClasses}`}\r\n                style={{width: '14.5rem'}}\r\n              ></div>\r\n            </th>\r\n            <th>\r\n              <div\r\n                class={`h-8 mt-2 ${placeholderClasses}`}\r\n                style={{width: '9.75rem'}}\r\n              ></div>\r\n            </th>\r\n            <th>\r\n              <div\r\n                class={`h-8 mt-2 ${placeholderClasses}`}\r\n                style={{width: '6.5rem'}}\r\n              ></div>\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {Array.from({length: this.rows}, () => (\r\n            <tr>\r\n              <td>\r\n                <div\r\n                  class={`h-8 mb-6 ${placeholderClasses}`}\r\n                  style={{width: '22.875rem'}}\r\n                ></div>\r\n                <div\r\n                  class={`h-5 mb-2 ${placeholderClasses}`}\r\n                  style={{width: '23.75rem'}}\r\n                ></div>\r\n                <div\r\n                  class={`h-5 ${placeholderClasses}`}\r\n                  style={{width: '11.5rem'}}\r\n                ></div>\r\n              </td>\r\n              <td>\r\n                <div\r\n                  class={`h-5 mt-1.5 ${placeholderClasses}`}\r\n                  style={{width: '11rem'}}\r\n                ></div>\r\n              </td>\r\n              <td>\r\n                <div\r\n                  class={`h-5 mt-1.5 ${placeholderClasses}`}\r\n                  style={{width: '4.875rem'}}\r\n                ></div>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n}\r\n"],"version":3}