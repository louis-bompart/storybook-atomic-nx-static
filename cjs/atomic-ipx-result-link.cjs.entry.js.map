{"file":"atomic-ipx-result-link.entry.cjs.js","mappings":";;;;;;;;;;;;;;;;;;AAAA,MAAM,sBAAsB,GAAG,weAAwe,CAAC;AACxgB,kCAAe,sBAAsB;;;;;;;;;;;;MCiCxB,mBAAmB;;;;;IA2BvB,UAAU;QACf,IAAI,CAAC,IAAI,CAAC,aAAa,CACrBA,2BAAgB,CACd,+BAA+B,EAC/B,CAAC,eAAwB;YACvB,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;SACxC,CACF,CACF,CAAC;QACF,IAAI,CAAC,qBAAqB,GAAGC,gBAA4B,CACvD,IAAI,CAAC,QAAQ,CAAC,MAAM,CACrB,CAAC;KACH;IAEM,iBAAiB;QACtB,MAAM,QAAQ,GAAG,YAAY,CAAC;QAC9B,IAAI,CAAC,cAAc,GAAG,CAAC,CAACC,qCAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC1D,IAAI,CAAC,cAAc,GAAGC,wCAAyB,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;KACtE;IAEM,MAAM,QAAQ;QACnB,MAAM,iBAAiB,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,WAAW,CAAC;QACtD,IAAI,iBAAiB,IAAI,IAAI,CAAC,qBAAqB,EAAE;YACnD,MAAM,MAAM,GACV,IAAI,CAAC,qBAAqB,CAAC,gCAAgC,CACzD,iBAAiB,CAClB,CAAC;YACJ,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;SACvC;QACD,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE,CAAC;KACjC;IAEM,MAAM;QACX,MAAM,IAAI,GAAGC,qBAAW,CAAC,IAAI,CAAC,YAAY,CAAC;cACvC,IAAI,CAAC,MAAM,CAAC,QAAQ;cACpBC,yCAA6B,CAC3B,IAAI,CAAC,YAAY,EACjB,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,QAAQ,CACd,CAAC;QAEN,QACEC,QAACC,8BAAqB,qDACpB,IAAI,EAAE,IAAI,EACV,QAAQ,EAAE,MAAM,IAAI,CAAC,QAAQ,EAAE,EAC/B,oBAAoB,EAAE,MAAM,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,EAAE,EACvE,qBAAqB,EAAE,MACrB,IAAI,CAAC,iBAAiB,CAAC,mBAAmB,EAAE,EAE9C,UAAU,EAAE,IAAI,CAAC,cAAc,EAC/B,eAAe,EAAE,IAAI,CAAC,eAAe,IAEpC,IAAI,CAAC,cAAc,IAClBD,qBAAQ,KAERA,gCACE,KAAK,EAAC,OAAO,EACb,OAAO,EAAC,UAAU,GACE,CACvB,CACqB,EACxB;KACH;;;AAxF4B;IAA5BE,sCAAkB,EAAE;qDAA4B;AAGxB;IAAxBC,sCAAa,EAAE;mDAAkC;AACd;IAAnCC,iDAAwB,EAAE;8DAA+C;;;;;","names":["buildCustomEvent","loadIPXActionsHistoryActions","getDefaultSlotFromHost","getAttributesFromLinkSlot","isUndefined","buildStringTemplateFromResult","h","LinkWithItemAnalytics","InitializeBindings","ResultContext","InteractiveResultContext"],"sources":["src/components/ipx/atomic-ipx-result-link/atomic-ipx-result-link.pcss?tag=atomic-ipx-result-link","src/components/ipx/atomic-ipx-result-link/atomic-ipx-result-link.tsx"],"sourcesContent":["@import '../../../global/mixins.pcss';\n\natomic-ipx-result-link {\n  a {\n    @mixin link-style;\n  }\n}\n","import {isUndefined} from '@coveo/bueno';\nimport {\n  IPXActionsHistoryActionCreators,\n  InteractiveResult,\n  loadIPXActionsHistoryActions,\n} from '@coveo/headless';\nimport {Component, h, Prop, Element} from '@stencil/core';\nimport {Bindings} from '../../../components';\nimport {buildCustomEvent} from '../../../utils/event-utils';\nimport {\n  InitializableComponent,\n  InitializeBindings,\n} from '../../../utils/initialization-utils';\nimport {buildStringTemplateFromResult} from '../../../utils/result-utils';\nimport {getDefaultSlotFromHost} from '../../../utils/slot-utils';\nimport {AnyUnfoldedItem} from '../../common/interface/item';\nimport {getAttributesFromLinkSlot} from '../../common/item-link/attributes-slot';\nimport {LinkWithItemAnalytics} from '../../common/item-link/item-link';\nimport {\n  ResultContext,\n  InteractiveResultContext,\n} from '../../search/result-template-components/result-template-decorators';\n\n/**\n * The `atomic-ipx-result-link` component automatically transforms a search result title into a clickable link that points to the original item. It is an experimental internal component not intended for general use.\n * @slot default - Lets you display alternative content inside the link\n * @slot attributes - Lets you pass [attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#attributes) down to the link element, overriding other attributes, to be used exclusively with an \"a\" tag such as `<a slot=\"attributes\" target=\"_blank\" download></a>`.\n * @internal\n */\n@Component({\n  tag: 'atomic-ipx-result-link',\n  styleUrl: 'atomic-ipx-result-link.pcss',\n  shadow: false,\n})\nexport class AtomicIPXResultLink implements InitializableComponent {\n  @InitializeBindings() public bindings!: Bindings;\n  public error!: Error;\n\n  @ResultContext() private result!: AnyUnfoldedItem;\n  @InteractiveResultContext() private interactiveResult!: InteractiveResult;\n\n  @Element() private host!: HTMLElement;\n\n  /**\n   * Specifies a template literal from which to generate the `href` attribute value (see\n   * [Template literals](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Template_literals)).\n   *\n   * The template literal can reference any number of result properties from the parent result. It can also reference the window object.\n   *\n   * For example, the following markup generates an `href` value such as `http://uri.com?id=itemTitle`, using the result's `clickUri` and `itemtitle` fields.\n   * ```html\n   * <atomic-ipx-result-link href-template='${clickUri}?id=${raw.itemtitle}'></atomic-ipx-result-link>\n   * ```\n   */\n  @Prop({reflect: true}) hrefTemplate?: string;\n\n  private hasDefaultSlot!: boolean;\n  private linkAttributes?: Attr[];\n  private stopPropagation?: boolean;\n  private actionsHistoryActions?: IPXActionsHistoryActionCreators;\n\n  public initialize() {\n    this.host.dispatchEvent(\n      buildCustomEvent(\n        'atomic/resolveStopPropagation',\n        (stopPropagation: boolean) => {\n          this.stopPropagation = stopPropagation;\n        }\n      )\n    );\n    this.actionsHistoryActions = loadIPXActionsHistoryActions(\n      this.bindings.engine\n    );\n  }\n\n  public connectedCallback() {\n    const slotName = 'attributes';\n    this.hasDefaultSlot = !!getDefaultSlotFromHost(this.host);\n    this.linkAttributes = getAttributesFromLinkSlot(this.host, slotName);\n  }\n\n  public async onSelect() {\n    const resultPermanentId = this.result.raw.permanentid;\n    if (resultPermanentId && this.actionsHistoryActions) {\n      const action =\n        this.actionsHistoryActions.addPageViewEntryInActionsHistory(\n          resultPermanentId\n        );\n      this.bindings.engine.dispatch(action);\n    }\n    this.interactiveResult.select();\n  }\n\n  public render() {\n    const href = isUndefined(this.hrefTemplate)\n      ? this.result.clickUri\n      : buildStringTemplateFromResult(\n          this.hrefTemplate,\n          this.result,\n          this.bindings\n        );\n\n    return (\n      <LinkWithItemAnalytics\n        href={href}\n        onSelect={() => this.onSelect()}\n        onBeginDelayedSelect={() => this.interactiveResult.beginDelayedSelect()}\n        onCancelPendingSelect={() =>\n          this.interactiveResult.cancelPendingSelect()\n        }\n        attributes={this.linkAttributes}\n        stopPropagation={this.stopPropagation}\n      >\n        {this.hasDefaultSlot ? (\n          <slot />\n        ) : (\n          <atomic-result-text\n            field=\"title\"\n            default=\"no-title\"\n          ></atomic-result-text>\n        )}\n      </LinkWithItemAnalytics>\n    );\n  }\n}\n"],"version":3}