{"file":"local-storage-utils-e06a332f.js","mappings":"IAEY;AAAZ,WAAY,YAAY;IACtB,uDAAuC,CAAA;IACvC,+EAA+D,CAAA;IAC/D,qEAAqD,CAAA;AACvD,CAAC,EAJW,YAAY,KAAZ,YAAY,QAIvB;MAYY,WAAW;IACtB,iBAAgB;IACT,KAAK;QACV,OAAO,IAAI,CAAC,2BAA2B,CACrC,MAAM,YAAY,CAAC,KAAK,EAAE,EAC1B,SAAQ,CACT,CAAC;KACH;IAEM,OAAO,CAAC,GAAiB;QAC9B,OAAO,IAAI,CAAC,2BAA2B,CACrC,MAAM,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,EAC/B,MAAM,IAAI,CACX,CAAC;KACH;IAEM,aAAa,CAAI,GAAiB,EAAE,QAAW;QACpD,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAC/B,IAAI,CAAC,IAAI,EAAE;YACT,OAAO,QAAQ,CAAC;SACjB;QACD,OAAO,IAAI,CAAC,aAAa,CACvB,GAAG,EACH,MAAM,IAAI,CAAC,KAAK,CAAC,IAAI,CAAM,EAC3B,MAAM,QAAQ,CACf,CAAC;KACH;IAEM,GAAG,CAAC,KAAa;QACtB,OAAO,IAAI,CAAC,2BAA2B,CACrC,MAAM,YAAY,CAAC,GAAG,CAAC,KAAK,CAAC,EAC7B,MAAM,IAAI,CACX,CAAC;KACH;IAED,IAAW,MAAM;QACf,OAAO,IAAI,CAAC,SAAS,CACnB,MAAM,YAAY,CAAC,MAAM,EACzB,MAAM,CAAC,CACR,CAAC;KACH;IAEM,UAAU,CAAC,GAAiB;QACjC,OAAO,IAAI,CAAC,2BAA2B,CACrC,MAAM,YAAY,CAAC,UAAU,CAAC,GAAG,CAAC,EAClC,SAAQ,CACT,CAAC;KACH;IAEM,OAAO,CAAC,GAAiB,EAAE,KAAa;QAC7C,OAAO,IAAI,CAAC,2BAA2B,CACrC,MAAM,YAAY,CAAC,OAAO,CAAC,GAAG,EAAE,KAAK,CAAC,EACtC,SAAQ,CACT,CAAC;KACH;IAEM,OAAO,CAAC,GAAiB,EAAE,GAAY;QAC5C,MAAM,WAAW,GAAG,IAAI,CAAC,aAAa,CACpC,GAAG,EACH,MAAM,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,EACzB,MAAM,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CACzB,CAAC;QACF,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC;KACvC;IAEO,2BAA2B,CACjC,KAAsB,EACtB,MAAuB;QAEvB,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE;YAC3B,OAAO,CAAC,IAAI,CACV,sGAAsG,CACvG,CAAC;YACF,OAAO,MAAM,EAAE,CAAC;SACjB,CAAC,CAAC;KACJ;IAEO,aAAa,CACnB,GAAiB,EACjB,KAAsB,EACtB,MAAuB;QAEvB,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE;YAC3B,OAAO,CAAC,IAAI,CACV,wEAAwE,GAAG,EAAE,CAC9E,CAAC;YACF,OAAO,MAAM,EAAE,CAAC;SACjB,CAAC,CAAC;KACJ;IAEO,SAAS,CACf,KAAsB,EACtB,MAAuB;QAEvB,IAAI;YACF,OAAO,KAAK,EAAE,CAAC;SAChB;QAAC,OAAO,CAAC,EAAE;YACV,OAAO,CAAC,IAAI,CAAC,CAAU,CAAC,CAAC;YACzB,OAAO,MAAM,EAAE,CAAC;SACjB;KACF;;;;;","names":[],"sources":["src/utils/local-storage-utils.tsx"],"sourcesContent":["import {StandaloneSearchBoxAnalytics} from '@coveo/headless';\r\n\r\nexport enum StorageItems {\r\n  RECENT_QUERIES = 'coveo-recent-queries',\r\n  STANDALONE_SEARCH_BOX_DATA = 'coveo-standalone-search-box-data',\r\n  GENERATED_ANSWER_DATA = 'coveo-generated-answer-data',\r\n}\r\n\r\nexport interface StandaloneSearchBoxData {\r\n  value: string;\r\n  enableQuerySyntax?: boolean;\r\n  analytics: StandaloneSearchBoxAnalytics;\r\n}\r\n\r\nexport interface GeneratedAnswerData {\r\n  isVisible: boolean;\r\n}\r\n\r\nexport class SafeStorage implements Storage {\r\n  constructor() {}\r\n  public clear() {\r\n    return this.tryAccessLocalStorageOrWarn(\r\n      () => localStorage.clear(),\r\n      () => {}\r\n    );\r\n  }\r\n\r\n  public getItem(key: StorageItems) {\r\n    return this.tryAccessLocalStorageOrWarn(\r\n      () => localStorage.getItem(key),\r\n      () => null\r\n    );\r\n  }\r\n\r\n  public getParsedJSON<T>(key: StorageItems, fallback: T) {\r\n    const item = this.getItem(key);\r\n    if (!item) {\r\n      return fallback;\r\n    }\r\n    return this.tryJSONOrWarn(\r\n      key,\r\n      () => JSON.parse(item) as T,\r\n      () => fallback\r\n    );\r\n  }\r\n\r\n  public key(index: number) {\r\n    return this.tryAccessLocalStorageOrWarn(\r\n      () => localStorage.key(index),\r\n      () => null\r\n    );\r\n  }\r\n\r\n  public get length() {\r\n    return this.tryOrElse(\r\n      () => localStorage.length,\r\n      () => 0\r\n    );\r\n  }\r\n\r\n  public removeItem(key: StorageItems) {\r\n    return this.tryAccessLocalStorageOrWarn(\r\n      () => localStorage.removeItem(key),\r\n      () => {}\r\n    );\r\n  }\r\n\r\n  public setItem(key: StorageItems, value: string) {\r\n    return this.tryAccessLocalStorageOrWarn(\r\n      () => localStorage.setItem(key, value),\r\n      () => {}\r\n    );\r\n  }\r\n\r\n  public setJSON(key: StorageItems, obj: unknown) {\r\n    const stringified = this.tryJSONOrWarn(\r\n      key,\r\n      () => JSON.stringify(obj),\r\n      () => JSON.stringify({})\r\n    );\r\n    return this.setItem(key, stringified);\r\n  }\r\n\r\n  private tryAccessLocalStorageOrWarn<OnSuccess, OnFailure>(\r\n    tryTo: () => OnSuccess,\r\n    orElse: () => OnFailure\r\n  ) {\r\n    return this.tryOrElse(tryTo, () => {\r\n      console.warn(\r\n        'Error while trying to read or modify local storage. This can be caused by browser specific settings.'\r\n      );\r\n      return orElse();\r\n    });\r\n  }\r\n\r\n  private tryJSONOrWarn<OnSuccess, OnFailure>(\r\n    key: StorageItems,\r\n    tryTo: () => OnSuccess,\r\n    orElse: () => OnFailure\r\n  ) {\r\n    return this.tryOrElse(tryTo, () => {\r\n      console.warn(\r\n        `Error while trying to do JSON manipulation with local storage entry. ${key}`\r\n      );\r\n      return orElse();\r\n    });\r\n  }\r\n\r\n  private tryOrElse<OnSuccess, OnFailure>(\r\n    tryTo: () => OnSuccess,\r\n    orElse: () => OnFailure\r\n  ) {\r\n    try {\r\n      return tryTo();\r\n    } catch (e) {\r\n      console.warn(e as Error);\r\n      return orElse();\r\n    }\r\n  }\r\n}\r\n"],"version":3}