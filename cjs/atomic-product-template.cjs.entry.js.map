{"file":"atomic-product-template.entry.cjs.js","mappings":"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","names":["isResultSectionNode","isVisualNode","isElementNode","tableElementTagName","aggregate","h","ProductTemplatesHelpers","MapProp"],"sources":["src/components/commerce/product-template/product-template-common.tsx","src/components/commerce/product-template/atomic-product-template.tsx"],"sourcesContent":["import {\n  ProductTemplate,\n  ProductTemplateCondition,\n  ProductTemplatesHelpers,\n} from '@coveo/headless/commerce';\nimport {h} from '@stencil/core';\nimport {aggregate, isElementNode, isVisualNode} from '../../../utils/utils';\nimport {isResultSectionNode} from '../../common/layout/sections';\nimport {tableElementTagName} from '../../search/atomic-table-result/table-element-utils';\n\nexport type TemplateContent = DocumentFragment;\n\ninterface ProductTemplateCommonProps {\n  allowEmpty?: boolean;\n  host: HTMLDivElement;\n  validParents: string[];\n  setError: (error: Error) => void;\n}\n\ntype TemplateNodeType =\n  | 'section'\n  | 'metadata'\n  | 'table-column-definition'\n  | 'other';\n\nexport function getTemplateNodeType(node: Node): TemplateNodeType {\n  if (isResultSectionNode(node)) {\n    return 'section';\n  }\n  if (!isVisualNode(node)) {\n    return 'metadata';\n  }\n  if (\n    isElementNode(node) &&\n    node.tagName.toLowerCase() === tableElementTagName\n  ) {\n    return 'table-column-definition';\n  }\n  return 'other';\n}\n\nfunction groupNodesByType(nodes: NodeList) {\n  return aggregate(Array.from(nodes), (node) => getTemplateNodeType(node));\n}\n\nexport class ProductTemplateCommon {\n  private host: HTMLDivElement;\n  public matchConditions: ProductTemplateCondition[] = [];\n\n  constructor({\n    host,\n    setError,\n    validParents,\n    allowEmpty = false,\n  }: ProductTemplateCommonProps) {\n    this.host = host;\n    this.validateTemplate(host, setError, validParents, allowEmpty);\n  }\n\n  validateTemplate(\n    host: HTMLDivElement,\n    setError: (error: Error) => void,\n    validParents: string[],\n    allowEmpty = true\n  ) {\n    const hasValidParent = validParents\n      .map((p) => p.toUpperCase())\n      .includes(host.parentElement?.nodeName || '');\n    const tagName = host.nodeName.toLowerCase();\n\n    if (!hasValidParent) {\n      setError(\n        new Error(\n          `The \"${tagName}\" component has to be the child of one of the following: ${validParents\n            .map((p) => `\"${p.toLowerCase()}\"`)\n            .join(', ')}.`\n        )\n      );\n      return;\n    }\n\n    const template = host.querySelector('template');\n    if (!template) {\n      setError(\n        new Error(\n          `The \"${tagName}\" component must contain a \"template\" element as a child.`\n        )\n      );\n      return;\n    }\n\n    if (!allowEmpty && !template.innerHTML.trim()) {\n      setError(\n        new Error(`The \"template\" tag inside \"${tagName}\" cannot be empty.`)\n      );\n      return;\n    }\n\n    if (template.content.querySelector('script')) {\n      console.warn(\n        'Any \"script\" tags defined inside of \"template\" elements are not supported and will not be executed when the products are rendered.',\n        host\n      );\n    }\n\n    const {section: sectionNodes, other: otherNodes} = groupNodesByType(\n      template.content.childNodes\n    );\n    if (sectionNodes?.length && otherNodes?.length) {\n      console.warn(\n        'Product templates should only contain section elements or non-section elements. Future updates could unpredictably affect this product template.',\n        host,\n        {sectionNodes, otherNodes}\n      );\n    }\n  }\n\n  getTemplate(\n    conditions: ProductTemplateCondition[],\n    error: Error\n  ): ProductTemplate<TemplateContent> | null {\n    if (error) {\n      return null;\n    }\n\n    return {\n      conditions: conditions.concat(this.matchConditions),\n      content: getTemplateElement(this.host).content!,\n      priority: 1,\n    };\n  }\n\n  renderIfError(error: Error) {\n    if (error) {\n      return (\n        <atomic-component-error\n          element={this.host}\n          error={error}\n        ></atomic-component-error>\n      );\n    }\n  }\n}\n\nfunction getTemplateElement(host: HTMLElement) {\n  return host.querySelector('template')!;\n}\nexport function makeMatchConditions(\n  mustMatch: Record<string, string[]>,\n  mustNotMatch: Record<string, string[]>\n): ProductTemplateCondition[] {\n  const conditions: ProductTemplateCondition[] = [];\n  for (const field in mustMatch) {\n    conditions.push(\n      ProductTemplatesHelpers.fieldMustMatch(field, mustMatch[field])\n    );\n  }\n\n  for (const field in mustNotMatch) {\n    conditions.push(\n      ProductTemplatesHelpers.fieldMustNotMatch(field, mustNotMatch[field])\n    );\n  }\n  return conditions;\n}\n\nexport function makeDefinedConditions(\n  ifDefined?: string,\n  ifNotDefined?: string\n): ProductTemplateCondition[] {\n  const conditions: ProductTemplateCondition[] = [];\n  if (ifDefined) {\n    const fieldNames = ifDefined.split(',');\n    conditions.push(ProductTemplatesHelpers.fieldsMustBeDefined(fieldNames));\n  }\n\n  if (ifNotDefined) {\n    const fieldNames = ifNotDefined.split(',');\n    conditions.push(ProductTemplatesHelpers.fieldsMustNotBeDefined(fieldNames));\n  }\n  return conditions;\n}\n","import {\n  ProductTemplate,\n  ProductTemplateCondition,\n} from '@coveo/headless/commerce';\nimport {Component, Element, Prop, Method, State} from '@stencil/core';\nimport {MapProp} from '../../../utils/props-utils';\nimport {\n  ProductTemplateCommon,\n  makeMatchConditions,\n} from './product-template-common';\n\n/**\n * @internal\n */\n@Component({\n  tag: 'atomic-product-template',\n  shadow: true,\n})\nexport class AtomicProductTemplate {\n  private productTemplateCommon: ProductTemplateCommon;\n\n  @State() public error!: Error;\n\n  @Element() public host!: HTMLDivElement;\n\n  /**\n   * A function that must return true on products for the product template to apply.\n   * Set programmatically before initialization, not via attribute.\n   *\n   * For example, the following targets a template and sets a condition to make it apply only to products whose `ec_name` contains `singapore`:\n   * `document.querySelector('#target-template').conditions = [(product) => /singapore/i.test(product.ec_name)];`\n   */\n  @Prop() public conditions: ProductTemplateCondition[] = [];\n\n  @MapProp({splitValues: true}) public mustMatch: Record<string, string[]> = {};\n\n  @MapProp({splitValues: true}) public mustNotMatch: Record<string, string[]> =\n    {};\n\n  constructor() {\n    this.productTemplateCommon = new ProductTemplateCommon({\n      host: this.host,\n      setError: (err) => {\n        this.error = err;\n      },\n      validParents: [\n        'atomic-commerce-product-list',\n        'atomic-commerce-recommendation-list',\n      ],\n      allowEmpty: true,\n    });\n  }\n\n  public componentWillLoad() {\n    this.productTemplateCommon.matchConditions = makeMatchConditions(\n      this.mustMatch,\n      this.mustNotMatch\n    );\n  }\n\n  /**\n   * Gets the product template to apply based on the evaluated conditions.\n   */\n  @Method()\n  public async getTemplate(): Promise<ProductTemplate<DocumentFragment> | null> {\n    return this.productTemplateCommon.getTemplate(this.conditions, this.error);\n  }\n\n  public render() {\n    return this.productTemplateCommon.renderIfError(this.error);\n  }\n}\n"],"version":3}