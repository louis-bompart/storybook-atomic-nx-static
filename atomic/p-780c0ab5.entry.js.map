{"version":3,"names":["AtomicFormatNumber","this","format","value","languages","toLocaleString","minimumIntegerDigits","minimumFractionDigits","maximumFractionDigits","minimumSignificantDigits","maximumSignificantDigits","componentWillLoad","dispatchNumberFormatEvent","host","error","render","h","key","element"],"sources":["src/components/search/formats/atomic-format-number.tsx"],"sourcesContent":["import {Component, Element, Prop, State, h} from '@stencil/core';\r\nimport {\r\n  dispatchNumberFormatEvent,\r\n  NumberFormatter,\r\n} from '../../common/formats/format-common';\r\n\r\n/**\r\n * The `atomic-format-number` component is used for number formatting.\r\n * The numerical format of compatible parents will be set according to the properties of this component.\r\n */\r\n@Component({\r\n  tag: 'atomic-format-number',\r\n  shadow: true,\r\n})\r\nexport class AtomicFormatNumber {\r\n  @Element() private host!: HTMLElement;\r\n\r\n  @State() public error!: Error;\r\n\r\n  /**\r\n   * The minimum number of integer digits to use.\r\n   */\r\n  @Prop({reflect: true}) public minimumIntegerDigits?: number;\r\n  /**\r\n   * The minimum number of fraction digits to use.\r\n   */\r\n  @Prop({reflect: true}) public minimumFractionDigits?: number;\r\n  /**\r\n   * The maximum number of fraction digits to use.\r\n   */\r\n  @Prop({reflect: true}) public maximumFractionDigits?: number;\r\n  /**\r\n   * The minimum number of significant digits to use.\r\n   */\r\n  @Prop({reflect: true}) public minimumSignificantDigits?: number;\r\n  /**\r\n   * The maximum number of significant digits to use.\r\n   */\r\n  @Prop({reflect: true}) public maximumSignificantDigits?: number;\r\n\r\n  componentWillLoad() {\r\n    try {\r\n      dispatchNumberFormatEvent(\r\n        (value, languages) => this.format(value, languages),\r\n        this.host\r\n      );\r\n    } catch (error) {\r\n      this.error = error as Error;\r\n    }\r\n  }\r\n\r\n  private format: NumberFormatter = (value, languages) => {\r\n    return value.toLocaleString(languages, {\r\n      minimumIntegerDigits: this.minimumIntegerDigits,\r\n      minimumFractionDigits: this.minimumFractionDigits,\r\n      maximumFractionDigits: this.maximumFractionDigits,\r\n      minimumSignificantDigits: this.minimumSignificantDigits,\r\n      maximumSignificantDigits: this.maximumSignificantDigits,\r\n    });\r\n  };\r\n\r\n  public render() {\r\n    if (this.error) {\r\n      return (\r\n        <atomic-component-error\r\n          element={this.host}\r\n          error={this.error}\r\n        ></atomic-component-error>\r\n      );\r\n    }\r\n  }\r\n}\r\n"],"mappings":"oHAcaA,EAAkB,M,yBAqCrBC,KAAAC,OAA0B,CAACC,EAAOC,IACjCD,EAAME,eAAeD,EAAW,CACrCE,qBAAsBL,KAAKK,qBAC3BC,sBAAuBN,KAAKM,sBAC5BC,sBAAuBP,KAAKO,sBAC5BC,yBAA0BR,KAAKQ,yBAC/BC,yBAA0BT,KAAKS,2B,mNAjBnC,iBAAAC,GACE,IACEC,GACE,CAACT,EAAOC,IAAcH,KAAKC,OAAOC,EAAOC,IACzCH,KAAKY,K,CAEP,MAAOC,GACPb,KAAKa,MAAQA,C,EAcV,MAAAC,GACL,GAAId,KAAKa,MAAO,CACd,OACEE,EAAA,0BAAAC,IAAA,2CACEC,QAASjB,KAAKY,KACdC,MAAOb,KAAKa,O"}