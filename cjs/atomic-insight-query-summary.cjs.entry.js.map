{"file":"atomic-insight-query-summary.entry.cjs.js","mappings":";;;;;;;;;;;;;;AAAA,MAAM,4BAA4B,GAAG,6/tCAA6/tC,CAAC;AACniuC,wCAAe,4BAA4B;;;;;;;;;;;;MCyB9B,kBAAkB;;;;;;IActB,UAAU;QACf,IAAI,CAAC,YAAY,GAAGA,eAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;KAC7D;IAEM,MAAM;QACX,MAAM,EACJ,QAAQ,EACR,QAAQ,EACR,UAAU,EACV,mBAAmB,EACnB,WAAW,EACX,UAAU,EACV,SAAS,EACT,KAAK,EACL,KAAK,GACN,GAAG,IAAI,CAAC,iBAAiB,CAAC;QAC3B,MAAM,EAAC,eAAe,EAAE,UAAU,EAAE,OAAO,EAAC,GAC1CC,mCAA6B,CAAC;YAC5B,KAAK,EAAE,WAAW;YAClB,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI;YACxB,SAAS;YACT,IAAI,EAAE,UAAU;YAChB,KAAK;YACL,KAAK;SACN,CAAC,CAAC;QAEL,IAAI,QAAQ,EAAE;YACZ,IAAI,CAAC,WAAW,GAAG,eAAe,CAAC;YACnC,QACEC,QAACC,uBAAiB,IAChB,mBAAmB,EAAE,mBAAmB,EACxC,UAAU,EAAE,UAAU,EACtB,QAAQ,EAAE,QAAQ,IAElBD,QAACE,2BAAqB,IAAC,iBAAiB,EAAC,WAAW,IAClDF,QAACG,wBAAe,IACd,GAAG,EAAE,OAAO,EACZ,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,MAAM,EAAE,UAAU,EAClB,KAAK,EAAE,KAAK,GACK,CACG,CACN,EACpB;SACH;QAED,IAAI,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE;YACnC,OAAO;SACR;QAED,QACEH,iBAAK,KAAK,EAAC,8CAA8C,IACtD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,uBAAuB,CAAC,CAC1C,EACN;KACH;;AAlE4B;IAA5BI,sCAAkB,EAAE;oDAAmC;AAKhD;IAFPC,yCAAqB,CAAC,cAAc,CAAC;6DAEQ;AAIpC;IADTC,iCAAc,CAAC,eAAe,CAAC;uDACD;;;;;","names":["buildQuerySummary","getQuerySummaryI18nParameters","h","QuerySummaryGuard","QuerySummaryContainer","LocalizedString","InitializeBindings","BindStateToController","AriaLiveRegion"],"sources":["src/components/insight/atomic-insight-query-summary/atomic-insight-query-summary.pcss?tag=atomic-insight-query-summary&encapsulation=shadow","src/components/insight/atomic-insight-query-summary/atomic-insight-query-summary.tsx"],"sourcesContent":["@import '../../../global/global.pcss';\n\n:host {\n  overflow: hidden;\n}\n","import {\n  buildQuerySummary,\n  QuerySummary,\n  QuerySummaryState,\n} from '@coveo/headless/insight';\nimport {Component, State, h} from '@stencil/core';\nimport {AriaLiveRegion} from '../../../utils/accessibility-utils';\nimport {\n  BindStateToController,\n  InitializableComponent,\n  InitializeBindings,\n} from '../../../utils/initialization-utils';\nimport {LocalizedString} from '../../../utils/jsx-utils';\nimport {QuerySummaryContainer} from '../../common/query-summary/container';\nimport {QuerySummaryGuard} from '../../common/query-summary/guard';\nimport {getQuerySummaryI18nParameters} from '../../common/query-summary/utils';\nimport {InsightBindings} from '../atomic-insight-interface/atomic-insight-interface';\n\n/**\n * @internal\n */\n@Component({\n  tag: 'atomic-insight-query-summary',\n  styleUrl: 'atomic-insight-query-summary.pcss',\n  shadow: true,\n})\nexport class AtomicQuerySummary\n  implements InitializableComponent<InsightBindings>\n{\n  @InitializeBindings() public bindings!: InsightBindings;\n  public querySummary!: QuerySummary;\n\n  @BindStateToController('querySummary')\n  @State()\n  private querySummaryState!: QuerySummaryState;\n  @State() public error!: Error;\n\n  @AriaLiveRegion('query-summary')\n  protected ariaMessage!: string;\n\n  public initialize() {\n    this.querySummary = buildQuerySummary(this.bindings.engine);\n  }\n\n  public render() {\n    const {\n      hasError,\n      hasQuery,\n      hasResults,\n      firstSearchExecuted,\n      firstResult,\n      lastResult,\n      isLoading,\n      query,\n      total,\n    } = this.querySummaryState;\n    const {ariaLiveMessage, highlights, i18nKey} =\n      getQuerySummaryI18nParameters({\n        first: firstResult,\n        i18n: this.bindings.i18n,\n        isLoading,\n        last: lastResult,\n        query,\n        total,\n      });\n\n    if (hasQuery) {\n      this.ariaMessage = ariaLiveMessage;\n      return (\n        <QuerySummaryGuard\n          firstSearchExecuted={firstSearchExecuted}\n          hasResults={hasResults}\n          hasError={hasError}\n        >\n          <QuerySummaryContainer additionalClasses=\"px-6 py-4\">\n            <LocalizedString\n              key={i18nKey}\n              bindings={this.bindings}\n              params={highlights}\n              count={total}\n            ></LocalizedString>\n          </QuerySummaryContainer>\n        </QuerySummaryGuard>\n      );\n    }\n\n    if (this.querySummaryState.hasError) {\n      return;\n    }\n\n    return (\n      <div class=\"bg-[#F1F2FF] text-[#54698D] px-6 py-4 italic\">\n        {this.bindings.i18n.t('insight-related-cases')}\n      </div>\n    );\n  }\n}\n"],"version":3}