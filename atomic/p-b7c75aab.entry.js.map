{"version":3,"names":["buildCommerceLayout","element","mobileBreakpoint","buildSearchLayoutCommon","atomicCommerceLayoutCss","AtomicCommerceLayoutStyle0","AtomicCommerceLayout","this","DEFAULT_MOBILE_BREAKPOINT","componentDidLoad","id","host","randomID","styleTag","bindings","createStyleElement","innerHTML","appendChild","__decorate","InitializeBindings"],"sources":["src/components/commerce/atomic-commerce-layout/commerce-layout.ts","src/components/commerce/atomic-commerce-layout/atomic-commerce-layout.pcss?tag=atomic-commerce-layout","src/components/commerce/atomic-commerce-layout/atomic-commerce-layout.tsx"],"sourcesContent":["import {buildSearchLayoutCommon} from '../../common/atomic-layout-section/search-layout';\r\n\r\nexport function makeDesktopQuery(mobileBreakpoint: string) {\r\n  return `only screen and (min-width: ${mobileBreakpoint})`;\r\n}\r\nexport function buildCommerceLayout(\r\n  element: HTMLElement,\r\n  mobileBreakpoint: string\r\n) {\r\n  return buildSearchLayoutCommon(\r\n    element,\r\n    mobileBreakpoint,\r\n    'atomic-commerce-layout',\r\n    'atomic-commerce-interface'\r\n  );\r\n}\r\n",".atomic-modal-opened {\r\n  overflow-y: hidden;\r\n}\r\n\r\natomic-layout-section[section='search'] {\r\n  grid-area: atomic-section-search;\r\n}\r\n\r\natomic-layout-section[section='facets'] {\r\n  grid-area: atomic-section-facets;\r\n}\r\n\r\natomic-layout-section[section='main'] {\r\n  grid-area: atomic-section-main;\r\n}\r\n\r\natomic-layout-section[section='status'] {\r\n  grid-area: atomic-section-status;\r\n}\r\n\r\natomic-layout-section[section='pagination'] {\r\n  grid-area: atomic-section-pagination;\r\n}\r\n\r\n/**\r\n   * @prop --atomic-layout-max-search-box-input-width: The maximum width that the search box input will take.\r\n   * @prop --atomic-layout-max-search-box-double-suggestions-width: The maximum width that the search box suggestions will take when displaying a double list.\r\n   * @prop --atomic-layout-search-box-left-suggestions-width: When displaying a double list, the width of the left list.\r\n   */\r\natomic-commerce-layout {\r\n  width: 100%;\r\n  height: 100%;\r\n  display: none;\r\n  grid-template-areas:\r\n    '. atomic-section-search .'\r\n    '. atomic-section-main .';\r\n  grid-template-columns: var(--atomic-layout-spacing-x) minmax(0, 1fr) var(--atomic-layout-spacing-x);\r\n\r\n  atomic-layout-section[section='search'] {\r\n    margin: var(--atomic-layout-spacing-y) 0;\r\n    max-width: var(--atomic-layout-max-search-box-input-width, 678px);\r\n    width: 100%;\r\n    justify-self: center;\r\n\r\n    /* Only affects desktop */\r\n    atomic-commerce-search-box {\r\n      &::part(suggestions-double-list) {\r\n        width: 125%;\r\n        max-width: var(--atomic-layout-max-search-box-double-suggestions-width, 800px);\r\n      }\r\n\r\n      &::part(suggestions-left) {\r\n        flex-basis: var(--atomic-layout-search-box-left-suggestions-width, 30%);\r\n      }\r\n\r\n      &::part(suggestions-right) {\r\n        flex-basis: calc(100% - var(--atomic-layout-search-box-left-suggestions-width, 30%));\r\n      }\r\n    }\r\n  }\r\n\r\n  atomic-layout-section[section='facets'] {\r\n    display: none;\r\n\r\n    & * {\r\n      margin-bottom: var(--atomic-layout-spacing-y);\r\n    }\r\n  }\r\n\r\n  atomic-layout-section[section='main'] {\r\n    margin-bottom: var(--atomic-layout-spacing-y);\r\n  }\r\n\r\n  atomic-layout-section[section='horizontal-facets'] {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    margin-bottom: var(--atomic-layout-spacing-y);\r\n    row-gap: 0.5rem;\r\n\r\n    & > * {\r\n      max-width: 100%;\r\n    }\r\n\r\n    & > atomic-popover {\r\n      margin-right: 0.5rem;\r\n    }\r\n\r\n    & > atomic-popover {\r\n      display: none;\r\n    }\r\n  }\r\n\r\n  atomic-layout-section[section='status'] {\r\n    display: grid;\r\n    justify-content: space-between;\r\n    grid-template-areas:\r\n      'atomic-breadbox       atomic-breadbox'\r\n      'atomic-query-summary  atomic-sort'\r\n      'atomic-did-you-mean   atomic-did-you-mean'\r\n      'atomic-notifications  atomic-notifications';\r\n\r\n    & > * {\r\n      margin-bottom: var(--atomic-layout-spacing-y);\r\n    }\r\n\r\n    atomic-commerce-breadbox {\r\n      grid-area: atomic-breadbox;\r\n    }\r\n\r\n    atomic-commerce-query-summary {\r\n      grid-area: atomic-query-summary;\r\n      align-self: center;\r\n      overflow: hidden;\r\n    }\r\n\r\n    atomic-commerce-sort-dropdown {\r\n      grid-area: atomic-sort;\r\n      justify-self: end;\r\n    }\r\n\r\n    atomic-refine-toggle {\r\n      grid-area: atomic-sort;\r\n    }\r\n\r\n    atomic-commerce-did-you-mean {\r\n      grid-area: atomic-did-you-mean;\r\n    }\r\n\r\n    atomic-commerce-notifications {\r\n      grid-area: atomic-notifications;\r\n    }\r\n  }\r\n\r\n  atomic-layout-section[section='pagination'] {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n\r\n    atomic-commerce-load-more-products {\r\n      width: 100%;\r\n    }\r\n\r\n    & > * {\r\n      margin-top: var(--atomic-layout-spacing-y);\r\n    }\r\n\r\n    /* Approx. width of pager & results per page */\r\n    @media only screen and (min-width: 50rem) {\r\n      flex-direction: row;\r\n    }\r\n  }\r\n}\r\n","import {Component, Element, Prop} from '@stencil/core';\r\nimport {\r\n  InitializableComponent,\r\n  InitializeBindings,\r\n} from '../../../utils/initialization-utils';\r\nimport {DEFAULT_MOBILE_BREAKPOINT} from '../../../utils/replace-breakpoint';\r\nimport {randomID} from '../../../utils/utils';\r\nimport {CommerceBindings} from '../atomic-commerce-interface/atomic-commerce-interface';\r\nimport {buildCommerceLayout} from './commerce-layout';\r\n\r\n/**\r\n * @internal\r\n * The `atomic-commerce-layout` helps organize elements in the commerce page.\r\n */\r\n@Component({\r\n  tag: 'atomic-commerce-layout',\r\n  styleUrl: 'atomic-commerce-layout.pcss',\r\n  shadow: false,\r\n})\r\nexport class AtomicCommerceLayout\r\n  implements InitializableComponent<CommerceBindings>\r\n{\r\n  public error!: Error;\r\n\r\n  @Element() private host!: HTMLElement;\r\n  /**\r\n   * CSS value that defines where the layout goes from mobile to desktop.\r\n   * e.g., 800px, 65rem.\r\n   */\r\n  @Prop({reflect: true}) public mobileBreakpoint = DEFAULT_MOBILE_BREAKPOINT;\r\n  @InitializeBindings() public bindings!: CommerceBindings;\r\n\r\n  public componentDidLoad() {\r\n    const id = this.host.id || randomID('atomic-commerce-layout-');\r\n    this.host.id = id;\r\n    const styleTag = this.bindings.createStyleElement();\r\n    styleTag.innerHTML = buildCommerceLayout(this.host, this.mobileBreakpoint);\r\n    this.host.appendChild(styleTag);\r\n  }\r\n}\r\n"],"mappings":"4QAKgBA,EACdC,EACAC,GAEA,OAAOC,EACLF,EACAC,EACA,yBACA,4BAEJ,CCfA,MAAME,EAA0B,itHAChC,MAAAC,EAAeD,E,iXCkBFE,EAAoB,M,yBAUDC,KAAAL,iBAAmBM,E,sBAAAA,C,CAG1C,gBAAAC,GACL,MAAMC,EAAKH,KAAKI,KAAKD,IAAME,EAAS,2BACpCL,KAAKI,KAAKD,GAAKA,EACf,MAAMG,EAAWN,KAAKO,SAASC,qBAC/BF,EAASG,UAAYhB,EAAoBO,KAAKI,KAAMJ,KAAKL,kBACzDK,KAAKI,KAAKM,YAAYJ,E,6BAPKK,EAAA,CAA5BC,K"}