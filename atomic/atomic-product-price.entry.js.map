{"file":"atomic-product-price.entry.esm.js","mappings":";;;;;;;;;;;;;;;;;;MAiBa,kBAAkB;;;;;;QAWC,aAAQ,GAAW,KAAK,CAAC;wBAAN,KAAK;;IAE/C,MAAM;;QACX,MAAM,mBAAmB,GACvB,CAAA,MAAA,IAAI,CAAC,OAAO,0CAAE,cAAc,MAAK,SAAS;YAC1C,CAAA,MAAA,IAAI,CAAC,OAAO,0CAAE,QAAQ,MAAK,SAAS;YACpC,CAAA,MAAA,IAAI,CAAC,OAAO,0CAAE,cAAc,KAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,QAAQ,CAAA,CAAC;QAExD,QACE,8DACE,2FACE,KAAK,EAAE,QAAQ,mBAAmB,IAAI,YAAY,EAAE,EACpD,KAAK,EAAE,mBAAmB,GAAG,gBAAgB,GAAG,UAAU,IAE1D,+EACE,QAAQ,EAAE,IAAI,CAAC,QAAQ,GACC,CACS,EACpC,mBAAmB,KAClB,2FACE,KAAK,EAAC,2BAA2B,EACjC,KAAK,EAAC,UAAU,IAEhB,+EACE,QAAQ,EAAE,IAAI,CAAC,QAAQ,GACC,CACS,CACtC,CACG,EACN;KACH;;AAtC4B;IAA5B,kBAAkB,EAAE;oDAAoC;AAG/B;IAAzB,cAAc,EAAE;mDAA2B;;;;","names":[],"sources":["src/components/commerce/product-template-components/atomic-product-price/atomic-product-price.tsx"],"sourcesContent":["import {Product} from '@coveo/headless/commerce';\r\nimport {Component, h, Prop} from '@stencil/core';\r\nimport {\r\n  InitializableComponent,\r\n  InitializeBindings,\r\n} from '../../../../utils/initialization-utils';\r\nimport {CommerceBindings} from '../../atomic-commerce-interface/atomic-commerce-interface';\r\nimport {ProductContext} from '../product-template-decorators';\r\n\r\n/**\r\n * @internal\r\n * The `atomic-product-price` component renders the price of a product.\r\n */\r\n@Component({\r\n  tag: 'atomic-product-price',\r\n  shadow: false,\r\n})\r\nexport class AtomicProductPrice\r\n  implements InitializableComponent<CommerceBindings>\r\n{\r\n  @InitializeBindings() public bindings!: CommerceBindings;\r\n  public error!: Error;\r\n\r\n  @ProductContext() private product!: Product;\r\n\r\n  /**\r\n   * The currency to use in currency formatting. Allowed values are the [ISO 4217 currency codes](https://www.six-group.com/en/products-services/financial-information/data-standards.html#scrollTo=maintenance-agency), such as \"USD\" for the US dollar, \"EUR\" for the euro, or \"CNY\" for the Chinese RMB.\r\n   */\r\n  @Prop({reflect: true}) public currency: string = 'USD';\r\n\r\n  public render() {\r\n    const hasPromotionalPrice =\r\n      this.product?.ec_promo_price !== undefined &&\r\n      this.product?.ec_price !== undefined &&\r\n      this.product?.ec_promo_price < this.product?.ec_price;\r\n\r\n    return (\r\n      <div>\r\n        <atomic-product-numeric-field-value\r\n          class={`mx-1 ${hasPromotionalPrice && 'text-error'}`}\r\n          field={hasPromotionalPrice ? 'ec_promo_price' : 'ec_price'}\r\n        >\r\n          <atomic-format-currency\r\n            currency={this.currency}\r\n          ></atomic-format-currency>\r\n        </atomic-product-numeric-field-value>\r\n        {hasPromotionalPrice && (\r\n          <atomic-product-numeric-field-value\r\n            class=\"mx-1 text-xl line-through\"\r\n            field=\"ec_price\"\r\n          >\r\n            <atomic-format-currency\r\n              currency={this.currency}\r\n            ></atomic-format-currency>\r\n          </atomic-product-numeric-field-value>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"version":3}