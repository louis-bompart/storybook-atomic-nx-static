function f(e){if(Object.keys(e).length>1)throw"Depending on multiple facets isn't supported";return Object.entries(e).map(([t,r])=>({parentFacetId:t,condition:o=>o.some(n=>{if(u(n)){const i=l(n);return i?r?i.value===r:!0:!1}return s(n)?n.state!=="selected"?!1:r?n.value===r:!0:!1})}))}function u(e){const t=e;return((t==null?void 0:t.children)&&Array.isArray(t.children)&&(t==null?void 0:t.state)&&typeof t.state=="string")===!0}function l(e){if(!u(e))return null;if(e.state==="selected")return e;for(const t of e.children){const r=l(t);if(r!==null)return r}return null}function s(e){const t=e;return"value"in t&&typeof t.value=="string"&&!("children"in t)}export{f as n};
