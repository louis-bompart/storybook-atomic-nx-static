{"file":"atomic-ipx-embedded.js","mappings":";;;;;;;AAAA,MAAM,oBAAoB,GAAG,ynuCAAynuC,CAAC;AACvpuC,gCAAe,oBAAoB;;;;;;;;;;;;MCyBtB,iBAAiB;;;;;;QAaX,0BAAqB,GAAG,IAAI,CAAC;QAWtC,sBAAiB,GAAG,IAAI,CAAC,MAAM,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;;;qCAX5B,IAAI;;IAEtC,iBAAiB;QACtB,IAAI,CAAC,qBAAqB,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,CAAC;KAC3E;IAEM,gBAAgB;QACrB,MAAM,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,QAAQ,CAAC,sBAAsB,CAAC,CAAC;QAC5D,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;KACnB;IAIM,MAAM;QACX,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAEzB,QACE,EAAC,IAAI,uDACH,4DAAK,IAAI,EAAC,UAAU,IAClB,wEAAiB,iBAAiB,EAAE,IAAI,CAAC,qBAAqB,IAC5D,6DAAM,IAAI,EAAC,QAAQ,EAAC,IAAI,EAAC,QAAQ,GAAG,EACpC,6DAAM,IAAI,EAAC,MAAM,EAAC,IAAI,EAAC,MAAM,GAAG,EAChC,6DAAM,IAAI,EAAC,QAAQ,EAAC,IAAI,EAAC,QAAQ,GAAG,CACpB,CACd,CACD,EACP;KACH;;;;;;;;AAvC4B;IAA5B,kBAAkB,EAAE;mDAA+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["src/components/ipx/atomic-ipx-embedded/atomic-ipx-embedded.pcss?tag=atomic-ipx-embedded&encapsulation=shadow","src/components/ipx/atomic-ipx-embedded/atomic-ipx-embedded.tsx"],"sourcesContent":["@import '../../../global/global.pcss';\n\n:host {\n  box-shadow: rgb(0 0 0 / 50%) 0 0 0.5rem;\n  height: inherit;\n\n  &::part(backdrop) {\n    @apply pointer-events-auto;\n    height: inherit;\n    inset: auto 3rem 4.25rem auto;\n  }\n}\n","import {\n  Component,\n  h,\n  State,\n  Prop,\n  Element,\n  Event,\n  EventEmitter,\n  Host,\n} from '@stencil/core';\nimport {\n  InitializableComponent,\n  InitializeBindings,\n} from '../../../utils/initialization-utils';\nimport {updateBreakpoints} from '../../../utils/replace-breakpoint';\nimport {once, randomID} from '../../../utils/utils';\nimport {AnyBindings} from '../../common/interface/bindings';\n\n/**\n * @internal\n */\n@Component({\n  tag: 'atomic-ipx-embedded',\n  styleUrl: 'atomic-ipx-embedded.pcss',\n  shadow: true,\n})\nexport class AtomicIPXEmbedded implements InitializableComponent<AnyBindings> {\n  @InitializeBindings() public bindings!: AnyBindings;\n  @Element() public host!: HTMLElement;\n\n  @State() public error!: Error;\n\n  /**\n   * The container to hide from the tabindex and accessibility DOM when the modal is closed.\n   */\n  @Prop({mutable: true}) container?: HTMLElement;\n\n  @Event() animationEnded!: EventEmitter<never>;\n\n  @State() private hasFooterSlotElements = true;\n\n  public componentWillLoad(): void | Promise<void> {\n    this.hasFooterSlotElements = !!this.host.querySelector('[slot=\"footer\"]');\n  }\n\n  public componentDidLoad() {\n    const id = this.host.id || randomID('atomic-ipx-embedded-');\n    this.host.id = id;\n  }\n\n  private updateBreakpoints = once(() => updateBreakpoints(this.host));\n\n  public render() {\n    this.updateBreakpoints();\n\n    return (\n      <Host>\n        <div part=\"backdrop\">\n          <atomic-ipx-body displayFooterSlot={this.hasFooterSlotElements}>\n            <slot name=\"header\" slot=\"header\" />\n            <slot name=\"body\" slot=\"body\" />\n            <slot name=\"footer\" slot=\"footer\" />\n          </atomic-ipx-body>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"version":3}