{"file":"atomic-sort-expression.entry.js","mappings":";;MASa,oBAAoB;;;;;;IAsBxB,MAAM;QACX,MAAM,iBAAiB,GAAG,sBAAsB,CAAC;QACjD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,EAAE;YACzC,MAAM,KAAK,GAAG,IAAI,KAAK,CACrB,QAAQ,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,wCAAwC,iBAAiB,WAAW,CAC7G,CAAC;YACF,QACE,+EACE,OAAO,EAAE,IAAI,CAAC,IAAI,EAClB,KAAK,EAAE,KAAK,GACY,EAC1B;SACH;KACF;;;;;;","names":[],"sources":["src/components/search/atomic-sort-expression/atomic-sort-expression.tsx"],"sourcesContent":["import {Component, Prop, Element, h} from '@stencil/core';\r\n\r\n/**\r\n * The `atomic-sort-expression` component defines a sort expression. This component must be inside an `atomic-sort-dropdown` component.\r\n */\r\n@Component({\r\n  tag: 'atomic-sort-expression',\r\n  shadow: false,\r\n})\r\nexport class AtomicSortExpression {\r\n  @Element() public host!: HTMLElement;\r\n\r\n  /**\r\n   * The non-localized label to display for this expression.\r\n   */\r\n  @Prop({reflect: true}) public label!: string;\r\n\r\n  /**\r\n   * One or more sort criteria that the end user can select or toggle between.\r\n   *\r\n   * The available sort criteria are:\r\n   *\r\n   * * `relevancy`\r\n   * * `date ascending`/`date descending`\r\n   * * `qre`\r\n   * * `<FIELD> ascending`/`<FIELD> descending`, where you replace `<FIELD>` with the name of a sortable field in your index (e.g., `criteria=\"size ascending\"`).\r\n   *\r\n   * You can specify multiple sort criteria to be used in the same request by separating them with a comma (e.g., `criteria=\"size ascending, date ascending\"`).\r\n   */\r\n  @Prop({reflect: true}) public expression!: string;\r\n\r\n  public render() {\r\n    const dropdownComponent = 'atomic-sort-dropdown';\r\n    if (!this.host.closest(dropdownComponent)) {\r\n      const error = new Error(\r\n        `The \"${this.host.nodeName.toLowerCase()}\" component has to be used inside an ${dropdownComponent} element.`\r\n      );\r\n      return (\r\n        <atomic-component-error\r\n          element={this.host}\r\n          error={error}\r\n        ></atomic-component-error>\r\n      );\r\n    }\r\n  }\r\n}\r\n"],"version":3}