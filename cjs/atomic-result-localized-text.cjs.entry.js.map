{"file":"atomic-result-localized-text.entry.cjs.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;MA+Ba,yBAAyB;;;;;;QAYzB,UAAK,GAA2B,EAAE,CAAC;;;;;IAM9C,MAAM;QACJ,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,EAAE;YAC1C,GAAG,IAAI,CAAC,gBAAgB,EAAE;YAC1B,GAAG,IAAI,CAAC,eAAe,EAAE;SAC1B,CAAC,CAAC;KACJ;IAEO,gBAAgB;QACtB,MAAM,GAAG,GAA4B,EAAE,CAAC;QACxC,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;YACxC,OAAO,GAAG,CAAC;SACZ;QACD,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,EAAE,aAAa,CAAC;YAC5D,MAAM,aAAa,GAAGA,eAAsB,CAAC,iBAAiB,CAC5D,IAAI,CAAC,MAAM,EACX,SAAS,CACV,CAAC;YACF,IAAI,CAACC,2BAAiB,CAAC,aAAa,CAAC,EAAE;gBACrC,GAAG,CAAC,aAAa,CAAC,GAAG,aAAa,CAAC;aACpC;SACF,CAAC,CAAC;QAEH,OAAO,GAAG,CAAC;KACZ;IAEO,eAAe;;QACrB,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YACpB,OAAO,EAAE,CAAC;SACX;QACD,OAAO;YACL,KAAK,EACH,MAACD,eAAsB,CAAC,iBAAiB,CACvC,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,UAAW,CACN,mCAAI,CAAC;SACpB,CAAC;KACH;;AArD4B;IAA5BE,sCAAkB,EAAE;2DAA4B;AAGxB;IAAxBC,sCAAa,EAAE;yDAAyB;AAQ9B;IAAVC,kBAAO,EAAE;wDAAoC;;;;","names":["ResultTemplatesHelpers","isNullOrUndefined","InitializeBindings","ResultContext","MapProp"],"sources":["src/components/search/result-template-components/atomic-result-localized-text/atomic-result-localized-text.ts"],"sourcesContent":["import {isNullOrUndefined} from '@coveo/bueno';\nimport {Result, ResultTemplatesHelpers} from '@coveo/headless';\nimport {Component, Prop, State} from '@stencil/core';\nimport {\n  InitializableComponent,\n  InitializeBindings,\n} from '../../../../utils/initialization-utils';\nimport {MapProp} from '../../../../utils/props-utils';\nimport {Bindings} from '../../atomic-search-interface/atomic-search-interface';\nimport {ResultContext} from '../result-template-decorators';\n\n/**\n * The `atomic-result-localized-text` component renders a target i18n localized string using the values of a target field.\n *\n * Given this i18n configuration:\n * ```\n * searchInterface.i18n.addResourceBundle('en', 'translation', {\n *    classic_book_advert: 'Classic book from {{name}}',\n * });\n * ```\n *\n * The component could be configured in such a way to replace `{{name}}` with the `author` field value from the result item:\n * ```\n * <atomic-result-localized-text locale-key=\"classic_book_advert\" field-author=\"name\"></atomic-result-localized-text>\n * ```\n *\n * @MapProp name: field;attr: field;docs: The field from which to extract the target string and the variable used to map it to the target i18n parameter. For example, the following configuration extracts the value of `author` from a result, and assign it to the i18n parameter `name`: `field-author=\"name\"`;type: Record<string, string> ;default: {}\n */\n@Component({\n  tag: 'atomic-result-localized-text',\n})\nexport class AtomicResultLocalizedText implements InitializableComponent {\n  @InitializeBindings() public bindings!: Bindings;\n  @State() public error!: Error;\n\n  @ResultContext() private result!: Result;\n  /**\n   * The i18n translation key.\n   */\n  @Prop() localeKey!: string;\n  /**\n   * The field value to dynamically evaluate.\n   */\n  @MapProp() field: Record<string, string> = {};\n  /**\n   * The numerical field value used to determine whether to use the singular or plural value of a translation.\n   * */\n  @Prop() fieldCount?: string;\n\n  render() {\n    return this.bindings.i18n.t(this.localeKey, {\n      ...this.parseFieldValues(),\n      ...this.parseFieldCount(),\n    });\n  }\n\n  private parseFieldValues() {\n    const ret: Record<string, unknown> = {};\n    if (Object.keys(this.field).length === 0) {\n      return ret;\n    }\n    Object.entries(this.field).forEach(([fieldName, i18nParameter]) => {\n      const fieldValueRaw = ResultTemplatesHelpers.getResultProperty(\n        this.result,\n        fieldName\n      );\n      if (!isNullOrUndefined(fieldValueRaw)) {\n        ret[i18nParameter] = fieldValueRaw;\n      }\n    });\n\n    return ret;\n  }\n\n  private parseFieldCount() {\n    if (!this.fieldCount) {\n      return {};\n    }\n    return {\n      count:\n        (ResultTemplatesHelpers.getResultProperty(\n          this.result,\n          this.fieldCount!\n        ) as number) ?? 1,\n    };\n  }\n}\n"],"version":3}