{"file":"atomic-rating-7e916d71.js","mappings":";;;;;;;;;MAWa,MAAM,GAAqC,CAAC,KAAK;;IAC5D,MAAM,KAAK,GACT,CAAC,CAAC,KAAK,CAAC,mBAAmB,GAAG,KAAK,CAAC,kBAAkB,IAAI,GAAG,EAAE,QAAQ,EAAE;QACzE,GAAG,CAAC;IACN,MAAM,QAAQ,GAAG,GAAG,MAAA,KAAK,CAAC,QAAQ,mCAAI,IAAI,KAAK,CAAC;IAEhD,MAAM,UAAU,GAAG,CAAC,MAAe;QACjC,QACE,mBACE,IAAI,EAAE,KAAK,CAAC,IAAI,EAChB,KAAK,EAAE,YAAY,MAAM,GAAG,aAAa,GAAG,eAAe,EAAE,EAC7D,KAAK,EAAE,EAAC,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAC,GAC7B,EACf;KACH,CAAC;IAEF,MAAM,gBAAgB,GAAG;QACvB,MAAM,gBAAgB,GAAY,EAAE,CAAC;QACrC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,kBAAkB,EAAE,CAAC,EAAE,EAAE;YACjD,gBAAgB,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;SAC1C;QACD,OAAO,gBAAgB,CAAC;KACzB,CAAC;IAEF,MAAM,iBAAiB,GAAG;QACxB,MAAM,iBAAiB,GAAY,EAAE,CAAC;QACtC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,kBAAkB,EAAE,CAAC,EAAE,EAAE;YACjD,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;SAC1C;QACD,OAAO,iBAAiB,CAAC;KAC1B,CAAC;IAEF,QACE,WACE,KAAK,EAAC,gBAAgB,EACtB,IAAI,EAAC,cAAc,EACnB,IAAI,EAAC,KAAK,gBACE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,EAAE;YAChC,KAAK,EAAE,KAAK,CAAC,mBAAmB;YAChC,GAAG,EAAE,KAAK,CAAC,kBAAkB;SAC9B,CAAC;QAEF,WAAK,KAAK,EAAC,kBAAkB,IAAE,gBAAgB,EAAE,CAAO;QACxD,WACE,KAAK,EAAC,wDAAwD,EAC9D,KAAK,EAAE,EAAC,KAAK,EAAC,IAEb,iBAAiB,EAAE,CAChB,CACF,EACN;AACJ,EAAE;MAEW,oBAAoB,GAAG,CAClC,KAAc,EACd,KAAa;IAEb,IAAI,KAAK,KAAK,IAAI,EAAE;QAClB,OAAO,IAAI,CAAC;KACb;IACD,MAAM,aAAa,GAAG,UAAU,CAAC,GAAG,KAAK,EAAE,CAAC,CAAC;IAC7C,IAAI,MAAM,CAAC,KAAK,CAAC,aAAa,CAAC,EAAE;QAC/B,MAAM,IAAI,KAAK,CACb,oBAAoB,KAAK,iBAAiB,KAAK,gBAAgB,CAChE,CAAC;KACH;IACD,OAAO,aAAa,CAAC;AACvB;;;;","names":[],"sources":["src/components/common/atomic-rating/atomic-rating.tsx"],"sourcesContent":["import {FunctionalComponent, h, VNode} from '@stencil/core';\r\nimport {i18n} from 'i18next';\r\n\r\ninterface RatingProps {\r\n  i18n: i18n;\r\n  numberOfTotalIcons: number;\r\n  numberOfActiveIcons: number;\r\n  icon: string;\r\n  iconSize?: number;\r\n}\r\n\r\nexport const Rating: FunctionalComponent<RatingProps> = (props) => {\r\n  const width =\r\n    ((props.numberOfActiveIcons / props.numberOfTotalIcons) * 100).toString() +\r\n    '%';\r\n  const iconSize = `${props.iconSize ?? 0.75}rem`;\r\n\r\n  const renderIcon = (active: boolean) => {\r\n    return (\r\n      <atomic-icon\r\n        icon={props.icon}\r\n        class={`shrink-0 ${active ? 'icon-active' : 'icon-inactive'}`}\r\n        style={{width: iconSize, height: iconSize}}\r\n      ></atomic-icon>\r\n    );\r\n  };\r\n\r\n  const emptyIconDisplay = () => {\r\n    const emptyIconDisplay: VNode[] = [];\r\n    for (let i = 0; i < props.numberOfTotalIcons; i++) {\r\n      emptyIconDisplay.push(renderIcon(false));\r\n    }\r\n    return emptyIconDisplay;\r\n  };\r\n\r\n  const filledIconDisplay = () => {\r\n    const filledIconDisplay: VNode[] = [];\r\n    for (let i = 0; i < props.numberOfTotalIcons; i++) {\r\n      filledIconDisplay.push(renderIcon(true));\r\n    }\r\n    return filledIconDisplay;\r\n  };\r\n\r\n  return (\r\n    <div\r\n      class=\"relative w-max\"\r\n      part=\"value-rating\"\r\n      role=\"img\"\r\n      aria-label={props.i18n.t('stars', {\r\n        count: props.numberOfActiveIcons,\r\n        max: props.numberOfTotalIcons,\r\n      })}\r\n    >\r\n      <div class=\"z-0 flex gap-0.5\">{emptyIconDisplay()}</div>\r\n      <div\r\n        class=\"absolute left-0 top-0 z-1 flex gap-0.5 overflow-hidden\"\r\n        style={{width}}\r\n      >\r\n        {filledIconDisplay()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const computeNumberOfStars = (\r\n  value: unknown,\r\n  field: string\r\n): number | null => {\r\n  if (value === null) {\r\n    return null;\r\n  }\r\n  const valueAsNumber = parseFloat(`${value}`);\r\n  if (Number.isNaN(valueAsNumber)) {\r\n    throw new Error(\r\n      `Could not parse \"${value}\" from field \"${field}\" as a number.`\r\n    );\r\n  }\r\n  return valueAsNumber;\r\n};\r\n"],"version":3}