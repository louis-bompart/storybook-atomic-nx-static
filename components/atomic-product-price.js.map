{"file":"atomic-product-price.js","mappings":";;;;;;;;;;;;;;;;;MAiBaA,oBAAkB;;;;;;;QAWC,aAAQ,GAAW,KAAK,CAAC;wBAAN,KAAK;;IAE/C,MAAM;;QACX,MAAM,mBAAmB,GACvB,CAAA,MAAA,IAAI,CAAC,OAAO,0CAAE,cAAc,MAAK,SAAS;YAC1C,CAAA,MAAA,IAAI,CAAC,OAAO,0CAAE,QAAQ,MAAK,SAAS;YACpC,CAAA,MAAA,IAAI,CAAC,OAAO,0CAAE,cAAc,KAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,QAAQ,CAAA,CAAC;QAExD,QACE,8DACE,2FACE,KAAK,EAAE,QAAQ,mBAAmB,IAAI,YAAY,EAAE,EACpD,KAAK,EAAE,mBAAmB,GAAG,gBAAgB,GAAG,UAAU,IAE1D,+EACE,QAAQ,EAAE,IAAI,CAAC,QAAQ,GACC,CACS,EACpC,mBAAmB,KAClB,2FACE,KAAK,EAAC,2BAA2B,EACjC,KAAK,EAAC,UAAU,IAEhB,+EACE,QAAQ,EAAE,IAAI,CAAC,QAAQ,GACC,CACS,CACtC,CACG,EACN;KACH;;;;AAtC4B;IAA5B,kBAAkB,EAAE;sDAAoC;AAG/B;IAAzB,cAAc,EAAE;qDAA2B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":["AtomicProductPrice"],"sources":["src/components/commerce/product-template-components/atomic-product-price/atomic-product-price.tsx"],"sourcesContent":["import {Product} from '@coveo/headless/commerce';\nimport {Component, h, Prop} from '@stencil/core';\nimport {\n  InitializableComponent,\n  InitializeBindings,\n} from '../../../../utils/initialization-utils';\nimport {CommerceBindings} from '../../atomic-commerce-interface/atomic-commerce-interface';\nimport {ProductContext} from '../product-template-decorators';\n\n/**\n * @internal\n * The `atomic-product-price` component renders the price of a product.\n */\n@Component({\n  tag: 'atomic-product-price',\n  shadow: false,\n})\nexport class AtomicProductPrice\n  implements InitializableComponent<CommerceBindings>\n{\n  @InitializeBindings() public bindings!: CommerceBindings;\n  public error!: Error;\n\n  @ProductContext() private product!: Product;\n\n  /**\n   * The currency to use in currency formatting. Allowed values are the [ISO 4217 currency codes](https://www.six-group.com/en/products-services/financial-information/data-standards.html#scrollTo=maintenance-agency), such as \"USD\" for the US dollar, \"EUR\" for the euro, or \"CNY\" for the Chinese RMB.\n   */\n  @Prop({reflect: true}) public currency: string = 'USD';\n\n  public render() {\n    const hasPromotionalPrice =\n      this.product?.ec_promo_price !== undefined &&\n      this.product?.ec_price !== undefined &&\n      this.product?.ec_promo_price < this.product?.ec_price;\n\n    return (\n      <div>\n        <atomic-product-numeric-field-value\n          class={`mx-1 ${hasPromotionalPrice && 'text-error'}`}\n          field={hasPromotionalPrice ? 'ec_promo_price' : 'ec_price'}\n        >\n          <atomic-format-currency\n            currency={this.currency}\n          ></atomic-format-currency>\n        </atomic-product-numeric-field-value>\n        {hasPromotionalPrice && (\n          <atomic-product-numeric-field-value\n            class=\"mx-1 text-xl line-through\"\n            field=\"ec_price\"\n          >\n            <atomic-format-currency\n              currency={this.currency}\n            ></atomic-format-currency>\n          </atomic-product-numeric-field-value>\n        )}\n      </div>\n    );\n  }\n}\n"],"version":3}