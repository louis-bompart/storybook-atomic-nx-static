{"file":"ripple-dcc2ce08.js","mappings":";;;;AAUA,MAAM,MAAM,GAAG,QAAQ,CAAC;AAExB,SAAS,kCAAkC,CAAC,YAAoB;;IAE9D,OAAO,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,MAAM,CAAC;AAC1C,CAAC;AAED,SAAS,2BAA2B,CAAC,OAAgB;IACnD,IAAI,gBAAgB,CAAC,OAAO,CAAC,CAAC,QAAQ,KAAK,QAAQ,EAAE;QACnD,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;KAC1C;AACH,CAAC;SAEe,YAAY,CAAC,KAAiB,EAAE,OAAsB;;IACpE,MAAM,MAAM,GAAG,MAAA,OAAO,CAAC,MAAM,mCAAK,KAAK,CAAC,aAAyB,CAAC;IAClE,MAAM,cAAc,GAAG,MAAM,CAAC,sBAAsB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IAChE,cAAc,IAAI,cAAc,CAAC,MAAM,EAAE,CAAC;IAE1C,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;IACtC,2BAA2B,CAAC,MAAM,CAAC,CAAC;IACpC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,2BAA2B,CAAC,CAAC;IAEjE,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;IAC9C,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IAC7B,MAAM,CAAC,KAAK,CAAC,eAAe,GAAG,gBAAgB,OAAO,CAAC,KAAK,GAAG,CAAC;IAChE,MAAM,CAAC,YAAY,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IAEpC,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,WAAW,EAAE,MAAM,CAAC,YAAY,CAAC,CAAC;IACnE,MAAM,MAAM,GAAG,QAAQ,GAAG,CAAC,CAAC;IAC5B,MAAM,iBAAiB,GAAG,kCAAkC,CAAC,MAAM,CAAC,CAAC;IACrE,MAAM,EAAC,GAAG,EAAE,IAAI,EAAC,GAAG,MAAM,CAAC,qBAAqB,EAAE,CAAC;IACnD,MAAM,CAAC,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,GAAG,GAAG,QAAQ,IAAI,CAAC;IAC3D,MAAM,CAAC,KAAK,CAAC,IAAI,GAAG,GAAG,KAAK,CAAC,OAAO,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;IAC3D,MAAM,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,KAAK,CAAC,OAAO,IAAI,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC;IACzD,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,sBAAsB,EAAE,GAAG,iBAAiB,IAAI,CAAC,CAAC;IAC3E,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IACvB,wBAAwB,CAAC,MAAM,EAAE,iBAAiB,CAAC,CAAC;AACtD,CAAC;AAED,eAAe,wBAAwB,CACrC,MAAuB,EACvB,iBAAyB;IAEzBA,qBAAU,CAAC,MAAM,EAAE,cAAc,EAAE;QACjC,MAAM,IAAI,MAAM,CAAC,MAAM,EAAE,CAAC;KAC3B,CAAC,CAAC;;IAEH,UAAU,CACR,MAAM,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,MAAM,EAAE,EACtB,iBAAiB,GAAG,iBAAiB,GAAG,GAAG,CAC5C,CAAC;AACJ;;;;","names":["listenOnce"],"sources":["src/utils/ripple.ts"],"sourcesContent":["import {listenOnce} from './event-utils';\n\ninterface RippleOptions {\n  color: string;\n  /**\n   * When the ripple's parent is not the event's origin\n   */\n  parent?: Element;\n}\n\nconst RIPPLE = 'ripple';\n\nfunction getAnimationDurationInMilliseconds(radiusPixels: number) {\n  // A 318px wide button has a duration of 700ms.\n  return Math.cbrt(radiusPixels) * 129.21;\n}\n\nfunction setPositionRelativeIfStatic(element: Element) {\n  if (getComputedStyle(element).position === 'static') {\n    element.classList.add('ripple-relative');\n  }\n}\n\nexport function createRipple(event: MouseEvent, options: RippleOptions) {\n  const button = options.parent ?? (event.currentTarget as Element);\n  const existingRipple = button.getElementsByClassName(RIPPLE)[0];\n  existingRipple && existingRipple.remove();\n\n  button.classList.add('ripple-parent');\n  setPositionRelativeIfStatic(button);\n  Array.from(button.children).forEach(setPositionRelativeIfStatic);\n\n  const ripple = document.createElement('span');\n  ripple.classList.add(RIPPLE);\n  ripple.style.backgroundColor = `var(--atomic-${options.color})`;\n  ripple.setAttribute('part', RIPPLE);\n\n  const diameter = Math.max(button.clientWidth, button.clientHeight);\n  const radius = diameter / 2;\n  const animationDuration = getAnimationDurationInMilliseconds(radius);\n  const {top, left} = button.getBoundingClientRect();\n  ripple.style.width = ripple.style.height = `${diameter}px`;\n  ripple.style.left = `${event.clientX - (left + radius)}px`;\n  ripple.style.top = `${event.clientY - (top + radius)}px`;\n  ripple.style.setProperty('--animation-duration', `${animationDuration}ms`);\n  button.prepend(ripple);\n  cleanupAnimationOnFinish(ripple, animationDuration);\n}\n\nasync function cleanupAnimationOnFinish(\n  ripple: HTMLSpanElement,\n  animationDuration: number\n) {\n  listenOnce(ripple, 'animationend', () => {\n    ripple && ripple.remove();\n  });\n  // Backup in case the button gets hidden or unmounted and the ripple hasn't been cleaned up.\n  setTimeout(\n    () => ripple?.remove(),\n    animationDuration + animationDuration * 0.1\n  );\n}\n"],"version":3}