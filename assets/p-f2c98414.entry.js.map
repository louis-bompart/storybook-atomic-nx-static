{"version":3,"names":["atomicInsightRefineToggleCss","AtomicInsightRefineToggleStyle0","AtomicInsightRefineToggle","numberOfBreadcrumbs","this","breadcrumbManagerState","facetBreadcrumbs","categoryFacetBreadcrumbs","numericFacetBreadcrumbs","dateFacetBreadcrumbs","staticFilterBreadcrumbs","length","initialize","breadcrumbManager","buildInsightBreadcrumbManager","bindings","engine","searchStatus","buildInsightSearchStatus","enableModal","modalRef","isOpen","loadModal","document","createElement","_a","host","parentElement","insertAdjacentElement","openButton","buttonRef","render","h","IconButton","key","partPrefix","style","title","i18n","t","icon","FilterIcon","disabled","searchStatusState","hasResults","ariaLabel","onClick","store","waitUntilAppLoaded","button","badge","hasBreadcrumbs","toString","undefined","__decorate","InitializeBindings","BindStateToController"],"sources":["src/components/insight/atomic-insight-refine-toggle/atomic-insight-refine-toggle.pcss?tag=atomic-insight-refine-toggle&encapsulation=shadow","src/components/insight/atomic-insight-refine-toggle/atomic-insight-refine-toggle.tsx"],"sourcesContent":["@import '../../../global/global.pcss';\r\n","import {Component, h, State, Element} from '@stencil/core';\r\nimport {\r\n  buildInsightBreadcrumbManager,\r\n  buildInsightSearchStatus,\r\n  InsightBreadcrumbManager,\r\n  InsightBreadcrumbManagerState,\r\n  InsightSearchStatus,\r\n  InsightSearchStatusState,\r\n} from '..';\r\nimport FilterIcon from '../../../images/filter.svg';\r\nimport {\r\n  InitializeBindings,\r\n  BindStateToController,\r\n} from '../../../utils/initialization-utils';\r\nimport {IconButton} from '../../common/iconButton';\r\nimport {InsightBindings} from '../atomic-insight-interface/atomic-insight-interface';\r\n\r\n/**\r\n * @internal\r\n */\r\n@Component({\r\n  tag: 'atomic-insight-refine-toggle',\r\n  styleUrl: 'atomic-insight-refine-toggle.pcss',\r\n  shadow: true,\r\n})\r\nexport class AtomicInsightRefineToggle {\r\n  @InitializeBindings() public bindings!: InsightBindings;\r\n  @Element() public host!: HTMLElement;\r\n\r\n  @State() public error!: Error;\r\n\r\n  @BindStateToController('breadcrumbManager')\r\n  @State()\r\n  private breadcrumbManagerState!: InsightBreadcrumbManagerState;\r\n\r\n  @BindStateToController('searchStatus')\r\n  @State()\r\n  private searchStatusState!: InsightSearchStatusState;\r\n\r\n  public breadcrumbManager!: InsightBreadcrumbManager;\r\n  public searchStatus!: InsightSearchStatus;\r\n  private modalRef?: HTMLAtomicInsightRefineModalElement;\r\n  private buttonRef?: HTMLButtonElement;\r\n\r\n  private get numberOfBreadcrumbs(): number {\r\n    return [\r\n      ...this.breadcrumbManagerState.facetBreadcrumbs,\r\n      ...this.breadcrumbManagerState.categoryFacetBreadcrumbs,\r\n      ...this.breadcrumbManagerState.numericFacetBreadcrumbs,\r\n      ...this.breadcrumbManagerState.dateFacetBreadcrumbs,\r\n      ...this.breadcrumbManagerState.staticFilterBreadcrumbs,\r\n    ].length;\r\n  }\r\n\r\n  public initialize() {\r\n    this.breadcrumbManager = buildInsightBreadcrumbManager(\r\n      this.bindings.engine\r\n    );\r\n    this.searchStatus = buildInsightSearchStatus(this.bindings.engine);\r\n  }\r\n\r\n  private enableModal() {\r\n    this.modalRef && (this.modalRef.isOpen = true);\r\n  }\r\n\r\n  private loadModal() {\r\n    if (this.modalRef) {\r\n      return;\r\n    }\r\n\r\n    this.modalRef = document.createElement('atomic-insight-refine-modal');\r\n    this.host.parentElement?.insertAdjacentElement(\r\n      'beforebegin',\r\n      this.modalRef\r\n    );\r\n    this.modalRef.openButton = this.buttonRef;\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <IconButton\r\n        partPrefix=\"insight-refine-toggle\"\r\n        style=\"outline-neutral\"\r\n        title={this.bindings.i18n.t('filters')}\r\n        icon={FilterIcon}\r\n        disabled={\r\n          !this.searchStatusState.hasResults && !this.numberOfBreadcrumbs\r\n        }\r\n        ariaLabel={this.bindings.i18n.t('sort')}\r\n        onClick={() => {\r\n          this.bindings.store.waitUntilAppLoaded(() => {\r\n            this.enableModal();\r\n          });\r\n        }}\r\n        buttonRef={(button?: HTMLButtonElement) => {\r\n          if (!button) {\r\n            return;\r\n          }\r\n          this.buttonRef = button;\r\n          this.loadModal();\r\n        }}\r\n        badge={\r\n          this.breadcrumbManagerState.hasBreadcrumbs ? (\r\n            <slot>{this.numberOfBreadcrumbs.toString()}</slot>\r\n          ) : undefined\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n"],"mappings":"2VAAA,MAAMA,EAA+B,w+tCACrC,MAAAC,EAAeD,E,iXCwBFE,EAAyB,M,qHAmBpC,uBAAYC,GACV,MAAO,IACFC,KAAKC,uBAAuBC,oBAC5BF,KAAKC,uBAAuBE,4BAC5BH,KAAKC,uBAAuBG,2BAC5BJ,KAAKC,uBAAuBI,wBAC5BL,KAAKC,uBAAuBK,yBAC/BC,M,CAGG,UAAAC,GACLR,KAAKS,kBAAoBC,EACvBV,KAAKW,SAASC,QAEhBZ,KAAKa,aAAeC,EAAyBd,KAAKW,SAASC,O,CAGrD,WAAAG,GACNf,KAAKgB,WAAahB,KAAKgB,SAASC,OAAS,K,CAGnC,SAAAC,G,MACN,GAAIlB,KAAKgB,SAAU,CACjB,M,CAGFhB,KAAKgB,SAAWG,SAASC,cAAc,gCACvCC,EAAArB,KAAKsB,KAAKC,iBAAa,MAAAF,SAAA,SAAAA,EAAEG,sBACvB,cACAxB,KAAKgB,UAEPhB,KAAKgB,SAASS,WAAazB,KAAK0B,S,CAG3B,MAAAC,GACL,OACEC,EAACC,EAAU,CAAAC,IAAA,2CACTC,WAAW,wBACXC,MAAM,kBACNC,MAAOjC,KAAKW,SAASuB,KAAKC,EAAE,WAC5BC,KAAMC,EACNC,UACGtC,KAAKuC,kBAAkBC,aAAexC,KAAKD,oBAE9C0C,UAAWzC,KAAKW,SAASuB,KAAKC,EAAE,QAChCO,QAAS,KACP1C,KAAKW,SAASgC,MAAMC,oBAAmB,KACrC5C,KAAKe,aAAa,GAClB,EAEJW,UAAYmB,IACV,IAAKA,EAAQ,CACX,M,CAEF7C,KAAK0B,UAAYmB,EACjB7C,KAAKkB,WAAW,EAElB4B,MACE9C,KAAKC,uBAAuB8C,eAC1BnB,EAAA,YAAO5B,KAAKD,oBAAoBiD,YAC9BC,W,6BA9EiBC,EAAA,CAA5BC,K,+BAOOD,EAAA,CAFPE,EAAsB,sB,6CAMfF,EAAA,CAFPE,EAAsB,iB"}