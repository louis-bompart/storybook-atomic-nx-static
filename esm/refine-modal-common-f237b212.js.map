{"file":"refine-modal-common-f237b212.js","mappings":"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","names":[],"sources":["src/components/common/refine-modal/refine-modal-common.tsx"],"sourcesContent":["import {FunctionalComponent, h} from '@stencil/core';\r\nimport CloseIcon from '../../../images/close.svg';\r\nimport {popoverClass} from '../../search/facets/atomic-popover/popover-type';\r\nimport {Button} from '../button';\r\nimport {BaseFacetElement} from '../facets/facet-common';\r\nimport {AnyBindings} from '../interface/bindings';\r\nimport {isRefineModalFacet} from '../interface/store';\r\n\r\ninterface RefineModalCommonProps {\r\n  host: HTMLElement;\r\n  bindings: AnyBindings;\r\n  onClose(): void;\r\n  title: string;\r\n  querySummaryState: {\r\n    total: number;\r\n  };\r\n  isOpen: boolean;\r\n  openButton?: HTMLElement;\r\n  boundary?: 'page' | 'element';\r\n  scope?: HTMLElement;\r\n}\r\n\r\nexport const RefineModalCommon: FunctionalComponent<RefineModalCommonProps> = (\r\n  props,\r\n  children\r\n) => {\r\n  const exportparts =\r\n    'container,header,header-wrapper,header-ruler,body,body-wrapper,footer,footer-wrapper,footer-wrapper';\r\n\r\n  const flushFacetElements = () => {\r\n    props.host.querySelector('div[slot=\"facets\"]')?.remove();\r\n  };\r\n\r\n  const renderHeader = () => {\r\n    return (\r\n      <div slot=\"header\" class=\"contents\">\r\n        <h1 part=\"title\" class=\"truncate\">\r\n          {props.title}\r\n        </h1>\r\n        <Button\r\n          style=\"text-transparent\"\r\n          class=\"grid place-items-center\"\r\n          part=\"close-button\"\r\n          onClick={props.onClose}\r\n          ariaLabel={props.bindings.i18n.t('close')}\r\n        >\r\n          <atomic-icon\r\n            part=\"close-icon\"\r\n            class=\"w-5 h-5\"\r\n            icon={CloseIcon}\r\n          ></atomic-icon>\r\n        </Button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderFooter = () => {\r\n    return (\r\n      <div part=\"footer-content\" slot=\"footer\">\r\n        <Button\r\n          style=\"primary\"\r\n          part=\"footer-button\"\r\n          class=\"w-full p-3 flex text-lg justify-center\"\r\n          onClick={props.onClose}\r\n        >\r\n          <span part=\"footer-button-text\" class=\"truncate mr-1\">\r\n            {props.bindings.i18n.t('view-results')}\r\n          </span>\r\n          <span part=\"footer-button-count\">\r\n            {props.bindings.i18n.t('between-parentheses', {\r\n              text: props.querySummaryState.total.toLocaleString(\r\n                props.bindings.i18n.language\r\n              ),\r\n            })}\r\n          </span>\r\n        </Button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <atomic-modal\r\n      fullscreen\r\n      isOpen={props.isOpen}\r\n      source={props.openButton}\r\n      container={props.host}\r\n      close={props.onClose}\r\n      onAnimationEnded={() => {\r\n        if (!props.isOpen) {\r\n          flushFacetElements();\r\n        }\r\n      }}\r\n      exportparts={exportparts}\r\n      boundary={props.boundary}\r\n      scope={props.scope}\r\n    >\r\n      {renderHeader()}\r\n      {...children}\r\n      {renderFooter()}\r\n    </atomic-modal>\r\n  );\r\n};\r\n\r\nexport function getClonedFacetElements(\r\n  facetElements: HTMLElement[],\r\n  collapseFacetsAfter: number,\r\n  root: HTMLElement\r\n): HTMLDivElement {\r\n  const divSlot = document.createElement('div');\r\n  divSlot.setAttribute('slot', 'facets');\r\n  divSlot.style.display = 'flex';\r\n  divSlot.style.flexDirection = 'column';\r\n  divSlot.style.gap = 'var(--atomic-refine-modal-facet-margin, 20px)';\r\n\r\n  const allFacetTags = Array.from(\r\n    new Set(facetElements.map((el) => el.tagName.toLowerCase()))\r\n  );\r\n\r\n  const allFacetsInOrderInDOM = allFacetTags.length\r\n    ? root.querySelectorAll(allFacetTags.join(','))\r\n    : [];\r\n\r\n  allFacetsInOrderInDOM.forEach((facetElement, index) => {\r\n    const clone = facetElement.cloneNode(true) as BaseFacetElement;\r\n    clone.isCollapsed = index + 1 > collapseFacetsAfter;\r\n    clone.classList.remove(popoverClass);\r\n    clone.setAttribute(isRefineModalFacet, '');\r\n    divSlot.append(clone);\r\n  });\r\n\r\n  return divSlot;\r\n}\r\n"],"version":3}