{"file":"atomic-ipx-refine-toggle.entry.js","mappings":";;;;;;;;;;;;AAAA,MAAM,wBAAwB,GAAG,isuCAAisuC,CAAC;AACnuuC,oCAAe,wBAAwB;;;;;;;;;;;;MCwB1B,qBAAqB;;;;;;;;;QAoBF,wBAAmB,GAAG,CAAC,CAAC;;;;mCAAF,CAAC;;IAOrD,IAAY,mBAAmB;QAC7B,OAAO;YACL,GAAG,IAAI,CAAC,sBAAsB,CAAC,gBAAgB;YAC/C,GAAG,IAAI,CAAC,sBAAsB,CAAC,wBAAwB;YACvD,GAAG,IAAI,CAAC,sBAAsB,CAAC,uBAAuB;YACtD,GAAG,IAAI,CAAC,sBAAsB,CAAC,oBAAoB;YACnD,GAAG,IAAI,CAAC,sBAAsB,CAAC,uBAAuB;SACvD,CAAC,MAAM,CAAC;KACV;IAEM,UAAU;QACf,IAAI,CAAC,iBAAiB,GAAGA,EAAsB,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACtE,IAAI,CAAC,YAAY,GAAGC,EAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;KAC7D;IAEO,WAAW;QACjB,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC;KAChD;IAEO,SAAS;;QACf,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,OAAO;SACR;QAED,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,yBAAyB,CAAC,CAAC;QAClE,MAAA,IAAI,CAAC,IAAI,CAAC,aAAa,0CAAE,qBAAqB,CAC5C,aAAa,EACb,IAAI,CAAC,QAAQ,CACd,CAAC;QACF,IAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC;QAC1C,IAAI,CAAC,QAAQ,CAAC,mBAAmB,GAAG,IAAI,CAAC,mBAAmB,CAAC;KAC9D;IAEM,MAAM;QACX,QACE,EAAC,UAAU,qDACT,UAAU,EAAC,mBAAmB,EAC9B,KAAK,EAAC,aAAa,EACnB,KAAK,EAAC,iBAAiB,EACvB,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,EACtC,IAAI,EAAE,UAAU,EAChB,QAAQ,EACN,CAAC,IAAI,CAAC,iBAAiB,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAEjE,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,EACvC,OAAO,EAAE;gBACP,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,kBAAkB,CAAC;oBACrC,IAAI,CAAC,WAAW,EAAE,CAAC;iBACpB,CAAC,CAAC;aACJ,EACD,SAAS,EAAE,CAAC,MAA0B;gBACpC,IAAI,CAAC,MAAM,EAAE;oBACX,OAAO;iBACR;gBACD,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC;gBACxB,IAAI,CAAC,SAAS,EAAE,CAAC;aAClB,EACD,KAAK,EACH,IAAI,CAAC,sBAAsB,CAAC,cAAc,IACxC,gBAAO,IAAI,CAAC,mBAAmB,CAAC,QAAQ,EAAE,CAAQ,IAChD,SAAS,GAEf,EACF;KACH;;;AA1F4B;IAA5B,kBAAkB,EAAE;uDAA4B;AAOzC;IAFP,qBAAqB,CAAC,mBAAmB,CAAC;qEAEa;AAIhD;IAFP,qBAAqB,CAAC,cAAc,CAAC;gEAEQ;;;;;","names":["buildBreadcrumbManager","buildSearchStatus"],"sources":["src/components/ipx/atomic-ipx-refine-toggle/atomic-ipx-refine-toggle.pcss?tag=atomic-ipx-refine-toggle&encapsulation=shadow","src/components/ipx/atomic-ipx-refine-toggle/atomic-ipx-refine-toggle.tsx"],"sourcesContent":["@import '../../../global/global.pcss';\n\n[part='ipx-refine-toggle-button'] {\n  @apply h-full w-auto;\n}\n\n[part='ipx-refine-toggle-badge'] {\n  @apply w-5 h-5 leading-5 text-xs;\n}\n\n[part='ipx-refine-toggle-icon'] {\n  @apply w-5 h-5;\n}\n","import {\n  BreadcrumbManager,\n  BreadcrumbManagerState,\n  buildBreadcrumbManager,\n  buildSearchStatus,\n  SearchStatus,\n  SearchStatusState,\n} from '@coveo/headless';\nimport {Component, h, State, Element, Prop} from '@stencil/core';\nimport FilterIcon from '../../../images/filter.svg';\nimport {\n  InitializeBindings,\n  BindStateToController,\n} from '../../../utils/initialization-utils';\nimport {IconButton} from '../../common/iconButton';\nimport {Bindings} from '../../search/atomic-search-interface/atomic-search-interface';\n\n/**\n * @internal\n */\n@Component({\n  tag: 'atomic-ipx-refine-toggle',\n  styleUrl: 'atomic-ipx-refine-toggle.pcss',\n  shadow: true,\n})\nexport class AtomicIPXRefineToggle {\n  @InitializeBindings() public bindings!: Bindings;\n  @Element() public host!: HTMLElement;\n\n  @State() public error!: Error;\n\n  @BindStateToController('breadcrumbManager')\n  @State()\n  private breadcrumbManagerState!: BreadcrumbManagerState;\n\n  @BindStateToController('searchStatus')\n  @State()\n  private searchStatusState!: SearchStatusState;\n\n  /**\n   * The number of expanded facets inside the refine modal.\n   * Remaining facets are automatically collapsed.\n   *\n   * Using the value `0` collapses all facets.\n   */\n  @Prop({reflect: true}) public collapseFacetsAfter = 0;\n\n  public breadcrumbManager!: BreadcrumbManager;\n  public searchStatus!: SearchStatus;\n  private modalRef?: HTMLAtomicIpxRefineModalElement;\n  private buttonRef?: HTMLButtonElement;\n\n  private get numberOfBreadcrumbs(): number {\n    return [\n      ...this.breadcrumbManagerState.facetBreadcrumbs,\n      ...this.breadcrumbManagerState.categoryFacetBreadcrumbs,\n      ...this.breadcrumbManagerState.numericFacetBreadcrumbs,\n      ...this.breadcrumbManagerState.dateFacetBreadcrumbs,\n      ...this.breadcrumbManagerState.staticFilterBreadcrumbs,\n    ].length;\n  }\n\n  public initialize() {\n    this.breadcrumbManager = buildBreadcrumbManager(this.bindings.engine);\n    this.searchStatus = buildSearchStatus(this.bindings.engine);\n  }\n\n  private enableModal() {\n    this.modalRef && (this.modalRef.isOpen = true);\n  }\n\n  private loadModal() {\n    if (this.modalRef) {\n      return;\n    }\n\n    this.modalRef = document.createElement('atomic-ipx-refine-modal');\n    this.host.parentElement?.insertAdjacentElement(\n      'beforebegin',\n      this.modalRef\n    );\n    this.modalRef.openButton = this.buttonRef;\n    this.modalRef.collapseFacetsAfter = this.collapseFacetsAfter;\n  }\n\n  public render() {\n    return (\n      <IconButton\n        partPrefix=\"ipx-refine-toggle\"\n        class=\"icon-button\"\n        style=\"outline-neutral\"\n        title={this.bindings.i18n.t('filters')}\n        icon={FilterIcon}\n        disabled={\n          !this.searchStatusState.hasResults && !this.numberOfBreadcrumbs\n        }\n        ariaLabel={this.bindings.i18n.t('sort')}\n        onClick={() => {\n          this.bindings.store.waitUntilAppLoaded(() => {\n            this.enableModal();\n          });\n        }}\n        buttonRef={(button?: HTMLButtonElement) => {\n          if (!button) {\n            return;\n          }\n          this.buttonRef = button;\n          this.loadModal();\n        }}\n        badge={\n          this.breadcrumbManagerState.hasBreadcrumbs ? (\n            <slot>{this.numberOfBreadcrumbs.toString()}</slot>\n          ) : undefined\n        }\n      />\n    );\n  }\n}\n"],"version":3}