{"file":"initialization-utils-f21f2efb.js","mappings":"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","names":["h","Host","buildCustomEvent","closest","getElement","forceUpdateComponent"],"sources":["src/components/common/hidden.tsx","src/utils/initialization-utils.tsx"],"sourcesContent":["import {FunctionalComponent, Host, h} from '@stencil/core';\r\n\r\nexport const Hidden: FunctionalComponent = () => (\r\n  <Host class=\"atomic-hidden\"></Host>\r\n);\r\n","import {\r\n  ComponentInterface,\r\n  getElement,\r\n  h,\r\n  forceUpdate as forceUpdateComponent,\r\n} from '@stencil/core';\r\nimport {TOptions} from 'i18next';\r\nimport {Hidden} from '../components/common/hidden';\r\nimport {AnyBindings} from '../components/common/interface/bindings';\r\nimport {Bindings} from '../components/search/atomic-search-interface/atomic-search-interface';\r\nimport {buildCustomEvent} from './event-utils';\r\nimport {closest} from './utils';\r\n\r\ndeclare global {\r\n  interface Window {\r\n    applyFocusVisiblePolyfill?: (shadowRoot: ShadowRoot) => void;\r\n  }\r\n}\r\n\r\nexport type InitializeEventHandler = (bindings: AnyBindings) => void;\r\nexport type InitializeEvent = CustomEvent<InitializeEventHandler>;\r\nexport const initializeEventName = 'atomic/initializeComponent';\r\nconst initializableElements = [\r\n  'atomic-recs-interface',\r\n  'atomic-search-interface',\r\n  'atomic-commerce-interface',\r\n  'atomic-relevance-inspector',\r\n  'atomic-insight-interface',\r\n  'atomic-commerce-interface',\r\n  'atomic-external',\r\n];\r\n\r\n/**\r\n * Retrieves `Bindings` or `CommerceBindings` on a configured parent interface.\r\n * @param event - The element on which to dispatch the event, which must be the child of a configured Atomic container element.\r\n * @returns A promise that resolves upon initialization of the parent container element, and rejects otherwise.\r\n */\r\nexport function initializeBindings<\r\n  SpecificBindings extends AnyBindings = Bindings,\r\n>(element: Element) {\r\n  return new Promise<SpecificBindings>((resolve, reject) => {\r\n    const event = buildCustomEvent<InitializeEventHandler>(\r\n      initializeEventName,\r\n      (bindings) => resolve(bindings as SpecificBindings)\r\n    );\r\n    element.dispatchEvent(event);\r\n\r\n    if (!closest(element, initializableElements.join(', '))) {\r\n      reject(new MissingInterfaceParentError(element.nodeName.toLowerCase()));\r\n    }\r\n  });\r\n}\r\n\r\nexport class MissingInterfaceParentError extends Error {\r\n  constructor(elementName: string) {\r\n    super(\r\n      `The \"${elementName}\" element must be the child of the following elements: ${initializableElements.join(\r\n        ', '\r\n      )}`\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * Necessary interface an Atomic Component must have to initialize itself correctly.\r\n */\r\nexport interface InitializableComponent<\r\n  SpecificBindings extends AnyBindings = Bindings,\r\n> extends ComponentInterface {\r\n  /**\r\n   * Bindings passed from the `AtomicSearchInterface` to its children components.\r\n   */\r\n  bindings: SpecificBindings;\r\n  /**\r\n   * Method called right after the `bindings` property is defined. This is the method where Headless Framework controllers should be initialized.\r\n   */\r\n  initialize?: () => void;\r\n  error: Error;\r\n}\r\n\r\n/**\r\n * Makes Shadow Dom elements compatible with the focus-visible polyfill https://github.com/WICG/focus-visible\r\n * Necessary for Safari under version 15.4.\r\n */\r\nexport function applyFocusVisiblePolyfill(element: HTMLElement) {\r\n  if (!element.shadowRoot) {\r\n    return;\r\n  }\r\n\r\n  if (window.applyFocusVisiblePolyfill) {\r\n    window.applyFocusVisiblePolyfill(element.shadowRoot);\r\n    return;\r\n  }\r\n\r\n  window.addEventListener(\r\n    'focus-visible-polyfill-ready',\r\n    () => window.applyFocusVisiblePolyfill?.(element.shadowRoot!),\r\n    {once: true}\r\n  );\r\n}\r\n\r\ntype InitializeBindingsProps = {\r\n  forceUpdate?: boolean;\r\n};\r\n\r\nconst renderedAttribute = 'data-atomic-rendered';\r\nconst loadedAttribute = 'data-atomic-loaded';\r\n\r\n/**\r\n * A [StencilJS property decorator](https://stenciljs.com/) to be used on a property named `bindings`.\r\n * This will automatically fetch the `Bindings` from the parent `atomic-search-interface` or `atomic-external` components.\r\n *\r\n * Once a component is bound, the `initialize` method is called.\r\n * In the event of an initialization error, the `error` property will be set and an `atomic-component-error` will be rendered.\r\n *\r\n * In order for a component using this decorator to render properly, it should have an internal state bound to one of the properties from `bindings`.\r\n * This is possible by using the `BindStateToController` decorator.\r\n *\r\n * @example\r\n * @InitializeBindings() public bindings!: Bindings;\r\n *\r\n * For more information and examples, view the \"Utilities\" section of the readme.\r\n */\r\nexport function InitializeBindings<SpecificBindings extends AnyBindings>({\r\n  forceUpdate,\r\n}: InitializeBindingsProps = {}) {\r\n  return (\r\n    component: InitializableComponent<SpecificBindings>,\r\n    bindingsProperty: string\r\n  ) => {\r\n    const {\r\n      componentWillLoad,\r\n      render,\r\n      componentDidRender,\r\n      componentDidLoad,\r\n      disconnectedCallback,\r\n    } = component;\r\n    let unsubscribeLanguage = () => {};\r\n\r\n    if (bindingsProperty !== 'bindings') {\r\n      return console.error(\r\n        `The InitializeBindings decorator should be used on a property called \"bindings\", and not \"${bindingsProperty}\"`,\r\n        component\r\n      );\r\n    }\r\n\r\n    component.componentWillLoad = function () {\r\n      const element = getElement(this);\r\n      element.setAttribute(renderedAttribute, 'false');\r\n      element.setAttribute(loadedAttribute, 'false');\r\n      const event = buildCustomEvent(\r\n        initializeEventName,\r\n        (bindings: SpecificBindings) => {\r\n          this.bindings = bindings;\r\n\r\n          const updateLanguage = () => forceUpdateComponent(this);\r\n          this.bindings.i18n.on('languageChanged', updateLanguage);\r\n          unsubscribeLanguage = () =>\r\n            this.bindings.i18n.off('languageChanged', updateLanguage);\r\n\r\n          try {\r\n            // When no controller is initialized, updating a property with a State() decorator, there will be no re-render.\r\n            // In this case, we have to manually trigger it.\r\n            if (this.initialize) {\r\n              this.initialize();\r\n              if (forceUpdate) {\r\n                forceUpdateComponent(this);\r\n              }\r\n            } else {\r\n              forceUpdateComponent(this);\r\n            }\r\n          } catch (e) {\r\n            this.error = e as Error;\r\n          }\r\n        }\r\n      );\r\n\r\n      element.dispatchEvent(event);\r\n\r\n      if (!closest(element, initializableElements.join(', '))) {\r\n        this.error = new MissingInterfaceParentError(\r\n          element.nodeName.toLowerCase()\r\n        );\r\n        return;\r\n      }\r\n\r\n      return componentWillLoad && componentWillLoad.call(this);\r\n    };\r\n\r\n    component.render = function () {\r\n      if (this.error) {\r\n        return (\r\n          <atomic-component-error\r\n            element={getElement(this)}\r\n            error={this.error}\r\n          ></atomic-component-error>\r\n        );\r\n      }\r\n\r\n      if (!this.bindings) {\r\n        return <Hidden></Hidden>;\r\n      }\r\n\r\n      getElement(this).setAttribute(renderedAttribute, 'true');\r\n      return render && render.call(this);\r\n    };\r\n\r\n    component.disconnectedCallback = function () {\r\n      const element = getElement(this);\r\n      element.setAttribute(renderedAttribute, 'false');\r\n      element.setAttribute(loadedAttribute, 'false');\r\n      unsubscribeLanguage();\r\n      disconnectedCallback && disconnectedCallback.call(this);\r\n    };\r\n\r\n    component.componentDidRender = function () {\r\n      const element = getElement(this);\r\n      if (element.getAttribute(renderedAttribute) === 'false') {\r\n        return;\r\n      }\r\n\r\n      componentDidRender && componentDidRender.call(this);\r\n      if (element.getAttribute(loadedAttribute) === 'false') {\r\n        element.setAttribute(loadedAttribute, 'true');\r\n        applyFocusVisiblePolyfill(getElement(this));\r\n        componentDidLoad && componentDidLoad.call(this);\r\n      }\r\n    };\r\n\r\n    component.componentDidLoad = function () {};\r\n  };\r\n}\r\n\r\n/**\r\n * A [StencilJS property decorator](https://stenciljs.com/) is used together with the [State decorator](https://stenciljs.com/docs/state#state-decorator).\r\n * This allows the Stencil component state property to automatically get updates from a [Coveo Headless controller](https://docs.coveo.com/en/headless/latest/usage/#use-headless-controllers).\r\n *\r\n * @example\r\n * @BindStateToController('pager') @State() private pagerState!: PagerState;\r\n *\r\n * For more information and examples, view the \"Utilities\" section of the readme.\r\n *\r\n * @param controllerProperty The controller property to subscribe to. The controller has to be created inside of the `initialize` method.\r\n * @param options The configurable `BindStateToController` options.\r\n */\r\nexport function BindStateToController(\r\n  controllerProperty: string,\r\n  options?: {\r\n    /**\r\n     * Component's method to be called when state is updated.\r\n     */\r\n    onUpdateCallbackMethod?: string;\r\n  }\r\n) {\r\n  return (\r\n    component: InitializableComponent<AnyBindings>,\r\n    stateProperty: string\r\n  ) => {\r\n    const {disconnectedCallback, initialize} = component;\r\n\r\n    component.initialize = function () {\r\n      initialize && initialize.call(this);\r\n\r\n      if (!initialize) {\r\n        return console.error(\r\n          `ControllerState: The \"initialize\" method has to be defined and instantiate a controller for the property ${controllerProperty}`,\r\n          component\r\n        );\r\n      }\r\n\r\n      if (!this[controllerProperty]) {\r\n        return;\r\n      }\r\n\r\n      if (\r\n        options?.onUpdateCallbackMethod &&\r\n        !this[options.onUpdateCallbackMethod]\r\n      ) {\r\n        return console.error(\r\n          `ControllerState: The onUpdateCallbackMethod property \"${options.onUpdateCallbackMethod}\" is not defined`,\r\n          component\r\n        );\r\n      }\r\n\r\n      this.unsubscribeController = this[controllerProperty].subscribe(() => {\r\n        this[stateProperty] = this[controllerProperty].state;\r\n        options?.onUpdateCallbackMethod &&\r\n          this[options.onUpdateCallbackMethod]();\r\n      });\r\n    };\r\n\r\n    component.disconnectedCallback = function () {\r\n      !getElement(this).isConnected && this.unsubscribeController?.();\r\n      disconnectedCallback && disconnectedCallback.call(this);\r\n    };\r\n  };\r\n}\r\n\r\ninterface DeferredExecution {\r\n  args: unknown[];\r\n}\r\n\r\nexport function DeferUntilRender() {\r\n  return (component: ComponentInterface, methodName: string) => {\r\n    const {componentDidRender, connectedCallback} = component;\r\n    const originalMethod = component[methodName] as Function;\r\n    let deferredExecutions: DeferredExecution[] = [];\r\n\r\n    component.connectedCallback = function () {\r\n      this[methodName] = function (...args: unknown[]) {\r\n        deferredExecutions.push({args});\r\n      };\r\n      connectedCallback && connectedCallback.call(this);\r\n    };\r\n\r\n    component.componentDidRender = function () {\r\n      deferredExecutions.forEach(({args}) =>\r\n        originalMethod.call(this, ...args)\r\n      );\r\n      deferredExecutions = [];\r\n      componentDidRender && componentDidRender.call(this);\r\n    };\r\n  };\r\n}\r\n\r\nexport type I18nState = Record<string, (variables?: TOptions) => string>;\r\n"],"version":3}