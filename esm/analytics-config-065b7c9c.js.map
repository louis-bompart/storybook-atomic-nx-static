{"file":"analytics-config-065b7c9c.js","mappings":";;SAYgB,6BAA6B,CAC3C,KAAa,EACb,OAAyB,EACzB,MAGqC;;IAErC,IAAI,MAAA,MAAM,CAAC,SAAS,0CAAE,yBAAyB,EAAE;QAC/C,OAAO,MAAM,CAAC,SAAS,CAAC,yBAAyB,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;KACnE;IACD,OAAO,OAAO,CAAC;AACjB,CAAC;SAEe,iCAAiC,CAAC,OAAyB;IACzE,IAAI,OAAO,CAAC,UAAU,EAAE;QACtB,OAAO,CAAC,UAAU,CAAC,kBAAkB,GAAG,oBAAoB,EAAE,CAAC,OAAO,CAAC;KACxE;IACD,OAAO,OAAO,CAAC;AACjB,CAAC;SAEe,kCAAkC;IAChD,OAAO;QACL,gBAAgB,EAAE,QAAQ,CAAC,QAAQ,CAAC,IAAI;QACxC,IAAI,QAAQ,CAAC,QAAQ,IAAI,EAAC,YAAY,EAAE,QAAQ,CAAC,QAAQ,EAAC,CAAC;KAC5D,CAAC;AACJ,CAAC;AAED,MAAM,cAAc,GAAG,kBAAkB,CAAC;SAE1B,uCAAuC;;IAGrD,OAAO;QACL,MAAM,EAAE;YACN,eAAe,EACb,CAAA,MAAA,cAAc,CAAC,IAAI,CAAC,oBAAoB,EAAE,CAAC,OAAO,CAAC,0CAAG,CAAC,CAAC,KAAI,OAAO;SACtE;KACF,CAAC;AACJ,CAAC;SAEe,sBAAsB,CACpC,kBAAuC,EACvC,OAAgB;IAEhB,MAAM,oBAAoB,GAA2B;QACnD,OAAO;QACP,gBAAgB,EAAE,QAAQ,CAAC,QAAQ,CAAC,IAAI;QACxC,IAAI,QAAQ,CAAC,QAAQ,IAAI,EAAC,YAAY,EAAE,QAAQ,CAAC,QAAQ,EAAC,CAAC;KAC5D,CAAC;IAEF,IAAI,kBAAkB,CAAC,SAAS,EAAE;QAChC,OAAO;YACL,GAAG,oBAAoB;YACvB,GAAG,kBAAkB,CAAC,SAAS;SAChC,CAAC;KACH;IACD,OAAO,oBAAoB,CAAC;AAC9B;;;;","names":[],"sources":["src/components/common/interface/analytics-config.ts"],"sourcesContent":["import {\r\n  SearchEngineConfiguration,\r\n  AnalyticsConfiguration,\r\n  EngineConfiguration,\r\n} from '@coveo/headless';\r\nimport {AnalyticsClientSendEventHook} from '@coveo/headless';\r\nimport {getAtomicEnvironment} from '../../../global/environment';\r\nimport {InsightEngineConfiguration} from '../../insight';\r\nimport {RecommendationEngineConfiguration} from '../../recommendations';\r\n\r\nexport type AnalyticsPayload = Parameters<AnalyticsClientSendEventHook>[1];\r\n\r\nexport function augmentWithExternalMiddleware(\r\n  event: string,\r\n  payload: AnalyticsPayload,\r\n  config:\r\n    | InsightEngineConfiguration\r\n    | SearchEngineConfiguration\r\n    | RecommendationEngineConfiguration\r\n) {\r\n  if (config.analytics?.analyticsClientMiddleware) {\r\n    return config.analytics.analyticsClientMiddleware(event, payload);\r\n  }\r\n  return payload;\r\n}\r\n\r\nexport function augmentAnalyticsWithAtomicVersion(payload: AnalyticsPayload) {\r\n  if (payload.customData) {\r\n    payload.customData.coveoAtomicVersion = getAtomicEnvironment().version;\r\n  }\r\n  return payload;\r\n}\r\n\r\nexport function augmentAnalyticsConfigWithDocument(): AnalyticsConfiguration {\r\n  return {\r\n    documentLocation: document.location.href,\r\n    ...(document.referrer && {originLevel3: document.referrer}),\r\n  };\r\n}\r\n\r\nconst versionMatcher = /^(\\d+\\.\\d+\\.\\d+)/;\r\n\r\nexport function augmentAnalyticsConfigWithAtomicVersion(): Required<\r\n  Pick<AnalyticsConfiguration, 'source'>\r\n> {\r\n  return {\r\n    source: {\r\n      '@coveo/atomic':\r\n        versionMatcher.exec(getAtomicEnvironment().version)?.[0] || '0.0.0',\r\n    },\r\n  };\r\n}\r\n\r\nexport function getNextAnalyticsConfig(\r\n  searchEngineConfig: EngineConfiguration,\r\n  enabled: boolean\r\n): AnalyticsConfiguration {\r\n  const defaultConfiguration: AnalyticsConfiguration = {\r\n    enabled,\r\n    documentLocation: document.location.href,\r\n    ...(document.referrer && {originLevel3: document.referrer}),\r\n  };\r\n\r\n  if (searchEngineConfig.analytics) {\r\n    return {\r\n      ...defaultConfiguration,\r\n      ...searchEngineConfig.analytics,\r\n    };\r\n  }\r\n  return defaultConfiguration;\r\n}\r\n"],"version":3}