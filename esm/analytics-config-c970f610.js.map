{"file":"analytics-config-c970f610.js","mappings":";;SAYgB,6BAA6B,CAC3C,KAAa,EACb,OAAyB,EACzB,MAGqC;;IAErC,IAAI,MAAA,MAAM,CAAC,SAAS,0CAAE,yBAAyB,EAAE;QAC/C,OAAO,MAAM,CAAC,SAAS,CAAC,yBAAyB,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;KACnE;IACD,OAAO,OAAO,CAAC;AACjB,CAAC;SAEe,iCAAiC,CAAC,OAAyB;IACzE,IAAI,OAAO,CAAC,UAAU,EAAE;QACtB,OAAO,CAAC,UAAU,CAAC,kBAAkB,GAAG,oBAAoB,EAAE,CAAC,OAAO,CAAC;KACxE;IACD,OAAO,OAAO,CAAC;AACjB,CAAC;SAEe,kCAAkC;IAChD,OAAO;QACL,gBAAgB,EAAE,QAAQ,CAAC,QAAQ,CAAC,IAAI;QACxC,IAAI,QAAQ,CAAC,QAAQ,IAAI,EAAC,YAAY,EAAE,QAAQ,CAAC,QAAQ,EAAC,CAAC;KAC5D,CAAC;AACJ,CAAC;AAED,MAAM,cAAc,GAAG,kBAAkB,CAAC;SAE1B,uCAAuC;;IAGrD,OAAO;QACL,MAAM,EAAE;YACN,eAAe,EACb,CAAA,MAAA,cAAc,CAAC,IAAI,CAAC,oBAAoB,EAAE,CAAC,OAAO,CAAC,0CAAG,CAAC,CAAC,KAAI,OAAO;SACtE;KACF,CAAC;AACJ,CAAC;SAEe,sBAAsB,CACpC,kBAAuC,EACvC,OAAgB;IAEhB,MAAM,oBAAoB,GAA2B;QACnD,OAAO;QACP,gBAAgB,EAAE,QAAQ,CAAC,QAAQ,CAAC,IAAI;QACxC,IAAI,QAAQ,CAAC,QAAQ,IAAI,EAAC,YAAY,EAAE,QAAQ,CAAC,QAAQ,EAAC,CAAC;KAC5D,CAAC;IAEF,IAAI,kBAAkB,CAAC,SAAS,EAAE;QAChC,OAAO;YACL,GAAG,oBAAoB;YACvB,GAAG,kBAAkB,CAAC,SAAS;SAChC,CAAC;KACH;IACD,OAAO,oBAAoB,CAAC;AAC9B;;;;","names":[],"sources":["src/components/common/interface/analytics-config.ts"],"sourcesContent":["import {\n  SearchEngineConfiguration,\n  AnalyticsConfiguration,\n  EngineConfiguration,\n} from '@coveo/headless';\nimport {AnalyticsClientSendEventHook} from '@coveo/headless';\nimport {getAtomicEnvironment} from '../../../global/environment';\nimport {InsightEngineConfiguration} from '../../insight';\nimport {RecommendationEngineConfiguration} from '../../recommendations';\n\nexport type AnalyticsPayload = Parameters<AnalyticsClientSendEventHook>[1];\n\nexport function augmentWithExternalMiddleware(\n  event: string,\n  payload: AnalyticsPayload,\n  config:\n    | InsightEngineConfiguration\n    | SearchEngineConfiguration\n    | RecommendationEngineConfiguration\n) {\n  if (config.analytics?.analyticsClientMiddleware) {\n    return config.analytics.analyticsClientMiddleware(event, payload);\n  }\n  return payload;\n}\n\nexport function augmentAnalyticsWithAtomicVersion(payload: AnalyticsPayload) {\n  if (payload.customData) {\n    payload.customData.coveoAtomicVersion = getAtomicEnvironment().version;\n  }\n  return payload;\n}\n\nexport function augmentAnalyticsConfigWithDocument(): AnalyticsConfiguration {\n  return {\n    documentLocation: document.location.href,\n    ...(document.referrer && {originLevel3: document.referrer}),\n  };\n}\n\nconst versionMatcher = /^(\\d+\\.\\d+\\.\\d+)/;\n\nexport function augmentAnalyticsConfigWithAtomicVersion(): Required<\n  Pick<AnalyticsConfiguration, 'source'>\n> {\n  return {\n    source: {\n      '@coveo/atomic':\n        versionMatcher.exec(getAtomicEnvironment().version)?.[0] || '0.0.0',\n    },\n  };\n}\n\nexport function getNextAnalyticsConfig(\n  searchEngineConfig: EngineConfiguration,\n  enabled: boolean\n): AnalyticsConfiguration {\n  const defaultConfiguration: AnalyticsConfiguration = {\n    enabled,\n    documentLocation: document.location.href,\n    ...(document.referrer && {originLevel3: document.referrer}),\n  };\n\n  if (searchEngineConfig.analytics) {\n    return {\n      ...defaultConfiguration,\n      ...searchEngineConfig.analytics,\n    };\n  }\n  return defaultConfiguration;\n}\n"],"version":3}