{"version":3,"names":["buildCommerceLayout","element","mobileBreakpoint","buildSearchLayoutCommon","atomicCommerceLayoutCss","AtomicCommerceLayoutStyle0","AtomicCommerceLayout","this","DEFAULT_MOBILE_BREAKPOINT","componentDidLoad","id","host","randomID","styleTag","bindings","createStyleElement","innerHTML","appendChild","__decorate","InitializeBindings"],"sources":["src/components/commerce/atomic-commerce-layout/commerce-layout.ts","src/components/commerce/atomic-commerce-layout/atomic-commerce-layout.pcss?tag=atomic-commerce-layout","src/components/commerce/atomic-commerce-layout/atomic-commerce-layout.tsx"],"sourcesContent":["import {buildSearchLayoutCommon} from '../../common/atomic-layout-section/search-layout';\n\nexport function makeDesktopQuery(mobileBreakpoint: string) {\n  return `only screen and (min-width: ${mobileBreakpoint})`;\n}\nexport function buildCommerceLayout(\n  element: HTMLElement,\n  mobileBreakpoint: string\n) {\n  return buildSearchLayoutCommon(\n    element,\n    mobileBreakpoint,\n    'atomic-commerce-layout',\n    'atomic-commerce-interface'\n  );\n}\n",".atomic-modal-opened {\n  overflow-y: hidden;\n}\n\natomic-layout-section[section='search'] {\n  grid-area: atomic-section-search;\n}\n\natomic-layout-section[section='facets'] {\n  grid-area: atomic-section-facets;\n}\n\natomic-layout-section[section='main'] {\n  grid-area: atomic-section-main;\n}\n\natomic-layout-section[section='status'] {\n  grid-area: atomic-section-status;\n}\n\natomic-layout-section[section='pagination'] {\n  grid-area: atomic-section-pagination;\n}\n\n/**\n   * @prop --atomic-layout-max-search-box-input-width: The maximum width that the search box input will take.\n   * @prop --atomic-layout-max-search-box-double-suggestions-width: The maximum width that the search box suggestions will take when displaying a double list.\n   * @prop --atomic-layout-search-box-left-suggestions-width: When displaying a double list, the width of the left list.\n   */\natomic-commerce-layout {\n  width: 100%;\n  height: 100%;\n  display: none;\n  grid-template-areas:\n    '. atomic-section-search .'\n    '. atomic-section-main .';\n  grid-template-columns: var(--atomic-layout-spacing-x) minmax(0, 1fr) var(--atomic-layout-spacing-x);\n\n  atomic-layout-section[section='search'] {\n    margin: var(--atomic-layout-spacing-y) 0;\n    max-width: var(--atomic-layout-max-search-box-input-width, 678px);\n    width: 100%;\n    justify-self: center;\n\n    /* Only affects desktop */\n    atomic-commerce-search-box {\n      &::part(suggestions-double-list) {\n        width: 125%;\n        max-width: var(--atomic-layout-max-search-box-double-suggestions-width, 800px);\n      }\n\n      &::part(suggestions-left) {\n        flex-basis: var(--atomic-layout-search-box-left-suggestions-width, 30%);\n      }\n\n      &::part(suggestions-right) {\n        flex-basis: calc(100% - var(--atomic-layout-search-box-left-suggestions-width, 30%));\n      }\n    }\n  }\n\n  atomic-layout-section[section='facets'] {\n    display: none;\n\n    & * {\n      margin-bottom: var(--atomic-layout-spacing-y);\n    }\n  }\n\n  atomic-layout-section[section='main'] {\n    margin-bottom: var(--atomic-layout-spacing-y);\n  }\n\n  atomic-layout-section[section='horizontal-facets'] {\n    display: flex;\n    flex-wrap: wrap;\n    margin-bottom: var(--atomic-layout-spacing-y);\n    row-gap: 0.5rem;\n\n    & > * {\n      max-width: 100%;\n    }\n\n    & > atomic-popover {\n      margin-right: 0.5rem;\n    }\n\n    & > atomic-popover {\n      display: none;\n    }\n  }\n\n  atomic-layout-section[section='status'] {\n    display: grid;\n    justify-content: space-between;\n    grid-template-areas:\n      'atomic-breadbox       atomic-breadbox'\n      'atomic-query-summary  atomic-sort'\n      'atomic-did-you-mean   atomic-did-you-mean'\n      'atomic-notifications  atomic-notifications';\n\n    & > * {\n      margin-bottom: var(--atomic-layout-spacing-y);\n    }\n\n    atomic-commerce-breadbox {\n      grid-area: atomic-breadbox;\n    }\n\n    atomic-commerce-query-summary {\n      grid-area: atomic-query-summary;\n      align-self: center;\n      overflow: hidden;\n    }\n\n    atomic-commerce-sort-dropdown {\n      grid-area: atomic-sort;\n      justify-self: end;\n    }\n\n    atomic-refine-toggle {\n      grid-area: atomic-sort;\n    }\n\n    atomic-commerce-did-you-mean {\n      grid-area: atomic-did-you-mean;\n    }\n\n    atomic-commerce-notifications {\n      grid-area: atomic-notifications;\n    }\n  }\n\n  atomic-layout-section[section='pagination'] {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n\n    atomic-commerce-load-more-products {\n      width: 100%;\n    }\n\n    & > * {\n      margin-top: var(--atomic-layout-spacing-y);\n    }\n\n    /* Approx. width of pager & results per page */\n    @media only screen and (min-width: 50rem) {\n      flex-direction: row;\n    }\n  }\n}\n","import {Component, Element, Prop} from '@stencil/core';\nimport {\n  InitializableComponent,\n  InitializeBindings,\n} from '../../../utils/initialization-utils';\nimport {DEFAULT_MOBILE_BREAKPOINT} from '../../../utils/replace-breakpoint';\nimport {randomID} from '../../../utils/utils';\nimport {CommerceBindings} from '../atomic-commerce-interface/atomic-commerce-interface';\nimport {buildCommerceLayout} from './commerce-layout';\n\n/**\n * @internal\n * The `atomic-commerce-layout` helps organize elements in the commerce page.\n */\n@Component({\n  tag: 'atomic-commerce-layout',\n  styleUrl: 'atomic-commerce-layout.pcss',\n  shadow: false,\n})\nexport class AtomicCommerceLayout\n  implements InitializableComponent<CommerceBindings>\n{\n  public error!: Error;\n\n  @Element() private host!: HTMLElement;\n  /**\n   * CSS value that defines where the layout goes from mobile to desktop.\n   * e.g., 800px, 65rem.\n   */\n  @Prop({reflect: true}) public mobileBreakpoint = DEFAULT_MOBILE_BREAKPOINT;\n  @InitializeBindings() public bindings!: CommerceBindings;\n\n  public componentDidLoad() {\n    const id = this.host.id || randomID('atomic-commerce-layout-');\n    this.host.id = id;\n    const styleTag = this.bindings.createStyleElement();\n    styleTag.innerHTML = buildCommerceLayout(this.host, this.mobileBreakpoint);\n    this.host.appendChild(styleTag);\n  }\n}\n"],"mappings":"4QAKgBA,EACdC,EACAC,GAEA,OAAOC,EACLF,EACAC,EACA,yBACA,4BAEJ,CCfA,MAAME,EAA0B,ysHAChC,MAAAC,EAAeD,E,iXCkBFE,EAAoB,M,yBAUDC,KAAAL,iBAAmBM,E,sBAAAA,C,CAG1C,gBAAAC,GACL,MAAMC,EAAKH,KAAKI,KAAKD,IAAME,EAAS,2BACpCL,KAAKI,KAAKD,GAAKA,EACf,MAAMG,EAAWN,KAAKO,SAASC,qBAC/BF,EAASG,UAAYhB,EAAoBO,KAAKI,KAAMJ,KAAKL,kBACzDK,KAAKI,KAAKM,YAAYJ,E,6BAPKK,EAAA,CAA5BC,K"}