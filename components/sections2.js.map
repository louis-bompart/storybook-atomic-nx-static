{"file":"sections2.js","mappings":";;AAEA,MAAM,iBAAiB,GAAG,IAAI,GAAG,CAAC;IAChC,8BAA8B;IAC9B,8BAA8B;IAC9B,+BAA+B;IAC/B,6BAA6B;IAC7B,sCAAsC;IACtC,kCAAkC;IAClC,+BAA+B;IAC/B,uCAAuC;IACvC,gCAAgC;CACxB,CAAC,CAAC;AAEZ,MAAM,kBAAkB,GAAG,IAAI,GAAG,CAAC;IACjC,+BAA+B;IAC/B,+BAA+B;IAC/B,gCAAgC;IAChC,6BAA6B;IAC7B,iCAAiC;IACjC,mCAAmC;IACnC,oCAAoC;IACpC,wCAAwC;CAChC,CAAC,CAAC;AAEZ,MAAM,OAAO,GAAG,IAAI,GAAG,CAAC,CAAC,GAAG,iBAAiB,EAAE,GAAG,kBAAkB,CAAC,CAAC,CAAC;SAMvD,mBAAmB,CAAC,OAAa;IAC/C,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,EAAE;QAC3B,OAAO,KAAK,CAAC;KACd;IACD,OAAO,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,WAAW,EAAwB,CAAC,CAAC;AAC1E,CAAC;SAEe,gBAAgB,CAAC,OAA2C;IAC1E,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;QAC/B,OAAO,KAAK,CAAC,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,gBAAgB,KAClE,OAAO,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CACnC,CAAC;KACH;IACD,OAAO,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,KAAK,mBAAmB,CAAC,KAAK,CAAC,CAAC,CAAC;AACzE;;;;","names":[],"sources":["src/components/common/layout/sections.ts"],"sourcesContent":["import {isElementNode} from '../../../utils/utils';\r\n\r\nconst resultSectionTags = new Set([\r\n  'atomic-result-section-visual',\r\n  'atomic-result-section-badges',\r\n  'atomic-result-section-actions',\r\n  'atomic-result-section-title',\r\n  'atomic-result-section-title-metadata',\r\n  'atomic-result-section-emphasized',\r\n  'atomic-result-section-excerpt',\r\n  'atomic-result-section-bottom-metadata',\r\n  'atomic-result-section-children',\r\n] as const);\r\n\r\nconst productSectionTags = new Set([\r\n  'atomic-product-section-visual',\r\n  'atomic-product-section-badges',\r\n  'atomic-product-section-actions',\r\n  'atomic-product-section-name',\r\n  'atomic-product-section-metadata',\r\n  'atomic-product-section-emphasized',\r\n  'atomic-product-section-description',\r\n  'atomic-product-section-bottom-metadata',\r\n] as const);\r\n\r\nconst allTags = new Set([...resultSectionTags, ...productSectionTags]);\r\n\r\ntype SetValueType<T> = T extends Set<infer U> ? U : never;\r\n\r\nexport type ItemSectionTagName = SetValueType<typeof allTags>;\r\n\r\nexport function isResultSectionNode(element: Node) {\r\n  if (!isElementNode(element)) {\r\n    return false;\r\n  }\r\n  return allTags.has(element.tagName.toLowerCase() as ItemSectionTagName);\r\n}\r\n\r\nexport function containsSections(content: string | NodeList | HTMLCollection) {\r\n  if (typeof content === 'string') {\r\n    return Array.from(resultSectionTags.values()).some((resultSectionTag) =>\r\n      content.includes(resultSectionTag)\r\n    );\r\n  }\r\n  return Array.from(content).some((child) => isResultSectionNode(child));\r\n}\r\n"],"version":3}