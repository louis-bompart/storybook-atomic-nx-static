{"version":3,"names":["AtomicHtml","this","sanitize","connectedCallback","value","error","Error","render","h","key","innerHTML","DOMPurify","__decorate","InitializeBindings"],"sources":["src/components/search/atomic-html/atomic-html.tsx"],"sourcesContent":["import {Component, Prop, State, h} from '@stencil/core';\nimport DOMPurify from 'dompurify';\nimport {\n  InitializableComponent,\n  InitializeBindings,\n} from '../../../utils/initialization-utils';\nimport {Bindings} from '../atomic-search-interface/atomic-search-interface';\n\n/**\n * The `atomic-html` component renders the HTML value of a string.\n *\n * There is an inherent XSS security concern associated with the usage of this component.\n *\n * Use only with values for which you are certain the content is harmless.\n */\n@Component({\n  tag: 'atomic-html',\n  shadow: true,\n})\nexport class AtomicHtml implements InitializableComponent {\n  @InitializeBindings() public bindings!: Bindings;\n  @State() public error!: Error;\n\n  /**\n   * The string value containing HTML to display;\n   */\n  @Prop({reflect: false}) public value!: string;\n  /**\n   * Specify if the content should be sanitized, using [`DOMPurify`](https://www.npmjs.com/package/dompurify).\n   */\n  @Prop({reflect: true}) public sanitize = true;\n\n  public connectedCallback() {\n    if (!this.value) {\n      this.error = new Error('The \"value\" attribute must be defined.');\n    }\n  }\n\n  public render() {\n    return (\n      <span\n        innerHTML={this.sanitize ? DOMPurify.sanitize(this.value) : this.value}\n      ></span>\n    );\n  }\n}\n"],"mappings":"ohBAmBaA,EAAU,M,yBAWSC,KAAAC,SAAW,K,wDAAA,I,CAElC,iBAAAC,GACL,IAAKF,KAAKG,MAAO,CACfH,KAAKI,MAAQ,IAAIC,MAAM,yC,EAIpB,MAAAC,GACL,OACEC,EAAA,QAAAC,IAAA,2CACEC,UAAWT,KAAKC,SAAWS,EAAUT,SAASD,KAAKG,OAASH,KAAKG,O,GArB1CQ,EAAA,CAA5BC,K"}