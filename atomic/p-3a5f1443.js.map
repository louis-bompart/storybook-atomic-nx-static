{"version":3,"names":["getTemplateNodeType","node","isResultSectionNode","isVisualNode","isElementNode","tagName","toLowerCase","tableElementTagName","groupNodesByType","nodes","aggregate","Array","from","ResultTemplateCommon","constructor","host","setError","validParents","allowEmpty","this","matchConditions","validateTemplate","hasValidParent","map","p","toUpperCase","includes","_a","parentElement","nodeName","Error","join","template","querySelector","innerHTML","trim","content","console","warn","section","sectionNodes","other","otherNodes","childNodes","length","getTemplate","conditions","error","concat","getTemplateElement","priority","renderIfError","h","element","makeMatchConditions","mustMatch","mustNotMatch","field","push","ResultTemplatesHelpers","fieldMustMatch","fieldMustNotMatch","makeDefinedConditions","ifDefined","ifNotDefined","fieldNames","split","fieldsMustBeDefined","fieldsMustNotBeDefined"],"sources":["src/components/common/result-templates/result-template-common.tsx"],"sourcesContent":["import {\n  ResultTemplate,\n  ResultTemplateCondition,\n  ResultTemplatesHelpers,\n} from '@coveo/headless';\nimport {h} from '@stencil/core';\nimport {aggregate, isElementNode, isVisualNode} from '../../../utils/utils';\nimport {tableElementTagName} from '../../search/atomic-table-result/table-element-utils';\nimport {isResultSectionNode} from '../layout/sections';\n\nexport type TemplateContent = DocumentFragment;\n\ninterface ResultTemplateCommonProps {\n  allowEmpty?: boolean;\n  host: HTMLDivElement;\n  validParents: string[];\n  setError: (error: Error) => void;\n}\n\ntype TemplateNodeType =\n  | 'section'\n  | 'metadata'\n  | 'table-column-definition'\n  | 'other';\n\nexport function getTemplateNodeType(node: Node): TemplateNodeType {\n  if (isResultSectionNode(node)) {\n    return 'section';\n  }\n  if (!isVisualNode(node)) {\n    return 'metadata';\n  }\n  if (\n    isElementNode(node) &&\n    node.tagName.toLowerCase() === tableElementTagName\n  ) {\n    return 'table-column-definition';\n  }\n  return 'other';\n}\n\nfunction groupNodesByType(nodes: NodeList) {\n  return aggregate(Array.from(nodes), (node) => getTemplateNodeType(node));\n}\n\nexport class ResultTemplateCommon {\n  private host: HTMLDivElement;\n  public matchConditions: ResultTemplateCondition[] = [];\n\n  constructor({\n    host,\n    setError,\n    validParents,\n    allowEmpty = false,\n  }: ResultTemplateCommonProps) {\n    this.host = host;\n    this.validateTemplate(host, setError, validParents, allowEmpty);\n  }\n\n  validateTemplate(\n    host: HTMLDivElement,\n    setError: (error: Error) => void,\n    validParents: string[],\n    allowEmpty = true\n  ) {\n    const hasValidParent = validParents\n      .map((p) => p.toUpperCase())\n      .includes(host.parentElement?.nodeName || '');\n    const tagName = host.nodeName.toLowerCase();\n\n    if (!hasValidParent) {\n      setError(\n        new Error(\n          `The \"${tagName}\" component has to be the child of one of the following: ${validParents\n            .map((p) => `\"${p.toLowerCase()}\"`)\n            .join(', ')}.`\n        )\n      );\n      return;\n    }\n\n    const template = host.querySelector('template');\n    if (!template) {\n      setError(\n        new Error(\n          `The \"${tagName}\" component has to contain a \"template\" element as a child.`\n        )\n      );\n      return;\n    }\n\n    if (!allowEmpty && !template.innerHTML.trim()) {\n      setError(\n        new Error(`The \"template\" tag inside \"${tagName}\" cannot be empty.`)\n      );\n      return;\n    }\n\n    if (template.content.querySelector('script')) {\n      console.warn(\n        'Any \"script\" tags defined inside of \"template\" elements are not supported and will not be executed when the results are rendered.',\n        host\n      );\n    }\n\n    const {section: sectionNodes, other: otherNodes} = groupNodesByType(\n      template.content.childNodes\n    );\n    if (sectionNodes?.length && otherNodes?.length) {\n      console.warn(\n        'Result templates should only contain section elements or non-section elements. Future updates could unpredictably affect this result template.',\n        host,\n        {sectionNodes, otherNodes}\n      );\n    }\n  }\n\n  getTemplate(\n    conditions: ResultTemplateCondition[],\n    error: Error\n  ): ResultTemplate<TemplateContent> | null {\n    if (error) {\n      return null;\n    }\n\n    return {\n      conditions: conditions.concat(this.matchConditions),\n      content: getTemplateElement(this.host).content!,\n      priority: 1,\n    };\n  }\n\n  renderIfError(error: Error) {\n    if (error) {\n      return (\n        <atomic-component-error\n          element={this.host}\n          error={error}\n        ></atomic-component-error>\n      );\n    }\n  }\n}\n\nfunction getTemplateElement(host: HTMLElement) {\n  return host.querySelector('template')!;\n}\n\nexport function makeMatchConditions(\n  mustMatch: Record<string, string[]>,\n  mustNotMatch: Record<string, string[]>\n): ResultTemplateCondition[] {\n  const conditions: ResultTemplateCondition[] = [];\n  for (const field in mustMatch) {\n    conditions.push(\n      ResultTemplatesHelpers.fieldMustMatch(field, mustMatch[field])\n    );\n  }\n\n  for (const field in mustNotMatch) {\n    conditions.push(\n      ResultTemplatesHelpers.fieldMustNotMatch(field, mustNotMatch[field])\n    );\n  }\n  return conditions;\n}\n\nexport function makeDefinedConditions(\n  ifDefined?: string,\n  ifNotDefined?: string\n): ResultTemplateCondition[] {\n  const conditions: ResultTemplateCondition[] = [];\n  if (ifDefined) {\n    const fieldNames = ifDefined.split(',');\n    conditions.push(ResultTemplatesHelpers.fieldsMustBeDefined(fieldNames));\n  }\n\n  if (ifNotDefined) {\n    const fieldNames = ifNotDefined.split(',');\n    conditions.push(ResultTemplatesHelpers.fieldsMustNotBeDefined(fieldNames));\n  }\n  return conditions;\n}\n"],"mappings":"2MAyBgBA,EAAoBC,GAClC,GAAIC,EAAoBD,GAAO,CAC7B,MAAO,S,CAET,IAAKE,EAAaF,GAAO,CACvB,MAAO,U,CAET,GACEG,EAAcH,IACdA,EAAKI,QAAQC,gBAAkBC,EAC/B,CACA,MAAO,yB,CAET,MAAO,OACT,CAEA,SAASC,EAAiBC,GACxB,OAAOC,EAAUC,MAAMC,KAAKH,IAASR,GAASD,EAAoBC,IACpE,C,MAEaY,EAIX,WAAAC,EAAYC,KACVA,EAAIC,SACJA,EAAQC,aACRA,EAAYC,WACZA,EAAa,QANRC,KAAAC,gBAA6C,GAQlDD,KAAKJ,KAAOA,EACZI,KAAKE,iBAAiBN,EAAMC,EAAUC,EAAcC,E,CAGtD,gBAAAG,CACEN,EACAC,EACAC,EACAC,EAAa,M,MAEb,MAAMI,EAAiBL,EACpBM,KAAKC,GAAMA,EAAEC,gBACbC,WAASC,EAAAZ,EAAKa,iBAAa,MAAAD,SAAA,SAAAA,EAAEE,WAAY,IAC5C,MAAMxB,EAAUU,EAAKc,SAASvB,cAE9B,IAAKgB,EAAgB,CACnBN,EACE,IAAIc,MACF,QAAQzB,6DAAmEY,EACxEM,KAAKC,GAAM,IAAIA,EAAElB,mBACjByB,KAAK,WAGZ,M,CAGF,MAAMC,EAAWjB,EAAKkB,cAAc,YACpC,IAAKD,EAAU,CACbhB,EACE,IAAIc,MACF,QAAQzB,iEAGZ,M,CAGF,IAAKa,IAAec,EAASE,UAAUC,OAAQ,CAC7CnB,EACE,IAAIc,MAAM,8BAA8BzB,wBAE1C,M,CAGF,GAAI2B,EAASI,QAAQH,cAAc,UAAW,CAC5CI,QAAQC,KACN,oIACAvB,E,CAIJ,MAAOwB,QAASC,EAAcC,MAAOC,GAAclC,EACjDwB,EAASI,QAAQO,YAEnB,IAAIH,IAAY,MAAZA,SAAY,SAAZA,EAAcI,UAAUF,IAAU,MAAVA,SAAU,SAAVA,EAAYE,QAAQ,CAC9CP,QAAQC,KACN,iJACAvB,EACA,CAACyB,eAAcE,c,EAKrB,WAAAG,CACEC,EACAC,GAEA,GAAIA,EAAO,CACT,OAAO,I,CAGT,MAAO,CACLD,WAAYA,EAAWE,OAAO7B,KAAKC,iBACnCgB,QAASa,EAAmB9B,KAAKJ,MAAMqB,QACvCc,SAAU,E,CAId,aAAAC,CAAcJ,GACZ,GAAIA,EAAO,CACT,OACEK,EAAA,0BACEC,QAASlC,KAAKJ,KACdgC,MAAOA,G,GAOjB,SAASE,EAAmBlC,GAC1B,OAAOA,EAAKkB,cAAc,WAC5B,C,SAEgBqB,EACdC,EACAC,GAEA,MAAMV,EAAwC,GAC9C,IAAK,MAAMW,KAASF,EAAW,CAC7BT,EAAWY,KACTC,EAAuBC,eAAeH,EAAOF,EAAUE,I,CAI3D,IAAK,MAAMA,KAASD,EAAc,CAChCV,EAAWY,KACTC,EAAuBE,kBAAkBJ,EAAOD,EAAaC,I,CAGjE,OAAOX,CACT,C,SAEgBgB,EACdC,EACAC,GAEA,MAAMlB,EAAwC,GAC9C,GAAIiB,EAAW,CACb,MAAME,EAAaF,EAAUG,MAAM,KACnCpB,EAAWY,KAAKC,EAAuBQ,oBAAoBF,G,CAG7D,GAAID,EAAc,CAChB,MAAMC,EAAaD,EAAaE,MAAM,KACtCpB,EAAWY,KAAKC,EAAuBS,uBAAuBH,G,CAEhE,OAAOnB,CACT,Q"}