{"version":3,"names":["MIN_VALUES_WHERE_FACET_SEARCH_IMPROVES_UX","FacetSearchInputGuard","withSearch","canShowMoreValues","numberOfDisplayedValues","children","h","Fragment","FacetValue","facetSearchQuery","displayValuesAs","enableExclusion","facetCount","facetState","facetValue","field","i18n","onExclude","onSelect","setRef","displayValue","getFieldValueCaption","isSelected","isExcluded","triStateProps","state","FacetValueCheckbox","numberOfResults","onClick","searchQuery","buttonRef","element","FacetValueLabelHighlight","FacetValueLink","FacetValueBox","FacetSearchValue","props"],"sources":["src/components/common/facets/facet-search/facet-search-input-guard.tsx","src/components/common/facets/facet-value/facet-value.tsx","src/components/common/facets/facet-search/facet-search-value.tsx"],"sourcesContent":["import {Fragment, FunctionalComponent, h} from '@stencil/core';\r\n\r\nconst MIN_VALUES_WHERE_FACET_SEARCH_IMPROVES_UX = 9;\r\n\r\ninterface FacetSearchInputGuardProps {\r\n  withSearch: boolean;\r\n  canShowMoreValues: boolean;\r\n  numberOfDisplayedValues: number;\r\n}\r\n\r\nexport const FacetSearchInputGuard: FunctionalComponent<\r\n  FacetSearchInputGuardProps\r\n> = ({withSearch, canShowMoreValues, numberOfDisplayedValues}, children) => {\r\n  if (!withSearch) {\r\n    return;\r\n  }\r\n\r\n  // Hide the input if there are no more values to load from the index and there are less than 8 values to display.\r\n  // 8 is an arbitrary number, discussed with UX as a good compromise: A list long enough where it's worth searching.\r\n  if (\r\n    !canShowMoreValues &&\r\n    numberOfDisplayedValues < MIN_VALUES_WHERE_FACET_SEARCH_IMPROVES_UX\r\n  ) {\r\n    return;\r\n  }\r\n\r\n  return <Fragment>{children}</Fragment>;\r\n};\r\n","import {FunctionalComponent, h} from '@stencil/core';\r\nimport {i18n} from 'i18next';\r\nimport {getFieldValueCaption} from '../../../../utils/field-utils';\r\nimport {FacetValueBox} from '../facet-value-box/facet-value-box';\r\nimport {FacetValueCheckbox} from '../facet-value-checkbox/facet-value-checkbox';\r\nimport {FacetValueLabelHighlight} from '../facet-value-label-highlight/facet-value-label-highlight';\r\nimport {FacetValueLink} from '../facet-value-link/facet-value-link';\r\n\r\nexport interface FacetValueProps {\r\n  field: string;\r\n  facetValue: string;\r\n  facetCount: number;\r\n  facetState: 'idle' | 'selected' | 'excluded';\r\n  i18n: i18n;\r\n  enableExclusion: boolean;\r\n  onExclude: () => void;\r\n  onSelect: () => void;\r\n  displayValuesAs: 'checkbox' | 'link' | 'box';\r\n  facetSearchQuery: string;\r\n  setRef?: (btn?: HTMLButtonElement) => void;\r\n}\r\n\r\nexport const FacetValue: FunctionalComponent<FacetValueProps> = ({\r\n  facetSearchQuery,\r\n  displayValuesAs,\r\n  enableExclusion,\r\n  facetCount,\r\n  facetState,\r\n  facetValue,\r\n  field,\r\n  i18n,\r\n  onExclude,\r\n  onSelect,\r\n  setRef,\r\n}) => {\r\n  const displayValue = getFieldValueCaption(field, facetValue, i18n);\r\n  const isSelected = facetState === 'selected';\r\n  const isExcluded = facetState === 'excluded';\r\n  const triStateProps = enableExclusion\r\n    ? {\r\n        onExclude,\r\n        state: facetState,\r\n      }\r\n    : {};\r\n  switch (displayValuesAs) {\r\n    case 'checkbox':\r\n      return (\r\n        <FacetValueCheckbox\r\n          {...triStateProps}\r\n          displayValue={displayValue}\r\n          numberOfResults={facetCount}\r\n          isSelected={isSelected}\r\n          i18n={i18n}\r\n          onClick={onSelect}\r\n          searchQuery={facetSearchQuery}\r\n          buttonRef={(element) => {\r\n            setRef && setRef(element);\r\n          }}\r\n        >\r\n          <FacetValueLabelHighlight\r\n            displayValue={displayValue}\r\n            isSelected={isSelected}\r\n            isExcluded={isExcluded}\r\n            searchQuery={facetSearchQuery}\r\n          ></FacetValueLabelHighlight>\r\n        </FacetValueCheckbox>\r\n      );\r\n    case 'link':\r\n      return (\r\n        <FacetValueLink\r\n          displayValue={displayValue}\r\n          numberOfResults={facetCount}\r\n          isSelected={isSelected}\r\n          i18n={i18n}\r\n          onClick={onSelect}\r\n          searchQuery={facetSearchQuery}\r\n          buttonRef={(element) => {\r\n            setRef && setRef(element);\r\n          }}\r\n        >\r\n          <FacetValueLabelHighlight\r\n            displayValue={displayValue}\r\n            isSelected={isSelected}\r\n            searchQuery={facetSearchQuery}\r\n          ></FacetValueLabelHighlight>\r\n        </FacetValueLink>\r\n      );\r\n    case 'box':\r\n      return (\r\n        <FacetValueBox\r\n          displayValue={displayValue}\r\n          numberOfResults={facetCount}\r\n          isSelected={isSelected}\r\n          i18n={i18n}\r\n          onClick={onSelect}\r\n          searchQuery={facetSearchQuery}\r\n          buttonRef={(element) => {\r\n            setRef && setRef(element);\r\n          }}\r\n        >\r\n          <FacetValueLabelHighlight\r\n            displayValue={displayValue}\r\n            isSelected={isSelected}\r\n            searchQuery={facetSearchQuery}\r\n          ></FacetValueLabelHighlight>\r\n        </FacetValueBox>\r\n      );\r\n  }\r\n};\r\n","import {FunctionalComponent, h} from '@stencil/core';\r\nimport {FacetValueProps, FacetValue} from '../facet-value/facet-value';\r\n\r\nexport const FacetSearchValue: FunctionalComponent<\r\n  Omit<FacetValueProps, 'facetState' | 'setRef'>\r\n> = (props) => {\r\n  return <FacetValue {...props} facetState=\"idle\" />;\r\n};\r\n"],"mappings":"+NAEA,MAAMA,EAA4C,E,MAQrCC,EAET,EAAEC,aAAYC,oBAAmBC,2BAA0BC,KAC7D,IAAKH,EAAY,CACf,M,CAKF,IACGC,GACDC,EAA0BJ,EAC1B,CACA,M,CAGF,OAAOM,EAACC,EAAQ,KAAEF,EAAoB,E,MCJ3BG,EAAmD,EAC9DC,mBACAC,kBACAC,kBACAC,aACAC,aACAC,aACAC,QACAC,OACAC,YACAC,WACAC,aAEA,MAAMC,EAAeC,EAAqBN,EAAOD,EAAYE,GAC7D,MAAMM,EAAaT,IAAe,WAClC,MAAMU,EAAaV,IAAe,WAClC,MAAMW,EAAgBb,EAClB,CACEM,YACAQ,MAAOZ,GAET,GACJ,OAAQH,GACN,IAAK,WACH,OACEJ,EAACoB,EAAkB,IACbF,EACJJ,aAAcA,EACdO,gBAAiBf,EACjBU,WAAYA,EACZN,KAAMA,EACNY,QAASV,EACTW,YAAapB,EACbqB,UAAYC,IACVZ,GAAUA,EAAOY,EAAQ,GAG3BzB,EAAC0B,EAAwB,CACvBZ,aAAcA,EACdE,WAAYA,EACZC,WAAYA,EACZM,YAAapB,KAIrB,IAAK,OACH,OACEH,EAAC2B,EAAc,CACbb,aAAcA,EACdO,gBAAiBf,EACjBU,WAAYA,EACZN,KAAMA,EACNY,QAASV,EACTW,YAAapB,EACbqB,UAAYC,IACVZ,GAAUA,EAAOY,EAAQ,GAG3BzB,EAAC0B,EAAwB,CACvBZ,aAAcA,EACdE,WAAYA,EACZO,YAAapB,KAIrB,IAAK,MACH,OACEH,EAAC4B,EAAa,CACZd,aAAcA,EACdO,gBAAiBf,EACjBU,WAAYA,EACZN,KAAMA,EACNY,QAASV,EACTW,YAAapB,EACbqB,UAAYC,IACVZ,GAAUA,EAAOY,EAAQ,GAG3BzB,EAAC0B,EAAwB,CACvBZ,aAAcA,EACdE,WAAYA,EACZO,YAAapB,K,QCpGZ0B,EAERC,GACI9B,EAACE,EAAU,IAAK4B,EAAOvB,WAAW,gB"}