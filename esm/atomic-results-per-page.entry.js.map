{"file":"atomic-results-per-page.entry.js","mappings":"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","names":["buildSearchStatus","buildResultsPerPage"],"sources":["src/components/search/atomic-results-per-page/atomic-results-per-page.pcss?tag=atomic-results-per-page&encapsulation=shadow","src/components/search/atomic-results-per-page/atomic-results-per-page.tsx"],"sourcesContent":["@import '../../../global/global.pcss';\r\n\r\n.btn-page {\r\n  @apply w-10 h-10;\r\n}\r\n","import {\r\n  ResultsPerPage,\r\n  buildResultsPerPage,\r\n  ResultsPerPageState,\r\n  buildSearchStatus,\r\n  SearchStatus,\r\n  SearchStatusState,\r\n} from '@coveo/headless';\r\nimport {Component, Event, EventEmitter, h, Prop, State} from '@stencil/core';\r\nimport {\r\n  BindStateToController,\r\n  InitializableComponent,\r\n  InitializeBindings,\r\n} from '../../../utils/initialization-utils';\r\nimport {randomID} from '../../../utils/utils';\r\nimport {FieldsetGroup} from '../../common/fieldset-group';\r\nimport {RadioButton} from '../../common/radio-button';\r\nimport {Bindings} from '../atomic-search-interface/atomic-search-interface';\r\n\r\n/**\r\n * The `atomic-results-per-page` component determines how many results to display per page.\r\n *\r\n * @part label - The \"Results per page\" label.\r\n * @part buttons - The list of buttons.\r\n * @part button - The result per page button.\r\n * @part active-button - The active result per page button.\r\n */\r\n@Component({\r\n  tag: 'atomic-results-per-page',\r\n  styleUrl: 'atomic-results-per-page.pcss',\r\n  shadow: true,\r\n})\r\nexport class AtomicResultsPerPage implements InitializableComponent {\r\n  @InitializeBindings() public bindings!: Bindings;\r\n  private resultPerPage!: ResultsPerPage;\r\n  public searchStatus!: SearchStatus;\r\n  private choices!: number[];\r\n  private readonly radioGroupName = randomID('atomic-results-per-page-');\r\n\r\n  @State()\r\n  @BindStateToController('resultPerPage')\r\n  public resultPerPageState!: ResultsPerPageState;\r\n  @BindStateToController('searchStatus')\r\n  @State()\r\n  private searchStatusState!: SearchStatusState;\r\n  @State() public error!: Error;\r\n\r\n  /**\r\n   * A list of choices for the number of results to display per page, separated by commas.\r\n   */\r\n  @Prop({reflect: true}) choicesDisplayed = '10,25,50,100';\r\n  /**\r\n   * The initial selection for the number of result per page. This should be part of the `choicesDisplayed` option. By default, this is set to the first value in `choicesDisplayed`.\r\n   */\r\n  @Prop({mutable: true, reflect: true}) initialChoice?: number;\r\n\r\n  @Event({\r\n    eventName: 'atomic/scrollToTop',\r\n  })\r\n  private scrollToTopEvent!: EventEmitter;\r\n\r\n  public initialize() {\r\n    this.choices = this.validateChoicesDisplayed();\r\n    this.validateInitialChoice();\r\n\r\n    this.searchStatus = buildSearchStatus(this.bindings.engine);\r\n    this.resultPerPage = buildResultsPerPage(this.bindings.engine, {\r\n      initialState: {numberOfResults: this.initialChoice},\r\n    });\r\n  }\r\n\r\n  private validateChoicesDisplayed() {\r\n    return this.choicesDisplayed.split(',').map((choice) => {\r\n      const parsedChoice = parseInt(choice);\r\n      if (isNaN(parsedChoice)) {\r\n        const errorMsg = `The choice value \"${choice}\" from the \"choicesDisplayed\" option is not a number.`;\r\n        this.bindings.engine.logger.error(errorMsg, this);\r\n        throw new Error(errorMsg);\r\n      }\r\n\r\n      return parsedChoice;\r\n    });\r\n  }\r\n\r\n  private validateInitialChoice() {\r\n    if (!this.initialChoice) {\r\n      this.initialChoice = this.choices[0];\r\n      return;\r\n    }\r\n    if (!this.choices.includes(this.initialChoice)) {\r\n      const errorMsg = `The \"initialChoice\" option value \"${this.initialChoice}\" is not included in the \"choicesDisplayed\" option \"${this.choicesDisplayed}\".`;\r\n      this.bindings.engine.logger.error(errorMsg, this);\r\n      throw new Error(errorMsg);\r\n    }\r\n  }\r\n\r\n  private buildChoice(choice: number) {\r\n    const isSelected = this.resultPerPage.isSetTo(choice);\r\n    const parts = ['button'];\r\n    if (isSelected) {\r\n      parts.push('active-button');\r\n    }\r\n    const text = choice.toLocaleString(this.bindings.i18n.language);\r\n\r\n    return (\r\n      <RadioButton\r\n        key={choice}\r\n        groupName={this.radioGroupName}\r\n        style=\"outline-neutral\"\r\n        checked={isSelected}\r\n        ariaLabel={text}\r\n        onChecked={() => {\r\n          this.focusOnProperResultDependingOnChoice(choice);\r\n          this.resultPerPage.set(choice);\r\n        }}\r\n        class=\"btn-page focus-visible:bg-neutral-light\"\r\n        part={parts.join(' ')}\r\n        text={text}\r\n      ></RadioButton>\r\n    );\r\n  }\r\n\r\n  private focusOnProperResultDependingOnChoice(choice: number) {\r\n    if (choice < this.resultPerPageState.numberOfResults) {\r\n      this.bindings.store.state.resultList\r\n        ?.focusOnFirstResultAfterNextSearch()\r\n        .then(() => this.scrollToTopEvent.emit());\r\n    } else if (choice > this.resultPerPageState.numberOfResults) {\r\n      this.bindings.store.state.resultList?.focusOnNextNewResult();\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    if (\r\n      !this.bindings.store.isAppLoaded() ||\r\n      !this.searchStatusState.hasResults\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    const label = this.bindings.i18n.t('results-per-page');\r\n\r\n    return (\r\n      <div class=\"flex items-center\">\r\n        <span\r\n          part=\"label\"\r\n          class=\"self-start text-on-background text-lg mr-3 leading-10\"\r\n          aria-hidden=\"true\"\r\n        >\r\n          {label}\r\n        </span>\r\n        <FieldsetGroup label={label}>\r\n          <div\r\n            part=\"buttons\"\r\n            role=\"radiogroup\"\r\n            aria-label={this.bindings.i18n.t('results-per-page')}\r\n            class=\"flex flex-wrap gap-2\"\r\n          >\r\n            {this.choices.map((choice) => this.buildChoice(choice))}\r\n          </div>\r\n        </FieldsetGroup>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"version":3}