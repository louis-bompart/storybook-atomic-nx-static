{"file":"atomic-commerce-facets.entry.cjs.js","mappings":";;;;;;;;;;;;AAAA,MAAM,uBAAuB,GAAG,u+tCAAu+tC,CAAC;AACxguC,mCAAe,uBAAuB;;;;;;;;;;;;MC6BzB,oBAAoB;;;;;;;;;;QAYD,wBAAmB,GAAG,CAAC,CAAC;mCAAF,CAAC;;;;IAQ9C,UAAU;QACf,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,MAAM,UAAU,GACd,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,IAAI,KAAK,iBAAiB;cACrDA,eAAmB;cACnBC,eAAW,CAAC;QAClB,IAAI,CAAC,cAAc,GAAG,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,cAAc,EAAE,CAAC;KACzE;IAEO,aAAa;QACnB,IAAIC,gBAAM,CAAC;YACT,kBAAkB,EAAE,IAAIC,qBAAW,CAAC,EAAC,GAAG,EAAE,CAAC,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAC,CAAC;SAC/D,CAAC,CAAC,QAAQ,CAAC;YACV,kBAAkB,EAAE,IAAI,CAAC,mBAAmB;SAC7C,CAAC,CAAC;KACJ;IAEO,mBAAmB,CAAC,KAAa;QACvC,IAAI,IAAI,CAAC,mBAAmB,KAAK,CAAC,CAAC,EAAE;YACnC,OAAO,KAAK,CAAC;SACd;QACD,OAAO,IAAI,CAAC,mBAAmB;cAC3B,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,mBAAmB;cACpC,IAAI,CAAC;KACV;IAEM,MAAM;QACX,QACEC,QAACC,UAAI,uDACF,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,EAAEC,OAAK;YAC3C,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;gBACnC,OAAO;aACR;YACD,MAAM,KAAK,GAAG,EAAC,WAAW,EAAE,IAAI,CAAC,mBAAmB,CAACA,OAAK,CAAC,EAAC,CAAC;YAE7D,QAAQ,KAAK,CAAC,KAAK,CAAC,IAAI;gBACtB,KAAK,SAAS;oBACZ,QACEF,sCACM,KAAK,EACT,KAAK,EAAE,KAAqB,GACL,EACzB;gBACJ,KAAK,gBAAgB;oBACnB,QACEA,8CACM,KAAK,EACT,KAAK,EAAE,KAAqB,GACG,EACjC;gBACJ,KAAK,WAAW;oBACd,QACEA,gDACM,KAAK,EACT,KAAK,EAAE,KAAkB,GACQ,EACnC;gBACJ,KAAK,cAAc;oBACjB,QACEA,+CACM,KAAK,EACT,KAAK,EAAE,KAAsB,GACG,EAClC;gBACJ,SAAS;oBACP,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAC9B,yBAAyB,KAAK,CAAC,KAAK,CAAC,IAAI,GAAG,CAC7C,CAAC;oBACF,OAAO;iBACR;aACF;SACF,CAAC,CACG,EACP;KACH;;;AA7F4B;IAA5BG,sCAAkB,EAAE;sDAA4B;AAe1C;IAFNC,yCAAqB,CAAC,gBAAgB,CAAC;iEAEW;;;;;","names":["buildProductListing","buildSearch","Schema","NumberValue","h","Host","index","InitializeBindings","BindStateToController"],"sources":["src/components/commerce/facets/atomic-commerce-facets/atomic-commerce-facets.pcss?tag=atomic-commerce-facets&encapsulation=shadow","src/components/commerce/facets/atomic-commerce-facets/atomic-commerce-facets.tsx"],"sourcesContent":["@import '../../../../global/global.pcss';\n","import {NumberValue, Schema} from '@coveo/bueno';\nimport {\n  RegularFacet,\n  CategoryFacet,\n  DateFacet,\n  NumericFacet,\n  FacetGeneratorState,\n  buildProductListing,\n  buildSearch,\n  FacetGenerator,\n} from '@coveo/headless/commerce';\nimport {Component, h, Element, Host, State, Prop} from '@stencil/core';\nimport {\n  BindStateToController,\n  InitializableComponent,\n  InitializeBindings,\n} from '../../../../utils/initialization-utils';\nimport {CommerceBindings as Bindings} from '../../atomic-commerce-interface/atomic-commerce-interface';\n\n/**\n * The `atomic-commerce-facets` component automatically renders commerce facets based on the Commerce API response.\n * Unlike regular facets, which require explicit definition and request in the query, the `atomic-commerce-facets` component dynamically generates facets.\n *\n * @internal\n */\n@Component({\n  tag: 'atomic-commerce-facets',\n  styleUrl: 'atomic-commerce-facets.pcss',\n  shadow: true,\n})\nexport class AtomicCommerceFacets implements InitializableComponent<Bindings> {\n  @InitializeBindings() public bindings!: Bindings;\n  public facetGenerator!: FacetGenerator;\n  @Element() host!: HTMLElement;\n\n  /**\n   * The maximum number of facets to expand.\n   * Remaining facets are automatically collapsed.\n   *\n   * Using the value `0` collapses all facets.\n   * Using the value `-1` disables the feature and keeps all facets expanded.\n   */\n  @Prop({reflect: true}) public collapseFacetsAfter = 4;\n\n  @BindStateToController('facetGenerator')\n  @State()\n  public facetGeneratorState!: FacetGeneratorState[];\n\n  @State() public error!: Error;\n\n  public initialize() {\n    this.validateProps();\n    const controller =\n      this.bindings.interfaceElement.type === 'product-listing'\n        ? buildProductListing\n        : buildSearch;\n    this.facetGenerator = controller(this.bindings.engine).facetGenerator();\n  }\n\n  private validateProps() {\n    new Schema({\n      collapseFacetAfter: new NumberValue({min: -1, required: true}),\n    }).validate({\n      collapseFacetAfter: this.collapseFacetsAfter,\n    });\n  }\n\n  private shouldCollapseFacet(index: number): boolean {\n    if (this.collapseFacetsAfter === -1) {\n      return false;\n    }\n    return this.collapseFacetsAfter\n      ? index + 1 > this.collapseFacetsAfter\n      : true;\n  }\n\n  public render() {\n    return (\n      <Host>\n        {this.facetGenerator.facets.map((facet, index) => {\n          if (facet.state.values.length === 0) {\n            return;\n          }\n          const props = {isCollapsed: this.shouldCollapseFacet(index)};\n\n          switch (facet.state.type) {\n            case 'regular':\n              return (\n                <atomic-commerce-facet\n                  {...props}\n                  facet={facet as RegularFacet}\n                ></atomic-commerce-facet>\n              );\n            case 'numericalRange':\n              return (\n                <atomic-commerce-numeric-facet\n                  {...props}\n                  facet={facet as NumericFacet}\n                ></atomic-commerce-numeric-facet>\n              );\n            case 'dateRange':\n              return (\n                <atomic-commerce-timeframe-facet\n                  {...props}\n                  facet={facet as DateFacet}\n                ></atomic-commerce-timeframe-facet>\n              );\n            case 'hierarchical':\n              return (\n                <atomic-commerce-category-facet\n                  {...props}\n                  facet={facet as CategoryFacet}\n                ></atomic-commerce-category-facet>\n              );\n            default: {\n              this.bindings.engine.logger.warn(\n                `Unexpected facet type ${facet.state.type}.`\n              );\n              return;\n            }\n          }\n        })}\n      </Host>\n    );\n  }\n}\n"],"version":3}