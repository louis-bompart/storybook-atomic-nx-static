{"version":3,"names":["augmentWithExternalMiddleware","event","payload","config","_a","analytics","analyticsClientMiddleware","augmentAnalyticsWithAtomicVersion","customData","coveoAtomicVersion","getAtomicEnvironment","version","augmentAnalyticsConfigWithDocument","documentLocation","document","location","href","referrer","originLevel3","versionMatcher","augmentAnalyticsConfigWithAtomicVersion","source","exec","getNextAnalyticsConfig","searchEngineConfig","enabled","defaultConfiguration"],"sources":["src/components/common/interface/analytics-config.ts"],"sourcesContent":["import {\r\n  SearchEngineConfiguration,\r\n  AnalyticsConfiguration,\r\n  EngineConfiguration,\r\n} from '@coveo/headless';\r\nimport {AnalyticsClientSendEventHook} from '@coveo/headless';\r\nimport {getAtomicEnvironment} from '../../../global/environment';\r\nimport {InsightEngineConfiguration} from '../../insight';\r\nimport {RecommendationEngineConfiguration} from '../../recommendations';\r\n\r\nexport type AnalyticsPayload = Parameters<AnalyticsClientSendEventHook>[1];\r\n\r\nexport function augmentWithExternalMiddleware(\r\n  event: string,\r\n  payload: AnalyticsPayload,\r\n  config:\r\n    | InsightEngineConfiguration\r\n    | SearchEngineConfiguration\r\n    | RecommendationEngineConfiguration\r\n) {\r\n  if (config.analytics?.analyticsClientMiddleware) {\r\n    return config.analytics.analyticsClientMiddleware(event, payload);\r\n  }\r\n  return payload;\r\n}\r\n\r\nexport function augmentAnalyticsWithAtomicVersion(payload: AnalyticsPayload) {\r\n  if (payload.customData) {\r\n    payload.customData.coveoAtomicVersion = getAtomicEnvironment().version;\r\n  }\r\n  return payload;\r\n}\r\n\r\nexport function augmentAnalyticsConfigWithDocument(): AnalyticsConfiguration {\r\n  return {\r\n    documentLocation: document.location.href,\r\n    ...(document.referrer && {originLevel3: document.referrer}),\r\n  };\r\n}\r\n\r\nconst versionMatcher = /^(\\d+\\.\\d+\\.\\d+)/;\r\n\r\nexport function augmentAnalyticsConfigWithAtomicVersion(): Required<\r\n  Pick<AnalyticsConfiguration, 'source'>\r\n> {\r\n  return {\r\n    source: {\r\n      '@coveo/atomic':\r\n        versionMatcher.exec(getAtomicEnvironment().version)?.[0] || '0.0.0',\r\n    },\r\n  };\r\n}\r\n\r\nexport function getNextAnalyticsConfig(\r\n  searchEngineConfig: EngineConfiguration,\r\n  enabled: boolean\r\n): AnalyticsConfiguration {\r\n  const defaultConfiguration: AnalyticsConfiguration = {\r\n    enabled,\r\n    documentLocation: document.location.href,\r\n    ...(document.referrer && {originLevel3: document.referrer}),\r\n  };\r\n\r\n  if (searchEngineConfig.analytics) {\r\n    return {\r\n      ...defaultConfiguration,\r\n      ...searchEngineConfig.analytics,\r\n    };\r\n  }\r\n  return defaultConfiguration;\r\n}\r\n"],"mappings":"6CAYgBA,EACdC,EACAC,EACAC,G,MAKA,IAAIC,EAAAD,EAAOE,aAAS,MAAAD,SAAA,SAAAA,EAAEE,0BAA2B,CAC/C,OAAOH,EAAOE,UAAUC,0BAA0BL,EAAOC,E,CAE3D,OAAOA,CACT,C,SAEgBK,EAAkCL,GAChD,GAAIA,EAAQM,WAAY,CACtBN,EAAQM,WAAWC,mBAAqBC,IAAuBC,O,CAEjE,OAAOT,CACT,C,SAEgBU,IACd,MAAO,CACLC,iBAAkBC,SAASC,SAASC,QAChCF,SAASG,UAAY,CAACC,aAAcJ,SAASG,UAErD,CAEA,MAAME,EAAiB,mB,SAEPC,I,MAGd,MAAO,CACLC,OAAQ,CACN,kBACEjB,EAAAe,EAAeG,KAAKZ,IAAuBC,YAAQ,MAAAP,SAAA,SAAAA,EAAG,KAAM,SAGpE,C,SAEgBmB,EACdC,EACAC,GAEA,MAAMC,EAA+C,CACnDD,UACAZ,iBAAkBC,SAASC,SAASC,QAChCF,SAASG,UAAY,CAACC,aAAcJ,SAASG,WAGnD,GAAIO,EAAmBnB,UAAW,CAChC,MAAO,IACFqB,KACAF,EAAmBnB,U,CAG1B,OAAOqB,CACT,Q"}