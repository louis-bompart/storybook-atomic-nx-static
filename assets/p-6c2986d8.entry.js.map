{"version":3,"names":["AtomicAriaLive","this","regions","messagesQueue","buildDebouncedQueue","delay","id","randomID","onFindAriaLive","detail","args","element","isInSearchInterface","host","tagName","parentElement","updateMessage","region","message","assertive","updateRegion","enqueue","cancelActionIfQueued","registerRegion","disconnectedCallback","clear","render","h","Host","key","style","position","display","height","overflow","margin","Object","entries","map","regionName","role"],"sources":["src/components/search/atomic-search-interface/atomic-aria-live.tsx"],"sourcesContent":["import {\r\n  Component,\r\n  h,\r\n  Host,\r\n  State,\r\n  Element,\r\n  Method,\r\n  Listen,\r\n} from '@stencil/core';\r\nimport {FindAriaLiveEventArgs} from '../../../utils/accessibility-utils';\r\nimport {buildDebouncedQueue} from '../../../utils/debounce-utils';\r\nimport {randomID} from '../../../utils/utils';\r\n\r\ntype Regions = {[regionName: string]: {assertive: boolean; message: string}};\r\n\r\n/**\r\n * The `atomic-aria-live` component notifies screen readers of changes in the search interface.\r\n */\r\n@Component({\r\n  tag: 'atomic-aria-live',\r\n  shadow: false,\r\n})\r\nexport class AtomicAriaLive {\r\n  @Element() private host!: HTMLAtomicAriaLiveElement;\r\n  @State() private regions: Readonly<Regions> = {};\r\n\r\n  private messagesQueue = buildDebouncedQueue({delay: 500});\r\n  private id = randomID('aria-live-');\r\n\r\n  @Listen('atomic/accessibility/findAriaLive', {target: 'document'})\r\n  protected onFindAriaLive({detail: args}: CustomEvent<FindAriaLiveEventArgs>) {\r\n    if (!args.element || !this.isInSearchInterface) {\r\n      args.element = this.host;\r\n    }\r\n  }\r\n\r\n  private get isInSearchInterface() {\r\n    let element: Element | null = this.host;\r\n    while (element) {\r\n      if (element.tagName === 'ATOMIC-SEARCH-INTERFACE') {\r\n        return true;\r\n      }\r\n      element = element.parentElement;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  @Method()\r\n  public async updateMessage(\r\n    region: string,\r\n    message: string,\r\n    assertive: boolean\r\n  ) {\r\n    const updateRegion = () =>\r\n      (this.regions = {...this.regions, [region]: {assertive, message}});\r\n\r\n    if (message) {\r\n      this.messagesQueue.enqueue(updateRegion, region);\r\n    } else {\r\n      this.messagesQueue.cancelActionIfQueued(region);\r\n      updateRegion();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  @Method()\r\n  public async registerRegion(region: string, assertive: boolean) {\r\n    if (region in this.regions) {\r\n      return;\r\n    }\r\n    this.regions = {...this.regions, [region]: {assertive, message: ''}};\r\n  }\r\n\r\n  public disconnectedCallback() {\r\n    this.messagesQueue.clear();\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <Host\r\n        style={{\r\n          position: 'absolute',\r\n          display: 'block',\r\n          height: '0',\r\n          overflow: 'hidden',\r\n          margin: '0',\r\n        }}\r\n      >\r\n        {Object.entries(this.regions).map(\r\n          ([regionName, {assertive, message}]) => (\r\n            <div\r\n              key={regionName}\r\n              id={`${this.id}-${regionName}`}\r\n              aria-live={assertive ? 'assertive' : 'polite'}\r\n              role=\"status\"\r\n            >\r\n              {message}\r\n            </div>\r\n          )\r\n        )}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"0JAsBaA,EAAc,M,yBAERC,KAAAC,QAA6B,GAEtCD,KAAAE,cAAgBC,EAAoB,CAACC,MAAO,MAC5CJ,KAAAK,GAAKC,EAAS,c,aAHwB,E,CAMpC,cAAAC,EAAgBC,OAAQC,IAChC,IAAKA,EAAKC,UAAYV,KAAKW,oBAAqB,CAC9CF,EAAKC,QAAUV,KAAKY,I,EAIxB,uBAAYD,GACV,IAAID,EAA0BV,KAAKY,KACnC,MAAOF,EAAS,CACd,GAAIA,EAAQG,UAAY,0BAA2B,CACjD,OAAO,I,CAETH,EAAUA,EAAQI,a,CAEpB,OAAO,K,CAOF,mBAAMC,CACXC,EACAC,EACAC,GAEA,MAAMC,EAAe,IAClBnB,KAAKC,QAAU,IAAID,KAAKC,QAASe,CAACA,GAAS,CAACE,YAAWD,YAE1D,GAAIA,EAAS,CACXjB,KAAKE,cAAckB,QAAQD,EAAcH,E,KACpC,CACLhB,KAAKE,cAAcmB,qBAAqBL,GACxCG,G,EAQG,oBAAMG,CAAeN,EAAgBE,GAC1C,GAAIF,KAAUhB,KAAKC,QAAS,CAC1B,M,CAEFD,KAAKC,QAAU,IAAID,KAAKC,QAASe,CAACA,GAAS,CAACE,YAAWD,QAAS,I,CAG3D,oBAAAM,GACLvB,KAAKE,cAAcsB,O,CAGd,MAAAC,GACL,OACEC,EAACC,EAAI,CAAAC,IAAA,2CACHC,MAAO,CACLC,SAAU,WACVC,QAAS,QACTC,OAAQ,IACRC,SAAU,SACVC,OAAQ,MAGTC,OAAOC,QAAQpC,KAAKC,SAASoC,KAC5B,EAAEC,GAAapB,YAAWD,cACxBS,EAAA,OACEE,IAAKU,EACLjC,GAAI,GAAGL,KAAKK,MAAMiC,IAAY,YACnBpB,EAAY,YAAc,SACrCqB,KAAK,UAEJtB,K"}