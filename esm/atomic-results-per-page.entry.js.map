{"file":"atomic-results-per-page.entry.js","mappings":"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","names":["buildSearchStatus","buildResultsPerPage"],"sources":["src/components/search/atomic-results-per-page/atomic-results-per-page.pcss?tag=atomic-results-per-page&encapsulation=shadow","src/components/search/atomic-results-per-page/atomic-results-per-page.tsx"],"sourcesContent":["@import '../../../global/global.pcss';\n\n.btn-page {\n  @apply w-10 h-10;\n}\n","import {\n  ResultsPerPage,\n  buildResultsPerPage,\n  ResultsPerPageState,\n  buildSearchStatus,\n  SearchStatus,\n  SearchStatusState,\n} from '@coveo/headless';\nimport {Component, Event, EventEmitter, h, Prop, State} from '@stencil/core';\nimport {\n  BindStateToController,\n  InitializableComponent,\n  InitializeBindings,\n} from '../../../utils/initialization-utils';\nimport {randomID} from '../../../utils/utils';\nimport {FieldsetGroup} from '../../common/fieldset-group';\nimport {RadioButton} from '../../common/radio-button';\nimport {Bindings} from '../atomic-search-interface/atomic-search-interface';\n\n/**\n * The `atomic-results-per-page` component determines how many results to display per page.\n *\n * @part label - The \"Results per page\" label.\n * @part buttons - The list of buttons.\n * @part button - The result per page button.\n * @part active-button - The active result per page button.\n */\n@Component({\n  tag: 'atomic-results-per-page',\n  styleUrl: 'atomic-results-per-page.pcss',\n  shadow: true,\n})\nexport class AtomicResultsPerPage implements InitializableComponent {\n  @InitializeBindings() public bindings!: Bindings;\n  private resultPerPage!: ResultsPerPage;\n  public searchStatus!: SearchStatus;\n  private choices!: number[];\n  private readonly radioGroupName = randomID('atomic-results-per-page-');\n\n  @State()\n  @BindStateToController('resultPerPage')\n  public resultPerPageState!: ResultsPerPageState;\n  @BindStateToController('searchStatus')\n  @State()\n  private searchStatusState!: SearchStatusState;\n  @State() public error!: Error;\n\n  /**\n   * A list of choices for the number of results to display per page, separated by commas.\n   */\n  @Prop({reflect: true}) choicesDisplayed = '10,25,50,100';\n  /**\n   * The initial selection for the number of result per page. This should be part of the `choicesDisplayed` option. By default, this is set to the first value in `choicesDisplayed`.\n   */\n  @Prop({mutable: true, reflect: true}) initialChoice?: number;\n\n  @Event({\n    eventName: 'atomic/scrollToTop',\n  })\n  private scrollToTopEvent!: EventEmitter;\n\n  public initialize() {\n    this.choices = this.validateChoicesDisplayed();\n    this.validateInitialChoice();\n\n    this.searchStatus = buildSearchStatus(this.bindings.engine);\n    this.resultPerPage = buildResultsPerPage(this.bindings.engine, {\n      initialState: {numberOfResults: this.initialChoice},\n    });\n  }\n\n  private validateChoicesDisplayed() {\n    return this.choicesDisplayed.split(',').map((choice) => {\n      const parsedChoice = parseInt(choice);\n      if (isNaN(parsedChoice)) {\n        const errorMsg = `The choice value \"${choice}\" from the \"choicesDisplayed\" option is not a number.`;\n        this.bindings.engine.logger.error(errorMsg, this);\n        throw new Error(errorMsg);\n      }\n\n      return parsedChoice;\n    });\n  }\n\n  private validateInitialChoice() {\n    if (!this.initialChoice) {\n      this.initialChoice = this.choices[0];\n      return;\n    }\n    if (!this.choices.includes(this.initialChoice)) {\n      const errorMsg = `The \"initialChoice\" option value \"${this.initialChoice}\" is not included in the \"choicesDisplayed\" option \"${this.choicesDisplayed}\".`;\n      this.bindings.engine.logger.error(errorMsg, this);\n      throw new Error(errorMsg);\n    }\n  }\n\n  private buildChoice(choice: number) {\n    const isSelected = this.resultPerPage.isSetTo(choice);\n    const parts = ['button'];\n    if (isSelected) {\n      parts.push('active-button');\n    }\n    const text = choice.toLocaleString(this.bindings.i18n.language);\n\n    return (\n      <RadioButton\n        key={choice}\n        groupName={this.radioGroupName}\n        style=\"outline-neutral\"\n        checked={isSelected}\n        ariaLabel={text}\n        onChecked={() => {\n          this.focusOnProperResultDependingOnChoice(choice);\n          this.resultPerPage.set(choice);\n        }}\n        class=\"btn-page focus-visible:bg-neutral-light\"\n        part={parts.join(' ')}\n        text={text}\n      ></RadioButton>\n    );\n  }\n\n  private focusOnProperResultDependingOnChoice(choice: number) {\n    if (choice < this.resultPerPageState.numberOfResults) {\n      this.bindings.store.state.resultList\n        ?.focusOnFirstResultAfterNextSearch()\n        .then(() => this.scrollToTopEvent.emit());\n    } else if (choice > this.resultPerPageState.numberOfResults) {\n      this.bindings.store.state.resultList?.focusOnNextNewResult();\n    }\n  }\n\n  public render() {\n    if (\n      !this.bindings.store.isAppLoaded() ||\n      !this.searchStatusState.hasResults\n    ) {\n      return;\n    }\n\n    const label = this.bindings.i18n.t('results-per-page');\n\n    return (\n      <div class=\"flex items-center\">\n        <span\n          part=\"label\"\n          class=\"self-start text-on-background text-lg mr-3 leading-10\"\n          aria-hidden=\"true\"\n        >\n          {label}\n        </span>\n        <FieldsetGroup label={label}>\n          <div\n            part=\"buttons\"\n            role=\"radiogroup\"\n            aria-label={this.bindings.i18n.t('results-per-page')}\n            class=\"flex flex-wrap gap-2\"\n          >\n            {this.choices.map((choice) => this.buildChoice(choice))}\n          </div>\n        </FieldsetGroup>\n      </div>\n    );\n  }\n}\n"],"version":3}