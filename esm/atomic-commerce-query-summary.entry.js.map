{"file":"atomic-commerce-query-summary.entry.js","mappings":";;;;;;;;;;AAAA,MAAM,6BAA6B,GAAG,6/tCAA6/tC,CAAC;AACpiuC,yCAAe,6BAA6B;;;;;;;;;;;;MCsC/B,kBAAkB;;;;;;IAkBtB,UAAU;QACf,IAAI,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,IAAI,KAAK,iBAAiB,EAAE;YAC7D,IAAI,CAAC,sBAAsB,GAAGA,EAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;SACzE;aAAM;YACL,IAAI,CAAC,sBAAsB,GAAGC,EAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;SACxE;KACF;IAEM,MAAM;QACX,MAAM,EACJ,YAAY,EACZ,mBAAmB,EACnB,WAAW,EACX,qBAAqB,EACrB,WAAW,EACX,QAAQ,GACT,GAAG,IAAI,CAAC,2BAA2B,CAAC;QAErC,MAAM,EAAC,OAAO,EAAE,UAAU,EAAE,eAAe,EAAC,GAC1C,6BAA6B,CAAC;YAC5B,KAAK,EAAE,YAAY;YACnB,IAAI,EAAE,WAAW;YACjB,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,2BAA2B,CAAC;kBAClD,IAAI,CAAC,2BAA2B,CAAC,KAAK;kBACtC,EAAE;YACN,KAAK,EAAE,qBAAqB;YAC5B,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI;YACxB,SAAS,EAAE,KAAK;SACjB,CAAC,CAAC;QAEL,IAAI,CAAC,WAAW,GAAG,eAAe,CAAC;QAEnC,QACE,EAAC,iBAAiB,qDAChB,mBAAmB,EAAE,mBAAmB,EACxC,UAAU,EAAE,WAAW,EACvB,QAAQ,EAAE,QAAQ,IAElB,EAAC,qBAAqB,uDACpB,EAAC,eAAe,IACd,GAAG,EAAE,OAAO,EACZ,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,MAAM,EAAE,UAAU,EAClB,KAAK,EAAE,WAAW,GAClB,CACoB,CACN,EACpB;KACH;IAEO,QAAQ,CACd,KAA+C;QAE/C,OAAO,OAAO,IAAI,KAAK,CAAC;KACzB;;AArE4B;IAA5B,kBAAkB,EAAE;oDAAoC;AAMjD;IAFP,qBAAqB,CAAC,wBAAwB,CAAC;uEAIxB;AAKd;IADT,cAAc,CAAC,eAAe,CAAC;uDACD;;;;;","names":["buildListingSummary","buildSearchSummary"],"sources":["src/components/commerce/atomic-commerce-query-summary/atomic-commerce-query-summary.pcss?tag=atomic-commerce-query-summary&encapsulation=shadow","src/components/commerce/atomic-commerce-query-summary/atomic-commerce-query-summary.tsx"],"sourcesContent":["@import '../../../global/global.pcss';\n\n:host {\n  overflow: hidden;\n}\n","import {\n  ListingSummary,\n  ListingSummaryState,\n  Pagination,\n  SearchSummary,\n  SearchSummaryState,\n  buildListingSummary,\n  buildSearchSummary,\n} from '@coveo/headless/commerce';\nimport {Component, h, State} from '@stencil/core';\nimport {AriaLiveRegion} from '../../../utils/accessibility-utils';\nimport {\n  BindStateToController,\n  InitializableComponent,\n  InitializeBindings,\n} from '../../../utils/initialization-utils';\nimport {LocalizedString} from '../../../utils/jsx-utils';\nimport {QuerySummaryContainer} from '../../common/query-summary/container';\nimport {QuerySummaryGuard} from '../../common/query-summary/guard';\nimport {getQuerySummaryI18nParameters} from '../../common/query-summary/utils';\nimport {CommerceBindings} from '../atomic-commerce-interface/atomic-commerce-interface';\n\n/**\n * The `atomic-commerce-query-summary` component displays information about the current range of results and the request duration (e.g., \"Results 1-10 of 123 in 0.47 seconds\").\n *\n * @part container - The container for the whole summary.\n * @part results - The container for the results.\n * @part duration - The container for the duration.\n * @part highlight - The summary highlights.\n * @part query - The summary highlighted query.\n * @part placeholder - The query summary placeholder used while the search interface is initializing.\n *\n * @internal\n */\n@Component({\n  tag: 'atomic-commerce-query-summary',\n  styleUrl: 'atomic-commerce-query-summary.pcss',\n  shadow: true,\n})\nexport class AtomicQuerySummary\n  implements InitializableComponent<CommerceBindings>\n{\n  @InitializeBindings() public bindings!: CommerceBindings;\n  public listingOrSearchSummary!: SearchSummary | ListingSummary;\n  public pagination!: Pagination;\n\n  @BindStateToController('listingOrSearchSummary')\n  @State()\n  private listingOrSearchSummaryState!:\n    | SearchSummaryState\n    | ListingSummaryState;\n\n  @State() public error!: Error;\n\n  @AriaLiveRegion('query-summary')\n  protected ariaMessage!: string;\n\n  public initialize() {\n    if (this.bindings.interfaceElement.type === 'product-listing') {\n      this.listingOrSearchSummary = buildListingSummary(this.bindings.engine);\n    } else {\n      this.listingOrSearchSummary = buildSearchSummary(this.bindings.engine);\n    }\n  }\n\n  public render() {\n    const {\n      firstProduct,\n      firstSearchExecuted,\n      lastProduct,\n      totalNumberOfProducts,\n      hasProducts,\n      hasError,\n    } = this.listingOrSearchSummaryState;\n\n    const {i18nKey, highlights, ariaLiveMessage} =\n      getQuerySummaryI18nParameters({\n        first: firstProduct,\n        last: lastProduct,\n        query: this.isSearch(this.listingOrSearchSummaryState)\n          ? this.listingOrSearchSummaryState.query\n          : '',\n        total: totalNumberOfProducts,\n        i18n: this.bindings.i18n,\n        isLoading: false,\n      });\n\n    this.ariaMessage = ariaLiveMessage;\n\n    return (\n      <QuerySummaryGuard\n        firstSearchExecuted={firstSearchExecuted}\n        hasResults={hasProducts}\n        hasError={hasError}\n      >\n        <QuerySummaryContainer>\n          <LocalizedString\n            key={i18nKey}\n            bindings={this.bindings}\n            params={highlights}\n            count={lastProduct}\n          />\n        </QuerySummaryContainer>\n      </QuerySummaryGuard>\n    );\n  }\n\n  private isSearch(\n    state: ListingSummaryState | SearchSummaryState\n  ): state is SearchSummaryState {\n    return 'query' in state;\n  }\n}\n"],"version":3}