{"version":3,"names":["TimeframeFacetCommon","constructor","props","this","manualTimeframes","facetId","determineFacetId","setFacetId","getManualTimeframes","length","facetForDateRange","initializeFacetForDateRange","currentValues","withDatePicker","facetForDatePicker","initializeFacetForDatePicker","filter","initializeFilter","dependenciesManager","buildDependenciesManager","registerFacetToStore","bindings","store","get","field","randomID","enabled","_d","_b","_a","state","_c","valuesToRender","values","value","numberOfResults","shouldRenderValues","hasInputRange","shouldRenderFacet","shouldRenderInput","shouldDisplayInputForFacetRange","hasInput","searchStatusState","getSearchStatusState","facetValues","hasValues","numberOfSelectedValues","range","map","period","amount","unit","buildDateRange","start","end","disconnectedCallback","host","isConnected","stopWatching","isHidden","facetInfo","label","i18n","t","element","registerFacet","format","formatFacetValue","initializePopover","numberOfActiveValues","dateFacets","Array","from","querySelectorAll","facetValue","startDate","deserializeRelativeDate","relativeDate","timeframe","find","getFieldValueCaption","count","error","parseDate","renderValues","renderValuesContainer","renderValue","displayValue","isSelected","isExcluded","h","FacetValueLink","onClick","toggleSingleSelect","FacetValueLabelHighlight","children","FacetValuesGroup","class","part","renderHeader","isCollapsed","headerFocus","onToggleCollapse","FacetHeader","onClearFilters","focusAfterSearch","clear","deselectAll","headingLevel","headerRef","el","setTarget","renderDateInput","min","max","filterState","render","hasError","firstSearchExecuted","Hidden","FacetPlaceholder","numberOfValues","FacetContainer"],"sources":["src/components/common/facets/timeframe-facet-common.tsx"],"sourcesContent":["import {h, VNode} from '@stencil/core';\r\nimport {FocusTargetController} from '../../../utils/accessibility-utils';\r\nimport {parseDate} from '../../../utils/date-utils';\r\nimport {getFieldValueCaption} from '../../../utils/field-utils';\r\nimport {randomID} from '../../../utils/utils';\r\nimport {initializePopover} from '../../search/facets/atomic-popover/popover-type';\r\nimport {Hidden} from '../hidden';\r\nimport {AnyBindings} from '../interface/bindings';\r\nimport {\r\n  DateFacet,\r\n  DateFacetValue,\r\n  DateFilter,\r\n  DateRangeOptions,\r\n  DateRangeRequest,\r\n  FacetConditionsManager,\r\n  RangeFacetSortCriterion,\r\n  RelativeDate,\r\n  RelativeDatePeriod,\r\n  RelativeDateUnit,\r\n  SearchStatusState,\r\n} from '../types';\r\nimport {shouldDisplayInputForFacetRange} from './facet-common';\r\nimport {FacetInfo} from './facet-common-store';\r\nimport {FacetContainer} from './facet-container/facet-container';\r\nimport {FacetHeader} from './facet-header/facet-header';\r\nimport {FacetPlaceholder} from './facet-placeholder/facet-placeholder';\r\nimport {FacetValueLabelHighlight} from './facet-value-label-highlight/facet-value-label-highlight';\r\nimport {FacetValueLink} from './facet-value-link/facet-value-link';\r\nimport {FacetValuesGroup} from './facet-values-group/facet-values-group';\r\n\r\nexport interface Timeframe {\r\n  period: RelativeDatePeriod;\r\n  unit?: RelativeDateUnit;\r\n  amount?: number;\r\n  label?: string;\r\n}\r\n\r\ninterface TimeframeFacetCommonOptions {\r\n  facetId?: string;\r\n  host: HTMLElement;\r\n  bindings: AnyBindings;\r\n  label: string;\r\n  field: string;\r\n  headingLevel: number;\r\n  dependsOn: Record<string, string>;\r\n  withDatePicker: boolean;\r\n  setFacetId(id: string): string;\r\n  getSearchStatusState(): SearchStatusState;\r\n  buildDependenciesManager(): FacetConditionsManager;\r\n  deserializeRelativeDate(date: string): RelativeDate;\r\n  buildDateRange(config: DateRangeOptions): DateRangeRequest;\r\n  initializeFacetForDatePicker(): DateFacet;\r\n  initializeFacetForDateRange(values: DateRangeRequest[]): DateFacet;\r\n  initializeFilter(): DateFilter;\r\n  min?: string;\r\n  max?: string;\r\n  sortCriteria: RangeFacetSortCriterion;\r\n}\r\n\r\ninterface TimeframeFacetCommonRenderProps {\r\n  hasError: boolean;\r\n  firstSearchExecuted: boolean;\r\n  isCollapsed: boolean;\r\n  headerFocus: FocusTargetController;\r\n  onToggleCollapse: () => boolean;\r\n}\r\n\r\nexport class TimeframeFacetCommon {\r\n  private facetId?: string;\r\n  private facetForDatePicker?: DateFacet;\r\n  private facetForDateRange?: DateFacet;\r\n  private filter?: DateFilter;\r\n  private manualTimeframes: Timeframe[] = [];\r\n  private dependenciesManager?: FacetConditionsManager;\r\n\r\n  constructor(private props: TimeframeFacetCommonOptions) {\r\n    this.facetId = this.determineFacetId;\r\n    this.props.setFacetId(this.facetId);\r\n\r\n    this.manualTimeframes = this.getManualTimeframes();\r\n\r\n    // Initialize two facets: One that is actually used to display values for end users, which only exists\r\n    // if we need to display something to the end user (ie: timeframes > 0)\r\n\r\n    // A second facet is initialized only to verify the results count. It is never used to display results to end user.\r\n    // It serves as a way to determine if the input should be rendered or not, independent of the ranges configured in the component\r\n    if (this.manualTimeframes.length > 0) {\r\n      this.facetForDateRange = this.props.initializeFacetForDateRange(\r\n        this.currentValues\r\n      );\r\n    }\r\n\r\n    if (this.props.withDatePicker) {\r\n      this.facetForDatePicker = this.props.initializeFacetForDatePicker();\r\n      this.filter = this.props.initializeFilter();\r\n    }\r\n\r\n    if (this.facetForDateRange || this.filter) {\r\n      this.dependenciesManager = this.props.buildDependenciesManager();\r\n    }\r\n    this.registerFacetToStore();\r\n  }\r\n\r\n  private get determineFacetId() {\r\n    if (this.props.facetId) {\r\n      return this.props.facetId;\r\n    }\r\n\r\n    if (this.props.bindings.store.get('dateFacets')[this.props.field]) {\r\n      return randomID(`${this.props.field}_`);\r\n    }\r\n\r\n    return this.props.field;\r\n  }\r\n\r\n  private get enabled() {\r\n    return (\r\n      this.facetForDateRange?.state.enabled ??\r\n      this.filter?.state.enabled ??\r\n      true\r\n    );\r\n  }\r\n\r\n  private get valuesToRender() {\r\n    return (\r\n      this.facetForDateRange?.state.values.filter(\r\n        (value) => value.numberOfResults || value.state !== 'idle'\r\n      ) || []\r\n    );\r\n  }\r\n\r\n  private get shouldRenderValues() {\r\n    return !this.hasInputRange && !!this.valuesToRender.length;\r\n  }\r\n\r\n  private get shouldRenderFacet() {\r\n    return this.shouldRenderInput || this.shouldRenderValues;\r\n  }\r\n\r\n  private get shouldRenderInput() {\r\n    return shouldDisplayInputForFacetRange({\r\n      hasInput: this.props.withDatePicker,\r\n      hasInputRange: this.hasInputRange,\r\n      searchStatusState: this.props.getSearchStatusState(),\r\n      facetValues: this.facetForDatePicker?.state?.values || [],\r\n    });\r\n  }\r\n\r\n  private get hasValues() {\r\n    if (this.facetForDatePicker?.state.values.length) {\r\n      return true;\r\n    }\r\n\r\n    return !!this.valuesToRender.length;\r\n  }\r\n\r\n  private get numberOfSelectedValues() {\r\n    if (this.filter?.state?.range) {\r\n      return 1;\r\n    }\r\n\r\n    return (\r\n      this.facetForDateRange?.state.values.filter(\r\n        ({state}) => state === 'selected'\r\n      ).length || 0\r\n    );\r\n  }\r\n\r\n  private get hasInputRange() {\r\n    return !!this.filter?.state.range;\r\n  }\r\n\r\n  public get currentValues(): DateRangeRequest[] {\r\n    return this.manualTimeframes.map(({period, amount, unit}) =>\r\n      period === 'past'\r\n        ? this.props.buildDateRange({\r\n            start: {period, unit, amount},\r\n            end: {period: 'now'},\r\n          })\r\n        : this.props.buildDateRange({\r\n            start: {period: 'now'},\r\n            end: {period, unit, amount},\r\n          })\r\n    );\r\n  }\r\n\r\n  public disconnectedCallback() {\r\n    if (this.props.host.isConnected) {\r\n      return;\r\n    }\r\n    this.dependenciesManager?.stopWatching();\r\n  }\r\n\r\n  private get isHidden() {\r\n    return !this.shouldRenderFacet || !this.enabled;\r\n  }\r\n\r\n  private registerFacetToStore() {\r\n    const facetInfo: FacetInfo = {\r\n      label: () => this.props.bindings.i18n.t(this.props.label),\r\n      facetId: this.facetId!,\r\n      element: this.props.host,\r\n      isHidden: () => this.isHidden,\r\n    };\r\n\r\n    this.props.bindings.store.registerFacet('dateFacets', {\r\n      ...facetInfo,\r\n      format: (value) => this.formatFacetValue(value),\r\n    });\r\n\r\n    initializePopover(this.props.host, {\r\n      ...facetInfo,\r\n      hasValues: () => this.hasValues,\r\n      numberOfActiveValues: () => this.numberOfSelectedValues,\r\n    });\r\n\r\n    if (this.filter) {\r\n      this.props.bindings.store.state.dateFacets[this.filter.state.facetId] =\r\n        this.props.bindings.store.state.dateFacets[this.facetId!];\r\n    }\r\n  }\r\n\r\n  private getManualTimeframes(): Timeframe[] {\r\n    return Array.from(this.props.host.querySelectorAll('atomic-timeframe')).map(\r\n      ({label, amount, unit, period}) => ({\r\n        label,\r\n        amount,\r\n        unit,\r\n        period,\r\n      })\r\n    );\r\n  }\r\n\r\n  private formatFacetValue(facetValue: DateFacetValue) {\r\n    try {\r\n      const startDate = this.props.deserializeRelativeDate(facetValue.start);\r\n      const relativeDate =\r\n        startDate.period === 'past'\r\n          ? startDate\r\n          : this.props.deserializeRelativeDate(facetValue.end);\r\n      const timeframe = this.getManualTimeframes().find(\r\n        (timeframe) =>\r\n          timeframe.period === relativeDate.period &&\r\n          timeframe.unit === relativeDate.unit &&\r\n          timeframe.amount === relativeDate.amount\r\n      );\r\n\r\n      if (timeframe?.label) {\r\n        return getFieldValueCaption(\r\n          this.props.field,\r\n          timeframe.label,\r\n          this.props.bindings.i18n\r\n        );\r\n      }\r\n      return this.props.bindings.i18n.t(\r\n        `${relativeDate.period}-${relativeDate.unit}`,\r\n        {\r\n          count: relativeDate.amount,\r\n        }\r\n      );\r\n    } catch (error) {\r\n      return this.props.bindings.i18n.t('to', {\r\n        start: parseDate(facetValue.start).format('YYYY-MM-DD'),\r\n        end: parseDate(facetValue.end).format('YYYY-MM-DD'),\r\n      });\r\n    }\r\n  }\r\n  private renderValues() {\r\n    return this.renderValuesContainer(\r\n      this.valuesToRender.map((value) => this.renderValue(value))\r\n    );\r\n  }\r\n  private renderValue(facetValue: DateFacetValue) {\r\n    const displayValue = this.formatFacetValue(facetValue);\r\n    const isSelected = facetValue.state === 'selected';\r\n    const isExcluded = facetValue.state === 'excluded';\r\n    return (\r\n      <FacetValueLink\r\n        displayValue={displayValue}\r\n        isSelected={isSelected}\r\n        numberOfResults={facetValue.numberOfResults}\r\n        i18n={this.props.bindings.i18n}\r\n        onClick={() => this.facetForDateRange!.toggleSingleSelect(facetValue)}\r\n      >\r\n        <FacetValueLabelHighlight\r\n          displayValue={displayValue}\r\n          isSelected={isSelected}\r\n          isExcluded={isExcluded}\r\n        ></FacetValueLabelHighlight>\r\n      </FacetValueLink>\r\n    );\r\n  }\r\n\r\n  private renderValuesContainer(children: VNode[]) {\r\n    return (\r\n      <FacetValuesGroup\r\n        i18n={this.props.bindings.i18n}\r\n        label={this.props.label}\r\n      >\r\n        <ul class=\"mt-3\" part=\"values\">\r\n          {children}\r\n        </ul>\r\n      </FacetValuesGroup>\r\n    );\r\n  }\r\n\r\n  private renderHeader(\r\n    isCollapsed: boolean,\r\n    headerFocus: FocusTargetController,\r\n    onToggleCollapse: () => void\r\n  ) {\r\n    return (\r\n      <FacetHeader\r\n        i18n={this.props.bindings.i18n}\r\n        label={this.props.label}\r\n        onClearFilters={() => {\r\n          headerFocus.focusAfterSearch();\r\n          if (this.filter?.state.range) {\r\n            this.filter?.clear();\r\n            return;\r\n          }\r\n          this.facetForDateRange?.deselectAll();\r\n        }}\r\n        numberOfActiveValues={this.numberOfSelectedValues}\r\n        isCollapsed={isCollapsed}\r\n        headingLevel={this.props.headingLevel}\r\n        onToggleCollapse={onToggleCollapse}\r\n        headerRef={(el) => headerFocus.setTarget(el)}\r\n      ></FacetHeader>\r\n    );\r\n  }\r\n\r\n  private renderDateInput() {\r\n    return (\r\n      <atomic-facet-date-input\r\n        min={this.props.min}\r\n        max={this.props.max}\r\n        bindings={this.props.bindings}\r\n        label={this.props.label}\r\n        filter={this.filter!}\r\n        filterState={this.filter!.state!}\r\n      ></atomic-facet-date-input>\r\n    );\r\n  }\r\n\r\n  public render({\r\n    hasError,\r\n    firstSearchExecuted,\r\n    isCollapsed,\r\n    headerFocus,\r\n    onToggleCollapse,\r\n  }: TimeframeFacetCommonRenderProps) {\r\n    if (hasError || !this.enabled) {\r\n      return <Hidden></Hidden>;\r\n    }\r\n\r\n    if (!firstSearchExecuted) {\r\n      return (\r\n        <FacetPlaceholder\r\n          numberOfValues={this.currentValues.length}\r\n          isCollapsed={isCollapsed}\r\n        ></FacetPlaceholder>\r\n      );\r\n    }\r\n\r\n    if (!this.shouldRenderFacet) {\r\n      return <Hidden></Hidden>;\r\n    }\r\n\r\n    return (\r\n      <FacetContainer>\r\n        {this.renderHeader(isCollapsed, headerFocus, onToggleCollapse)}\r\n        {!isCollapsed && [\r\n          this.shouldRenderValues && this.renderValues(),\r\n          this.shouldRenderInput && this.renderDateInput(),\r\n        ]}\r\n      </FacetContainer>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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"}