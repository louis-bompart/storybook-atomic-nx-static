{"file":"atomic-smart-snippet-collapse-wrapper.js","mappings":";;;;;;AAAA,MAAM,oCAAoC,GAAG,gowCAAgowC,CAAC;AAC9qwC,gDAAe,oCAAoC;;;;;;;;;;;;MCYtCA,mCAAiC;;;;;QAS5B,eAAU,GAAG,IAAI,CAAC;QAElB,eAAU,GAAG,IAAI,CAAC;QAI1B,uBAAkB,GAAG,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC;;;0BANrB,IAAI;0BAEJ,IAAI;;;IAMzB,aAAa;QACnB,IACE,IAAI,CAAC,aAAa;aACjB,CAAC,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,eAAe,CAAC,EACpE;YACA,MAAM,IAAI,KAAK,CACb,2EAA2E,CAC5E,CAAC;SACH;KACF;IAEM,UAAU;QACf,IAAI,CAAC,aAAa,EAAE,CAAC;KACtB;IAEM,kBAAkB;QACvB,IAAI,IAAI,CAAC,UAAU,KAAK,SAAS,IAAI,IAAI,CAAC,kBAAkB,EAAE;YAC5D,IAAI,CAAC,oBAAoB,EAAE,CAAC;SAC7B;KACF;IAEO,oBAAoB;QAC1B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,qBAAqB,EAAE,CAAC,MAAM,CAAC;QAC3D,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAW,GAAG,IAAI,CAAC,aAAc,CAAC;QACzD,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;QACnC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CACzB,kBAAkB,EAClB,IAAI,CAAC,eAAe,GAAG,IAAI,CAC5B,CAAC;KACH;IAEO,YAAY;QAClB,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YACpB,OAAO;SACR;QACD,QACE,cACE,OAAO,EAAE,OAAO,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,EACnD,KAAK,EAAC,mCAAmC,EACzC,IAAI,EAAE,IAAI,CAAC,UAAU,GAAG,kBAAkB,GAAG,kBAAkB,IAE9D,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,GAAG,WAAW,GAAG,WAAW,CAAC,EAClE,mBACE,IAAI,EAAE,SAAS,EACf,KAAK,EAAC,yBAAyB,GAClB,CACR,EACT;KACH;IAED,MAAM;QACJ,QACE,EAAC,IAAI,qDACH,KAAK,EACH,IAAI,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,kBAAkB;kBACvC,IAAI,CAAC,UAAU;sBACb,UAAU;sBACV,EAAE;kBACJ,WAAW,IAGjB,4DACE,IAAI,EAAC,gCAAgC,EACrC,KAAK,EAAC,uBAAuB,IAE7B,8DAAa,CACT,EACL,IAAI,CAAC,kBAAkB,IAAI,IAAI,CAAC,YAAY,EAAE,CAC1C,EACP;KACH;;;;;;;;;;AAtF4B;IAA5B,kBAAkB,EAAE;qEAA+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":["AtomicSmartSnippetCollapseWrapper"],"sources":["src/components/common/smart-snippets/atomic-smart-snippet-collapse-wrapper/atomic-smart-snippet-collapse-wrapper.pcss?tag=atomic-smart-snippet-collapse-wrapper&encapsulation=shadow","src/components/common/smart-snippets/atomic-smart-snippet-collapse-wrapper/atomic-smart-snippet-collapse-wrapper.tsx"],"sourcesContent":["@import '../../../../global/global.pcss';\n@import '../../../../global/mixins.pcss';\n\n/**\n * @prop --atomic-smart-snippet-gradient-start: At which height to start fading out a truncated answer.\n */\n:host {\n  &::part(smart-snippet-collapse-wrapper) {\n    @mixin set-font-size var(--atomic-text-lg);\n\n    height: auto;\n    max-height: var(--collapsed-size);\n\n    --gradient-start: var(\n      --atomic-smart-snippet-gradient-start,\n      calc(max(var(--collapsed-size) - (var(--line-height) * 1.5), var(--collapsed-size) * 0.5))\n    );\n    color: var(--atomic-on-background);\n    mask-image: linear-gradient(black, black var(--gradient-start), transparent 100%);\n\n    transition: max-height 2s cubic-bezier(0, 1, 0.16, 1) -1.82s;\n  }\n\n  button atomic-icon {\n    @apply relative top-0.5;\n  }\n}\n\n:host(.expanded) {\n  &::part(smart-snippet-collapse-wrapper) {\n    height: auto;\n    max-height: 9999999px;\n    transition: max-height 2s cubic-bezier(1, 0, 1, 0) 0s;\n    mask-image: none;\n  }\n\n  button atomic-icon {\n    @apply -scale-y-100 top-0;\n  }\n}\n","import {Component, h, Element, State, Prop, Host} from '@stencil/core';\nimport ArrowDown from '../../../../images/arrow-down.svg';\nimport {InitializeBindings} from '../../../../utils/initialization-utils';\nimport {AnyBindings} from '../../interface/bindings';\n\n/**\n * @internal\n */\n@Component({\n  tag: 'atomic-smart-snippet-collapse-wrapper',\n  styleUrl: 'atomic-smart-snippet-collapse-wrapper.pcss',\n  shadow: true,\n})\nexport class AtomicSmartSnippetCollapseWrapper {\n  @InitializeBindings() public bindings!: AnyBindings;\n  public error!: Error;\n  @Element() public host!: HTMLElement;\n\n  @Prop({reflect: true}) public maximumHeight?: number;\n\n  @Prop({reflect: true}) public collapsedHeight?: number;\n\n  @State() public isExpanded = true;\n\n  @State() public showButton = true;\n\n  @State() private fullHeight?: number;\n\n  private shouldRenderButton = !!this.maximumHeight;\n\n  private validateProps() {\n    if (\n      this.maximumHeight &&\n      (!this.collapsedHeight || this.maximumHeight < this.collapsedHeight)\n    ) {\n      throw new Error(\n        'snippetMaximumHeight must be equal or greater than snippetCollapsedHeight'\n      );\n    }\n  }\n\n  public initialize() {\n    this.validateProps();\n  }\n\n  public componentDidRender() {\n    if (this.fullHeight === undefined && this.shouldRenderButton) {\n      this.initializeFullHeight();\n    }\n  }\n\n  private initializeFullHeight() {\n    this.fullHeight = this.host.getBoundingClientRect().height;\n    this.showButton = this.fullHeight! > this.maximumHeight!;\n    this.isExpanded = !this.showButton;\n    this.host.style.setProperty(\n      '--collapsed-size',\n      this.collapsedHeight + 'px'\n    );\n  }\n\n  private renderButton() {\n    if (!this.showButton) {\n      return;\n    }\n    return (\n      <button\n        onClick={() => (this.isExpanded = !this.isExpanded)}\n        class=\"text-primary hover:underline mb-4\"\n        part={this.isExpanded ? 'show-less-button' : 'show-more-button'}\n      >\n        {this.bindings.i18n.t(this.isExpanded ? 'show-less' : 'show-more')}\n        <atomic-icon\n          icon={ArrowDown}\n          class=\"w-3 ml-2 align-baseline\"\n        ></atomic-icon>\n      </button>\n    );\n  }\n\n  render() {\n    return (\n      <Host\n        class={\n          this.fullHeight || !this.shouldRenderButton\n            ? this.isExpanded\n              ? 'expanded'\n              : ''\n            : 'invisible'\n        }\n      >\n        <div\n          part=\"smart-snippet-collapse-wrapper\"\n          class=\"block overflow-hidden\"\n        >\n          <slot></slot>\n        </div>\n        {this.shouldRenderButton && this.renderButton()}\n      </Host>\n    );\n  }\n}\n"],"version":3}