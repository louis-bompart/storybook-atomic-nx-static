{"version":3,"names":["atomicInsightSmartSnippetFeedbackModalCss","AtomicInsightSmartSnippetFeedbackModalStyle0","AtomicInsightSmartSnippetFeedbackModal","this","isOpen","formId","randomID","watchToggleOpen","smartSnippet","openFeedbackModal","currentAnswer","undefined","initialize","buildInsightSmartSnippet","bindings","engine","smartSnippetFeedbackModalCommon","SmartSnippetFeedbackModalCommon","getHost","host","getBindings","getCurrentAnswer","getSmartSnippet","getDetailsInputRef","detailsInputRef","getFeedbackSent","feedbackSent","getSource","source","getIsOpen","setIsOpen","bind","setCurrentAnswer","setDetailsInputRef","answer","ref","render","__decorate","InitializeBindings"],"sources":["src/components/insight/smart-snippets/atomic-insight-smart-snippet-feedback-modal/atomic-insight-smart-snippet-feedback-modal.pcss?tag=atomic-insight-smart-snippet-feedback-modal&encapsulation=shadow","src/components/insight/smart-snippets/atomic-insight-smart-snippet-feedback-modal/atomic-insight-smart-snippet-feedback-modal.tsx"],"sourcesContent":["@import '../../../common/smart-snippets/atomic-smart-snippet-feedback-modal/atomic-smart-snippet-feedback-modal.pcss';\r\n","import {\r\n  Component,\r\n  State,\r\n  Prop,\r\n  Watch,\r\n  Element,\r\n  Event,\r\n  EventEmitter,\r\n} from '@stencil/core';\r\nimport {\r\n  buildInsightSmartSnippet,\r\n  InsightSmartSnippet,\r\n  InsightSmartSnippetFeedback,\r\n} from '../..';\r\nimport {\r\n  InitializableComponent,\r\n  InitializeBindings,\r\n} from '../../../../utils/initialization-utils';\r\nimport {randomID} from '../../../../utils/utils';\r\nimport {SmartSnippetFeedbackModalCommon} from '../../../common/smart-snippets/atomic-smart-snippet-feedback-modal/smart-snippet-feedback-modal-common';\r\nimport {InsightBindings} from '../../atomic-insight-interface/atomic-insight-interface';\r\n\r\n/**\r\n * @internal\r\n */\r\n@Component({\r\n  tag: 'atomic-insight-smart-snippet-feedback-modal',\r\n  styleUrl: 'atomic-insight-smart-snippet-feedback-modal.pcss',\r\n  shadow: true,\r\n})\r\nexport class AtomicInsightSmartSnippetFeedbackModal\r\n  implements InitializableComponent<InsightBindings>\r\n{\r\n  @InitializeBindings() public bindings!: InsightBindings;\r\n  @Element() public host!: HTMLElement;\r\n  public smartSnippet!: InsightSmartSnippet;\r\n\r\n  @State() public error!: Error;\r\n\r\n  private smartSnippetFeedbackModalCommon!: SmartSnippetFeedbackModalCommon;\r\n\r\n  @Prop({mutable: true}) source?: HTMLElement;\r\n  @Prop({reflect: true, mutable: true}) isOpen = false;\r\n\r\n  @State() currentAnswer?: InsightSmartSnippetFeedback | 'other' | undefined;\r\n  private detailsInputRef?: HTMLTextAreaElement;\r\n  private readonly formId = randomID(\r\n    'atomic-smart-snippet-feedback-modal-form-'\r\n  );\r\n\r\n  @Event() feedbackSent!: EventEmitter;\r\n\r\n  @Watch('isOpen')\r\n  watchToggleOpen(isOpen: boolean) {\r\n    if (isOpen) {\r\n      this.smartSnippet.openFeedbackModal();\r\n      this.currentAnswer = undefined;\r\n    }\r\n  }\r\n\r\n  initialize() {\r\n    this.smartSnippet = buildInsightSmartSnippet(this.bindings.engine);\r\n    this.smartSnippetFeedbackModalCommon = new SmartSnippetFeedbackModalCommon({\r\n      formId: this.formId,\r\n      getHost: () => this.host,\r\n      getBindings: () => this.bindings,\r\n      getCurrentAnswer: () => this.currentAnswer,\r\n      getSmartSnippet: () => this.smartSnippet,\r\n      getDetailsInputRef: () => this.detailsInputRef,\r\n      getFeedbackSent: () => this.feedbackSent,\r\n      getSource: () => this.source,\r\n      getIsOpen: () => this.isOpen,\r\n      setIsOpen: this.setIsOpen.bind(this),\r\n      setCurrentAnswer: this.setCurrentAnswer.bind(this),\r\n      setDetailsInputRef: this.setDetailsInputRef.bind(this),\r\n    });\r\n  }\r\n\r\n  private setIsOpen(isOpen: boolean) {\r\n    this.isOpen = isOpen;\r\n  }\r\n\r\n  private setCurrentAnswer(answer: InsightSmartSnippetFeedback | 'other') {\r\n    this.currentAnswer = answer;\r\n  }\r\n\r\n  private setDetailsInputRef(ref?: HTMLTextAreaElement) {\r\n    this.detailsInputRef = ref;\r\n  }\r\n\r\n  public render() {\r\n    return this.smartSnippetFeedbackModalCommon.render();\r\n  }\r\n}\r\n"],"mappings":"6UAAA,MAAMA,EAA4C,o2uCAClD,MAAAC,EAAeD,E,iXC6BFE,EAAsC,M,oEAYXC,KAAAC,OAAS,MAI9BD,KAAAE,OAASC,EACxB,6C,uDAL6C,M,6BAW/C,eAAAC,CAAgBH,GACd,GAAIA,EAAQ,CACVD,KAAKK,aAAaC,oBAClBN,KAAKO,cAAgBC,S,EAIzB,UAAAC,GACET,KAAKK,aAAeK,EAAyBV,KAAKW,SAASC,QAC3DZ,KAAKa,gCAAkC,IAAIC,EAAgC,CACzEZ,OAAQF,KAAKE,OACba,QAAS,IAAMf,KAAKgB,KACpBC,YAAa,IAAMjB,KAAKW,SACxBO,iBAAkB,IAAMlB,KAAKO,cAC7BY,gBAAiB,IAAMnB,KAAKK,aAC5Be,mBAAoB,IAAMpB,KAAKqB,gBAC/BC,gBAAiB,IAAMtB,KAAKuB,aAC5BC,UAAW,IAAMxB,KAAKyB,OACtBC,UAAW,IAAM1B,KAAKC,OACtB0B,UAAW3B,KAAK2B,UAAUC,KAAK5B,MAC/B6B,iBAAkB7B,KAAK6B,iBAAiBD,KAAK5B,MAC7C8B,mBAAoB9B,KAAK8B,mBAAmBF,KAAK5B,O,CAI7C,SAAA2B,CAAU1B,GAChBD,KAAKC,OAASA,C,CAGR,gBAAA4B,CAAiBE,GACvB/B,KAAKO,cAAgBwB,C,CAGf,kBAAAD,CAAmBE,GACzBhC,KAAKqB,gBAAkBW,C,CAGlB,MAAAC,GACL,OAAOjC,KAAKa,gCAAgCoB,Q,sFA1DjBC,EAAA,CAA5BC,K"}