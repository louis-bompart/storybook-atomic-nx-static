{"version":3,"names":["AtomicCommerceText","this","strings","value","bindings","i18n","t","count","connectedCallback","error","Error","render","__decorate","InitializeBindings"],"sources":["src/components/commerce/atomic-commerce-text/atomic-commerce-text.tsx"],"sourcesContent":["import {Component, Prop, State} from '@stencil/core';\nimport {\n  InitializableComponent,\n  InitializeBindings,\n} from '../../../utils/initialization-utils';\nimport {CommerceBindings} from '../atomic-commerce-interface/atomic-commerce-interface';\n\n/**\n * @internal\n * The `atomic-commerce-text` component leverages the I18n translation module through the atomic-commerce-interface.\n */\n@Component({\n  tag: 'atomic-commerce-text',\n  shadow: true,\n})\nexport class AtomicCommerceText\n  implements InitializableComponent<CommerceBindings>\n{\n  @InitializeBindings() public bindings!: CommerceBindings;\n\n  private strings = {\n    value: () =>\n      this.bindings.i18n.t(this.value, {\n        count: this.count,\n      }),\n  };\n  @State() public error!: Error;\n\n  /**\n   * The string key value.\n   */\n  @Prop({reflect: true}) public value!: string;\n  /**\n   * The count value used for plurals.\n   */\n  @Prop({reflect: true}) public count?: number;\n\n  public connectedCallback() {\n    if (!this.value) {\n      this.error = new Error('The \"value\" attribute must be defined.');\n    }\n  }\n\n  public render() {\n    return this.strings.value();\n  }\n}\n"],"mappings":"igBAeaA,EAAkB,M,yBAKrBC,KAAAC,QAAU,CAChBC,MAAO,IACLF,KAAKG,SAASC,KAAKC,EAAEL,KAAKE,MAAO,CAC/BI,MAAON,KAAKM,S,+DAcX,iBAAAC,GACL,IAAKP,KAAKE,MAAO,CACfF,KAAKQ,MAAQ,IAAIC,MAAM,yC,EAIpB,MAAAC,GACL,OAAOV,KAAKC,QAAQC,O,GA1BOS,EAAA,CAA5BC,K"}