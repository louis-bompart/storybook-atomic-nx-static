{"file":"initialization-utils.js","mappings":"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","names":["forceUpdate","forceUpdateComponent"],"sources":["src/components/common/hidden.tsx","src/utils/initialization-utils.tsx"],"sourcesContent":["import {FunctionalComponent, Host, h} from '@stencil/core';\n\nexport const Hidden: FunctionalComponent = () => (\n  <Host class=\"atomic-hidden\"></Host>\n);\n","import {\n  ComponentInterface,\n  getElement,\n  h,\n  forceUpdate as forceUpdateComponent,\n} from '@stencil/core';\nimport {TOptions} from 'i18next';\nimport {Hidden} from '../components/common/hidden';\nimport {AnyBindings} from '../components/common/interface/bindings';\nimport {Bindings} from '../components/search/atomic-search-interface/atomic-search-interface';\nimport {buildCustomEvent} from './event-utils';\nimport {closest} from './utils';\n\ndeclare global {\n  interface Window {\n    applyFocusVisiblePolyfill?: (shadowRoot: ShadowRoot) => void;\n  }\n}\n\nexport type InitializeEventHandler = (bindings: AnyBindings) => void;\nexport type InitializeEvent = CustomEvent<InitializeEventHandler>;\nexport const initializeEventName = 'atomic/initializeComponent';\nconst initializableElements = [\n  'atomic-recs-interface',\n  'atomic-search-interface',\n  'atomic-commerce-interface',\n  'atomic-relevance-inspector',\n  'atomic-insight-interface',\n  'atomic-commerce-interface',\n  'atomic-external',\n];\n\n/**\n * Retrieves `Bindings` or `CommerceBindings` on a configured parent interface.\n * @param event - The element on which to dispatch the event, which must be the child of a configured Atomic container element.\n * @returns A promise that resolves upon initialization of the parent container element, and rejects otherwise.\n */\nexport function initializeBindings<\n  SpecificBindings extends AnyBindings = Bindings,\n>(element: Element) {\n  return new Promise<SpecificBindings>((resolve, reject) => {\n    const event = buildCustomEvent<InitializeEventHandler>(\n      initializeEventName,\n      (bindings) => resolve(bindings as SpecificBindings)\n    );\n    element.dispatchEvent(event);\n\n    if (!closest(element, initializableElements.join(', '))) {\n      reject(new MissingInterfaceParentError(element.nodeName.toLowerCase()));\n    }\n  });\n}\n\nexport class MissingInterfaceParentError extends Error {\n  constructor(elementName: string) {\n    super(\n      `The \"${elementName}\" element must be the child of the following elements: ${initializableElements.join(\n        ', '\n      )}`\n    );\n  }\n}\n\n/**\n * Necessary interface an Atomic Component must have to initialize itself correctly.\n */\nexport interface InitializableComponent<\n  SpecificBindings extends AnyBindings = Bindings,\n> extends ComponentInterface {\n  /**\n   * Bindings passed from the `AtomicSearchInterface` to its children components.\n   */\n  bindings: SpecificBindings;\n  /**\n   * Method called right after the `bindings` property is defined. This is the method where Headless Framework controllers should be initialized.\n   */\n  initialize?: () => void;\n  error: Error;\n}\n\n/**\n * Makes Shadow Dom elements compatible with the focus-visible polyfill https://github.com/WICG/focus-visible\n * Necessary for Safari under version 15.4.\n */\nexport function applyFocusVisiblePolyfill(element: HTMLElement) {\n  if (!element.shadowRoot) {\n    return;\n  }\n\n  if (window.applyFocusVisiblePolyfill) {\n    window.applyFocusVisiblePolyfill(element.shadowRoot);\n    return;\n  }\n\n  window.addEventListener(\n    'focus-visible-polyfill-ready',\n    () => window.applyFocusVisiblePolyfill?.(element.shadowRoot!),\n    {once: true}\n  );\n}\n\ntype InitializeBindingsProps = {\n  forceUpdate?: boolean;\n};\n\nconst renderedAttribute = 'data-atomic-rendered';\nconst loadedAttribute = 'data-atomic-loaded';\n\n/**\n * A [StencilJS property decorator](https://stenciljs.com/) to be used on a property named `bindings`.\n * This will automatically fetch the `Bindings` from the parent `atomic-search-interface` or `atomic-external` components.\n *\n * Once a component is bound, the `initialize` method is called.\n * In the event of an initialization error, the `error` property will be set and an `atomic-component-error` will be rendered.\n *\n * In order for a component using this decorator to render properly, it should have an internal state bound to one of the properties from `bindings`.\n * This is possible by using the `BindStateToController` decorator.\n *\n * @example\n * @InitializeBindings() public bindings!: Bindings;\n *\n * For more information and examples, view the \"Utilities\" section of the readme.\n */\nexport function InitializeBindings<SpecificBindings extends AnyBindings>({\n  forceUpdate,\n}: InitializeBindingsProps = {}) {\n  return (\n    component: InitializableComponent<SpecificBindings>,\n    bindingsProperty: string\n  ) => {\n    const {\n      componentWillLoad,\n      render,\n      componentDidRender,\n      componentDidLoad,\n      disconnectedCallback,\n    } = component;\n    let unsubscribeLanguage = () => {};\n\n    if (bindingsProperty !== 'bindings') {\n      return console.error(\n        `The InitializeBindings decorator should be used on a property called \"bindings\", and not \"${bindingsProperty}\"`,\n        component\n      );\n    }\n\n    component.componentWillLoad = function () {\n      const element = getElement(this);\n      element.setAttribute(renderedAttribute, 'false');\n      element.setAttribute(loadedAttribute, 'false');\n      const event = buildCustomEvent(\n        initializeEventName,\n        (bindings: SpecificBindings) => {\n          this.bindings = bindings;\n\n          const updateLanguage = () => forceUpdateComponent(this);\n          this.bindings.i18n.on('languageChanged', updateLanguage);\n          unsubscribeLanguage = () =>\n            this.bindings.i18n.off('languageChanged', updateLanguage);\n\n          try {\n            // When no controller is initialized, updating a property with a State() decorator, there will be no re-render.\n            // In this case, we have to manually trigger it.\n            if (this.initialize) {\n              this.initialize();\n              if (forceUpdate) {\n                forceUpdateComponent(this);\n              }\n            } else {\n              forceUpdateComponent(this);\n            }\n          } catch (e) {\n            this.error = e as Error;\n          }\n        }\n      );\n\n      element.dispatchEvent(event);\n\n      if (!closest(element, initializableElements.join(', '))) {\n        this.error = new MissingInterfaceParentError(\n          element.nodeName.toLowerCase()\n        );\n        return;\n      }\n\n      return componentWillLoad && componentWillLoad.call(this);\n    };\n\n    component.render = function () {\n      if (this.error) {\n        return (\n          <atomic-component-error\n            element={getElement(this)}\n            error={this.error}\n          ></atomic-component-error>\n        );\n      }\n\n      if (!this.bindings) {\n        return <Hidden></Hidden>;\n      }\n\n      getElement(this).setAttribute(renderedAttribute, 'true');\n      return render && render.call(this);\n    };\n\n    component.disconnectedCallback = function () {\n      const element = getElement(this);\n      element.setAttribute(renderedAttribute, 'false');\n      element.setAttribute(loadedAttribute, 'false');\n      unsubscribeLanguage();\n      disconnectedCallback && disconnectedCallback.call(this);\n    };\n\n    component.componentDidRender = function () {\n      const element = getElement(this);\n      if (element.getAttribute(renderedAttribute) === 'false') {\n        return;\n      }\n\n      componentDidRender && componentDidRender.call(this);\n      if (element.getAttribute(loadedAttribute) === 'false') {\n        element.setAttribute(loadedAttribute, 'true');\n        applyFocusVisiblePolyfill(getElement(this));\n        componentDidLoad && componentDidLoad.call(this);\n      }\n    };\n\n    component.componentDidLoad = function () {};\n  };\n}\n\n/**\n * A [StencilJS property decorator](https://stenciljs.com/) is used together with the [State decorator](https://stenciljs.com/docs/state#state-decorator).\n * This allows the Stencil component state property to automatically get updates from a [Coveo Headless controller](https://docs.coveo.com/en/headless/latest/usage/#use-headless-controllers).\n *\n * @example\n * @BindStateToController('pager') @State() private pagerState!: PagerState;\n *\n * For more information and examples, view the \"Utilities\" section of the readme.\n *\n * @param controllerProperty The controller property to subscribe to. The controller has to be created inside of the `initialize` method.\n * @param options The configurable `BindStateToController` options.\n */\nexport function BindStateToController(\n  controllerProperty: string,\n  options?: {\n    /**\n     * Component's method to be called when state is updated.\n     */\n    onUpdateCallbackMethod?: string;\n  }\n) {\n  return (\n    component: InitializableComponent<AnyBindings>,\n    stateProperty: string\n  ) => {\n    const {disconnectedCallback, initialize} = component;\n\n    component.initialize = function () {\n      initialize && initialize.call(this);\n\n      if (!initialize) {\n        return console.error(\n          `ControllerState: The \"initialize\" method has to be defined and instantiate a controller for the property ${controllerProperty}`,\n          component\n        );\n      }\n\n      if (!this[controllerProperty]) {\n        return;\n      }\n\n      if (\n        options?.onUpdateCallbackMethod &&\n        !this[options.onUpdateCallbackMethod]\n      ) {\n        return console.error(\n          `ControllerState: The onUpdateCallbackMethod property \"${options.onUpdateCallbackMethod}\" is not defined`,\n          component\n        );\n      }\n\n      this.unsubscribeController = this[controllerProperty].subscribe(() => {\n        this[stateProperty] = this[controllerProperty].state;\n        options?.onUpdateCallbackMethod &&\n          this[options.onUpdateCallbackMethod]();\n      });\n    };\n\n    component.disconnectedCallback = function () {\n      !getElement(this).isConnected && this.unsubscribeController?.();\n      disconnectedCallback && disconnectedCallback.call(this);\n    };\n  };\n}\n\ninterface DeferredExecution {\n  args: unknown[];\n}\n\nexport function DeferUntilRender() {\n  return (component: ComponentInterface, methodName: string) => {\n    const {componentDidRender, connectedCallback} = component;\n    const originalMethod = component[methodName] as Function;\n    let deferredExecutions: DeferredExecution[] = [];\n\n    component.connectedCallback = function () {\n      this[methodName] = function (...args: unknown[]) {\n        deferredExecutions.push({args});\n      };\n      connectedCallback && connectedCallback.call(this);\n    };\n\n    component.componentDidRender = function () {\n      deferredExecutions.forEach(({args}) =>\n        originalMethod.call(this, ...args)\n      );\n      deferredExecutions = [];\n      componentDidRender && componentDidRender.call(this);\n    };\n  };\n}\n\nexport type I18nState = Record<string, (variables?: TOptions) => string>;\n"],"version":3}