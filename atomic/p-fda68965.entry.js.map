{"version":3,"names":["getAnalyticsConfig","searchEngineConfig","enabled","store","_a","analytics","analyticsMode","getNextAnalyticsConfig","getLegacyAnalyticsConfig","analyticsClientMiddleware","event","payload","augmentAnalytics","defaultConfiguration","augmentAnalyticsConfigWithDocument","immutableConfiguration","augmentAnalyticsConfigWithAtomicVersion","config","result","augmentWithExternalMiddleware","augmentAnalyticsWithAtomicVersion","augmentAnalyticsWithFacetTitles","allFacets","getAllFacets","getAtomicFacetLabelOrOriginalTitle","facetId","originalTitle","label","facetState","map","analyticsFacetState","id","title","customData","facetTitle","createAtomicStore","commonStore","createAtomicCommonStore","loadingFlags","facets","numericFacets","dateFacets","categoryFacets","facetElements","sortOptions","iconAssetsPath","mobileBreakpoint","DEFAULT_MOBILE_BREAKPOINT","fieldsToInclude","currentQuickviewPosition","state","isMobile","window","matchMedia","makeDesktopQuery","matches","getUniqueIDFromEngine","engine","search","response","searchUid","atomicSearchInterfaceCss","AtomicSearchInterfaceStyle0","FirstSearchExecutedFlag","AtomicSearchInterface","constructor","hostRef","this","unsubscribeUrlManager","unsubscribeSearchStatus","initialized","relevanceInspectorIsOpen","localizationCompatibilityVersion","i18n","i18next","createInstance","language","reflectStateInUrl","scrollContainer","languageAssetsPath","enableRelevanceInspector","onHashChange","urlManager","synchronize","fragment","initRelevanceInspector","commonInterfaceHelper","CommonAtomicInterfaceHelper","connectedCallback","setLoadingFlag","updateMobileBreakpoint","i18nClone","cloneInstance","addResourceBundle","lng","ns","resources","deep","overwrite","addResourceBundleWithWarning","componentWillLoad","CspNonce","setNonce","initAriaLive","initFieldsToInclude","updateSearchConfiguration","updatedProp","newValue","engineIsCreated","loadSearchConfigurationActions","dispatch","updateSearchHub","searchHub","updatePipeline","pipeline","toggleAnalytics","onAnalyticsChange","updateLanguage","locale","onLanguageChange","updateIconAssetsPath","set","disconnectedCallback","removeEventListener","handleInitialization","onComponentInitializing","scrollToTop","scrollContainerElement","document","querySelector","bindings","logger","warn","scrollIntoView","behavior","closeRelevanceInspector","initialize","options","internalInitialization","initEngine","initializeWithSearchEngine","console","mismatchedInterfaceAndEnginePropError","executeFirstSearch","error","host","safeStorage","SafeStorage","standaloneSearchBoxData","getParsedJSON","StorageItems","STANDALONE_SEARCH_BOX_DATA","removeItem","updateQuery","loadQueryActions","value","enableQuerySyntax","q","executeFirstSearchAfterStandaloneSearchBoxRedirect","getOrganizationEndpoints","organizationId","env","getOrganizationEndpointsHeadless","interfaceElement","createStyleElement","styleTag","createElement","setAttribute","createScriptElement","fields","EcommerceDefaultFieldsToInclude","concat","addFieldsToInclude","registerFieldsToInclude","loadFieldActions","breakpoint","searchConfig","getSearchConfiguration","analyticsConfig","buildSearchEngine","configuration","loggerOptions","level","logLevel","searchConfigFromProps","timezone","location","hash","slice","initUrlManager","buildUrlManager","initialState","subscribe","updateHash","addEventListener","Array","from","children","some","element","tagName","prepend","e","altKey","initSearchStatus","searchStatus","buildSearchStatus","hasNoResultsAfterInitialSearch","hasResults","firstSearchExecuted","hasError","classList","toggle","hasLoadingFlag","unsetLoadingFlag","newFragment","history","replaceState","info","pushState","onInitialization","hasV3Keys","Object","keys","k","includes","render","h","key","open","__decorate","ArrayProp"],"sources":["src/components/search/atomic-search-interface/analytics-config.ts","src/components/search/atomic-search-interface/store.ts","src/components/search/atomic-search-interface/atomic-search-interface.pcss?tag=atomic-search-interface&encapsulation=shadow","src/components/search/atomic-search-interface/atomic-search-interface.tsx"],"sourcesContent":["import {\n  AnalyticsConfiguration,\n  SearchEngineConfiguration,\n} from '@coveo/headless';\nimport {\n  AnalyticsPayload,\n  augmentAnalyticsWithAtomicVersion,\n  augmentWithExternalMiddleware,\n  augmentAnalyticsConfigWithDocument,\n  augmentAnalyticsConfigWithAtomicVersion,\n  getNextAnalyticsConfig,\n} from '../../common/interface/analytics-config';\nimport {createAtomicStore} from './store';\n\nexport function getAnalyticsConfig(\n  searchEngineConfig: SearchEngineConfiguration,\n  enabled: boolean,\n  store: ReturnType<typeof createAtomicStore>\n): AnalyticsConfiguration {\n  switch (searchEngineConfig.analytics?.analyticsMode) {\n    case 'next':\n      return getNextAnalyticsConfig(searchEngineConfig, enabled);\n    case 'legacy':\n    default:\n      return getLegacyAnalyticsConfig(searchEngineConfig, enabled, store);\n  }\n}\n\nfunction getLegacyAnalyticsConfig(\n  searchEngineConfig: SearchEngineConfiguration,\n  enabled: boolean,\n  store: ReturnType<typeof createAtomicStore>\n): AnalyticsConfiguration {\n  const analyticsClientMiddleware = (\n    event: string,\n    payload: AnalyticsPayload\n  ) => augmentAnalytics(event, payload, store, searchEngineConfig);\n\n  const defaultConfiguration: AnalyticsConfiguration = {\n    analyticsClientMiddleware,\n    enabled,\n    ...augmentAnalyticsConfigWithDocument(),\n  };\n\n  const immutableConfiguration: AnalyticsConfiguration = {\n    ...augmentAnalyticsConfigWithAtomicVersion(),\n  };\n\n  if (searchEngineConfig.analytics) {\n    return {\n      ...defaultConfiguration,\n      ...searchEngineConfig.analytics,\n      analyticsClientMiddleware,\n      ...immutableConfiguration,\n    };\n  }\n\n  return {\n    ...defaultConfiguration,\n    ...immutableConfiguration,\n  };\n}\n\nfunction augmentAnalytics(\n  event: string,\n  payload: AnalyticsPayload,\n  store: ReturnType<typeof createAtomicStore>,\n  config: SearchEngineConfiguration\n) {\n  let result = augmentWithExternalMiddleware(event, payload, config);\n  result = augmentAnalyticsWithAtomicVersion(result);\n  result = augmentAnalyticsWithFacetTitles(result, store);\n  return result;\n}\n\nfunction augmentAnalyticsWithFacetTitles(\n  payload: AnalyticsPayload,\n  store: ReturnType<typeof createAtomicStore>\n) {\n  const allFacets = store.getAllFacets();\n  const getAtomicFacetLabelOrOriginalTitle = (\n    facetId: string,\n    originalTitle: string\n  ) => (allFacets[facetId] ? allFacets[facetId].label() : originalTitle);\n\n  if (payload.facetState) {\n    payload.facetState = payload.facetState.map(\n      (analyticsFacetState: {id: string; title: string}) => {\n        const {id, title: originalTitle} = analyticsFacetState;\n        return {\n          ...analyticsFacetState,\n          title: getAtomicFacetLabelOrOriginalTitle(id, originalTitle),\n        };\n      }\n    );\n  }\n\n  if (\n    payload.customData &&\n    payload.customData.facetTitle &&\n    payload.customData.facetId &&\n    payload.customData.facetTitle\n  ) {\n    payload.customData.facetTitle = getAtomicFacetLabelOrOriginalTitle(\n      payload.customData.facetId,\n      payload.customData.facetTitle\n    );\n  }\n  return payload;\n}\n","import {\n  NumericFacetValue,\n  DateFacetValue,\n  SortCriterion,\n  SearchEngine,\n} from '@coveo/headless';\nimport {DEFAULT_MOBILE_BREAKPOINT} from '../../../utils/replace-breakpoint';\nimport {\n  FacetInfo,\n  FacetStore,\n  FacetValueFormat,\n} from '../../common/facets/facet-common-store';\nimport {\n  createAtomicCommonStore,\n  AtomicCommonStoreData,\n  AtomicCommonStore,\n} from '../../common/interface/store';\nimport {makeDesktopQuery} from '../atomic-layout/search-layout';\n\nexport interface SortDropdownOption {\n  expression: string;\n  criteria: SortCriterion[];\n  label: string;\n}\n\nexport interface AtomicStoreData extends AtomicCommonStoreData {\n  facets: FacetStore<FacetInfo>;\n  numericFacets: FacetStore<FacetInfo & FacetValueFormat<NumericFacetValue>>;\n  dateFacets: FacetStore<FacetInfo & FacetValueFormat<DateFacetValue>>;\n  categoryFacets: FacetStore<FacetInfo>;\n  sortOptions: SortDropdownOption[];\n  mobileBreakpoint: string;\n  currentQuickviewPosition: number;\n}\n\nexport interface AtomicStore extends AtomicCommonStore<AtomicStoreData> {\n  getAllFacets(): FacetInfoMap;\n\n  isMobile(): boolean;\n}\n\nexport interface FacetInfoMap {\n  [facetId: string]:\n    | FacetInfo\n    | (FacetInfo & FacetValueFormat<NumericFacetValue>)\n    | (FacetInfo & FacetValueFormat<DateFacetValue>);\n}\n\nexport function createAtomicStore(): AtomicStore {\n  const commonStore = createAtomicCommonStore<AtomicStoreData>({\n    loadingFlags: [],\n    facets: {},\n    numericFacets: {},\n    dateFacets: {},\n    categoryFacets: {},\n    facetElements: [],\n    sortOptions: [],\n    iconAssetsPath: '',\n    mobileBreakpoint: DEFAULT_MOBILE_BREAKPOINT,\n    fieldsToInclude: [],\n    currentQuickviewPosition: -1,\n  });\n\n  return {\n    ...commonStore,\n\n    getAllFacets() {\n      return {\n        ...commonStore.state.facets,\n        ...commonStore.state.dateFacets,\n        ...commonStore.state.categoryFacets,\n        ...commonStore.state.numericFacets,\n      };\n    },\n\n    isMobile() {\n      return !window.matchMedia(\n        makeDesktopQuery(commonStore.state.mobileBreakpoint)\n      ).matches;\n    },\n\n    getUniqueIDFromEngine(engine: SearchEngine): string {\n      return engine.state.search.response.searchUid;\n    },\n  };\n}\n","@import '../../../global/global.pcss';\n\n:host {\n  height: inherit;\n  width: inherit;\n  & > slot {\n    height: inherit;\n  }\n}\n","import {\n  LogLevel,\n  Unsubscribe,\n  buildUrlManager,\n  UrlManager,\n  buildSearchEngine,\n  SearchEngine,\n  SearchEngineConfiguration,\n  SearchStatus,\n  buildSearchStatus,\n  loadSearchConfigurationActions,\n  loadQueryActions,\n  EcommerceDefaultFieldsToInclude,\n  loadFieldActions,\n  getOrganizationEndpoints as getOrganizationEndpointsHeadless,\n  PlatformEnvironment,\n} from '@coveo/headless';\nimport {\n  Component,\n  Prop,\n  h,\n  Listen,\n  Method,\n  Watch,\n  Element,\n  State,\n  setNonce,\n} from '@stencil/core';\nimport i18next, {i18n} from 'i18next';\nimport {InitializeEvent} from '../../../utils/initialization-utils';\nimport {\n  SafeStorage,\n  StandaloneSearchBoxData,\n  StorageItems,\n} from '../../../utils/local-storage-utils';\nimport {ArrayProp} from '../../../utils/props-utils';\nimport {CommonBindings, NonceBindings} from '../../common/interface/bindings';\nimport {i18nCompatibilityVersion} from '../../common/interface/i18n';\nimport {\n  BaseAtomicInterface,\n  CommonAtomicInterfaceHelper,\n  mismatchedInterfaceAndEnginePropError,\n} from '../../common/interface/interface-common';\nimport {getAnalyticsConfig} from './analytics-config';\nimport {AtomicStore, createAtomicStore} from './store';\n\nconst FirstSearchExecutedFlag = 'firstSearchExecuted';\nexport type InitializationOptions = SearchEngineConfiguration;\nexport type Bindings = CommonBindings<\n  SearchEngine,\n  AtomicStore,\n  HTMLAtomicSearchInterfaceElement\n> &\n  NonceBindings;\n\n/**\n * The `atomic-search-interface` component is the parent to all other atomic components in a search page. It handles the headless search engine and localization configurations.\n */\n@Component({\n  tag: 'atomic-search-interface',\n  styleUrl: 'atomic-search-interface.pcss',\n  shadow: true,\n  assetsDirs: ['lang'],\n})\nexport class AtomicSearchInterface\n  implements BaseAtomicInterface<SearchEngine>\n{\n  private urlManager!: UrlManager;\n  private searchStatus!: SearchStatus;\n  private unsubscribeUrlManager: Unsubscribe = () => {};\n  private unsubscribeSearchStatus: Unsubscribe = () => {};\n  private initialized = false;\n  private store = createAtomicStore();\n  private commonInterfaceHelper: CommonAtomicInterfaceHelper<SearchEngine>;\n\n  @Element() public host!: HTMLAtomicSearchInterfaceElement;\n\n  @State() public error?: Error;\n  @State() relevanceInspectorIsOpen = false;\n\n  /**\n   * A list of non-default fields to include in the query results.\n   *\n   * Specify the property as an array using a JSON string representation:\n   * ```html\n   * <atomic-search-interface fields-to-include='[\"fieldA\", \"fieldB\"]'></atomic-search-interface>\n   * ```\n   */\n  @ArrayProp()\n  @Prop({mutable: true})\n  public fieldsToInclude: string[] | string = '[]';\n\n  /**\n   * The search interface [query pipeline](https://docs.coveo.com/en/180/).\n   *\n   * If the search interface is initialized using [`initializeWithSearchEngine`](https://docs.coveo.com/en/atomic/latest/reference/components/atomic-search-interface/#initializewithsearchengine), the query pipeline should instead be configured in the target engine.\n   */\n  @Prop({reflect: true, mutable: true}) public pipeline?: string;\n\n  /**\n   * The search interface [search hub](https://docs.coveo.com/en/1342/).\n   *\n   * If the search interface is initialized using [`initializeWithSearchEngine`](https://docs.coveo.com/en/atomic/latest/reference/components/atomic-search-interface/#initializewithsearchengine, the search hub should instead be configured in the target engine.\n   */\n  @Prop({reflect: true, mutable: true}) public searchHub?: string;\n\n  /**\n   * Whether analytics should be enabled.\n   */\n  @Prop({reflect: true}) public analytics = true;\n\n  /**\n   * The [tz database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) identifier of the time zone to use to correctly interpret dates in the query expression, facets, and result items.\n   * By default, the timezone will be [guessed](https://day.js.org/docs/en/timezone/guessing-user-timezone).\n   *\n   * Example: \"America/Montreal\"\n   */\n  @Prop({reflect: true}) public timezone?: string;\n\n  /**\n   * The severity level of the messages to log in the console.\n   */\n  @Prop({reflect: true}) public logLevel?: LogLevel;\n\n  /**\n   * The compatibility JSON version for i18next to use (see [i18next Migration Guide](https://www.i18next.com/misc/migration-guide#v20.x.x-to-v21.0.0)).\n   */\n  @Prop() public localizationCompatibilityVersion: i18nCompatibilityVersion =\n    'v3';\n\n  /**\n   * The search interface i18next instance.\n   */\n  @Prop() public i18n: i18n = i18next.createInstance();\n\n  /**\n   * The search interface language.\n   */\n  @Prop({reflect: true}) public language = 'en';\n\n  /**\n   * The search interface headless engine.\n   */\n  @Prop({mutable: true}) public engine?: SearchEngine;\n\n  /**\n   * Whether the state should be reflected in the URL parameters.\n   */\n  @Prop({reflect: true}) public reflectStateInUrl = true;\n\n  /**\n   * The CSS selector for the container where the interface will scroll back to.\n   */\n  @Prop({reflect: true}) public scrollContainer = 'atomic-search-interface';\n\n  /**\n   * The language assets path. By default, this will be a relative URL pointing to `./lang`.\n   *\n   * Example: \"/mypublicpath/languages\"\n   *\n   */\n  @Prop({reflect: true}) public languageAssetsPath = './lang';\n\n  /**\n   * The icon assets path. By default, this will be a relative URL pointing to `./assets`.\n   *\n   * Example: \"/mypublicpath/icons\"\n   *\n   */\n  @Prop({reflect: true}) public iconAssetsPath = './assets';\n\n  /**\n   * Whether the relevance inspector shortcut should be enabled for this interface.\n   *\n   * The relevance inspector can be opened by holding the Alt key (Option on Mac) while over the interface, and performing a double click.\n   *\n   * The relevance inspector allows to troubleshoot and debug queries.\n   */\n  @Prop({reflect: true}) public enableRelevanceInspector = true;\n\n  /**\n   * The value to set the [nonce](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/nonce) attribute to on inline script and style elements generated by this interface and its child components.\n   * If your application is served with a Content Security Policy (CSP) that doesn't include the `script-src: 'unsafe-inline'` or `style-src: 'unsafe-inline'` directives,\n   * you should ensure that your application server generates a new nonce on every page load and uses the generated value to set this prop and serve the corresponding CSP response headers\n   * (i.e., script-src 'nonce-<YOUR_GENERATED_NONCE>' and style-src 'nonce-<YOUR_GENERATED_NONCE>').\n   * Otherwise you may see console errors such as\n   *  - Refused to execute inline script because it violates the following Content Security Policy directive: [...]\n   *  - Refused to apply inline style because it violates the following Content Security Policy directive: [...].\n   * @example:\n   * ```html\n   * <script nonce=\"<YOUR_GENERATED_NONCE>\">\n   *  import {setNonce} from '@coveo/atomic';\n   *  setNonce('<YOUR_GENERATED_NONCE>');\n   * </script>\n   * ```\n   */\n  @Prop({reflect: true}) public CspNonce?: string;\n\n  /**\n   * A reference clone of the search interface i18next instance.\n   */\n  private i18nClone!: i18n;\n\n  public constructor() {\n    this.initRelevanceInspector();\n    this.commonInterfaceHelper = new CommonAtomicInterfaceHelper(\n      this,\n      'CoveoAtomic'\n    );\n  }\n\n  public connectedCallback() {\n    this.store.setLoadingFlag(FirstSearchExecutedFlag);\n    this.updateMobileBreakpoint();\n    this.i18nClone = this.i18n.cloneInstance();\n    this.i18n.addResourceBundle = (\n      lng: string,\n      ns: string,\n      resources: object,\n      deep?: boolean,\n      overwrite?: boolean\n    ) => this.addResourceBundleWithWarning(lng, ns, resources, deep, overwrite);\n  }\n\n  componentWillLoad() {\n    if (this.CspNonce) {\n      setNonce(this.CspNonce);\n    }\n    this.initAriaLive();\n    this.initFieldsToInclude();\n  }\n\n  public updateSearchConfiguration(\n    updatedProp: 'searchHub' | 'pipeline',\n    newValue: string | undefined\n  ) {\n    if (!this.commonInterfaceHelper.engineIsCreated(this.engine)) {\n      return;\n    }\n\n    if (this.engine.state[updatedProp] === newValue) {\n      return;\n    }\n\n    const {updateSearchConfiguration} = loadSearchConfigurationActions(\n      this.engine\n    );\n    this.engine.dispatch(\n      updateSearchConfiguration({\n        [updatedProp]: newValue,\n      })\n    );\n  }\n\n  @Watch('searchHub')\n  public updateSearchHub() {\n    this.updateSearchConfiguration('searchHub', this.searchHub ?? 'default');\n  }\n\n  @Watch('pipeline')\n  public updatePipeline() {\n    this.updateSearchConfiguration('pipeline', this.pipeline);\n  }\n\n  @Watch('analytics')\n  public toggleAnalytics() {\n    if (!this.commonInterfaceHelper.engineIsCreated(this.engine)) {\n      return;\n    }\n\n    this.commonInterfaceHelper.onAnalyticsChange();\n  }\n\n  @Watch('language')\n  public updateLanguage() {\n    if (!this.commonInterfaceHelper.engineIsCreated(this.engine)) {\n      return;\n    }\n\n    const {updateSearchConfiguration} = loadSearchConfigurationActions(\n      this.engine\n    );\n    this.engine.dispatch(\n      updateSearchConfiguration({\n        locale: this.language,\n      })\n    );\n    this.commonInterfaceHelper.onLanguageChange();\n  }\n\n  @Watch('iconAssetsPath')\n  public updateIconAssetsPath() {\n    this.store.set('iconAssetsPath', this.iconAssetsPath);\n  }\n\n  public disconnectedCallback() {\n    this.unsubscribeUrlManager();\n    this.unsubscribeSearchStatus();\n    window.removeEventListener('hashchange', this.onHashChange);\n  }\n\n  @Listen('atomic/initializeComponent')\n  public handleInitialization(event: InitializeEvent) {\n    this.commonInterfaceHelper.onComponentInitializing(event);\n  }\n\n  @Listen('atomic/scrollToTop')\n  public scrollToTop() {\n    const scrollContainerElement = document.querySelector(this.scrollContainer);\n    if (!scrollContainerElement) {\n      this.bindings.engine.logger.warn(\n        `Could not find the scroll container with the selector \"${this.scrollContainer}\". This will prevent UX interactions that require a scroll from working correctly. Please check the CSS selector in the scrollContainer option`\n      );\n      return;\n    }\n\n    scrollContainerElement.scrollIntoView({behavior: 'smooth'});\n  }\n\n  @Listen('atomic/relevanceInspector/close')\n  public closeRelevanceInspector() {\n    this.relevanceInspectorIsOpen = false;\n  }\n\n  /**\n   * Initializes the connection with the headless search engine using options for accessToken (required), organizationId (required), renewAccessToken, organizationEndpoints (recommended), and platformUrl (deprecated).\n   */\n  @Method() public initialize(options: InitializationOptions) {\n    return this.internalInitialization(() => this.initEngine(options));\n  }\n\n  /**\n   * Initializes the connection with an already preconfigured [headless search engine](https://docs.coveo.com/en/headless/latest/reference/search/), as opposed to the `initialize` method, which will internally create a new search engine instance.\n   * This bypasses the properties set on the component, such as analytics, searchHub, pipeline, language, timezone & logLevel.\n   */\n  @Method() public initializeWithSearchEngine(engine: SearchEngine) {\n    if (this.pipeline && this.pipeline !== engine.state.pipeline) {\n      console.warn(\n        mismatchedInterfaceAndEnginePropError('search', 'query pipeline')\n      );\n    }\n    if (this.searchHub && this.searchHub !== engine.state.searchHub) {\n      console.warn(\n        mismatchedInterfaceAndEnginePropError('search', 'search hub')\n      );\n    }\n    return this.internalInitialization(() => (this.engine = engine));\n  }\n\n  /**\n   *\n   * Executes the first search and logs the interface load event to analytics, after initializing connection to the headless search engine.\n   */\n  @Method() public async executeFirstSearch() {\n    if (!this.commonInterfaceHelper.engineIsCreated(this.engine)) {\n      return;\n    }\n\n    if (!this.initialized) {\n      console.error(\n        'You have to wait until the \"initialize\" promise is fulfilled before executing a search.',\n        this.host\n      );\n      return;\n    }\n\n    if (this.localizationCompatibilityVersion !== 'v4') {\n      this.engine.logger.warn(\n        `As of Atomic version 3.0.0, support for JSON compatibility ${this.localizationCompatibilityVersion} will be deprecated. Please update the JSON compatibility to v4: <atomic-search-interface localization-compatibility-version=\"v4\" ...></atomic-search-interface> For more information, see i18next Migration Guide: https://www.i18next.com/misc/migration-guide#v20.x.x-to-v21.0.0.`\n      );\n    }\n\n    const safeStorage = new SafeStorage();\n    const standaloneSearchBoxData =\n      safeStorage.getParsedJSON<StandaloneSearchBoxData | null>(\n        StorageItems.STANDALONE_SEARCH_BOX_DATA,\n        null\n      );\n\n    if (!standaloneSearchBoxData) {\n      this.engine.executeFirstSearch();\n      return;\n    }\n\n    safeStorage.removeItem(StorageItems.STANDALONE_SEARCH_BOX_DATA);\n    const {updateQuery} = loadQueryActions(this.engine!);\n    const {value, enableQuerySyntax, analytics} = standaloneSearchBoxData;\n    this.engine!.dispatch(updateQuery({q: value, enableQuerySyntax}));\n    this.engine.executeFirstSearchAfterStandaloneSearchBoxRedirect(analytics);\n  }\n\n  /**\n   * Returns the unique, organization-specific endpoint(s).\n   * @param {string} organizationId\n   * @param {'prod'|'hipaa'|'staging'|'dev'} [env=Prod]\n   */\n  @Method() public async getOrganizationEndpoints(\n    organizationId: string,\n    env: PlatformEnvironment = 'prod'\n  ) {\n    return getOrganizationEndpointsHeadless(organizationId, env);\n  }\n\n  public get bindings(): Bindings {\n    return {\n      engine: this.engine!,\n      i18n: this.i18n,\n      store: this.store,\n      interfaceElement: this.host,\n      createStyleElement: () => {\n        const styleTag = document.createElement('style');\n        if (this.CspNonce) {\n          styleTag.setAttribute('nonce', this.CspNonce);\n        }\n        return styleTag;\n      },\n      createScriptElement: () => {\n        const styleTag = document.createElement('script');\n        if (this.CspNonce) {\n          styleTag.setAttribute('nonce', this.CspNonce);\n        }\n        return styleTag;\n      },\n    };\n  }\n\n  private initFieldsToInclude() {\n    const fields = EcommerceDefaultFieldsToInclude.concat(this.fieldsToInclude);\n    this.store.addFieldsToInclude(fields);\n  }\n\n  public registerFieldsToInclude() {\n    this.engine?.dispatch(\n      loadFieldActions(this.engine!).registerFieldsToInclude(\n        this.store.state.fieldsToInclude\n      )\n    );\n  }\n\n  private updateMobileBreakpoint() {\n    const breakpoint = this.host.querySelector(\n      'atomic-search-layout'\n    )?.mobileBreakpoint;\n    if (breakpoint) {\n      this.store.set('mobileBreakpoint', breakpoint);\n    }\n  }\n\n  private initEngine(options: InitializationOptions) {\n    const searchConfig = this.getSearchConfiguration(options);\n    const analyticsConfig = getAnalyticsConfig(\n      options,\n      this.analytics,\n      this.store\n    );\n    try {\n      this.engine = buildSearchEngine({\n        configuration: {\n          ...options,\n          search: searchConfig,\n          analytics: analyticsConfig,\n        },\n        loggerOptions: {\n          level: this.logLevel,\n        },\n      });\n    } catch (error) {\n      this.error = error as Error;\n      throw error;\n    }\n  }\n\n  private getSearchConfiguration(options: InitializationOptions) {\n    const searchConfigFromProps = {\n      searchHub: this.searchHub ?? 'default',\n      pipeline: this.pipeline,\n      locale: this.language,\n      timezone: this.timezone,\n    };\n\n    if (options.search) {\n      return {\n        ...searchConfigFromProps,\n        ...options.search,\n      };\n    }\n\n    return searchConfigFromProps;\n  }\n\n  private get fragment() {\n    return window.location.hash.slice(1);\n  }\n\n  private initUrlManager() {\n    if (!this.reflectStateInUrl) {\n      return;\n    }\n\n    this.urlManager = buildUrlManager(this.engine!, {\n      initialState: {fragment: this.fragment},\n    });\n\n    this.unsubscribeUrlManager = this.urlManager.subscribe(() =>\n      this.updateHash()\n    );\n\n    window.addEventListener('hashchange', this.onHashChange);\n  }\n\n  private initAriaLive() {\n    if (\n      Array.from(this.host.children).some(\n        (element) => element.tagName === 'ATOMIC-ARIA-LIVE'\n      )\n    ) {\n      return;\n    }\n    this.host.prepend(document.createElement('atomic-aria-live'));\n  }\n\n  private initRelevanceInspector() {\n    if (this.enableRelevanceInspector) {\n      this.host.addEventListener('dblclick', (e) => {\n        if (e.altKey) {\n          this.relevanceInspectorIsOpen = !this.relevanceInspectorIsOpen;\n        }\n      });\n    }\n  }\n\n  private initSearchStatus() {\n    this.searchStatus = buildSearchStatus(this.engine!);\n    this.unsubscribeSearchStatus = this.searchStatus.subscribe(() => {\n      const hasNoResultsAfterInitialSearch =\n        !this.searchStatus.state.hasResults &&\n        this.searchStatus.state.firstSearchExecuted &&\n        !this.searchStatus.state.hasError;\n\n      this.host.classList.toggle(\n        'atomic-search-interface-no-results',\n        hasNoResultsAfterInitialSearch\n      );\n\n      this.host.classList.toggle(\n        'atomic-search-interface-error',\n        this.searchStatus.state.hasError\n      );\n\n      this.host.classList.toggle(\n        'atomic-search-interface-search-executed',\n        this.searchStatus.state.firstSearchExecuted\n      );\n\n      if (\n        this.searchStatus.state.firstSearchExecuted &&\n        this.store.hasLoadingFlag(FirstSearchExecutedFlag)\n      ) {\n        this.store.unsetLoadingFlag(FirstSearchExecutedFlag);\n      }\n    });\n  }\n\n  private updateHash() {\n    const newFragment = this.urlManager.state.fragment;\n\n    if (!this.searchStatus.state.firstSearchExecuted) {\n      history.replaceState(null, document.title, `#${newFragment}`);\n      this.bindings.engine.logger.info(`History replaceState #${newFragment}`);\n\n      return;\n    }\n\n    history.pushState(null, document.title, `#${newFragment}`);\n    this.bindings.engine.logger.info(`History pushState #${newFragment}`);\n  }\n\n  private onHashChange = () => {\n    this.urlManager.synchronize(this.fragment);\n  };\n\n  private async internalInitialization(initEngine: () => void) {\n    await this.commonInterfaceHelper.onInitialization(initEngine);\n    this.pipeline = this.engine!.state.pipeline;\n    this.searchHub = this.engine!.state.searchHub;\n    this.initSearchStatus();\n    this.initUrlManager();\n    this.initialized = true;\n  }\n\n  private addResourceBundleWithWarning(\n    lng: string,\n    ns: string,\n    resources: object,\n    deep?: boolean,\n    overwrite?: boolean\n  ) {\n    const hasV3Keys = Object.keys(resources).some((k) => k.includes('_plural'));\n    if (hasV3Keys && ns === 'translation') {\n      this.engine &&\n        this.engine.logger.warn(\n          `Translation keys using the v3 JSON compatibility format have been detected. As of Atomic version 3.0.0, support for JSON compatibility ${this.localizationCompatibilityVersion} will be deprecated. Please update your translation JSON keys to v4 format: { my-key_other: 'My translations!' } For more information, see i18next Migration Guide: https://www.i18next.com/misc/migration-guide#v20.x.x-to-v21.0.0.`\n        );\n    }\n    return this.i18nClone.addResourceBundle(\n      lng,\n      ns,\n      resources,\n      deep,\n      overwrite\n    );\n  }\n\n  public render() {\n    return [\n      this.engine && this.enableRelevanceInspector && (\n        <atomic-relevance-inspector\n          open={this.relevanceInspectorIsOpen}\n          bindings={this.bindings}\n        ></atomic-relevance-inspector>\n      ),\n      <slot></slot>,\n    ];\n  }\n}\n"],"mappings":"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"}