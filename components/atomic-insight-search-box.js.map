{"file":"atomic-insight-search-box.js","mappings":";;;;;;;;;;;;;AAAA,MAAM,yBAAyB,GAAG,kwxCAAkwxC,CAAC;AACryxC,qCAAe,yBAAyB;;;;;;;;;;;;MCuC3BA,wBAAsB;;;;;QAchB,eAAU,GAAG,KAAK,CAAC;;;;;QAMN,kBAAa,GAAG,KAAK,CAAC;;;;QAItB,wBAAmB,GAAG,CAAC,CAAC;;;0BAVxB,KAAK;6BAMW,KAAK;mCAIC,CAAC;;IAQ9C,UAAU;QACf,IAAI,CAAC,EAAE,GAAG,QAAQ,CAAC,oBAAoB,CAAC,CAAC;QAEzC,MAAM,gBAAgB,GAAG;YACvB,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,mBAAmB,EAAE,CAAC;YACtB,gBAAgB,EAAE;gBAChB,kBAAkB,EAAE;oBAClB,IAAI,EAAE,0BAA0B;oBAChC,KAAK,EAAE,SAAS;iBACjB;gBACD,oBAAoB,EAAE;oBACpB,IAAI,EAAE,4BAA4B;oBAClC,KAAK,EAAE,SAAS;iBACjB;aACF;SACF,CAAC;QAEF,MAAM,EAAC,qBAAqB,EAAE,oBAAoB,EAAC,GACjDC,EAAwB,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QAEjD,IAAI,CAAC,SAAS,GAAGC,EAAqB,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;YAC3D,OAAO,EAAE,gBAAgB;SAC1B,CAAC,CAAC;QAEH,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAC3B,oBAAoB,CAAC,EAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,mBAAmB,EAAC,CAAC,CACrE,CAAC;QAEF,IAAI,CAAC,iBAAiB,GAAG,IAAI,iBAAiB,CAAC;YAC7C,+BAA+B,EAAE,MAAM,IAAI,CAAC,mBAAmB;YAC/D,WAAW,EAAE,CAAC,KAAK,KAAK,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,KAAK,CAAC;YACxD,iBAAiB,EAAE,MAAM,IAAI,CAAC,cAAc,CAAC,KAAK;YAClD,oBAAoB,EAAE,MAAM,GAAG;YAC/B,kBAAkB,EAAE,MAAM,CAAC;YAC3B,OAAO,EAAE,MAAM,IAAI,CAAC,IAAI;YACxB,SAAS,EAAE,MAAM,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM;SAC7C,CAAC,CAAC;QAEH,IAAI,CAAC,iBAAiB,CAAC,mBAAmB,CAAC;YACzC,QAAQ,EAAE,CAAC;YACX,WAAW,EAAE,MACX,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,UAAU,KAC9C,IAAI,CAAC,oBAAoB,CAAC,UAAU,CAAC,CACtC;YACH,OAAO,EAAE;gBACP,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,qBAAqB,CAAC,EAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAC,CAAC,CAAC,CAAC;aACrE;YACD,KAAK,EAAE,MAAM;SACd,CAAC,CAAC;KACJ;IAEO,QAAQ;QACd,IAAI,IAAI,CAAC,iBAAiB,CAAC,uBAAuB,EAAE;YAClD,IAAI,CAAC,iBAAiB,CAAC,oBAAoB,EAAE,CAAC;YAC9C,OAAO;SACR;QAED,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC;QACxB,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,EAAE,CAAC;KAC3C;IAEO,SAAS,CAAC,CAAgB;QAChC,IAAI,IAAI,CAAC,aAAa,EAAE;YACtB,OAAO;SACR;QAED,QAAQ,CAAC,CAAC,GAAG;YACX,KAAK,OAAO;gBACV,IAAI,CAAC,QAAQ,EAAE,CAAC;gBAChB,MAAM;YACR,KAAK,QAAQ;gBACX,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,EAAE,CAAC;gBAC1C,MAAM;YACR,KAAK,WAAW;gBACd,CAAC,CAAC,cAAc,EAAE,CAAC;gBACnB,IAAI,CAAC,iBAAiB,CAAC,cAAc,EAAE,CAAC;gBACxC,IAAI,CAAC,yCAAyC,EAAE,CAAC;gBACjD,MAAM;YACR,KAAK,SAAS;gBACZ,CAAC,CAAC,cAAc,EAAE,CAAC;gBACnB,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,EAAE,CAAC;gBAC5C,IAAI,CAAC,yCAAyC,EAAE,CAAC;gBACjD,MAAM;YACR,KAAK,KAAK;gBACR,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,EAAE,CAAC;gBAC1C,MAAM;SACT;KACF;IAEO,qBAAqB,CAAC,KAAa;QACzC,IAAI,CAAC,WAAW,CAAC,KAAK,GAAG,KAAK,CAAC;QAC/B,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;KAC5D;IAEO,gBAAgB,CACtB,IAAgC,EAChC,KAAa,EACb,SAAiB;QAEjB,MAAM,EAAE,GAAG,GAAG,IAAI,CAAC,EAAE,eAAe,IAAI,CAAC,GAAG,EAAE,CAAC;QAE/C,MAAM,UAAU,GACd,EAAE,KAAK,IAAI,CAAC,iBAAiB,CAAC,gBAAgB;YAC9C,IAAI,CAAC,iBAAiB,CAAC,cAAc,KAAK,IAAI,CAAC,KAAK,CAAC;QAEvD,IAAI,KAAK,KAAK,SAAS,IAAI,IAAI,CAAC,UAAU,EAAE;YAC1C,OAAO,IAAI,CAAC;SACb;QAED,QACE,EAAC,sBAAsB,IACrB,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,EAAE,EAAE,EAAE,EACN,UAAU,EAAE,IAAI,EAChB,UAAU,EAAE,UAAU,EACtB,IAAI,EAAE,MAAM,EACZ,KAAK,EAAE,KAAK,EACZ,SAAS,EAAE,SAAS,EACpB,YAAY,EAAE,KAAK,EACnB,OAAO,EAAE,CAAC,CAAQ;gBAChB,IAAI,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;aACnD,EACD,WAAW,EAAE;gBACX,IAAI,CAAC,iBAAiB,CAAC,qBAAqB,CAAC,IAAI,EAAE,MAAM,EAAE,EAAE,CAAC,CAAC;aAChE,GACuB,EAC1B;KACH;IAEO,oBAAoB,CAC1B,UAA6B;QAE7B,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,KAAK,EAAE,CAAC;QACnD,MAAM,WAAW,GAAG,oCAAoC,CACtD,UAAU,EACV,IAAI,CAAC,QAAQ,CAAC,IAAI,CACnB,CAAC;QAEF,OAAO;YACL,GAAG,WAAW;YACd,OAAO,GACL,EAAC,wBAAwB,QACvB,EAAC,mBAAmB,IAClB,IAAI,EAAE,cAAc,EACpB,aAAa,EAAE,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,GACzD,EAEF,EAAC,mBAAmB,IAAC,UAAU,EAAE,UAAU,EAAE,QAAQ,EAAE,QAAQ,GAAI,CAC1C,CAC5B;YACD,QAAQ,EAAE;gBACR,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;aACtD;SACF,CAAC;KACH;IAEO,WAAW,CACjB,QAAsC,EACtC,MAA6C,EAC7C,MAAqC;QAErC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;YACpB,OAAO,IAAI,CAAC;SACb;QAED,QACE,WACE,IAAI,EAAE,aAAa,EACnB,GAAG,EAAE,MAAM,EACX,KAAK,EAAC,mCAAmC,EACzC,WAAW,EAAE,CAAC,CAAC;gBACb,IAAI,CAAC,CAAC,MAAM,KAAK,MAAM,EAAE,EAAE;oBACzB,CAAC,CAAC,cAAc,EAAE,CAAC;iBACpB;aACF,IAEA,QAAQ,CAAC,GAAG,CAAC,CAAC,UAAU,EAAE,KAAK,KAC9B,IAAI,CAAC,gBAAgB,CAAC,UAAU,EAAE,KAAK,EAAE,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAC9D,CACG,EACN;KACH;IAEO,iBAAiB;QACvB,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,cAAc,EAAE;YAC1C,IAAI,CAAC,iBAAiB,CAAC,sBAAsB,EAAE,CAAC;YAChD,OAAO,IAAI,CAAC;SACb;QAED,QACE,WACE,EAAE,EAAE,GAAG,IAAI,CAAC,EAAE,QAAQ,EACtB,IAAI,EAAC,qBAAqB,EAC1B,KAAK,EAAE,4FACL,IAAI,CAAC,iBAAiB,CAAC,cAAc,IAAI,IAAI,CAAC,UAAU;kBACpD,EAAE;kBACF,QACN,EAAE,EACF,IAAI,EAAC,aAAa,gBACN,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,gCAAgC,CAAC,MAC7D,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,IAAI;gBAC9C,uBAAuB,EAAE,IAAI,CAAC,iBAAiB,CAAC,gBAAgB;aACjE,CAAC,IAED,IAAI,CAAC,WAAW,CACf,IAAI,CAAC,iBAAiB,CAAC,qBAAqB,EAC5C,CAAC,EAAE,MAAM,IAAI,CAAC,iBAAiB,CAAC,SAAS,GAAG,EAAE,CAAC,EAC/C,MAAM,IAAI,CAAC,iBAAiB,CAAC,SAAS,CACvC,CACG,EACN;KACH;IAEO,mBAAmB;QACzB,IAAI,OAAO,EAAE,EAAE;YACb,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,mCAAmC,CAAC,CAAC;SAClE;QACD,IAAI,CAAC,WAAW,EAAE,EAAE;YAClB,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,0CAA0C,CAAC,CAAC;SACzE;QACD,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,6BAA6B,CAAC,CAAC;KAC5D;IAEO,MAAM,OAAO;QACnB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,MAAM,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,EAAE,CAAC;QAClD,IAAI,CAAC,oCAAoC,EAAE,CAAC;KAC7C;IAEO,MAAM,OAAO,CAAC,KAAa;QACjC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QACjC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,MAAM,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,EAAE,CAAC;QAClD,IAAI,CAAC,oCAAoC,EAAE,CAAC;KAC7C;IAEO,yCAAyC;;QAC/C,MAAM,SAAS,GAAG,MAAA,IAAI,CAAC,iBAAiB,CAAC,uBAAuB,0CAAE,SAAS,CAAC;QAC5E,IAAI,OAAO,EAAE,IAAI,SAAS,EAAE;YAC1B,IAAI,CAAC,sBAAsB,GAAG,SAAS,CAAC;SACzC;KACF;IAEO,oCAAoC;QAC1C,MAAM,6BAA6B,GACjC,IAAI,CAAC,iBAAiB,CAAC,qBAAqB,CAAC,MAAM,CACjD,eAAe,CAChB,CAAC,MAAM,CAAC;QACX,IAAI,CAAC,oBAAoB,GAAG,6BAA6B;cACrD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,6BAA6B,EAAE;gBAClD,KAAK,EAAE,6BAA6B;aACrC,CAAC;cACF,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,+BAA+B,CAAC,CAAC;KAC3D;IAEM,MAAM;QACX,QACE,EAAC,gBAAgB,qDAAC,QAAQ,EAAE,IAAI,CAAC,aAAa,EAAE,QAAQ,UACtD,8EACE,KAAK,EAAE,EAAC,OAAO,EAAE,UAAU,EAAC,EAC5B,WAAW,EAAE,MAAM,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,EAAE,IAE5D,oEACE,IAAI,EAAC,aAAa,EAClB,IAAI,EAAE,cAAc,EACpB,KAAK,EAAC,2BAA2B,GACjC,EACF,EAAC,cAAc,qDACb,WAAW,EAAE,IAAI,CAAC,WAAW,EAC7B,OAAO,EAAE,IAAI,CAAC,cAAc,CAAC,SAAS,EACtC,GAAG,EAAE,CAAC,EAAE,KAAK,EAAE,KAAK,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC,EAC1C,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,KAAK,EAAE,IAAI,CAAC,cAAc,CAAC,KAAK,EAChC,SAAS,EAAE,IAAI,CAAC,mBAAmB,EAAE,EACrC,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,iBAAiB,CAAC,EACpD,OAAO,EAAE,MAAM,IAAI,CAAC,OAAO,EAAE,EAC7B,SAAS,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EACnC,OAAO,EAAE;gBACP,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;gBACvB,IAAI,CAAC,qBAAqB,CAAC,EAAE,CAAC,CAAC;aAChC,EACD,OAAO,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,OAAO,CAAE,CAAC,CAAC,MAA2B,CAAC,KAAK,CAAC,GAClE,EACD,IAAI,CAAC,iBAAiB,EAAE,CACH,CACP,EACnB;KACH;;;;;;;;;;AA/T4B;IAA5B,kBAAkB,EAAE;0DAAmC;AAWhD;IAFP,qBAAqB,CAAC,WAAW,CAAC;gEAEY;AAerC;IADT,cAAc,CAAC,YAAY,CAAC;sEACW;AAG9B;IADT,cAAc,CAAC,oBAAoB,EAAE,IAAI,CAAC;wEACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":["AtomicInsightSearchBox","loadInsightSearchActions","buildInsightSearchBox"],"sources":["src/components/insight/atomic-insight-search-box/atomic-insight-search-box.pcss?tag=atomic-insight-search-box&encapsulation=shadow","src/components/insight/atomic-insight-search-box/atomic-insight-search-box.tsx"],"sourcesContent":["@import '../../../global/global.pcss';\r\n@import '../../common/search-box/search-box.pcss';\r\n\r\n[part='wrapper'] {\r\n  @apply z-10;\r\n}\r\n\r\n:host {\r\n  position: relative;\r\n}\r\n\r\n[part='input'] {\r\n  padding-top: 0.675rem;\r\n  padding-bottom: 0.675rem;\r\n}\r\n\r\n[part='submit-icon'] {\r\n  color: var(--atomic-on-background);\r\n}\r\n\r\n[part='submit-button'] {\r\n  @apply w-10 flex justify-center items-center;\r\n}\r\n\r\n.loading::after {\r\n  content: '';\r\n  @apply absolute w-5/6 h-5/6 bg-background rounded-full;\r\n}\r\n\r\n[part='clear-button-wrapper'] {\r\n  @apply mr-2 py-0;\r\n}\r\n\r\n[part='clear-icon'] {\r\n  @apply w-3 h-3;\r\n}\r\n\r\n[part='textarea-expander'] {\r\n  &::after {\r\n    @apply px-4 p-2;\r\n  }\r\n}\r\n\r\n[part='textarea-expander'] {\r\n  [part='textarea'] {\r\n    @apply px-4 p-2;\r\n  }\r\n}\r\n","import {loadInsightSearchActions} from '@coveo/headless/insight';\r\nimport {Component, Element, h, Prop, State} from '@stencil/core';\r\nimport {\r\n  buildInsightSearchBox,\r\n  InsightSearchBox,\r\n  InsightSearchBoxState,\r\n  InsightSuggestion,\r\n} from '..';\r\nimport SearchSlimIcon from '../../../images/search-slim.svg';\r\nimport {AriaLiveRegion} from '../../../utils/accessibility-utils';\r\nimport {hasKeyboard, isMacOS} from '../../../utils/device-utils';\r\nimport {\r\n  BindStateToController,\r\n  InitializeBindings,\r\n} from '../../../utils/initialization-utils';\r\nimport {randomID} from '../../../utils/utils';\r\nimport {SearchBoxWrapper} from '../../common/search-box/search-box-wrapper';\r\nimport {SearchTextArea} from '../../common/search-box/search-text-area';\r\nimport {\r\n  getPartialSearchBoxSuggestionElement,\r\n  QuerySuggestionContainer,\r\n  QuerySuggestionIcon,\r\n  QuerySuggestionText,\r\n} from '../../common/suggestions/query-suggestions';\r\nimport {SuggestionManager} from '../../common/suggestions/suggestion-manager';\r\nimport {\r\n  elementHasQuery,\r\n  SearchBoxSuggestionElement,\r\n} from '../../common/suggestions/suggestions-common';\r\nimport {ButtonSearchSuggestion} from '../../search/atomic-search-box/search-suggestion';\r\nimport {InsightBindings} from '../atomic-insight-interface/atomic-insight-interface';\r\n\r\n/**\r\n * @internal\r\n */\r\n@Component({\r\n  tag: 'atomic-insight-search-box',\r\n  styleUrl: 'atomic-insight-search-box.pcss',\r\n  shadow: true,\r\n})\r\nexport class AtomicInsightSearchBox {\r\n  @InitializeBindings() public bindings!: InsightBindings;\r\n\r\n  private searchBox!: InsightSearchBox;\r\n  private id!: string;\r\n  private textAreaRef!: HTMLTextAreaElement;\r\n  private suggestionManager!: SuggestionManager<InsightSearchBox>;\r\n\r\n  @Element() private host!: HTMLElement;\r\n\r\n  @BindStateToController('searchBox')\r\n  @State()\r\n  private searchBoxState!: InsightSearchBoxState;\r\n  @State() public error!: Error;\r\n  @State() private isExpanded = false;\r\n\r\n  /**\r\n   * Whether to prevent the user from triggering a search from the component.\r\n   * Perfect for use cases where you need to disable the search conditionally, like when the input is empty.\r\n   */\r\n  @Prop({reflect: true}) public disableSearch = false;\r\n  /**\r\n   * The number of query suggestions to display when interacting with the search box.\r\n   */\r\n  @Prop({reflect: true}) public numberOfSuggestions = 5;\r\n\r\n  @AriaLiveRegion('search-box')\r\n  protected searchBoxAriaMessage!: string;\r\n\r\n  @AriaLiveRegion('search-suggestions', true)\r\n  protected suggestionsAriaMessage!: string;\r\n\r\n  public initialize() {\r\n    this.id = randomID('atomic-search-box-');\r\n\r\n    const searchBoxOptions = {\r\n      id: this.id,\r\n      numberOfSuggestions: 0,\r\n      highlightOptions: {\r\n        notMatchDelimiters: {\r\n          open: '<span class=\"font-bold\">',\r\n          close: '</span>',\r\n        },\r\n        correctionDelimiters: {\r\n          open: '<span class=\"font-normal\">',\r\n          close: '</span>',\r\n        },\r\n      },\r\n    };\r\n\r\n    const {fetchQuerySuggestions, registerQuerySuggest} =\r\n      loadInsightSearchActions(this.bindings.engine);\r\n\r\n    this.searchBox = buildInsightSearchBox(this.bindings.engine, {\r\n      options: searchBoxOptions,\r\n    });\r\n\r\n    this.bindings.engine.dispatch(\r\n      registerQuerySuggest({id: this.id, count: this.numberOfSuggestions})\r\n    );\r\n\r\n    this.suggestionManager = new SuggestionManager({\r\n      getNumberOfSuggestionsToDisplay: () => this.numberOfSuggestions,\r\n      updateQuery: (query) => this.searchBox.updateText(query),\r\n      getSearchBoxValue: () => this.searchBoxState.value,\r\n      getSuggestionTimeout: () => 500,\r\n      getSuggestionDelay: () => 0,\r\n      getHost: () => this.host,\r\n      getLogger: () => this.bindings.engine.logger,\r\n    });\r\n\r\n    this.suggestionManager.registerSuggestions({\r\n      position: 0,\r\n      renderItems: () =>\r\n        this.searchBox.state.suggestions.map((suggestion) =>\r\n          this.renderSuggestionItem(suggestion)\r\n        ),\r\n      onInput: () => {\r\n        this.bindings.engine.dispatch(fetchQuerySuggestions({id: this.id}));\r\n      },\r\n      panel: 'left',\r\n    });\r\n  }\r\n\r\n  private onSubmit() {\r\n    if (this.suggestionManager.activeDescendantElement) {\r\n      this.suggestionManager.clickOnActiveElement();\r\n      return;\r\n    }\r\n\r\n    this.searchBox.submit();\r\n    this.suggestionManager.clearSuggestions();\r\n  }\r\n\r\n  private onKeyDown(e: KeyboardEvent) {\r\n    if (this.disableSearch) {\r\n      return;\r\n    }\r\n\r\n    switch (e.key) {\r\n      case 'Enter':\r\n        this.onSubmit();\r\n        break;\r\n      case 'Escape':\r\n        this.suggestionManager.clearSuggestions();\r\n        break;\r\n      case 'ArrowDown':\r\n        e.preventDefault();\r\n        this.suggestionManager.focusNextValue();\r\n        this.announceNewActiveSuggestionToScreenReader();\r\n        break;\r\n      case 'ArrowUp':\r\n        e.preventDefault();\r\n        this.suggestionManager.focusPreviousValue();\r\n        this.announceNewActiveSuggestionToScreenReader();\r\n        break;\r\n      case 'Tab':\r\n        this.suggestionManager.clearSuggestions();\r\n        break;\r\n    }\r\n  }\r\n\r\n  private triggerTextAreaChange(value: string) {\r\n    this.textAreaRef.value = value;\r\n    this.textAreaRef.dispatchEvent(new window.Event('change'));\r\n  }\r\n\r\n  private renderSuggestion(\r\n    item: SearchBoxSuggestionElement,\r\n    index: number,\r\n    lastIndex: number\r\n  ) {\r\n    const id = `${this.id}-suggestion-${item.key}`;\r\n\r\n    const isSelected =\r\n      id === this.suggestionManager.activeDescendant ||\r\n      this.suggestionManager.suggestedQuery === item.query;\r\n\r\n    if (index === lastIndex && item.hideIfLast) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <ButtonSearchSuggestion\r\n        bindings={this.bindings}\r\n        id={id}\r\n        suggestion={item}\r\n        isSelected={isSelected}\r\n        side={'left'}\r\n        index={index}\r\n        lastIndex={lastIndex}\r\n        isDoubleList={false}\r\n        onClick={(e: Event) => {\r\n          this.suggestionManager.onSuggestionClick(item, e);\r\n        }}\r\n        onMouseOver={() => {\r\n          this.suggestionManager.onSuggestionMouseOver(item, 'left', id);\r\n        }}\r\n      ></ButtonSearchSuggestion>\r\n    );\r\n  }\r\n\r\n  private renderSuggestionItem(\r\n    suggestion: InsightSuggestion\r\n  ): SearchBoxSuggestionElement {\r\n    const hasQuery = this.searchBox.state.value !== '';\r\n    const partialItem = getPartialSearchBoxSuggestionElement(\r\n      suggestion,\r\n      this.bindings.i18n\r\n    );\r\n\r\n    return {\r\n      ...partialItem,\r\n      content: (\r\n        <QuerySuggestionContainer>\r\n          <QuerySuggestionIcon\r\n            icon={SearchSlimIcon}\r\n            hasSuggestion={this.searchBoxState.suggestions.length > 1}\r\n          />\r\n\r\n          <QuerySuggestionText suggestion={suggestion} hasQuery={hasQuery} />\r\n        </QuerySuggestionContainer>\r\n      ),\r\n      onSelect: () => {\r\n        this.searchBox.selectSuggestion(suggestion.rawValue);\r\n      },\r\n    };\r\n  }\r\n\r\n  private renderPanel(\r\n    elements: SearchBoxSuggestionElement[],\r\n    setRef: (el: HTMLElement | undefined) => void,\r\n    getRef: () => HTMLElement | undefined\r\n  ) {\r\n    if (!elements.length) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <div\r\n        part={'suggestions'}\r\n        ref={setRef}\r\n        class=\"flex flex-grow basis-1/2 flex-col\"\r\n        onMouseDown={(e) => {\r\n          if (e.target === getRef()) {\r\n            e.preventDefault();\r\n          }\r\n        }}\r\n      >\r\n        {elements.map((suggestion, index) =>\r\n          this.renderSuggestion(suggestion, index, elements.length - 1)\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private renderSuggestions() {\r\n    if (!this.suggestionManager.hasSuggestions) {\r\n      this.suggestionManager.updateActiveDescendant();\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <div\r\n        id={`${this.id}-popup`}\r\n        part=\"suggestions-wrapper\"\r\n        class={`flex w-full z-10 absolute left-0 top-full rounded-md bg-background border border-neutral ${\r\n          this.suggestionManager.hasSuggestions && this.isExpanded\r\n            ? ''\r\n            : 'hidden'\r\n        }`}\r\n        role=\"application\"\r\n        aria-label={this.bindings.i18n.t('search-suggestions-single-list')}\r\n        {...(this.suggestionManager.activeDescendant && {\r\n          'aria-activedescendant': this.suggestionManager.activeDescendant,\r\n        })}\r\n      >\r\n        {this.renderPanel(\r\n          this.suggestionManager.allSuggestionElements,\r\n          (el) => (this.suggestionManager.leftPanel = el),\r\n          () => this.suggestionManager.leftPanel\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private getSearchInputLabel() {\r\n    if (isMacOS()) {\r\n      return this.bindings.i18n.t('search-box-with-suggestions-macos');\r\n    }\r\n    if (!hasKeyboard()) {\r\n      return this.bindings.i18n.t('search-box-with-suggestions-keyboardless');\r\n    }\r\n    return this.bindings.i18n.t('search-box-with-suggestions');\r\n  }\r\n\r\n  private async onFocus() {\r\n    this.isExpanded = true;\r\n    await this.suggestionManager.triggerSuggestions();\r\n    this.announceNewSuggestionsToScreenReader();\r\n  }\r\n\r\n  private async onInput(value: string) {\r\n    this.searchBox.updateText(value);\r\n    this.isExpanded = true;\r\n    await this.suggestionManager.triggerSuggestions();\r\n    this.announceNewSuggestionsToScreenReader();\r\n  }\r\n\r\n  private announceNewActiveSuggestionToScreenReader() {\r\n    const ariaLabel = this.suggestionManager.activeDescendantElement?.ariaLabel;\r\n    if (isMacOS() && ariaLabel) {\r\n      this.suggestionsAriaMessage = ariaLabel;\r\n    }\r\n  }\r\n\r\n  private announceNewSuggestionsToScreenReader() {\r\n    const numberOfSuggestionsToAnnounce =\r\n      this.suggestionManager.allSuggestionElements.filter(\r\n        elementHasQuery\r\n      ).length;\r\n    this.searchBoxAriaMessage = numberOfSuggestionsToAnnounce\r\n      ? this.bindings.i18n.t('query-suggestions-available', {\r\n          count: numberOfSuggestionsToAnnounce,\r\n        })\r\n      : this.bindings.i18n.t('query-suggestions-unavailable');\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <SearchBoxWrapper disabled={this.disableSearch} textArea>\r\n        <atomic-focus-detector\r\n          style={{display: 'contents'}}\r\n          onFocusExit={() => this.suggestionManager.clearSuggestions()}\r\n        >\r\n          <atomic-icon\r\n            part=\"submit-icon\"\r\n            icon={SearchSlimIcon}\r\n            class=\"w-4 h-4 my-auto mr-0 ml-4\"\r\n          />\r\n          <SearchTextArea\r\n            textAreaRef={this.textAreaRef}\r\n            loading={this.searchBoxState.isLoading}\r\n            ref={(el) => el && (this.textAreaRef = el)}\r\n            bindings={this.bindings}\r\n            value={this.searchBoxState.value}\r\n            ariaLabel={this.getSearchInputLabel()}\r\n            placeholder={this.bindings.i18n.t('search-ellipsis')}\r\n            onFocus={() => this.onFocus()}\r\n            onKeyDown={(e) => this.onKeyDown(e)}\r\n            onClear={() => {\r\n              this.searchBox.clear();\r\n              this.triggerTextAreaChange('');\r\n            }}\r\n            onInput={(e) => this.onInput((e.target as HTMLInputElement).value)}\r\n          />\r\n          {this.renderSuggestions()}\r\n        </atomic-focus-detector>\r\n      </SearchBoxWrapper>\r\n    );\r\n  }\r\n}\r\n"],"version":3}