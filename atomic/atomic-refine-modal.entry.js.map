{"file":"atomic-refine-modal.entry.esm.js","mappings":"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","names":[],"sources":["src/components/search/atomic-refine-modal/atomic-refine-modal.pcss?tag=atomic-refine-modal&encapsulation=shadow","src/components/search/atomic-refine-modal/atomic-refine-modal.tsx"],"sourcesContent":["@import '../../common/refine-modal/refine-modal-common.pcss';\r\n\r\n:host {\r\n  position: absolute;\r\n}\r\n\r\n/**\r\n * @prop --atomic-refine-modal-facet-margin: The spacing between the modal's facets.\r\n */\r\nselect:hover + div,\r\nselect:focus-visible + div {\r\n  @apply text-primary-light;\r\n}\r\n","import {\r\n  BreadcrumbManager,\r\n  buildBreadcrumbManager,\r\n  BreadcrumbManagerState,\r\n  QuerySummary,\r\n  QuerySummaryState,\r\n  FacetManagerState,\r\n  Sort,\r\n  buildSort,\r\n  SortState,\r\n  buildQuerySummary,\r\n  buildSearchStatus,\r\n  SearchStatus,\r\n  FacetManager,\r\n  buildFacetManager,\r\n} from '@coveo/headless';\r\nimport {\r\n  Component,\r\n  h,\r\n  State,\r\n  Prop,\r\n  Element,\r\n  Watch,\r\n  Fragment,\r\n} from '@stencil/core';\r\nimport SortIcon from '../../../images/sort.svg';\r\nimport {\r\n  BindStateToController,\r\n  InitializableComponent,\r\n  InitializeBindings,\r\n} from '../../../utils/initialization-utils';\r\nimport {sortByDocumentPosition} from '../../../utils/utils';\r\nimport {findSection} from '../../common/atomic-layout-section/sections';\r\nimport {Button} from '../../common/button';\r\nimport {\r\n  BaseFacetElement,\r\n  sortFacetVisibility,\r\n  triageFacetsByParents,\r\n  collapseFacetsAfter,\r\n} from '../../common/facets/facet-common';\r\nimport {isRefineModalFacet} from '../../common/interface/store';\r\nimport {RefineModalCommon} from '../../common/refine-modal/refine-modal-common';\r\nimport {Bindings} from '../atomic-search-interface/atomic-search-interface';\r\nimport {SortDropdownOption} from '../atomic-search-interface/store';\r\nimport {popoverClass} from '../facets/atomic-popover/popover-type';\r\n\r\n/**\r\n * The `atomic-refine-modal` is automatically created as a child of the `atomic-search-interface` when the `atomic-refine-toggle` is initialized.\r\n *\r\n * When the modal is opened, the class `atomic-modal-opened` is added to the interface element and the body, allowing further customization.\r\n *\r\n * @part container - The modal's outermost container.\r\n * @part header-wrapper - The wrapper around the header.\r\n * @part header - The header of the modal, containing the title.\r\n * @part title - The title of the modal.\r\n * @part close-button - The button in the header that closes the modal.\r\n * @part close-icon - The icon of the close button.\r\n * @part header-ruler - The horizontal ruler underneath the header.\r\n * @part body-wrapper - The wrapper around the body.\r\n * @part body - The body of the modal, between the header and the footer.\r\n * @part content - The wrapper around the content inside the body of the modal.\r\n * @part section-title - The title for each section.\r\n * @part section-sort-title - The title for the sort section.\r\n * @part section-filters-title - The title for the filters section.\r\n * @part select-wrapper - The wrapper around the select element, used to position the icon.\r\n * @part select - The `<select>` element of the dropdown list.\r\n * @part select-icon-wrapper - The wrapper around the sort icon that's used to align it.\r\n * @part select-icon - The select dropdown's sort icon.\r\n * @part filter-section - The section containing facets and the \"filters\" title.\r\n * @part filter-clear-all - The button that resets all actively selected facet values.\r\n * @part footer-wrapper - The wrapper with a shadow or background color around the footer.\r\n * @part footer - The footer of the modal.\r\n * @part footer-content - The wrapper around the content inside the footer of the modal, containing the button to view results.\r\n * @part footer-button - The button in the footer that closes the modal.\r\n * @part footer-button-text - The text inside the button in the footer that closes the modal.\r\n * @part footer-button-count - The count inside the button in the footer that closes the modal.\r\n */\r\n@Component({\r\n  tag: 'atomic-refine-modal',\r\n  styleUrl: 'atomic-refine-modal.pcss',\r\n  shadow: true,\r\n})\r\nexport class AtomicRefineModal implements InitializableComponent {\r\n  private sort!: Sort;\r\n  private breadcrumbManager!: BreadcrumbManager;\r\n  public querySummary!: QuerySummary;\r\n  public searchStatus!: SearchStatus;\r\n  public facetManager!: FacetManager;\r\n  @InitializeBindings() public bindings!: Bindings;\r\n  @Element() public host!: HTMLElement;\r\n\r\n  @BindStateToController('querySummary')\r\n  @State()\r\n  public querySummaryState!: QuerySummaryState;\r\n  @BindStateToController('breadcrumbManager')\r\n  @State()\r\n  private breadcrumbManagerState!: BreadcrumbManagerState;\r\n  @BindStateToController('facetManager')\r\n  @State()\r\n  public facetManagerState!: FacetManagerState;\r\n  @State() @BindStateToController('sort') public sortState!: SortState;\r\n  @State() public error!: Error;\r\n\r\n  @Prop({mutable: true}) openButton?: HTMLElement;\r\n\r\n  @Prop({reflect: true, mutable: true}) isOpen = false;\r\n\r\n  /**\r\n   * The number of expanded facets inside the refine modal.\r\n   * Remaining facets are automatically collapsed.\r\n   *\r\n   * Using the value `0` collapses all facets.\r\n   */\r\n  @Prop({reflect: true}) public collapseFacetsAfter = 0;\r\n\r\n  @Watch('isOpen')\r\n  watchEnabled(isOpen: boolean) {\r\n    if (isOpen) {\r\n      if (this.host.querySelector('div[slot=\"facets\"]')) {\r\n        return;\r\n      }\r\n\r\n      this.host.append(this.createFacetSlot());\r\n    }\r\n  }\r\n\r\n  public initialize() {\r\n    this.breadcrumbManager = buildBreadcrumbManager(this.bindings.engine);\r\n    this.sort = buildSort(this.bindings.engine);\r\n    this.querySummary = buildQuerySummary(this.bindings.engine);\r\n    this.searchStatus = buildSearchStatus(this.bindings.engine);\r\n    this.facetManager = buildFacetManager(this.bindings.engine);\r\n    this.watchEnabled(this.isOpen);\r\n  }\r\n\r\n  private createFacetSlot(): HTMLDivElement {\r\n    const divSlot = document.createElement('div');\r\n    divSlot.setAttribute('slot', 'facets');\r\n    this.addFacetColumnStyling(divSlot);\r\n\r\n    const facets = this.bindings.store.getFacetElements() as BaseFacetElement[];\r\n    const atomicSearchInterface = this.host.closest('atomic-search-interface')!;\r\n    const facetsSection = findSection(atomicSearchInterface, 'facets');\r\n    const horizontalFacetsSection = findSection(\r\n      atomicSearchInterface,\r\n      'horizontal-facets'\r\n    );\r\n    const triagedFacets = triageFacetsByParents(\r\n      facets,\r\n      horizontalFacetsSection,\r\n      facetsSection\r\n    );\r\n    const [horizontalFacetsSectionFacets, facetsSectionFacets, orphanedFacets] =\r\n      triagedFacets.map((facetsArray) =>\r\n        facetsArray.sort(sortByDocumentPosition)\r\n      );\r\n    const sortedFacets = [\r\n      ...facetsSectionFacets,\r\n      ...horizontalFacetsSectionFacets,\r\n      ...orphanedFacets,\r\n    ];\r\n\r\n    const {visibleFacets, invisibleFacets} = sortFacetVisibility(\r\n      sortedFacets,\r\n      this.bindings.store.getAllFacets()\r\n    );\r\n\r\n    const visibleFacetsClone = this.cloneFacets(visibleFacets);\r\n    const invisibleFacetsClone = this.cloneFacets(invisibleFacets);\r\n\r\n    collapseFacetsAfter(visibleFacetsClone, this.collapseFacetsAfter);\r\n\r\n    divSlot.append(...visibleFacetsClone);\r\n    divSlot.append(...invisibleFacetsClone);\r\n\r\n    const generator = this.makeAutomaticFacetGenerator();\r\n    if (generator) {\r\n      generator.updateCollapseFacetsDependingOnFacetsVisibility(\r\n        this.collapseFacetsAfter,\r\n        visibleFacets.length\r\n      );\r\n      divSlot.append(generator);\r\n    }\r\n\r\n    return divSlot;\r\n  }\r\n\r\n  private cloneFacets(facets: BaseFacetElement[]): BaseFacetElement[] {\r\n    return facets.map((facet, i) => {\r\n      facet.classList.remove(popoverClass);\r\n      facet.setAttribute(isRefineModalFacet, '');\r\n      const clone = facet.cloneNode(true) as BaseFacetElement;\r\n      clone.isCollapsed =\r\n        this.collapseFacetsAfter === -1\r\n          ? false\r\n          : i + 1 > this.collapseFacetsAfter;\r\n      return clone;\r\n    });\r\n  }\r\n\r\n  private makeAutomaticFacetGenerator() {\r\n    if (!this.bindings.engine.state.automaticFacetSet?.desiredCount) {\r\n      return;\r\n    }\r\n    const generator = document.createElement(\r\n      'atomic-automatic-facet-generator'\r\n    );\r\n\r\n    generator.setAttribute(\r\n      'desired-count',\r\n      `${this.bindings.engine.state.automaticFacetSet?.desiredCount}`\r\n    );\r\n    this.addFacetColumnStyling(generator);\r\n\r\n    return generator;\r\n  }\r\n\r\n  private addFacetColumnStyling(el: HTMLElement) {\r\n    el.style.display = 'flex';\r\n    el.style.flexDirection = 'column';\r\n    el.style.gap = 'var(--atomic-refine-modal-facet-margin, 20px)';\r\n  }\r\n\r\n  private get options() {\r\n    return this.bindings.store.state.sortOptions;\r\n  }\r\n\r\n  private select(e: Event) {\r\n    const select = e.composedPath()[0] as HTMLSelectElement;\r\n    const option = this.options.find(\r\n      (option) => option.expression === select.value\r\n    );\r\n    option && this.sort.sortBy(option.criteria);\r\n  }\r\n\r\n  private buildOption({expression, criteria, label}: SortDropdownOption) {\r\n    return (\r\n      <option value={expression} selected={this.sort.isSortedBy(criteria)}>\r\n        {this.bindings.i18n.t(label)}\r\n      </option>\r\n    );\r\n  }\r\n\r\n  private renderSort() {\r\n    if (!this.options.length) {\r\n      return;\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <h1\r\n          part=\"section-title section-sort-title\"\r\n          class=\"text-2xl font-bold truncate mb-3\"\r\n        >\r\n          {this.bindings.i18n.t('sort')}\r\n        </h1>\r\n        <div part=\"select-wrapper\" class=\"relative\">\r\n          <select\r\n            class=\"btn-outline-neutral w-full cursor-pointer text-lg font-bold grow appearance-none rounded-lg px-6 py-5\"\r\n            part=\"select\"\r\n            aria-label={this.bindings.i18n.t('sort-by')}\r\n            onChange={(option) => this.select(option)}\r\n          >\r\n            {this.options.map((option) => this.buildOption(option))}\r\n          </select>\r\n          <div\r\n            part=\"select-icon-wrapper\"\r\n            class=\"absolute pointer-events-none top-0 bottom-0 right-0 flex justify-center items-center pr-6\"\r\n          >\r\n            <atomic-icon\r\n              part=\"select-icon\"\r\n              icon={SortIcon}\r\n              class=\"w-6 h-6\"\r\n            ></atomic-icon>\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n  private renderFilters() {\r\n    const hasFacetElements = this.bindings.store.getFacetElements().length > 0;\r\n    const hasAutomaticFacets =\r\n      this.bindings.engine.state.automaticFacetSet?.set !== undefined;\r\n\r\n    if (!hasFacetElements && !hasAutomaticFacets) {\r\n      return;\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <div\r\n          part=\"filter-section\"\r\n          class=\"w-full flex justify-between mt-8 mb-3\"\r\n        >\r\n          <h1\r\n            part=\"section-title section-filters-title\"\r\n            class=\"text-2xl font-bold truncate\"\r\n          >\r\n            {this.bindings.i18n.t('filters')}\r\n          </h1>\r\n          {this.breadcrumbManagerState.hasBreadcrumbs && (\r\n            <Button\r\n              onClick={() => this.breadcrumbManager.deselectAll()}\r\n              style=\"text-primary\"\r\n              text={this.bindings.i18n.t('clear')}\r\n              class=\"px-2 py-1\"\r\n              part=\"filter-clear-all\"\r\n            ></Button>\r\n          )}\r\n        </div>\r\n        <slot name=\"facets\"></slot>\r\n        <slot name=\"automatic-facets\"></slot>\r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n  private renderBody() {\r\n    return (\r\n      <aside\r\n        part=\"content\"\r\n        slot=\"body\"\r\n        class=\"flex flex-col w-full adjust-for-scroll-bar\"\r\n      >\r\n        {this.renderSort()}\r\n        {this.renderFilters()}\r\n      </aside>\r\n    );\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <RefineModalCommon\r\n        bindings={this.bindings}\r\n        host={this.host}\r\n        isOpen={this.isOpen}\r\n        onClose={() => (this.isOpen = false)}\r\n        title={this.bindings.i18n.t('sort-and-filter')}\r\n        querySummaryState={this.querySummaryState}\r\n        openButton={this.openButton}\r\n      >\r\n        {this.renderBody()}\r\n      </RefineModalCommon>\r\n    );\r\n  }\r\n\r\n  public componentDidLoad() {\r\n    this.host.style.display = '';\r\n  }\r\n}\r\n"],"version":3}