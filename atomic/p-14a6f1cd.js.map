{"version":3,"names":["RadioButton","props","classNames","onMouseDown","style","rippleColor","getRippleColorForButtonStyle","push","getClassNameForButtonStyle","e","createRipple","color","checked","class","attributes","name","groupName","key","join","part","_a","ariaLabel","text","ariaCurrent","value","ref","h","type","onChange","currentTarget","onChecked","call"],"sources":["src/components/common/radio-button.tsx"],"sourcesContent":["import {FunctionalComponent, h} from '@stencil/core';\r\nimport {JSXBase} from '@stencil/core/internal';\r\nimport {createRipple} from '../../utils/ripple';\r\nimport {\r\n  ButtonStyle,\r\n  getClassNameForButtonStyle,\r\n  getRippleColorForButtonStyle,\r\n} from './button-style';\r\n\r\nexport interface RadioButtonProps {\r\n  groupName: string;\r\n  onChecked?(): void;\r\n  style?: ButtonStyle;\r\n  key?: string | number;\r\n  checked?: boolean;\r\n  class?: string;\r\n  text?: string;\r\n  part?: string;\r\n  ariaLabel?: string;\r\n  ariaCurrent?: string;\r\n  ref?(element?: HTMLInputElement): void;\r\n}\r\n\r\nexport const RadioButton: FunctionalComponent<RadioButtonProps> = (props) => {\r\n  const classNames = ['btn-radio'];\r\n  let onMouseDown:\r\n    | JSXBase.DOMAttributes<HTMLInputElement>['onMouseDown']\r\n    | undefined;\r\n  if (props.style) {\r\n    const rippleColor = getRippleColorForButtonStyle(props.style);\r\n    classNames.push(getClassNameForButtonStyle(props.style));\r\n\r\n    onMouseDown = (e) => createRipple(e, {color: rippleColor});\r\n  }\r\n  if (props.checked) {\r\n    classNames.push('selected');\r\n  }\r\n  if (props.class) {\r\n    classNames.push(props.class);\r\n  }\r\n\r\n  const attributes = {\r\n    name: props.groupName,\r\n    key: props.key,\r\n    checked: props.checked,\r\n    class: classNames.join(' '),\r\n    part: props.part,\r\n    'aria-label': props.ariaLabel ?? props.text,\r\n    'aria-current': props.ariaCurrent,\r\n    value: props.text,\r\n    ref: props.ref,\r\n  };\r\n\r\n  return (\r\n    <input\r\n      type=\"radio\"\r\n      onChange={(e) =>\r\n        (e.currentTarget as HTMLInputElement).checked && props.onChecked?.()\r\n      }\r\n      onMouseDown={onMouseDown}\r\n      {...attributes}\r\n    />\r\n  );\r\n};\r\n"],"mappings":"oHAuBaA,EAAsDC,I,MACjE,MAAMC,EAAa,CAAC,aACpB,IAAIC,EAGJ,GAAIF,EAAMG,MAAO,CACf,MAAMC,EAAcC,EAA6BL,EAAMG,OACvDF,EAAWK,KAAKC,EAA2BP,EAAMG,QAEjDD,EAAeM,GAAMC,EAAaD,EAAG,CAACE,MAAON,G,CAE/C,GAAIJ,EAAMW,QAAS,CACjBV,EAAWK,KAAK,W,CAElB,GAAIN,EAAMY,MAAO,CACfX,EAAWK,KAAKN,EAAMY,M,CAGxB,MAAMC,EAAa,CACjBC,KAAMd,EAAMe,UACZC,IAAKhB,EAAMgB,IACXL,QAASX,EAAMW,QACfC,MAAOX,EAAWgB,KAAK,KACvBC,KAAMlB,EAAMkB,KACZ,cAAcC,EAAAnB,EAAMoB,aAAS,MAAAD,SAAA,EAAAA,EAAInB,EAAMqB,KACvC,eAAgBrB,EAAMsB,YACtBC,MAAOvB,EAAMqB,KACbG,IAAKxB,EAAMwB,KAGb,OACEC,EAAA,SACEC,KAAK,QACLC,SAAWnB,IAAC,IAAAW,EACV,OAACX,EAAEoB,cAAmCjB,WAAWQ,EAAAnB,EAAM6B,aAAS,MAAAV,SAAA,SAAAA,EAAAW,KAAA9B,GAAI,EAEtEE,YAAaA,KACTW,GACJ,S"}