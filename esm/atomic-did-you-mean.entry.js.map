{"file":"atomic-did-you-mean.entry.js","mappings":"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","names":["buildDidYouMean","buildQueryTrigger"],"sources":["src/components/search/atomic-did-you-mean/atomic-did-you-mean.pcss?tag=atomic-did-you-mean&encapsulation=shadow","src/components/search/atomic-did-you-mean/atomic-did-you-mean.tsx"],"sourcesContent":["@import '../../../global/global.pcss';\n","import {\n  DidYouMean,\n  DidYouMeanState,\n  buildDidYouMean,\n  QueryTrigger,\n  buildQueryTrigger,\n  QueryTriggerState,\n} from '@coveo/headless';\nimport {Component, Fragment, h, Prop, State} from '@stencil/core';\nimport {\n  BindStateToController,\n  InitializableComponent,\n  InitializeBindings,\n} from '../../../utils/initialization-utils';\nimport {LocalizedString} from '../../../utils/jsx-utils';\nimport {Hidden} from '../../common/hidden';\nimport {Bindings} from '../atomic-search-interface/atomic-search-interface';\n\n/**\n * The `atomic-did-you-mean` component is responsible for handling query corrections. When a query returns no result but finds a possible query correction, the component either suggests the correction or automatically triggers a new query with the suggested term.\n *\n * @part no-results - The text displayed when there are no results.\n * @part auto-corrected - The text displayed for the automatically corrected query.\n * @part showing-results-for - The first paragraph of the text displayed when a query trigger changes a query.\n * @part search-instead-for - The second paragraph of the text displayed when a query trigger changes a query.\n * @part did-you-mean - The text displayed around the button to manually correct a query.\n * @part correction-btn - The button used to manually correct a query.\n * @part undo-btn - The button used to undo a query changed by a query trigger.\n * @part highlight - The query highlights.\n */\n@Component({\n  tag: 'atomic-did-you-mean',\n  styleUrl: 'atomic-did-you-mean.pcss',\n  shadow: true,\n})\nexport class AtomicDidYouMean implements InitializableComponent {\n  @InitializeBindings() public bindings!: Bindings;\n  private didYouMean!: DidYouMean;\n  protected queryTrigger!: QueryTrigger;\n\n  @BindStateToController('didYouMean')\n  @State()\n  private didYouMeanState?: DidYouMeanState;\n  @BindStateToController('queryTrigger')\n  @State()\n  private queryTriggerState?: QueryTriggerState;\n  @State() public error!: Error;\n\n  /**\n   * Whether to automatically apply corrections for queries that would otherwise return no results.\n   * When `automaticallyCorrectQuery` is `true`, the component automatically triggers a new query using the suggested term.\n   * When `automaticallyCorrectQuery` is `false`, the component returns the suggested term without triggering a new query.\n   *\n   * The default value is `true`.\n   */\n  @Prop({reflect: true}) public automaticallyCorrectQuery = true;\n\n  // TODO: V3: Default to `next`\n  /**\n   * Define which query correction system to use\n   *\n   * `legacy`: Query correction is powered by the legacy index system. This system relies on an algorithm using solely the index content to compute the suggested terms.\n   * `next`: Query correction is powered by a machine learning system, requiring a valid query suggestion model configured in your Coveo environment to function properly. This system relies on machine learning algorithms to compute the suggested terms.\n   *\n   * Default value is `legacy`. In the next major version of Atomic, the default value will be `next`.\n   */\n  @Prop({reflect: true})\n  public queryCorrectionMode: 'legacy' | 'next' = 'legacy';\n\n  public initialize() {\n    this.didYouMean = buildDidYouMean(this.bindings.engine, {\n      options: {\n        automaticallyCorrectQuery: this.automaticallyCorrectQuery,\n        queryCorrectionMode: this.queryCorrectionMode,\n      },\n    });\n    this.queryTrigger = buildQueryTrigger(this.bindings.engine);\n  }\n\n  private withQuery(\n    key:\n      | 'no-results-for-did-you-mean'\n      | 'query-auto-corrected-to'\n      | 'showing-results-for',\n    query: string\n  ) {\n    return (\n      <LocalizedString\n        bindings={this.bindings}\n        key={key}\n        params={{query: <b part=\"highlight\">{query}</b>}}\n      />\n    );\n  }\n\n  private renderQueryTriggerAutomaticallyCorrected() {\n    return (\n      <Fragment>\n        <p\n          class=\"text-on-background leading-6 text-lg\"\n          part=\"showing-results-for\"\n        >\n          {this.withQuery(\n            'showing-results-for',\n            this.queryTriggerState!.newQuery\n          )}\n        </p>\n        <p\n          class=\"text-on-background leading-5 text-base\"\n          part=\"search-instead-for\"\n        >\n          <LocalizedString\n            bindings={this.bindings}\n            key=\"search-instead-for\"\n            params={{\n              query: (\n                <button\n                  class=\"link py-1\"\n                  part=\"undo-btn\"\n                  onClick={() => this.queryTrigger.undo()}\n                >\n                  {this.queryTriggerState?.originalQuery}\n                </button>\n              ),\n            }}\n          />\n        </p>\n      </Fragment>\n    );\n  }\n\n  private renderDidYouMeanAutomaticallyCorrected() {\n    return (\n      <Fragment>\n        <p class=\"text-on-background mb-1\" part=\"no-results\">\n          {this.withQuery(\n            'no-results-for-did-you-mean',\n            this.didYouMeanState!.originalQuery\n          )}\n        </p>\n        <p class=\"text-on-background\" part=\"auto-corrected\">\n          {this.withQuery(\n            'query-auto-corrected-to',\n            this.didYouMeanState!.wasCorrectedTo\n          )}\n        </p>\n      </Fragment>\n    );\n  }\n\n  private renderDidYouMeanCorrection() {\n    return (\n      <p class=\"text-on-background\" part=\"did-you-mean\">\n        <LocalizedString\n          bindings={this.bindings}\n          key=\"did-you-mean\"\n          params={{\n            query: (\n              <button\n                class=\"link py-1\"\n                part=\"correction-btn\"\n                onClick={() => this.didYouMean.applyCorrection()}\n              >\n                {this.didYouMeanState!.queryCorrection.correctedQuery}\n              </button>\n            ),\n          }}\n        />\n      </p>\n    );\n  }\n\n  public render() {\n    if (this.didYouMeanState?.hasQueryCorrection) {\n      if (this.didYouMeanState.wasAutomaticallyCorrected) {\n        return this.renderDidYouMeanAutomaticallyCorrected();\n      }\n      return this.renderDidYouMeanCorrection();\n    }\n\n    if (this.queryTriggerState?.wasQueryModified) {\n      return this.renderQueryTriggerAutomaticallyCorrected();\n    }\n\n    return <Hidden></Hidden>;\n  }\n}\n"],"version":3}