{"file":"local-storage-utils-e06a332f.js","mappings":"IAEY;AAAZ,WAAY,YAAY;IACtB,uDAAuC,CAAA;IACvC,+EAA+D,CAAA;IAC/D,qEAAqD,CAAA;AACvD,CAAC,EAJW,YAAY,KAAZ,YAAY,QAIvB;MAYY,WAAW;IACtB,iBAAgB;IACT,KAAK;QACV,OAAO,IAAI,CAAC,2BAA2B,CACrC,MAAM,YAAY,CAAC,KAAK,EAAE,EAC1B,SAAQ,CACT,CAAC;KACH;IAEM,OAAO,CAAC,GAAiB;QAC9B,OAAO,IAAI,CAAC,2BAA2B,CACrC,MAAM,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,EAC/B,MAAM,IAAI,CACX,CAAC;KACH;IAEM,aAAa,CAAI,GAAiB,EAAE,QAAW;QACpD,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAC/B,IAAI,CAAC,IAAI,EAAE;YACT,OAAO,QAAQ,CAAC;SACjB;QACD,OAAO,IAAI,CAAC,aAAa,CACvB,GAAG,EACH,MAAM,IAAI,CAAC,KAAK,CAAC,IAAI,CAAM,EAC3B,MAAM,QAAQ,CACf,CAAC;KACH;IAEM,GAAG,CAAC,KAAa;QACtB,OAAO,IAAI,CAAC,2BAA2B,CACrC,MAAM,YAAY,CAAC,GAAG,CAAC,KAAK,CAAC,EAC7B,MAAM,IAAI,CACX,CAAC;KACH;IAED,IAAW,MAAM;QACf,OAAO,IAAI,CAAC,SAAS,CACnB,MAAM,YAAY,CAAC,MAAM,EACzB,MAAM,CAAC,CACR,CAAC;KACH;IAEM,UAAU,CAAC,GAAiB;QACjC,OAAO,IAAI,CAAC,2BAA2B,CACrC,MAAM,YAAY,CAAC,UAAU,CAAC,GAAG,CAAC,EAClC,SAAQ,CACT,CAAC;KACH;IAEM,OAAO,CAAC,GAAiB,EAAE,KAAa;QAC7C,OAAO,IAAI,CAAC,2BAA2B,CACrC,MAAM,YAAY,CAAC,OAAO,CAAC,GAAG,EAAE,KAAK,CAAC,EACtC,SAAQ,CACT,CAAC;KACH;IAEM,OAAO,CAAC,GAAiB,EAAE,GAAY;QAC5C,MAAM,WAAW,GAAG,IAAI,CAAC,aAAa,CACpC,GAAG,EACH,MAAM,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,EACzB,MAAM,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CACzB,CAAC;QACF,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC;KACvC;IAEO,2BAA2B,CACjC,KAAsB,EACtB,MAAuB;QAEvB,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE;YAC3B,OAAO,CAAC,IAAI,CACV,sGAAsG,CACvG,CAAC;YACF,OAAO,MAAM,EAAE,CAAC;SACjB,CAAC,CAAC;KACJ;IAEO,aAAa,CACnB,GAAiB,EACjB,KAAsB,EACtB,MAAuB;QAEvB,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE;YAC3B,OAAO,CAAC,IAAI,CACV,wEAAwE,GAAG,EAAE,CAC9E,CAAC;YACF,OAAO,MAAM,EAAE,CAAC;SACjB,CAAC,CAAC;KACJ;IAEO,SAAS,CACf,KAAsB,EACtB,MAAuB;QAEvB,IAAI;YACF,OAAO,KAAK,EAAE,CAAC;SAChB;QAAC,OAAO,CAAC,EAAE;YACV,OAAO,CAAC,IAAI,CAAC,CAAU,CAAC,CAAC;YACzB,OAAO,MAAM,EAAE,CAAC;SACjB;KACF;;;;;","names":[],"sources":["src/utils/local-storage-utils.tsx"],"sourcesContent":["import {StandaloneSearchBoxAnalytics} from '@coveo/headless';\n\nexport enum StorageItems {\n  RECENT_QUERIES = 'coveo-recent-queries',\n  STANDALONE_SEARCH_BOX_DATA = 'coveo-standalone-search-box-data',\n  GENERATED_ANSWER_DATA = 'coveo-generated-answer-data',\n}\n\nexport interface StandaloneSearchBoxData {\n  value: string;\n  enableQuerySyntax?: boolean;\n  analytics: StandaloneSearchBoxAnalytics;\n}\n\nexport interface GeneratedAnswerData {\n  isVisible: boolean;\n}\n\nexport class SafeStorage implements Storage {\n  constructor() {}\n  public clear() {\n    return this.tryAccessLocalStorageOrWarn(\n      () => localStorage.clear(),\n      () => {}\n    );\n  }\n\n  public getItem(key: StorageItems) {\n    return this.tryAccessLocalStorageOrWarn(\n      () => localStorage.getItem(key),\n      () => null\n    );\n  }\n\n  public getParsedJSON<T>(key: StorageItems, fallback: T) {\n    const item = this.getItem(key);\n    if (!item) {\n      return fallback;\n    }\n    return this.tryJSONOrWarn(\n      key,\n      () => JSON.parse(item) as T,\n      () => fallback\n    );\n  }\n\n  public key(index: number) {\n    return this.tryAccessLocalStorageOrWarn(\n      () => localStorage.key(index),\n      () => null\n    );\n  }\n\n  public get length() {\n    return this.tryOrElse(\n      () => localStorage.length,\n      () => 0\n    );\n  }\n\n  public removeItem(key: StorageItems) {\n    return this.tryAccessLocalStorageOrWarn(\n      () => localStorage.removeItem(key),\n      () => {}\n    );\n  }\n\n  public setItem(key: StorageItems, value: string) {\n    return this.tryAccessLocalStorageOrWarn(\n      () => localStorage.setItem(key, value),\n      () => {}\n    );\n  }\n\n  public setJSON(key: StorageItems, obj: unknown) {\n    const stringified = this.tryJSONOrWarn(\n      key,\n      () => JSON.stringify(obj),\n      () => JSON.stringify({})\n    );\n    return this.setItem(key, stringified);\n  }\n\n  private tryAccessLocalStorageOrWarn<OnSuccess, OnFailure>(\n    tryTo: () => OnSuccess,\n    orElse: () => OnFailure\n  ) {\n    return this.tryOrElse(tryTo, () => {\n      console.warn(\n        'Error while trying to read or modify local storage. This can be caused by browser specific settings.'\n      );\n      return orElse();\n    });\n  }\n\n  private tryJSONOrWarn<OnSuccess, OnFailure>(\n    key: StorageItems,\n    tryTo: () => OnSuccess,\n    orElse: () => OnFailure\n  ) {\n    return this.tryOrElse(tryTo, () => {\n      console.warn(\n        `Error while trying to do JSON manipulation with local storage entry. ${key}`\n      );\n      return orElse();\n    });\n  }\n\n  private tryOrElse<OnSuccess, OnFailure>(\n    tryTo: () => OnSuccess,\n    orElse: () => OnFailure\n  ) {\n    try {\n      return tryTo();\n    } catch (e) {\n      console.warn(e as Error);\n      return orElse();\n    }\n  }\n}\n"],"version":3}