{"file":"display-table-b78a4793.js","mappings":";;;;;AA2BA,MAAM,oBAAoB,GAAG,CAAC,KAAwB;IACpD,IAAI,KAAK,CAAC,qBAAqB,EAAE;QAC/B,OAAO,yCAAyC,CAAC,KAAK,CAAC,CAAC;KACzD;IACD,OAAO,oCAAoC,CAAC,KAAK,CAAC,CAAC;AACrD,CAAC,CAAC;AAEF,MAAM,yCAAyC,GAAG,CAChD,KAAqE;IAErE,MAAM,0BAA0B,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IAEjE,MAAM,kCAAkC,GAAG,KAAK,CAAC,qBAAsB,CACrE,KAAK,CAAC,SAAS,EACf,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAC9B,CAAC;IACF,0BAA0B,CAAC,SAAS,GAAG,kCAAkC,CAAC;IAE1E,OAAO,KAAK,CAAC,IAAI,CACf,0BAA0B,CAAC,gBAAgB,CAACA,qCAAmB,CAAC,CACjE,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,oCAAoC,GAAG,CAC3C,KAA6D,KAE7D,KAAK,CAAC,IAAI,CACR,KAAK,CAAC,2BAA2B,CAAC,gBAAgB,CAACA,qCAAmB,CAAC,CACxE,CAAC;MAES,YAAY,GAA2C,CAClE,KAAK,EACL,QAAQ;IAER,MAAM,YAAY,GAAG,oBAAoB,CAAC,KAAK,CAAC,CAAC;IAEjD,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE;QACxB,KAAK,CAAC,MAAM,CAAC,KAAK,CAChB,2EAA2E,EAC3E,KAAK,CAAC,IAAI,CACX,CAAC;KACH;IAED,QACEC,mBAAO,KAAK,EAAE,aAAa,KAAK,CAAC,WAAW,EAAE,EAAE,IAAI,EAAC,cAAc;QACjEA,mBAAO,IAAI,EAAC,sBAAsB;YAChCA,gBAAI,IAAI,EAAC,0BAA0B,IAChC,YAAY,CAAC,GAAG,CAAC,CAAC,MAAM,MACvBA,gBAAI,IAAI,EAAC,2BAA2B;gBAClCA,yBAAa,KAAK,EAAE,MAAM,CAAC,YAAY,CAAC,OAAO,CAAE,GAAgB,CAC9D,CACN,CAAC,CACC,CACC;QACRA,mBAAO,IAAI,EAAC,mBAAmB,OAAK,QAAQ,CAAS,CAC/C,EACR;AACJ,EAAE;MAEW,eAAe,GAA8C,CACxE,EAAC,GAAG,EAAE,QAAQ,EAAE,MAAM,EAAC,EACvB,QAAQ;IAER,QACEA,gBACE,GAAG,EAAE,GAAG,EACR,IAAI,EACF,mBAAmB;aAClB,QAAQ,GAAG,CAAC,KAAK,CAAC,GAAG,uBAAuB,GAAG,sBAAsB,CAAC,EAEzE,GAAG,EAAE,CAAC,OAAO,KAAK,MAAM,CAAC,OAAO,CAAC,OAE7B,QAAQ,CACT,EACL;AACJ,EAAE;MAEW,gBAAgB,GAIzB,CAAC,KAAK;IACR,MAAM,YAAY,GAAG,oBAAoB,CAAC,KAAK,CAAC,CAAC;IAEjD,OAAO,YAAY,CAAC,GAAG,CAAC,CAAC,MAAM;QAC7B,MAAM,GAAG,GAAG,MAAM,CAAC,YAAY,CAAC,OAAO,CAAE,GAAG,KAAK,CAAC,GAAG,CAAC;QACtD,QACEA,gBAAI,GAAG,EAAE,GAAG,EAAE,IAAI,EAAC,mBAAmB,IACnC,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC,CACtB,EACL;KACH,CAAC,CAAC;AACL;;;;;;","names":["tableElementTagName","h"],"sources":["src/components/common/item-list/display-table.tsx"],"sourcesContent":["import {FunctionalComponent, VNode, h} from '@stencil/core';\r\nimport {tableElementTagName} from '../../search/atomic-table-result/table-element-utils';\r\nimport {AnyItem} from '../interface/item';\r\nimport {ItemRenderingFunction} from './item-list-common';\r\n\r\ninterface TableColumnsProps {\r\n  templateContentForFirstItem: DocumentFragment;\r\n  firstItem: AnyItem;\r\n  itemRenderingFunction?: ItemRenderingFunction;\r\n}\r\n\r\nexport interface DisplayTableProps extends TableColumnsProps {\r\n  logger: Pick<Console, 'error'>;\r\n  host: HTMLElement;\r\n  listClasses: string;\r\n}\r\n\r\nexport interface TableDataProps extends TableColumnsProps {\r\n  key: string;\r\n}\r\n\r\nexport interface DisplayTableRowProps {\r\n  key: string;\r\n  rowIndex: number;\r\n  setRef: (element?: HTMLElement) => void;\r\n}\r\n\r\nconst getFieldTableColumns = (props: TableColumnsProps) => {\r\n  if (props.itemRenderingFunction) {\r\n    return getFieldTableColumnsFromRenderingFunction(props);\r\n  }\r\n  return getFieldTableColumnsFromHTMLTemplate(props);\r\n};\r\n\r\nconst getFieldTableColumnsFromRenderingFunction = (\r\n  props: Pick<TableColumnsProps, 'itemRenderingFunction' | 'firstItem'>\r\n): HTMLAtomicTableElementElement[] => {\r\n  const contentOfRenderingFunction = document.createElement('div');\r\n\r\n  const contentOfRenderingFunctionAsString = props.itemRenderingFunction!(\r\n    props.firstItem,\r\n    document.createElement('div')\r\n  );\r\n  contentOfRenderingFunction.innerHTML = contentOfRenderingFunctionAsString;\r\n\r\n  return Array.from(\r\n    contentOfRenderingFunction.querySelectorAll(tableElementTagName)\r\n  );\r\n};\r\n\r\nconst getFieldTableColumnsFromHTMLTemplate = (\r\n  props: Pick<DisplayTableProps, 'templateContentForFirstItem'>\r\n): HTMLAtomicTableElementElement[] =>\r\n  Array.from(\r\n    props.templateContentForFirstItem.querySelectorAll(tableElementTagName)\r\n  );\r\n\r\nexport const DisplayTable: FunctionalComponent<DisplayTableProps> = (\r\n  props,\r\n  children\r\n) => {\r\n  const fieldColumns = getFieldTableColumns(props);\r\n\r\n  if (!fieldColumns.length) {\r\n    props.logger.error(\r\n      'atomic-table-element elements missing in the template to display columns.',\r\n      props.host\r\n    );\r\n  }\r\n\r\n  return (\r\n    <table class={`list-root ${props.listClasses}`} part=\"result-table\">\r\n      <thead part=\"result-table-heading\">\r\n        <tr part=\"result-table-heading-row\">\r\n          {fieldColumns.map((column) => (\r\n            <th part=\"result-table-heading-cell\">\r\n              <atomic-text value={column.getAttribute('label')!}></atomic-text>\r\n            </th>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n      <tbody part=\"result-table-body\">{...children}</tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport const DisplayTableRow: FunctionalComponent<DisplayTableRowProps> = (\r\n  {key, rowIndex, setRef},\r\n  children\r\n) => {\r\n  return (\r\n    <tr\r\n      key={key}\r\n      part={\r\n        'result-table-row ' +\r\n        (rowIndex % 2 === 1 ? 'result-table-row-even' : 'result-table-row-odd')\r\n      }\r\n      ref={(element) => setRef(element)}\r\n    >\r\n      {...children}\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport const DisplayTableData: FunctionalComponent<\r\n  TableDataProps & {\r\n    renderItem: (content: HTMLAtomicTableElementElement) => VNode;\r\n  }\r\n> = (props) => {\r\n  const fieldColumns = getFieldTableColumns(props);\r\n\r\n  return fieldColumns.map((column) => {\r\n    const key = column.getAttribute('label')! + props.key;\r\n    return (\r\n      <td key={key} part=\"result-table-cell\">\r\n        {props.renderItem(column)}\r\n      </td>\r\n    );\r\n  });\r\n};\r\n"],"version":3}