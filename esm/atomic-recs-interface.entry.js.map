{"file":"atomic-recs-interface.entry.js","mappings":"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","names":["i18next","loadRecommendationActions","getOrganizationEndpointsHeadless","loadSearchConfigurationActions","EcommerceDefaultFieldsToInclude","loadFieldActions","buildRecommendationEngine"],"sources":["src/components/recommendations/atomic-recs-interface/analytics-config.ts","src/components/recommendations/atomic-recs-interface/store.ts","src/components/recommendations/atomic-recs-interface/atomic-recs-interface.tsx"],"sourcesContent":["import {\n  AnalyticsConfiguration,\n  RecommendationEngineConfiguration,\n} from '@coveo/headless/recommendation';\nimport {\n  AnalyticsPayload,\n  augmentAnalyticsWithAtomicVersion,\n  augmentWithExternalMiddleware,\n  augmentAnalyticsConfigWithDocument,\n  augmentAnalyticsConfigWithAtomicVersion,\n  getNextAnalyticsConfig,\n} from '../../common/interface/analytics-config';\n\nexport function getAnalyticsConfig(\n  recsConfig: RecommendationEngineConfiguration,\n  enabled: boolean\n): AnalyticsConfiguration {\n  switch (recsConfig.analytics?.analyticsMode) {\n    case 'next':\n      return getNextAnalyticsConfig(recsConfig, enabled);\n    case 'legacy':\n    default:\n      return getLegacyAnalyticsConfig(recsConfig, enabled);\n  }\n}\n\nfunction getLegacyAnalyticsConfig(\n  recsConfig: RecommendationEngineConfiguration,\n  enabled: boolean\n): AnalyticsConfiguration {\n  const analyticsClientMiddleware = (\n    event: string,\n    payload: AnalyticsPayload\n  ) => augmentAnalytics(event, payload, recsConfig);\n\n  const defaultAnalyticsConfig: AnalyticsConfiguration = {\n    analyticsClientMiddleware,\n    enabled,\n    ...augmentAnalyticsConfigWithDocument(),\n    ...augmentAnalyticsConfigWithAtomicVersion(),\n  };\n\n  if (recsConfig.analytics) {\n    return {\n      ...defaultAnalyticsConfig,\n      ...recsConfig.analytics,\n      analyticsClientMiddleware,\n    };\n  }\n  return defaultAnalyticsConfig;\n}\n\nfunction augmentAnalytics(\n  event: string,\n  payload: AnalyticsPayload,\n  recsConfig: RecommendationEngineConfiguration\n) {\n  let result = augmentWithExternalMiddleware(event, payload, recsConfig);\n  result = augmentAnalyticsWithAtomicVersion(result);\n  return result;\n}\n","import {RecommendationEngine} from '@coveo/headless/recommendation';\nimport {\n  AtomicCommonStore,\n  AtomicCommonStoreData,\n  createAtomicCommonStore,\n} from '../../common/interface/store';\n\nexport interface AtomicRecsStoreData extends AtomicCommonStoreData {}\nexport interface AtomicRecsStore\n  extends AtomicCommonStore<AtomicRecsStoreData> {}\n\nexport function createAtomicRecsStore(): AtomicRecsStore {\n  const commonStore = createAtomicCommonStore<AtomicRecsStoreData>({\n    loadingFlags: [],\n    facets: {},\n    numericFacets: {},\n    dateFacets: {},\n    categoryFacets: {},\n    iconAssetsPath: '',\n    facetElements: [],\n    fieldsToInclude: [],\n  });\n  return {\n    ...commonStore,\n    getUniqueIDFromEngine(engine: RecommendationEngine): string {\n      return engine.state.recommendation.searchUid;\n    },\n  };\n}\n","import {\n  RecommendationEngine,\n  RecommendationEngineConfiguration,\n  loadFieldActions,\n  EcommerceDefaultFieldsToInclude,\n  buildRecommendationEngine,\n  loadRecommendationActions,\n  loadSearchConfigurationActions,\n  getOrganizationEndpoints as getOrganizationEndpointsHeadless,\n  PlatformEnvironment,\n} from '@coveo/headless/recommendation';\nimport {\n  Component,\n  Element,\n  h,\n  Listen,\n  Method,\n  Prop,\n  Watch,\n  State,\n  setNonce,\n} from '@stencil/core';\nimport i18next, {i18n} from 'i18next';\nimport {RecsLogLevel} from '..';\nimport {i18nCompatibilityVersion} from '../../../components';\nimport {InitializeEvent} from '../../../utils/initialization-utils';\nimport {ArrayProp} from '../../../utils/props-utils';\nimport {CommonBindings} from '../../common/interface/bindings';\nimport {\n  BaseAtomicInterface,\n  CommonAtomicInterfaceHelper,\n  mismatchedInterfaceAndEnginePropError,\n} from '../../common/interface/interface-common';\nimport {getAnalyticsConfig} from './analytics-config';\nimport {createAtomicRecsStore, AtomicRecsStore} from './store';\n\nconst FirstRecommendationExecutedFlag = 'firstRecommendationExecuted';\nexport type RecsInitializationOptions = RecommendationEngineConfiguration;\nexport type RecsBindings = CommonBindings<\n  RecommendationEngine,\n  AtomicRecsStore,\n  HTMLAtomicRecsInterfaceElement\n>;\n\n/**\n * The `atomic-recs-interface` component is the parent to all other atomic components in a recommendation interface. It handles the headless recommendation engine and localization configurations.\n */\n@Component({\n  tag: 'atomic-recs-interface',\n  shadow: true,\n})\nexport class AtomicRecsInterface\n  implements BaseAtomicInterface<RecommendationEngine>\n{\n  private store = createAtomicRecsStore();\n  private commonInterfaceHelper: CommonAtomicInterfaceHelper<RecommendationEngine>;\n  private initialized = false;\n\n  @Element() public host!: HTMLAtomicRecsInterfaceElement;\n\n  @State() public error?: Error;\n\n  /**\n   * The recommendation interface [query pipeline](https://docs.coveo.com/en/180/).\n   *\n   * If the recommendation interface is initialized using [`initializeWithRecommendationEngine`](https://docs.coveo.com/en/atomic/latest/reference/recommendation-components/atomic-recs-interface/#initializewithrecommendationengine), the query pipeline should instead be configured in the target engine.\n   */\n  @Prop({reflect: true, mutable: true}) public pipeline?: string;\n\n  /**\n   * The recommendation interface [search hub](https://docs.coveo.com/en/1342/).\n   *\n   * If the recommendation interface is initialized using [`initializeWithRecommendationEngine`](https://docs.coveo.com/en/atomic/latest/reference/recommendation-components/atomic-recs-interface/#initializewithrecommendationengine), the search hub should instead be configured in the target engine.\n   */\n  @Prop({reflect: true, mutable: true}) public searchHub?: string;\n\n  /**\n   * The [tz database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) identifier of the time zone to use to correctly interpret dates in the query expression, facets, and result items.\n   * By default, the timezone will be [guessed](https://day.js.org/docs/en/timezone/guessing-user-timezone).\n   *\n   * Example: \"America/Montreal\"\n   */\n  @Prop({reflect: true}) public timezone?: string;\n\n  /**\n   * The recommendation interface headless engine.\n   */\n  @Prop({mutable: true}) public engine?: RecommendationEngine;\n\n  /**\n   * Whether analytics should be enabled.\n   */\n  @Prop({reflect: true}) public analytics = true;\n\n  /**\n   * The recommendation interface i18next instance.\n   */\n  @Prop() public i18n: i18n = i18next.createInstance();\n\n  /**\n   * The severity level of the messages to log in the console.\n   */\n  @Prop({reflect: true}) public logLevel?: RecsLogLevel;\n\n  /**\n   * The compatibility JSON version for i18next to use (see [i18next Migration Guide](https://www.i18next.com/misc/migration-guide#v20.x.x-to-v21.0.0)).\n   */\n  @Prop() public localizationCompatibilityVersion: i18nCompatibilityVersion =\n    'v3';\n\n  /**\n   * The recommendation interface language.\n   */\n  @Prop({reflect: true}) public language = 'en';\n\n  /**\n   * A list of non-default fields to include in the query results.\n   *\n   * Specify the property as an array using a JSON string representation:\n   * ```html\n   * <atomic-recs-interface fields-to-include='[\"fieldA\", \"fieldB\"]'></atomic-recs-interface>\n   * ```\n   */\n  @ArrayProp()\n  @Prop({mutable: true})\n  public fieldsToInclude: string[] | string = '[]';\n\n  /**\n   * The language assets path. By default, this will be a relative URL pointing to `./lang`.\n   *\n   * Example: \"/mypublicpath/languages\"\n   *\n   */\n  @Prop({reflect: true}) public languageAssetsPath = './lang';\n\n  /**\n   * The icon assets path. By default, this will be a relative URL pointing to `./assets`.\n   *\n   * Example: \"/mypublicpath/icons\"\n   *\n   */\n  @Prop({reflect: true}) public iconAssetsPath = './assets';\n\n  /**\n   * The value to set the [nonce](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/nonce) attribute to on inline script and style elements generated by this interface and its child components.\n   * If your application is served with a Content Security Policy (CSP) that doesn't include the `script-src: 'unsafe-inline'` or `style-src: 'unsafe-inline'` directives,\n   * you should ensure that your application server generates a new nonce on every page load and uses the generated value to set this prop and serve the corresponding CSP response headers\n   * (i.e., script-src 'nonce-<YOUR_GENERATED_NONCE>' and style-src 'nonce-<YOUR_GENERATED_NONCE>').\n   * Otherwise you may see console errors such as\n   *  - Refused to execute inline script because it violates the following Content Security Policy directive: [...]\n   *  - Refused to apply inline style because it violates the following Content Security Policy directive: [...].\n   * @example:\n   * ```html\n   * <script nonce=\"<YOUR_GENERATED_NONCE>\">\n   *  import {setNonce} from '@coveo/atomic';\n   *  setNonce('<YOUR_GENERATED_NONCE>');\n   * </script>\n   * ```\n   */\n  @Prop({reflect: true}) public CspNonce?: string;\n\n  public constructor() {\n    this.commonInterfaceHelper = new CommonAtomicInterfaceHelper(\n      this,\n      'CoveoAtomicRecs'\n    );\n  }\n\n  public get bindings(): RecsBindings {\n    return {\n      engine: this.engine!,\n      i18n: this.i18n,\n      store: this.store,\n      interfaceElement: this.host,\n    };\n  }\n\n  public connectedCallback() {\n    this.store.setLoadingFlag(FirstRecommendationExecutedFlag);\n  }\n\n  componentWillLoad() {\n    if (this.CspNonce) {\n      setNonce(this.CspNonce);\n    }\n  }\n\n  /**\n   * Initializes the connection with the headless recommendation engine using options for `accessToken` (required), `organizationId` (required), `renewAccessToken`, and `platformUrl`.\n   */\n  @Method() public initialize(options: RecsInitializationOptions) {\n    return this.internalInitialization(() => this.initEngine(options));\n  }\n\n  /**\n   * Initializes the connection with an already preconfigured headless recommendation engine.\n   * This bypasses the properties set on the component, such as analytics, recommendation, searchHub, language, timezone & logLevel.\n   */\n  @Method() public initializeWithRecommendationEngine(\n    engine: RecommendationEngine\n  ) {\n    if (this.pipeline && this.pipeline !== engine.state.pipeline) {\n      console.warn(\n        mismatchedInterfaceAndEnginePropError(\n          'recommendation',\n          'query pipeline'\n        )\n      );\n    }\n    if (this.searchHub && this.searchHub !== engine.state.searchHub) {\n      console.warn(\n        mismatchedInterfaceAndEnginePropError('recommendation', 'search hub')\n      );\n    }\n    return this.internalInitialization(() => (this.engine = engine));\n  }\n\n  /**\n   *\n   * Fetches new recommendations.\n   */\n  @Method() public async getRecommendations() {\n    if (!this.commonInterfaceHelper.engineIsCreated(this.engine)) {\n      return;\n    }\n\n    if (!this.initialized) {\n      console.error(\n        'You have to wait until the \"initialize\" promise is fulfilled before executing a search.',\n        this.host\n      );\n      return;\n    }\n\n    this.engine!.dispatch(\n      loadRecommendationActions(this.engine!).getRecommendations()\n    );\n  }\n\n  @Method() public async getOrganizationEndpoints(\n    organizationId: string,\n    env: PlatformEnvironment = 'prod'\n  ) {\n    return getOrganizationEndpointsHeadless(organizationId, env);\n  }\n\n  @Watch('iconAssetsPath')\n  public updateIconAssetsPath() {\n    this.store.set('iconAssetsPath', this.iconAssetsPath);\n  }\n\n  @Listen('atomic/initializeComponent')\n  public handleInitialization(event: InitializeEvent) {\n    this.commonInterfaceHelper.onComponentInitializing(event);\n  }\n\n  @Watch('language')\n  public updateLanguage() {\n    if (!this.commonInterfaceHelper.engineIsCreated(this.engine)) {\n      return;\n    }\n\n    const {updateSearchConfiguration} = loadSearchConfigurationActions(\n      this.engine\n    );\n    this.engine.dispatch(\n      updateSearchConfiguration({\n        locale: this.language,\n      })\n    );\n    this.commonInterfaceHelper.onLanguageChange();\n  }\n\n  @Watch('analytics')\n  public toggleAnalytics() {\n    if (!this.commonInterfaceHelper.engineIsCreated(this.engine)) {\n      return;\n    }\n\n    this.commonInterfaceHelper.onAnalyticsChange();\n  }\n\n  public registerFieldsToInclude() {\n    const fields = EcommerceDefaultFieldsToInclude.concat(\n      [...this.fieldsToInclude].filter((field) => !!field)\n    );\n    this.engine!.dispatch(\n      loadFieldActions(this.engine!).registerFieldsToInclude(fields)\n    );\n  }\n\n  private async internalInitialization(initEngine: () => void) {\n    await this.commonInterfaceHelper.onInitialization(initEngine);\n    this.pipeline = this.engine!.state.pipeline;\n    this.searchHub = this.engine!.state.searchHub;\n    this.store.unsetLoadingFlag(FirstRecommendationExecutedFlag);\n    this.initialized = true;\n  }\n\n  private initEngine(options: RecsInitializationOptions) {\n    const analyticsConfig = getAnalyticsConfig(options, this.analytics);\n    try {\n      this.engine = buildRecommendationEngine({\n        configuration: {\n          pipeline: this.pipeline,\n          searchHub: this.searchHub ?? 'default',\n          locale: this.language,\n          timezone: this.timezone,\n          ...options,\n          analytics: analyticsConfig,\n        },\n        loggerOptions: {\n          level: this.logLevel,\n        },\n      });\n    } catch (error) {\n      this.error = error as Error;\n      throw error;\n    }\n  }\n\n  public render() {\n    return this.engine && <slot></slot>;\n  }\n}\n"],"version":3}