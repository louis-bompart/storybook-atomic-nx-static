{"version":3,"names":["atomicResultFieldsListCss","AtomicResultFieldsListStyle0","AtomicResultFieldsList","constructor","hostRef","this","updatingChildren","rows","connectedCallback","window","ResizeObserver","resizeObserver","update","observe","host","parentElement","disconnectedCallback","_a","disconnect","componentDidRender","showDividers","showChildren","hideChildrenToFit","hideDividersAtEndOfRows","children","Array","from","isOverflowing","scrollWidth","clientWidth","scrollHeight","clientHeight","getSortedChildrenBySize","sort","a","b","offsetWidth","hide","element","style","display","show","isChildHidden","setHideDivider","hideDivider","classList","toggle","forEach","child","i","length","previousChild","filter","row","offsetTop","indexOf","push","render","h","Host","key","__decorate","ResultContext"],"sources":["src/components/search/result-template-components/atomic-result-fields-list/atomic-result-fields-list.pcss?tag=atomic-result-fields-list","src/components/search/result-template-components/atomic-result-fields-list/atomic-result-fields-list.tsx"],"sourcesContent":["@import '../../../../global/global.pcss';\r\n\r\natomic-result-fields-list {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  > * {\r\n    &::after {\r\n      display: block;\r\n      content: ' ';\r\n      width: 1px;\r\n      height: 1rem;\r\n      margin: 0 1rem;\r\n      background-color: var(--atomic-neutral);\r\n      vertical-align: middle;\r\n    }\r\n\r\n    &.hide-divider::after {\r\n      visibility: hidden;\r\n    }\r\n  }\r\n}\r\n","import {Result} from '@coveo/headless';\r\nimport {Component, h, Element, Host} from '@stencil/core';\r\nimport {ResultContext} from '../result-template-decorators';\r\n\r\n/**\r\n * The `atomic-result-fields-list` component selectively renders its children to ensure they fit the parent element and adds dividers between them.\r\n */\r\n@Component({\r\n  tag: 'atomic-result-fields-list',\r\n  styleUrl: 'atomic-result-fields-list.pcss',\r\n  shadow: false,\r\n})\r\nexport class AtomicResultFieldsList {\r\n  @ResultContext()\r\n  protected result!: Result;\r\n\r\n  private resizeObserver?: ResizeObserver;\r\n\r\n  private updatingChildren = false;\r\n  private rows: number[] = [];\r\n  @Element() private host!: HTMLElement;\r\n\r\n  public connectedCallback() {\r\n    if (window.ResizeObserver) {\r\n      this.resizeObserver = new ResizeObserver(() => this.update());\r\n      this.resizeObserver.observe(this.host.parentElement!);\r\n    }\r\n  }\r\n\r\n  public disconnectedCallback() {\r\n    this.resizeObserver?.disconnect();\r\n  }\r\n\r\n  public componentDidRender() {\r\n    this.update();\r\n  }\r\n\r\n  public update() {\r\n    if (this.updatingChildren) {\r\n      return;\r\n    }\r\n    this.updatingChildren = true;\r\n    this.showDividers();\r\n    this.showChildren();\r\n    this.hideChildrenToFit();\r\n    this.hideDividersAtEndOfRows();\r\n    this.updatingChildren = false;\r\n  }\r\n\r\n  private get children() {\r\n    return Array.from(this.host.children) as HTMLElement[];\r\n  }\r\n\r\n  private get isOverflowing() {\r\n    return (\r\n      this.host.scrollWidth > this.host.clientWidth ||\r\n      this.host.scrollHeight > this.host.clientHeight\r\n    );\r\n  }\r\n\r\n  private getSortedChildrenBySize() {\r\n    return this.children.sort((a, b) => a.offsetWidth - b.offsetWidth);\r\n  }\r\n\r\n  private hide(element: HTMLElement) {\r\n    element.style.display = 'none';\r\n  }\r\n\r\n  private show(element: HTMLElement) {\r\n    element.style.display = '';\r\n  }\r\n\r\n  private isChildHidden(element: HTMLElement) {\r\n    return element.style.display === 'none';\r\n  }\r\n\r\n  private setHideDivider(element: HTMLElement, hideDivider: boolean) {\r\n    element.classList.toggle('hide-divider', hideDivider);\r\n  }\r\n\r\n  private showChildren() {\r\n    this.children.forEach((child) => this.show(child));\r\n  }\r\n\r\n  private showDividers() {\r\n    this.children.forEach((child) => this.setHideDivider(child, false));\r\n  }\r\n\r\n  private hideChildrenToFit() {\r\n    const children = this.getSortedChildrenBySize();\r\n    for (let i = children.length - 1; this.isOverflowing && i >= 0; i--) {\r\n      this.hide(children[i]);\r\n    }\r\n  }\r\n\r\n  private hideDividersAtEndOfRows() {\r\n    this.rows = [];\r\n    let previousChild: HTMLElement | null = null;\r\n    this.children\r\n      .filter((child) => !this.isChildHidden(child))\r\n      .forEach((child) => {\r\n        const row = child.offsetTop;\r\n        if (this.rows.indexOf(row) === -1) {\r\n          this.rows.push(row);\r\n          if (previousChild) {\r\n            this.setHideDivider(previousChild, true);\r\n          }\r\n        }\r\n        previousChild = child;\r\n      });\r\n    if (previousChild) {\r\n      this.setHideDivider(previousChild, true);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return <Host></Host>;\r\n  }\r\n}\r\n"],"mappings":"wLAAA,MAAMA,EAA4B,qxuCAClC,MAAAC,EAAeD,E,iXCWFE,EAAsB,MALnC,WAAAC,CAAAC,G,UAWUC,KAAAC,iBAAmB,MACnBD,KAAAE,KAAiB,E,CAGlB,iBAAAC,GACL,GAAIC,OAAOC,eAAgB,CACzBL,KAAKM,eAAiB,IAAID,gBAAe,IAAML,KAAKO,WACpDP,KAAKM,eAAeE,QAAQR,KAAKS,KAAKC,c,EAInC,oBAAAC,G,OACLC,EAAAZ,KAAKM,kBAAc,MAAAM,SAAA,SAAAA,EAAEC,Y,CAGhB,kBAAAC,GACLd,KAAKO,Q,CAGA,MAAAA,GACL,GAAIP,KAAKC,iBAAkB,CACzB,M,CAEFD,KAAKC,iBAAmB,KACxBD,KAAKe,eACLf,KAAKgB,eACLhB,KAAKiB,oBACLjB,KAAKkB,0BACLlB,KAAKC,iBAAmB,K,CAG1B,YAAYkB,GACV,OAAOC,MAAMC,KAAKrB,KAAKS,KAAKU,S,CAG9B,iBAAYG,GACV,OACEtB,KAAKS,KAAKc,YAAcvB,KAAKS,KAAKe,aAClCxB,KAAKS,KAAKgB,aAAezB,KAAKS,KAAKiB,Y,CAI/B,uBAAAC,GACN,OAAO3B,KAAKmB,SAASS,MAAK,CAACC,EAAGC,IAAMD,EAAEE,YAAcD,EAAEC,a,CAGhD,IAAAC,CAAKC,GACXA,EAAQC,MAAMC,QAAU,M,CAGlB,IAAAC,CAAKH,GACXA,EAAQC,MAAMC,QAAU,E,CAGlB,aAAAE,CAAcJ,GACpB,OAAOA,EAAQC,MAAMC,UAAY,M,CAG3B,cAAAG,CAAeL,EAAsBM,GAC3CN,EAAQO,UAAUC,OAAO,eAAgBF,E,CAGnC,YAAAvB,GACNhB,KAAKmB,SAASuB,SAASC,GAAU3C,KAAKoC,KAAKO,I,CAGrC,YAAA5B,GACNf,KAAKmB,SAASuB,SAASC,GAAU3C,KAAKsC,eAAeK,EAAO,Q,CAGtD,iBAAA1B,GACN,MAAME,EAAWnB,KAAK2B,0BACtB,IAAK,IAAIiB,EAAIzB,EAAS0B,OAAS,EAAG7C,KAAKsB,eAAiBsB,GAAK,EAAGA,IAAK,CACnE5C,KAAKgC,KAAKb,EAASyB,G,EAIf,uBAAA1B,GACNlB,KAAKE,KAAO,GACZ,IAAI4C,EAAoC,KACxC9C,KAAKmB,SACF4B,QAAQJ,IAAW3C,KAAKqC,cAAcM,KACtCD,SAASC,IACR,MAAMK,EAAML,EAAMM,UAClB,GAAIjD,KAAKE,KAAKgD,QAAQF,MAAU,EAAG,CACjChD,KAAKE,KAAKiD,KAAKH,GACf,GAAIF,EAAe,CACjB9C,KAAKsC,eAAeQ,EAAe,K,EAGvCA,EAAgBH,CAAK,IAEzB,GAAIG,EAAe,CACjB9C,KAAKsC,eAAeQ,EAAe,K,EAIvC,MAAAM,GACE,OAAOC,EAACC,EAAI,CAAAC,IAAA,4C,6BAtGJC,EAAA,CADTC,K"}