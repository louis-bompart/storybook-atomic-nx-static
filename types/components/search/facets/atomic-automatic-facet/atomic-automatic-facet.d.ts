import { AutomaticFacet, SearchStatus } from '@coveo/headless';
import { InitializableComponent } from '../../../../utils/initialization-utils';
import { Bindings } from '../../atomic-search-interface/atomic-search-interface';
/**
 * An automatic facet is a special type of facet generated by the automatic facets feature.
 * Unlike regular facets, which need to be explicitly defined and requested in the query,
 * automatic facets are dynamically generated by the index in response to the query.
 *
 * **Note:** This component should never be used on its own. It is used internally by the `atomic-automatic-facet-generator`
 * component to automatically render updated facets. However, you can use the shadow parts to style the automatically generated facets.
 *
 * To learn more about the automatic facet generator feature, see: [About the Facet Generator](https://docs.coveo.com/en/n9sd0159/).
 *
 * @part facet - The wrapper for the entire facet.
 *
 * @part label-button - The button that displays the label and allows to expand/collapse the facet.
 * @part label-button-icon - The label button icon.
 * @part clear-button - The button that resets the actively selected facet values.
 * @part clear-button-icon - The clear button icon.
 *
 * @part values - The facet values container.
 * @part value-label - The facet value label, common for all displays.
 * @part value-count - The facet value count, common for all displays.
 *
 * @part value-checkbox - The facet value checkbox, available when display is 'checkbox'.
 * @part value-checkbox-checked - The checked facet value checkbox, available when display is 'checkbox'.
 * @part value-checkbox-label - The facet value checkbox clickable label, available when display is 'checkbox'.
 * @part value-checkbox-icon - The facet value checkbox icon, available when display is 'checkbox'.
 */
export declare class AtomicAutomaticFacet implements InitializableComponent {
    bindings: Bindings;
    error: Error;
    /**
     * @internal
     */
    field: string;
    /**
     * @internal
     */
    facetId: string;
    /**
     * @internal
     */
    facet: AutomaticFacet;
    /**
     * @internal
     */
    searchStatus: SearchStatus;
    /**
     * @internal
     */
    isCollapsed: boolean;
    private headerFocus?;
    private get focusTarget();
    private get numberOfSelectedValues();
    private isSelected;
    private renderValue;
    private renderValuesContainer;
    private renderValues;
    private get label();
    renderHeader(): any;
    render(): any;
}
