{"file":"smart-snippet-feedback-modal-common-7af5dafa.js","mappings":"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","names":[],"sources":["src/components/common/smart-snippets/atomic-smart-snippet-feedback-modal/smart-snippet-feedback-modal-common.tsx"],"sourcesContent":["import {SmartSnippet, SmartSnippetFeedback} from '@coveo/headless';\nimport {EventEmitter, h} from '@stencil/core';\nimport {updateBreakpoints} from '../../../../utils/replace-breakpoint';\nimport {once} from '../../../../utils/utils';\nimport {Button} from '../../button';\nimport {AnyBindings} from '../../interface/bindings';\n\ninterface SmartSnippetFeedbackModalProps {\n  formId: string;\n  getHost: () => HTMLElement;\n  getBindings: () => AnyBindings;\n  getCurrentAnswer: () => SmartSnippetFeedback | 'other' | undefined;\n  getSmartSnippet: () => SmartSnippet;\n  getDetailsInputRef: () => HTMLTextAreaElement | undefined;\n  getFeedbackSent: () => EventEmitter;\n  getSource: () => HTMLElement | undefined;\n  getIsOpen: () => boolean;\n  setIsOpen: (isOpen: boolean) => void;\n  setCurrentAnswer: (answer: SmartSnippetFeedback | 'other') => void;\n  setDetailsInputRef: (ref?: HTMLTextAreaElement) => void;\n}\n\nexport class SmartSnippetFeedbackModalCommon {\n  constructor(private props: SmartSnippetFeedbackModalProps) {}\n\n  public sendFeedback() {\n    if (this.props.getCurrentAnswer() === 'other') {\n      this.props\n        .getSmartSnippet()\n        .sendDetailedFeedback(this.props.getDetailsInputRef()!.value);\n    } else {\n      this.props\n        .getSmartSnippet()\n        .sendFeedback(this.props.getCurrentAnswer() as SmartSnippetFeedback);\n    }\n    this.props.getFeedbackSent().emit();\n    this.props.setIsOpen(false);\n  }\n\n  public close() {\n    this.props.setIsOpen(false);\n    this.props.getSmartSnippet().closeFeedbackModal();\n  }\n\n  private renderHeader() {\n    return (\n      <h1 slot=\"header\">\n        {this.props.getBindings().i18n.t('smart-snippet-feedback-explain-why')}\n      </h1>\n    );\n  }\n\n  private renderOptions() {\n    const options: {\n      id: string;\n      localeKey: string;\n      correspondingAnswer: SmartSnippetFeedback | 'other';\n    }[] = [\n      {\n        id: 'does-not-answer',\n        localeKey: 'smart-snippet-feedback-reason-does-not-answer',\n        correspondingAnswer: 'does_not_answer',\n      },\n      {\n        id: 'partially-answers',\n        localeKey: 'smart-snippet-feedback-reason-partially-answers',\n        correspondingAnswer: 'partially_answers',\n      },\n      {\n        id: 'was-not-a-question',\n        localeKey: 'smart-snippet-feedback-reason-was-not-a-question',\n        correspondingAnswer: 'was_not_a_question',\n      },\n      {\n        id: 'other',\n        localeKey: 'smart-snippet-feedback-reason-other',\n        correspondingAnswer: 'other',\n      },\n    ];\n\n    return (\n      <fieldset>\n        <legend\n          part=\"reason-title\"\n          class=\"font-bold text-on-background text-lg\"\n        >\n          {this.props\n            .getBindings()\n            .i18n.t('smart-snippet-feedback-select-reason')}\n        </legend>\n        {options.map(({id, localeKey, correspondingAnswer}) => (\n          <div class=\"flex items-center\" key={id} part=\"reason\">\n            <input\n              part=\"reason-radio\"\n              type=\"radio\"\n              name=\"answer\"\n              id={id}\n              checked={this.props.getCurrentAnswer() === correspondingAnswer}\n              onChange={(e) =>\n                (e.currentTarget as HTMLInputElement | null)?.checked &&\n                this.props.setCurrentAnswer(correspondingAnswer)\n              }\n              class=\"mr-2 w-4 h-4\"\n              required\n            />\n            <label part=\"reason-label\" htmlFor={id}>\n              {this.props.getBindings().i18n.t(localeKey)}\n            </label>\n          </div>\n        ))}\n      </fieldset>\n    );\n  }\n\n  private renderDetails() {\n    if (this.props.getCurrentAnswer() !== 'other') {\n      return;\n    }\n\n    return (\n      <fieldset>\n        <legend\n          part=\"details-title\"\n          class=\"font-bold text-on-background text-lg\"\n        >\n          {this.props.getBindings().i18n.t('details')}\n        </legend>\n        <textarea\n          part=\"details-input\"\n          name=\"answer-details\"\n          ref={(detailsInput) => this.props.setDetailsInputRef(detailsInput)}\n          class=\"mt-2 p-2 w-full text-base leading-5 border border-neutral resize-none rounded\"\n          rows={4}\n          required\n        ></textarea>\n      </fieldset>\n    );\n  }\n\n  private renderBody() {\n    return (\n      <form\n        part=\"form\"\n        id={this.props.formId}\n        slot=\"body\"\n        onSubmit={(e) => {\n          e.preventDefault();\n          this.sendFeedback();\n        }}\n        class=\"flex flex-col gap-8\"\n      >\n        {this.renderOptions()}\n        {this.renderDetails()}\n      </form>\n    );\n  }\n\n  private renderFooter() {\n    return (\n      <div part=\"buttons\" slot=\"footer\" class=\"flex justify-end gap-2\">\n        <Button\n          part=\"cancel-button\"\n          style=\"outline-neutral\"\n          class=\"text-primary\"\n          onClick={() => this.close()}\n        >\n          {this.props.getBindings().i18n.t('cancel')}\n        </Button>\n        <Button\n          part=\"submit-button\"\n          style=\"primary\"\n          type=\"submit\"\n          form={this.props.formId}\n        >\n          {this.props.getBindings().i18n.t('feedback-send')}\n        </Button>\n      </div>\n    );\n  }\n\n  private updateBreakpoints = once(() =>\n    updateBreakpoints(this.props.getHost())\n  );\n\n  public render() {\n    this.updateBreakpoints();\n\n    return (\n      <atomic-modal\n        fullscreen={false}\n        source={this.props.getSource()}\n        container={this.props.getHost()}\n        isOpen={this.props.getIsOpen()}\n        close={() => this.close()}\n        exportparts=\"backdrop,container,header,header-wrapper,header-ruler,body,body-wrapper,footer,footer-wrapper,footer-wrapper\"\n      >\n        {this.renderHeader()}\n        {this.renderBody()}\n        {this.renderFooter()}\n      </atomic-modal>\n    );\n  }\n}\n"],"version":3}