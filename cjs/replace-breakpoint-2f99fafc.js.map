{"file":"replace-breakpoint-2f99fafc.js","mappings":";;;;MAEa,yBAAyB,GAAG,SAAS;AAElD,SAAS,iBAAiB,CAAC,KAAa,EAAE,gBAAwB;IAChE,OAAO,KAAK,CAAC,OAAO,CAClB,IAAI,MAAM,CAAC,iBAAiB,yBAAyB,KAAK,EAAE,GAAG,CAAC,EAChE,eAAe,gBAAgB,GAAG,CACnC,CAAC;AACJ,CAAC;AAED,SAAS,iBAAiB,CAAC,OAAoB,EAAE,gBAAwB;;;;;IAIvE,MAAM,WAAW,GAAG,MAAA,OAAO,CAAC,UAAU,0CAAE,kBAAkB,CAAC;IAC3D,IAAI,CAAC,WAAW,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE;QACvC,OAAO;KACR;IAED,MAAM,UAAU,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;IAClC,MAAM,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC;SAC7C,GAAG,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,OAAO,CAAC;SAC3B,IAAI,CAAC,EAAE,CAAC,CAAC;IACZ,MAAA,UAAU,CAAC,WAAW,2DAAG,iBAAiB,CAAC,KAAK,EAAE,gBAAgB,CAAC,CAAC,CAAC;AACvE,CAAC;AAED,SAAS,mBAAmB,CAAC,OAAoB,EAAE,UAAkB;;IACnE,MAAM,QAAQ,GAAG,MAAA,OAAO,CAAC,UAAU,0CAAE,aAAa,CAAC,OAAO,CAAC,CAAC;IAC5D,IAAI,CAAC,QAAQ,EAAE;QACb,OAAO;KACR;IAED,QAAQ,CAAC,WAAW,GAAG,iBAAiB,CAAC,QAAQ,CAAC,WAAY,EAAE,UAAU,CAAC,CAAC;AAC9E,CAAC;AAED,MAAM,OAAO,GAAG,CAAC,sBAAsB,EAAE,uBAAuB,CAAC,CAAC;SAElD,iBAAiB,CAAC,OAAoB;IACpD,MAAM,MAAM,GAAyBA,aAAO,CAAC,OAAO,EAAE,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IAE1E,IAAI,EAAC,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,gBAAgB,CAAA,EAAE;QAC7B,OAAO;KACR;IAED,IAAI,MAAM,CAAC,gBAAgB,KAAK,yBAAyB,EAAE;QACzD,OAAO;KACR;IAED,iBAAiB,CAAC,OAAO,EAAE,MAAM,CAAC,gBAAgB,CAAC,CAAC;IACpD,mBAAmB,CAAC,OAAO,EAAE,MAAM,CAAC,gBAAgB,CAAC,CAAC;AACxD;;;;;","names":["closest"],"sources":["src/utils/replace-breakpoint.ts"],"sourcesContent":["import {closest} from './utils';\r\n\r\nexport const DEFAULT_MOBILE_BREAKPOINT = '1024px';\r\n\r\nfunction replaceMediaQuery(style: string, mobileBreakpoint: string) {\r\n  return style.replace(\r\n    new RegExp(`\\\\(min-width: ${DEFAULT_MOBILE_BREAKPOINT}\\\\)`, 'g'),\r\n    `(min-width: ${mobileBreakpoint})`\r\n  );\r\n}\r\n\r\nfunction replaceStyleSheet(element: HTMLElement, mobileBreakpoint: string) {\r\n  // Not adopted by all browsers, not part of Typescript yet\r\n  // https://caniuse.com/mdn-api_document_adoptedstylesheets\r\n  // https://github.com/microsoft/TypeScript/issues/30022\r\n  const stylesheets = element.shadowRoot?.adoptedStyleSheets;\r\n  if (!stylesheets || !stylesheets.length) {\r\n    return;\r\n  }\r\n\r\n  const stylesheet = stylesheets[0];\r\n  const style = Object.values(stylesheet.cssRules)\r\n    .map((rule) => rule.cssText)\r\n    .join('');\r\n  stylesheet.replaceSync?.(replaceMediaQuery(style, mobileBreakpoint));\r\n}\r\n\r\nfunction replateStyleContent(element: HTMLElement, breakpoint: string) {\r\n  const styleTag = element.shadowRoot?.querySelector('style');\r\n  if (!styleTag) {\r\n    return;\r\n  }\r\n\r\n  styleTag.textContent = replaceMediaQuery(styleTag.textContent!, breakpoint);\r\n}\r\n\r\nconst layouts = ['atomic-search-layout', 'atomic-insight-layout'];\r\ntype LayoutElement = HTMLElement & {mobileBreakpoint: string};\r\nexport function updateBreakpoints(element: HTMLElement) {\r\n  const layout: LayoutElement | null = closest(element, layouts.join(', '));\r\n\r\n  if (!layout?.mobileBreakpoint) {\r\n    return;\r\n  }\r\n\r\n  if (layout.mobileBreakpoint === DEFAULT_MOBILE_BREAKPOINT) {\r\n    return;\r\n  }\r\n\r\n  replaceStyleSheet(element, layout.mobileBreakpoint);\r\n  replateStyleContent(element, layout.mobileBreakpoint);\r\n}\r\n"],"version":3}