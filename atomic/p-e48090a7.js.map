{"version":3,"names":["buildDebouncedQueue","options","actions","intervalId","dequeueAction","action","shift","execute","clearInterval","cancelActionIfQueued","id","filter","enqueue","uniqueId","push","setInterval","delay","clear","debounce","wait","timer","args","clearTimeout","Promise","resolve","setTimeout"],"sources":["src/utils/debounce-utils.tsx"],"sourcesContent":["export interface DebouncedQueueOptions {\n  delay: number;\n}\n\nexport interface DebouncedQueue {\n  enqueue(execute: () => void, uniqueId?: string): void;\n  clear(): void;\n  cancelActionIfQueued(id: string): void;\n}\n\ninterface QueuedAction {\n  id?: string;\n  execute: () => void;\n}\n\nexport function buildDebouncedQueue(\n  options: DebouncedQueueOptions\n): DebouncedQueue {\n  let actions: QueuedAction[] = [];\n  let intervalId: ReturnType<typeof setInterval> | null = null;\n\n  function dequeueAction() {\n    const action = actions.shift();\n    if (action) {\n      action.execute();\n    } else {\n      clearInterval(intervalId!);\n      intervalId = null;\n    }\n  }\n\n  function cancelActionIfQueued(id: string) {\n    actions = actions.filter((action) => action.id !== id);\n  }\n\n  return {\n    enqueue(execute: () => void, uniqueId?: string) {\n      if (uniqueId) {\n        cancelActionIfQueued(uniqueId);\n      }\n      actions.push({id: uniqueId, execute});\n      if (intervalId === null) {\n        dequeueAction();\n        intervalId = setInterval(dequeueAction, options.delay);\n      }\n    },\n    clear() {\n      actions = [];\n    },\n    cancelActionIfQueued,\n  };\n}\n\nexport function debounce<\n  ExecuteParameters extends unknown[],\n  ExecuteReturnType,\n>(\n  execute: (\n    ...args: ExecuteParameters\n  ) => Promise<ExecuteReturnType> | ExecuteReturnType,\n  wait: number\n) {\n  let timer: ReturnType<typeof setTimeout>;\n\n  return (...args: ExecuteParameters): Promise<ExecuteReturnType> => {\n    clearTimeout(timer);\n    return new Promise((resolve) => {\n      timer = setTimeout(() => resolve(execute(...args)), wait);\n    });\n  };\n}\n"],"mappings":"SAegBA,EACdC,GAEA,IAAIC,EAA0B,GAC9B,IAAIC,EAAoD,KAExD,SAASC,IACP,MAAMC,EAASH,EAAQI,QACvB,GAAID,EAAQ,CACVA,EAAOE,S,KACF,CACLC,cAAcL,GACdA,EAAa,I,EAIjB,SAASM,EAAqBC,GAC5BR,EAAUA,EAAQS,QAAQN,GAAWA,EAAOK,KAAOA,G,CAGrD,MAAO,CACL,OAAAE,CAAQL,EAAqBM,GAC3B,GAAIA,EAAU,CACZJ,EAAqBI,E,CAEvBX,EAAQY,KAAK,CAACJ,GAAIG,EAAUN,YAC5B,GAAIJ,IAAe,KAAM,CACvBC,IACAD,EAAaY,YAAYX,EAAeH,EAAQe,M,GAGpD,KAAAC,GACEf,EAAU,E,EAEZO,uBAEJ,C,SAEgBS,EAIdX,EAGAY,GAEA,IAAIC,EAEJ,MAAO,IAAIC,KACTC,aAAaF,GACb,OAAO,IAAIG,SAASC,IAClBJ,EAAQK,YAAW,IAAMD,EAAQjB,KAAWc,KAAQF,EAAK,GACzD,CAEN,Q"}