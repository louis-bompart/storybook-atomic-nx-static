{"file":"no-results-common-c803897c.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmBA,MAAM,aAAa,GAGd,CAAC,KAAK;IACT,QACE,YACE,KAAK,EAAC,2EAA2E,EACjF,IAAI,EAAC,WAAW;QAEhB,EAAC,eAAe,IACd,GAAG,EAAC,oBAAoB,EACxB,MAAM,EAAE,EAAC,IAAI,EAAE,KAAK,CAAC,OAAO,EAAC,EAC7B,QAAQ,EAAE,KAAK,CAAC,QAAQ,GACxB,CACG,EACP;AACJ,CAAC,CAAC;AAEF,MAAM,eAAe,GAAwB,OAC3C,mBACE,IAAI,EAAC,MAAM,EACX,IAAI,EAAE,mBAAmB,EACzB,KAAK,EAAC,gDAAgD,GACzC,CAChB,CAAC;AAEF,MAAM,SAAS,GAGV,CAAC,KAAK;IACT,MAAM,EAAC,QAAQ,EAAE,KAAK,EAAC,GAAG,KAAK,CAAC,iBAAiB,CAAC;IAClD,MAAM,OAAO,GAAG,QAAQ,IACtB,EAAC,eAAe,IACd,QAAQ,EAAE,KAAK,CAAC,QAAQ,EACxB,GAAG,EAAC,gBAAgB,EACpB,MAAM,EAAE;YACN,KAAK,EAAE,EAAC,aAAa,IAAC,QAAQ,EAAE,KAAK,CAAC,QAAQ,EAAE,OAAO,EAAE,KAAK,GAAI;SACnE,GACD,KAEF,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,YAAY,CAAC,CACpC,CAAC;IACF,QACE,WACE,KAAK,EAAC,kDAAkD,EACxD,IAAI,EAAC,YAAY,IAEhB,OAAO,CACJ,EACN;AACJ,CAAC,CAAC;AAEF,MAAM,UAAU,GAAiD,CAAC,KAAK;IACrE,QACE,WAAK,KAAK,EAAC,4CAA4C,EAAC,IAAI,EAAC,aAAa,IACvE,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,aAAa,CAAC,CACjC,EACN;AACJ,CAAC,CAAC;MAEW,eAAe,GAAwC,CAClE,KAAK,EACL,QAAQ;IAER,MAAM,UAAU,GAAG;QACjB,IAAI,KAAK,CAAC,iBAAiB,CAAC,UAAU,EAAE;YACtC,OAAO,EAAE,CAAC;SACX;QACD,OAAO,KAAK,CAAC,iBAAiB,CAAC,QAAQ;cACnC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,gBAAgB,EAAE;gBACtC,aAAa,EAAE,EAAC,WAAW,EAAE,KAAK,EAAC;gBACnC,KAAK,EAAE,KAAK,CAAC,iBAAiB,CAAC,KAAK;aACrC,CAAC;cACF,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC;KACzC,CAAC;IAEF,KAAK,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC,CAAC;IAEhC,MAAM,EAAC,mBAAmB,EAAE,SAAS,EAAE,UAAU,EAAC,GAAG,KAAK,CAAC,iBAAiB,CAAC;IAC7E,IAAI,CAAC,mBAAmB,IAAI,SAAS,IAAI,UAAU,EAAE;QACnD,OAAO,eAAa,CAAC;KACtB;IAED,OAAO;QACL,WAAK,KAAK,EAAC,6DAA6D;YACtE,EAAC,eAAe,OAAG;YACnB,EAAC,SAAS,OAAK,KAAK,GAAI;YACxB,EAAC,UAAU,OAAK,KAAK,GAAI;eACrB,QAAQ,CACR;QACN,eAAa;KACH,CAAC;AACf;;;;","names":[],"sources":["src/components/common/no-results/no-results-common.tsx"],"sourcesContent":["import {h, VNode, FunctionalComponent} from '@stencil/core';\nimport MagnifyingGlassIcon from '../../../images/magnifying-glass.svg';\nimport {LocalizedString} from '../../../utils/jsx-utils';\nimport {AnyBindings} from '../interface/bindings';\n\ninterface NoResultsProps {\n  bindings: AnyBindings;\n  searchStatusState: {\n    firstSearchExecuted: boolean;\n    isLoading: boolean;\n    hasResults: boolean;\n  };\n  querySummaryState: {\n    hasQuery: boolean;\n    query: string;\n  };\n  setAriaLive: (message: string) => void;\n}\n\nconst BetweenQuotes: FunctionalComponent<{\n  content: string;\n  bindings: AnyBindings;\n}> = (props) => {\n  return (\n    <span\n      class=\"font-bold truncate inline-block align-bottom max-w-full whitespace-normal\"\n      part=\"highlight\"\n    >\n      <LocalizedString\n        key=\"between-quotations\"\n        params={{text: props.content}}\n        bindings={props.bindings}\n      />\n    </span>\n  );\n};\n\nconst MagnifyingGlass: FunctionalComponent = () => (\n  <atomic-icon\n    part=\"icon\"\n    icon={MagnifyingGlassIcon}\n    class=\"my-6 flex flex-col items-center w-1/2 max-w-lg\"\n  ></atomic-icon>\n);\n\nconst NoResults: FunctionalComponent<{\n  querySummaryState: NoResultsProps['querySummaryState'];\n  bindings: AnyBindings;\n}> = (props) => {\n  const {hasQuery, query} = props.querySummaryState;\n  const content = hasQuery ? (\n    <LocalizedString\n      bindings={props.bindings}\n      key=\"no-results-for\"\n      params={{\n        query: <BetweenQuotes bindings={props.bindings} content={query} />,\n      }}\n    />\n  ) : (\n    props.bindings.i18n.t('no-results')\n  );\n  return (\n    <div\n      class=\"my-2 text-2xl font-medium max-w-full text-center\"\n      part=\"no-results\"\n    >\n      {content}\n    </div>\n  );\n};\n\nconst SearchTips: FunctionalComponent<{bindings: AnyBindings}> = (props) => {\n  return (\n    <div class=\"my-2 text-lg text-neutral-dark text-center\" part=\"search-tips\">\n      {props.bindings.i18n.t('search-tips')}\n    </div>\n  );\n};\n\nexport const NoResultsCommon: FunctionalComponent<NoResultsProps> = (\n  props,\n  children\n) => {\n  const getSummary = () => {\n    if (props.searchStatusState.hasResults) {\n      return '';\n    }\n    return props.querySummaryState.hasQuery\n      ? props.bindings.i18n.t('no-results-for', {\n          interpolation: {escapeValue: false},\n          query: props.querySummaryState.query,\n        })\n      : props.bindings.i18n.t('no-results');\n  };\n\n  props.setAriaLive(getSummary());\n\n  const {firstSearchExecuted, isLoading, hasResults} = props.searchStatusState;\n  if (!firstSearchExecuted || isLoading || hasResults) {\n    return <span></span>;\n  }\n\n  return [\n    <div class=\"flex flex-col items-center h-full w-full text-on-background\">\n      <MagnifyingGlass />\n      <NoResults {...props} />\n      <SearchTips {...props} />\n      {...children}\n    </div>,\n    <slot></slot>,\n  ] as VNode[];\n};\n"],"version":3}