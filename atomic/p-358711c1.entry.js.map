{"version":3,"names":["atomicSmartSnippetSuggestionsCss","AtomicSmartSnippetSuggestionsStyle0","AtomicSmartSnippetSuggestions","this","headingLevel","id","randomID","initialize","smartSnippetQuestionsList","buildSmartSnippetQuestionsList","bindings","engine","smartSnippetSuggestionListCommon","SmartSnippetSuggestionCommon","getSourceAnchorAttributes","getAttributesFromLinkSlot","host","getHost","getBindings","getHeadingLevel","getState","smartSnippetQuestionsListState","getQuestionsList","getSnippetStyle","snippetStyle","hideDuringRender","store","waitUntilAppLoaded","renderRelatedQuestion","relatedQuestion","index","render","__decorate","InitializeBindings","BindStateToController"],"sources":["src/components/search/smart-snippets/atomic-smart-snippet-suggestions/atomic-smart-snippet-suggestions.pcss?tag=atomic-smart-snippet-suggestions&encapsulation=shadow","src/components/search/smart-snippets/atomic-smart-snippet-suggestions/atomic-smart-snippet-suggestions.tsx"],"sourcesContent":["@import '../../../common/smart-snippets/atomic-smart-snippet-suggestions/atomic-smart-snippet-suggestions.pcss';\n","import {\n  buildSmartSnippetQuestionsList,\n  SmartSnippetQuestionsList,\n  SmartSnippetQuestionsListState,\n  SmartSnippetRelatedQuestion,\n} from '@coveo/headless';\nimport {Component, Prop, State, Element} from '@stencil/core';\nimport {\n  InitializableComponent,\n  InitializeBindings,\n  BindStateToController,\n} from '../../../../utils/initialization-utils';\nimport {randomID} from '../../../../utils/utils';\nimport {getAttributesFromLinkSlot} from '../../../common/item-link/attributes-slot';\nimport {SmartSnippetSuggestionCommon} from '../../../common/smart-snippets/atomic-smart-snippet-suggestions/smart-snippet-suggestions-common';\nimport {Bindings} from '../../atomic-search-interface/atomic-search-interface';\n\n/**\n * The `atomic-smart-snippet-suggestions-suggestions` component displays an accordion of questions related to the query with their corresponding answers.\n *\n * You can style the snippets by inserting a template element like this:\n * ```html\n * <atomic-smart-snippet-suggestions>\n *   <template>\n *     <style>\n *       b {\n *         color: blue;\n *       }\n *     </style>\n *   </template>\n * </atomic-smart-snippet-suggestions>\n * ```\n *\n * @slot source-anchor-attributes - Lets you pass [attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#attributes) down to anchor elements, overriding other attributes.\n * To be used exclusively in anchor elements, such as: `<a slot=\"source-anchor-attributes\" target=\"_blank\"></a>`.\n *\n * @part container - The wrapper with a border around the entire component.\n * @part heading - The heading above the list of related questions.\n * @part questions - The list of related questions.\n * @part question-answer-expanded - An expanded related question.\n * @part question-answer-collapsed - A collapsed related question.\n * @part question-button-expanded - The button to collapse a related question.\n * @part question-button-collapsed - The button to expand a related question.\n * @part question-icon-expanded - The caret of an expanded related question.\n * @part question-icon-collapsed - The caret of a collapsed related question.\n * @part question-text-expanded - The title of an expanded related question.\n * @part question-text-collapsed - The title of a collapsed related question.\n * @part answer-and-source - The wrapper around the answer and source of a related question.\n * @part answer - The container displaying the full document excerpt of a related question's answer.\n * @part footer - The wrapper around the source of a related question's answer.\n * @part source-url - The URL to the document a related question's answer is extracted from.\n * @part source-title - The title of the document a related question's answer is extracted from.\n */\n@Component({\n  tag: 'atomic-smart-snippet-suggestions',\n  styleUrl: 'atomic-smart-snippet-suggestions.pcss',\n  shadow: true,\n})\nexport class AtomicSmartSnippetSuggestions implements InitializableComponent {\n  @InitializeBindings() public bindings!: Bindings;\n  public smartSnippetQuestionsList!: SmartSnippetQuestionsList;\n  @BindStateToController('smartSnippetQuestionsList')\n  @State()\n  public smartSnippetQuestionsListState!: SmartSnippetQuestionsListState;\n  public error!: Error;\n  @Element() public host!: HTMLElement;\n\n  private smartSnippetSuggestionListCommon!: SmartSnippetSuggestionCommon;\n\n  /**\n   * The [heading level](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements) to use for the \"People also ask\" heading over the snippets, from 1 to 5.\n   */\n  @Prop({reflect: true}) public headingLevel = 0;\n\n  /**\n   * Sets the style of the snippets.\n   *\n   * Example:\n   * ```ts\n   * smartSnippet.snippetStyle = `\n   *   b {\n   *     color: blue;\n   *   }\n   * `;\n   * ```\n   */\n  @Prop() snippetStyle?: string;\n\n  private id = randomID('atomic-smart-snippet-suggestions-');\n\n  public initialize() {\n    this.smartSnippetQuestionsList = buildSmartSnippetQuestionsList(\n      this.bindings.engine\n    );\n\n    this.smartSnippetSuggestionListCommon = new SmartSnippetSuggestionCommon({\n      id: this.id,\n      getSourceAnchorAttributes: () =>\n        getAttributesFromLinkSlot(this.host, 'source-anchor-attributes'),\n      getHost: () => this.host,\n      getBindings: () => this.bindings,\n      getHeadingLevel: () => this.headingLevel,\n      getState: () => this.smartSnippetQuestionsListState,\n      getQuestionsList: () => this.smartSnippetQuestionsList,\n      getSnippetStyle: () => this.snippetStyle,\n    });\n\n    this.smartSnippetSuggestionListCommon.hideDuringRender(true);\n    this.bindings.store.waitUntilAppLoaded(() => {\n      this.smartSnippetSuggestionListCommon.hideDuringRender(false);\n    });\n  }\n\n  public renderRelatedQuestion(\n    relatedQuestion: SmartSnippetRelatedQuestion,\n    index: number\n  ) {\n    return this.smartSnippetSuggestionListCommon.renderRelatedQuestion(\n      relatedQuestion,\n      index\n    );\n  }\n\n  public render() {\n    return this.smartSnippetSuggestionListCommon.render();\n  }\n}\n"],"mappings":"iaAAA,MAAMA,EAAmC,+5wCACzC,MAAAC,EAAeD,E,iXCyDFE,EAA6B,M,yBAcVC,KAAAC,aAAe,EAgBrCD,KAAAE,GAAKC,EAAS,qC,gEAhBuB,E,4BAkBtC,UAAAC,GACLJ,KAAKK,0BAA4BC,EAC/BN,KAAKO,SAASC,QAGhBR,KAAKS,iCAAmC,IAAIC,EAA6B,CACvER,GAAIF,KAAKE,GACTS,0BAA2B,IACzBC,EAA0BZ,KAAKa,KAAM,4BACvCC,QAAS,IAAMd,KAAKa,KACpBE,YAAa,IAAMf,KAAKO,SACxBS,gBAAiB,IAAMhB,KAAKC,aAC5BgB,SAAU,IAAMjB,KAAKkB,+BACrBC,iBAAkB,IAAMnB,KAAKK,0BAC7Be,gBAAiB,IAAMpB,KAAKqB,eAG9BrB,KAAKS,iCAAiCa,iBAAiB,MACvDtB,KAAKO,SAASgB,MAAMC,oBAAmB,KACrCxB,KAAKS,iCAAiCa,iBAAiB,MAAM,G,CAI1D,qBAAAG,CACLC,EACAC,GAEA,OAAO3B,KAAKS,iCAAiCgB,sBAC3CC,EACAC,E,CAIG,MAAAC,GACL,OAAO5B,KAAKS,iCAAiCmB,Q,6BAjElBC,EAAA,CAA5BC,K,+BAIMD,EAAA,CAFNE,EAAsB,8B"}