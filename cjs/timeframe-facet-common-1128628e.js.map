{"file":"timeframe-facet-common-1128628e.js","mappings":"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","names":["randomID","shouldDisplayInputForFacetRange","initializePopover","getFieldValueCaption","parseDate","h","FacetValueLink","FacetValueLabelHighlight","FacetValuesGroup","FacetHeader","Hidden","FacetPlaceholder","FacetContainer"],"sources":["src/components/common/facets/timeframe-facet-common.tsx"],"sourcesContent":["import {h, VNode} from '@stencil/core';\nimport {FocusTargetController} from '../../../utils/accessibility-utils';\nimport {parseDate} from '../../../utils/date-utils';\nimport {getFieldValueCaption} from '../../../utils/field-utils';\nimport {randomID} from '../../../utils/utils';\nimport {initializePopover} from '../../search/facets/atomic-popover/popover-type';\nimport {Hidden} from '../hidden';\nimport {AnyBindings} from '../interface/bindings';\nimport {\n  DateFacet,\n  DateFacetValue,\n  DateFilter,\n  DateRangeOptions,\n  DateRangeRequest,\n  FacetConditionsManager,\n  RangeFacetSortCriterion,\n  RelativeDate,\n  RelativeDatePeriod,\n  RelativeDateUnit,\n  SearchStatusState,\n} from '../types';\nimport {shouldDisplayInputForFacetRange} from './facet-common';\nimport {FacetInfo} from './facet-common-store';\nimport {FacetContainer} from './facet-container/facet-container';\nimport {FacetHeader} from './facet-header/facet-header';\nimport {FacetPlaceholder} from './facet-placeholder/facet-placeholder';\nimport {FacetValueLabelHighlight} from './facet-value-label-highlight/facet-value-label-highlight';\nimport {FacetValueLink} from './facet-value-link/facet-value-link';\nimport {FacetValuesGroup} from './facet-values-group/facet-values-group';\n\nexport interface Timeframe {\n  period: RelativeDatePeriod;\n  unit?: RelativeDateUnit;\n  amount?: number;\n  label?: string;\n}\n\ninterface TimeframeFacetCommonOptions {\n  facetId?: string;\n  host: HTMLElement;\n  bindings: AnyBindings;\n  label: string;\n  field: string;\n  headingLevel: number;\n  dependsOn: Record<string, string>;\n  withDatePicker: boolean;\n  setFacetId(id: string): string;\n  getSearchStatusState(): SearchStatusState;\n  buildDependenciesManager(): FacetConditionsManager;\n  deserializeRelativeDate(date: string): RelativeDate;\n  buildDateRange(config: DateRangeOptions): DateRangeRequest;\n  initializeFacetForDatePicker(): DateFacet;\n  initializeFacetForDateRange(values: DateRangeRequest[]): DateFacet;\n  initializeFilter(): DateFilter;\n  min?: string;\n  max?: string;\n  sortCriteria: RangeFacetSortCriterion;\n}\n\ninterface TimeframeFacetCommonRenderProps {\n  hasError: boolean;\n  firstSearchExecuted: boolean;\n  isCollapsed: boolean;\n  headerFocus: FocusTargetController;\n  onToggleCollapse: () => boolean;\n}\n\nexport class TimeframeFacetCommon {\n  private facetId?: string;\n  private facetForDatePicker?: DateFacet;\n  private facetForDateRange?: DateFacet;\n  private filter?: DateFilter;\n  private manualTimeframes: Timeframe[] = [];\n  private dependenciesManager?: FacetConditionsManager;\n\n  constructor(private props: TimeframeFacetCommonOptions) {\n    this.facetId = this.determineFacetId;\n    this.props.setFacetId(this.facetId);\n\n    this.manualTimeframes = this.getManualTimeframes();\n\n    // Initialize two facets: One that is actually used to display values for end users, which only exists\n    // if we need to display something to the end user (ie: timeframes > 0)\n\n    // A second facet is initialized only to verify the results count. It is never used to display results to end user.\n    // It serves as a way to determine if the input should be rendered or not, independent of the ranges configured in the component\n    if (this.manualTimeframes.length > 0) {\n      this.facetForDateRange = this.props.initializeFacetForDateRange(\n        this.currentValues\n      );\n    }\n\n    if (this.props.withDatePicker) {\n      this.facetForDatePicker = this.props.initializeFacetForDatePicker();\n      this.filter = this.props.initializeFilter();\n    }\n\n    if (this.facetForDateRange || this.filter) {\n      this.dependenciesManager = this.props.buildDependenciesManager();\n    }\n    this.registerFacetToStore();\n  }\n\n  private get determineFacetId() {\n    if (this.props.facetId) {\n      return this.props.facetId;\n    }\n\n    if (this.props.bindings.store.get('dateFacets')[this.props.field]) {\n      return randomID(`${this.props.field}_`);\n    }\n\n    return this.props.field;\n  }\n\n  private get enabled() {\n    return (\n      this.facetForDateRange?.state.enabled ??\n      this.filter?.state.enabled ??\n      true\n    );\n  }\n\n  private get valuesToRender() {\n    return (\n      this.facetForDateRange?.state.values.filter(\n        (value) => value.numberOfResults || value.state !== 'idle'\n      ) || []\n    );\n  }\n\n  private get shouldRenderValues() {\n    return !this.hasInputRange && !!this.valuesToRender.length;\n  }\n\n  private get shouldRenderFacet() {\n    return this.shouldRenderInput || this.shouldRenderValues;\n  }\n\n  private get shouldRenderInput() {\n    return shouldDisplayInputForFacetRange({\n      hasInput: this.props.withDatePicker,\n      hasInputRange: this.hasInputRange,\n      searchStatusState: this.props.getSearchStatusState(),\n      facetValues: this.facetForDatePicker?.state?.values || [],\n    });\n  }\n\n  private get hasValues() {\n    if (this.facetForDatePicker?.state.values.length) {\n      return true;\n    }\n\n    return !!this.valuesToRender.length;\n  }\n\n  private get numberOfSelectedValues() {\n    if (this.filter?.state?.range) {\n      return 1;\n    }\n\n    return (\n      this.facetForDateRange?.state.values.filter(\n        ({state}) => state === 'selected'\n      ).length || 0\n    );\n  }\n\n  private get hasInputRange() {\n    return !!this.filter?.state.range;\n  }\n\n  public get currentValues(): DateRangeRequest[] {\n    return this.manualTimeframes.map(({period, amount, unit}) =>\n      period === 'past'\n        ? this.props.buildDateRange({\n            start: {period, unit, amount},\n            end: {period: 'now'},\n          })\n        : this.props.buildDateRange({\n            start: {period: 'now'},\n            end: {period, unit, amount},\n          })\n    );\n  }\n\n  public disconnectedCallback() {\n    if (this.props.host.isConnected) {\n      return;\n    }\n    this.dependenciesManager?.stopWatching();\n  }\n\n  private get isHidden() {\n    return !this.shouldRenderFacet || !this.enabled;\n  }\n\n  private registerFacetToStore() {\n    const facetInfo: FacetInfo = {\n      label: () => this.props.bindings.i18n.t(this.props.label),\n      facetId: this.facetId!,\n      element: this.props.host,\n      isHidden: () => this.isHidden,\n    };\n\n    this.props.bindings.store.registerFacet('dateFacets', {\n      ...facetInfo,\n      format: (value) => this.formatFacetValue(value),\n    });\n\n    initializePopover(this.props.host, {\n      ...facetInfo,\n      hasValues: () => this.hasValues,\n      numberOfActiveValues: () => this.numberOfSelectedValues,\n    });\n\n    if (this.filter) {\n      this.props.bindings.store.state.dateFacets[this.filter.state.facetId] =\n        this.props.bindings.store.state.dateFacets[this.facetId!];\n    }\n  }\n\n  private getManualTimeframes(): Timeframe[] {\n    return Array.from(this.props.host.querySelectorAll('atomic-timeframe')).map(\n      ({label, amount, unit, period}) => ({\n        label,\n        amount,\n        unit,\n        period,\n      })\n    );\n  }\n\n  private formatFacetValue(facetValue: DateFacetValue) {\n    try {\n      const startDate = this.props.deserializeRelativeDate(facetValue.start);\n      const relativeDate =\n        startDate.period === 'past'\n          ? startDate\n          : this.props.deserializeRelativeDate(facetValue.end);\n      const timeframe = this.getManualTimeframes().find(\n        (timeframe) =>\n          timeframe.period === relativeDate.period &&\n          timeframe.unit === relativeDate.unit &&\n          timeframe.amount === relativeDate.amount\n      );\n\n      if (timeframe?.label) {\n        return getFieldValueCaption(\n          this.props.field,\n          timeframe.label,\n          this.props.bindings.i18n\n        );\n      }\n      return this.props.bindings.i18n.t(\n        `${relativeDate.period}-${relativeDate.unit}`,\n        {\n          count: relativeDate.amount,\n        }\n      );\n    } catch (error) {\n      return this.props.bindings.i18n.t('to', {\n        start: parseDate(facetValue.start).format('YYYY-MM-DD'),\n        end: parseDate(facetValue.end).format('YYYY-MM-DD'),\n      });\n    }\n  }\n  private renderValues() {\n    return this.renderValuesContainer(\n      this.valuesToRender.map((value) => this.renderValue(value))\n    );\n  }\n  private renderValue(facetValue: DateFacetValue) {\n    const displayValue = this.formatFacetValue(facetValue);\n    const isSelected = facetValue.state === 'selected';\n    const isExcluded = facetValue.state === 'excluded';\n    return (\n      <FacetValueLink\n        displayValue={displayValue}\n        isSelected={isSelected}\n        numberOfResults={facetValue.numberOfResults}\n        i18n={this.props.bindings.i18n}\n        onClick={() => this.facetForDateRange!.toggleSingleSelect(facetValue)}\n      >\n        <FacetValueLabelHighlight\n          displayValue={displayValue}\n          isSelected={isSelected}\n          isExcluded={isExcluded}\n        ></FacetValueLabelHighlight>\n      </FacetValueLink>\n    );\n  }\n\n  private renderValuesContainer(children: VNode[]) {\n    return (\n      <FacetValuesGroup\n        i18n={this.props.bindings.i18n}\n        label={this.props.label}\n      >\n        <ul class=\"mt-3\" part=\"values\">\n          {children}\n        </ul>\n      </FacetValuesGroup>\n    );\n  }\n\n  private renderHeader(\n    isCollapsed: boolean,\n    headerFocus: FocusTargetController,\n    onToggleCollapse: () => void\n  ) {\n    return (\n      <FacetHeader\n        i18n={this.props.bindings.i18n}\n        label={this.props.label}\n        onClearFilters={() => {\n          headerFocus.focusAfterSearch();\n          if (this.filter?.state.range) {\n            this.filter?.clear();\n            return;\n          }\n          this.facetForDateRange?.deselectAll();\n        }}\n        numberOfActiveValues={this.numberOfSelectedValues}\n        isCollapsed={isCollapsed}\n        headingLevel={this.props.headingLevel}\n        onToggleCollapse={onToggleCollapse}\n        headerRef={(el) => headerFocus.setTarget(el)}\n      ></FacetHeader>\n    );\n  }\n\n  private renderDateInput() {\n    return (\n      <atomic-facet-date-input\n        min={this.props.min}\n        max={this.props.max}\n        bindings={this.props.bindings}\n        label={this.props.label}\n        filter={this.filter!}\n        filterState={this.filter!.state!}\n      ></atomic-facet-date-input>\n    );\n  }\n\n  public render({\n    hasError,\n    firstSearchExecuted,\n    isCollapsed,\n    headerFocus,\n    onToggleCollapse,\n  }: TimeframeFacetCommonRenderProps) {\n    if (hasError || !this.enabled) {\n      return <Hidden></Hidden>;\n    }\n\n    if (!firstSearchExecuted) {\n      return (\n        <FacetPlaceholder\n          numberOfValues={this.currentValues.length}\n          isCollapsed={isCollapsed}\n        ></FacetPlaceholder>\n      );\n    }\n\n    if (!this.shouldRenderFacet) {\n      return <Hidden></Hidden>;\n    }\n\n    return (\n      <FacetContainer>\n        {this.renderHeader(isCollapsed, headerFocus, onToggleCollapse)}\n        {!isCollapsed && [\n          this.shouldRenderValues && this.renderValues(),\n          this.shouldRenderInput && this.renderDateInput(),\n        ]}\n      </FacetContainer>\n    );\n  }\n}\n"],"version":3}