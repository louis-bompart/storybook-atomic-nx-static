{"version":3,"names":["CarouselIndicator","numberOfImages","currentImage","navigateToImage","maxImagesBeforeAndAfter","h","part","class","Array","from","length","_","index","isActive","shouldDisplay","Math","max","min","isLastDisplayed","isFirstDisplayed","onClick","ImageCarousel","props","children","commonPaginationClasses","commonArrowClasses","renderPreviousButton","Button","style","ariaLabel","bindings","i18n","t","previousImage","icon","ArrowRight","renderNextButton","nextImage","renderIndicators","Fragment","atomicProductImageCss","AtomicProductImageStyle0","AtomicProductImage","this","useFallback","images","field","fallback","logWarning","message","engine","logger","warn","host","handleImageError","event","image","target","src","handleMissingFallback","remove","validateUrl","url","product","ec_name","componentWillLoad","validImages","imageUrls","filter","map","finalUrl","filterProtocol","alt","value","ProductTemplatesHelpers","getProductProperty","isArray","_b","_a","renderCurrentImage","onError","loading","render","imagesToRender","__decorate","InitializeBindings","ProductContext"],"sources":["src/components/common/image-carousel/image-carousel-indicators.tsx","src/components/common/image-carousel/image-carousel.tsx","src/components/commerce/product-template-components/atomic-product-image/atomic-product-image.pcss?tag=atomic-product-image&encapsulation=shadow","src/components/commerce/product-template-components/atomic-product-image/atomic-product-image.tsx"],"sourcesContent":["/* eslint-disable @cspell/spellchecker */\r\nimport {FunctionalComponent, h} from '@stencil/core';\r\n\r\ninterface CarouselIndicatorProps {\r\n  numberOfImages: number;\r\n  currentImage: number;\r\n  navigateToImage: (index: number) => void;\r\n  maxImagesBeforeAndAfter?: number;\r\n}\r\n\r\nconst CarouselIndicator: FunctionalComponent<CarouselIndicatorProps> = ({\r\n  numberOfImages,\r\n  currentImage: currentImage,\r\n  navigateToImage: navigateToImage,\r\n  maxImagesBeforeAndAfter = 2,\r\n}) => {\r\n  return (\r\n    <ul\r\n      part=\"indicators\"\r\n      class=\"mb-1 absolute flex items-center justify-center gap-2 mt-6 bottom-2 max-w-[80%]\"\r\n    >\r\n      {Array.from({length: numberOfImages}, (_, index) => {\r\n        const isActive = index === currentImage % numberOfImages;\r\n\r\n        const shouldDisplay =\r\n          index >= Math.max(0, currentImage - maxImagesBeforeAndAfter) &&\r\n          index <=\r\n            Math.min(\r\n              currentImage + maxImagesBeforeAndAfter,\r\n              numberOfImages - 1\r\n            );\r\n\r\n        const isLastDisplayed =\r\n          index ===\r\n            Math.min(\r\n              currentImage + maxImagesBeforeAndAfter,\r\n              numberOfImages - 1\r\n            ) && index < numberOfImages - 1;\r\n\r\n        const isFirstDisplayed =\r\n          index === Math.max(0, currentImage - maxImagesBeforeAndAfter) &&\r\n          index > 0;\r\n\r\n        return (\r\n          <li\r\n            part={`indicator ${isActive ? 'active-indicator' : ''}`}\r\n            class={`rounded-md shadow cursor-pointer hover:bg-primary-light transition-all duration-200 ease-in-out ${\r\n              isActive ? 'bg-primary' : 'bg-neutral'\r\n            } ${isLastDisplayed || isFirstDisplayed ? 'w-1 h-1 mobile-only:w-2 mobile-only:h-2 transform scale-75' : 'h-2 w-2 mobile-only:w-3 mobile-only:h-3 transform scale-100'} ${\r\n              shouldDisplay\r\n                ? 'opacity-80 pointer-events-auto'\r\n                : 'opacity-0 pointer-events-none hidden'\r\n            }`}\r\n            onClick={() => navigateToImage(index)}\r\n          ></li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default CarouselIndicator;\r\n","import {h, FunctionalComponent, Fragment} from '@stencil/core';\r\nimport {JSXBase} from '@stencil/core/internal';\r\nimport ArrowRight from '../../../images/arrow-right.svg';\r\nimport {Button} from '../button';\r\nimport {AnyBindings} from '../interface/bindings';\r\nimport CarouselIndicator from './image-carousel-indicators';\r\n\r\nexport interface CarouselProps {\r\n  bindings: AnyBindings;\r\n  previousImage(): void;\r\n  nextImage(): void;\r\n  navigateToImage(index: number): void;\r\n  numberOfImages: number;\r\n  currentImage: number;\r\n}\r\n\r\nexport const ImageCarousel: FunctionalComponent<\r\n  CarouselProps & JSXBase.HTMLAttributes<HTMLHeadingElement>\r\n> = (props, children) => {\r\n  const commonPaginationClasses =\r\n    'w-6 h-6 grid mobile-only:w-10 mobile-only:h-10 justify-center items-center z-1 group rounded-full duration-200 opacity-50 hover:opacity-100 focus:opacity-100 transition-opacity hover:shadow bottom-0 mb-1 absolute';\r\n  const commonArrowClasses =\r\n    'w-4 align-middle text-on-background group-hover:text-primary';\r\n\r\n  function renderPreviousButton() {\r\n    return (\r\n      <Button\r\n        style=\"text-primary\"\r\n        ariaLabel={props.bindings.i18n.t('previous')}\r\n        onClick={() => props.previousImage()}\r\n        part=\"previous-button\"\r\n        class={`${commonPaginationClasses} left-0 ml-1`}\r\n      >\r\n        <atomic-icon\r\n          icon={ArrowRight}\r\n          class={`${commonArrowClasses} rotate-180`}\r\n        ></atomic-icon>\r\n      </Button>\r\n    );\r\n  }\r\n\r\n  function renderNextButton() {\r\n    return (\r\n      <Button\r\n        style=\"text-primary\"\r\n        ariaLabel={props.bindings.i18n.t('next')}\r\n        onClick={() => props.nextImage()}\r\n        part=\"next-button\"\r\n        class={`${commonPaginationClasses} right-0 mr-1`}\r\n      >\r\n        <atomic-icon icon={ArrowRight} class={commonArrowClasses}></atomic-icon>\r\n      </Button>\r\n    );\r\n  }\r\n  function renderIndicators() {\r\n    return (\r\n      <CarouselIndicator\r\n        numberOfImages={props.numberOfImages}\r\n        currentImage={props.currentImage}\r\n        navigateToImage={props.navigateToImage}\r\n      />\r\n    );\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <div class=\"relative flex items-center justify-center w-full min-w-full\">\r\n        {renderPreviousButton()}\r\n        {children}\r\n        {renderNextButton()}\r\n        {renderIndicators()}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n","@import '../../../../global/global.pcss';\r\n@import '../../../common/item-list/styles/mixins.pcss';\r\n@import '../../../common/item-list/styles/placeholders.pcss';\r\n\r\n@mixin atomic-grid-clickable-elements;\r\n@mixin atomic-grid-display-common;\r\n\r\n:host {\r\n  display: grid;\r\n  place-items: center;\r\n  grid-template-rows: 100%;\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  img {\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: contain;\r\n  }\r\n}\r\n","import {Product, ProductTemplatesHelpers} from '@coveo/headless/commerce';\r\nimport {Component, h, Prop, Element, State, Method} from '@stencil/core';\r\nimport {Bindings} from '../../../../components';\r\nimport {\r\n  InitializeBindings,\r\n  InitializableComponent,\r\n} from '../../../../utils/initialization-utils';\r\nimport {filterProtocol} from '../../../../utils/xss-utils';\r\nimport {ImageCarousel} from '../../../common/image-carousel/image-carousel';\r\nimport {ProductContext} from '../product-template-decorators';\r\n\r\ntype Image = {\r\n  src: string;\r\n  alt: string;\r\n};\r\n\r\n/**\r\n * The `atomic-product-image` component renders an image from a product field.\r\n * @internal\r\n */\r\n@Component({\r\n  tag: 'atomic-product-image',\r\n  styleUrl: 'atomic-product-image.pcss',\r\n  shadow: true,\r\n})\r\nexport class AtomicProductImage implements InitializableComponent {\r\n  @InitializeBindings() public bindings!: Bindings;\r\n  @ProductContext() private product!: Product;\r\n  @Element() private host!: HTMLElement;\r\n  @State() private useFallback = false;\r\n  @State() private currentImage = 0;\r\n  @State() private images: Image[] = [];\r\n\r\n  public error!: Error;\r\n\r\n  /**\r\n   * The product field which the component should use. This will look for the field in the product object first, then in the product.additionalFields object.\r\n   */\r\n  @Prop({reflect: true}) field: string = 'ec_thumbnails';\r\n\r\n  /**\r\n   * An fallback image URL that will be used in case the specified image is not available or an error is encountered.\r\n   */\r\n  @Prop({reflect: true}) fallback: string =\r\n    // eslint-disable-next-line @cspell/spellchecker\r\n    'data:image/svg+xml,%3Csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"50\" height=\"50\" viewBox=\"0 0 50 50\"%3E%3Crect width=\"50\" height=\"50\" fill=\"none\" stroke=\"none\"%3E%3C/rect%3E%3C/svg%3E';\r\n\r\n  /**\r\n   * Moves to the previous image, when the carousel is activated.\r\n   */\r\n  @Method() public async previousImage() {\r\n    this.currentImage =\r\n      this.currentImage - 1 < 0\r\n        ? this.numberOfImages - 1\r\n        : this.currentImage - 1;\r\n  }\r\n\r\n  /**\r\n   * Moves to the next image, when the carousel is activated.\r\n   */\r\n  @Method() public async nextImage() {\r\n    this.currentImage = (this.currentImage + 1) % this.numberOfImages;\r\n  }\r\n\r\n  /**\r\n   * Navigates to the specified image index.\r\n   *\r\n   * @param index - The index of the image to navigate to.\r\n   */\r\n  @Method() public async navigateToImage(index: number) {\r\n    this.currentImage = index;\r\n  }\r\n\r\n  private logWarning(message: string) {\r\n    this.bindings.engine.logger.warn(message, this.host);\r\n  }\r\n\r\n  private handleImageError(event: Event) {\r\n    const image = event.target as HTMLImageElement;\r\n    const message = `The image url \"${image.src}\" is not valid or could not be loaded. You might want to add a \"fallback\" property.`;\r\n    if (this.fallback && image.src !== this.fallback) {\r\n      this.useFallback = true;\r\n      image.src = this.fallback;\r\n    } else if (image.src === this.fallback) {\r\n      this.logWarning('The fallback image failed to load.');\r\n    } else {\r\n      this.logWarning(message);\r\n    }\r\n  }\r\n\r\n  private handleMissingFallback(message: string) {\r\n    if (!this.fallback) {\r\n      this.logWarning(message);\r\n      this.host.remove();\r\n      return null;\r\n    }\r\n    return this.fallback;\r\n  }\r\n\r\n  private validateUrl(url: string | undefined) {\r\n    if (!url) {\r\n      const message = `Image for ${this.product.ec_name} is missing. Please review your indexation. You might want to add a \"fallback\" property.`;\r\n      return this.handleMissingFallback(message);\r\n    }\r\n\r\n    if (typeof url !== 'string') {\r\n      const message = `Expected \"${this.field}\" to be a text field. Please review your indexation. You might want to add a \"fallback\" property.`;\r\n      return this.handleMissingFallback(message);\r\n    }\r\n\r\n    return url;\r\n  }\r\n\r\n  componentWillLoad(): void {\r\n    const validImages = this.imageUrls.filter(\r\n      (image) => typeof image === 'string'\r\n    );\r\n\r\n    this.images = validImages.map((url, index) => {\r\n      const finalUrl = this.useFallback ? this.fallback : url;\r\n\r\n      this.validateUrl(finalUrl);\r\n\r\n      return {\r\n        src: filterProtocol(finalUrl),\r\n        alt: `Image ${index + 1} out of ${validImages?.length} for ${this.product.ec_name}`,\r\n      };\r\n    }) as Image[];\r\n  }\r\n\r\n  private get imageUrls() {\r\n    const value = ProductTemplatesHelpers.getProductProperty(\r\n      this.product,\r\n      this.field\r\n    );\r\n\r\n    return Array.isArray(value) ? value : [value];\r\n  }\r\n\r\n  private get numberOfImages() {\r\n    return this.images?.length ?? 0;\r\n  }\r\n\r\n  private renderCurrentImage(image: Image | null) {\r\n    if (image === null) {\r\n      return;\r\n    }\r\n\r\n    return (\r\n      <img\r\n        class=\"aspect-square\"\r\n        alt={image.alt}\r\n        src={image.src}\r\n        onError={(image) => this.handleImageError(image)}\r\n        loading=\"lazy\"\r\n      />\r\n    );\r\n  }\r\n\r\n  public render() {\r\n    const imagesToRender = this.images.map((image: Image, index: number) => {\r\n      return {\r\n        src: image.src,\r\n        alt: `Image ${index} out of ${this.images?.length} for ${this.product.ec_name}`,\r\n      };\r\n    });\r\n    if (this.images.length === 0) {\r\n      this.validateUrl(this.fallback);\r\n      return (\r\n        <img alt={'No image available'} src={this.fallback} loading=\"eager\" />\r\n      );\r\n    }\r\n    if (this.images.length === 1) {\r\n      return this.renderCurrentImage(imagesToRender[this.currentImage]);\r\n    }\r\n\r\n    return (\r\n      // TODO: handle small/icon image sizes better on mobile\r\n      <ImageCarousel\r\n        bindings={this.bindings}\r\n        currentImage={this.currentImage}\r\n        navigateToImage={(index) => this.navigateToImage(index)}\r\n        nextImage={() => this.nextImage()}\r\n        previousImage={() => this.previousImage()}\r\n        numberOfImages={this.numberOfImages}\r\n      >\r\n        {this.renderCurrentImage(this.images[this.currentImage])}\r\n      </ImageCarousel>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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"}