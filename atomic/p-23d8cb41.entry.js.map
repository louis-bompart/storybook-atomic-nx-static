{"version":3,"names":["atomicDidYouMeanCss","AtomicDidYouMeanStyle0","AtomicDidYouMean","this","automaticallyCorrectQuery","queryCorrectionMode","initialize","didYouMean","buildDidYouMean","bindings","engine","options","queryTrigger","buildQueryTrigger","withQuery","key","query","h","LocalizedString","params","part","renderQueryTriggerAutomaticallyCorrected","Fragment","class","queryTriggerState","newQuery","onClick","undo","_a","originalQuery","renderDidYouMeanAutomaticallyCorrected","didYouMeanState","wasCorrectedTo","renderDidYouMeanCorrection","applyCorrection","queryCorrection","correctedQuery","render","hasQueryCorrection","wasAutomaticallyCorrected","_b","wasQueryModified","Hidden","__decorate","InitializeBindings","BindStateToController"],"sources":["src/components/search/atomic-did-you-mean/atomic-did-you-mean.pcss?tag=atomic-did-you-mean&encapsulation=shadow","src/components/search/atomic-did-you-mean/atomic-did-you-mean.tsx"],"sourcesContent":["@import '../../../global/global.pcss';\r\n","import {\r\n  DidYouMean,\r\n  DidYouMeanState,\r\n  buildDidYouMean,\r\n  QueryTrigger,\r\n  buildQueryTrigger,\r\n  QueryTriggerState,\r\n} from '@coveo/headless';\r\nimport {Component, Fragment, h, Prop, State} from '@stencil/core';\r\nimport {\r\n  BindStateToController,\r\n  InitializableComponent,\r\n  InitializeBindings,\r\n} from '../../../utils/initialization-utils';\r\nimport {LocalizedString} from '../../../utils/jsx-utils';\r\nimport {Hidden} from '../../common/hidden';\r\nimport {Bindings} from '../atomic-search-interface/atomic-search-interface';\r\n\r\n/**\r\n * The `atomic-did-you-mean` component is responsible for handling query corrections. When a query returns no result but finds a possible query correction, the component either suggests the correction or automatically triggers a new query with the suggested term.\r\n *\r\n * @part no-results - The text displayed when there are no results.\r\n * @part auto-corrected - The text displayed for the automatically corrected query.\r\n * @part showing-results-for - The first paragraph of the text displayed when a query trigger changes a query.\r\n * @part search-instead-for - The second paragraph of the text displayed when a query trigger changes a query.\r\n * @part did-you-mean - The text displayed around the button to manually correct a query.\r\n * @part correction-btn - The button used to manually correct a query.\r\n * @part undo-btn - The button used to undo a query changed by a query trigger.\r\n * @part highlight - The query highlights.\r\n */\r\n@Component({\r\n  tag: 'atomic-did-you-mean',\r\n  styleUrl: 'atomic-did-you-mean.pcss',\r\n  shadow: true,\r\n})\r\nexport class AtomicDidYouMean implements InitializableComponent {\r\n  @InitializeBindings() public bindings!: Bindings;\r\n  private didYouMean!: DidYouMean;\r\n  protected queryTrigger!: QueryTrigger;\r\n\r\n  @BindStateToController('didYouMean')\r\n  @State()\r\n  private didYouMeanState?: DidYouMeanState;\r\n  @BindStateToController('queryTrigger')\r\n  @State()\r\n  private queryTriggerState?: QueryTriggerState;\r\n  @State() public error!: Error;\r\n\r\n  /**\r\n   * Whether to automatically apply corrections for queries that would otherwise return no results.\r\n   * When `automaticallyCorrectQuery` is `true`, the component automatically triggers a new query using the suggested term.\r\n   * When `automaticallyCorrectQuery` is `false`, the component returns the suggested term without triggering a new query.\r\n   *\r\n   * The default value is `true`.\r\n   */\r\n  @Prop({reflect: true}) public automaticallyCorrectQuery = true;\r\n\r\n  // TODO: V3: Default to `next`\r\n  /**\r\n   * Define which query correction system to use\r\n   *\r\n   * `legacy`: Query correction is powered by the legacy index system. This system relies on an algorithm using solely the index content to compute the suggested terms.\r\n   * `next`: Query correction is powered by a machine learning system, requiring a valid query suggestion model configured in your Coveo environment to function properly. This system relies on machine learning algorithms to compute the suggested terms.\r\n   *\r\n   * Default value is `legacy`. In the next major version of Atomic, the default value will be `next`.\r\n   */\r\n  @Prop({reflect: true})\r\n  public queryCorrectionMode: 'legacy' | 'next' = 'legacy';\r\n\r\n  public initialize() {\r\n    this.didYouMean = buildDidYouMean(this.bindings.engine, {\r\n      options: {\r\n        automaticallyCorrectQuery: this.automaticallyCorrectQuery,\r\n        queryCorrectionMode: this.queryCorrectionMode,\r\n      },\r\n    });\r\n    this.queryTrigger = buildQueryTrigger(this.bindings.engine);\r\n  }\r\n\r\n  private withQuery(\r\n    key:\r\n      | 'no-results-for-did-you-mean'\r\n      | 'query-auto-corrected-to'\r\n      | 'showing-results-for',\r\n    query: string\r\n  ) {\r\n    return (\r\n      <LocalizedString\r\n        bindings={this.bindings}\r\n        key={key}\r\n        params={{query: <b part=\"highlight\">{query}</b>}}\r\n      />\r\n    );\r\n  }\r\n\r\n  private renderQueryTriggerAutomaticallyCorrected() {\r\n    return (\r\n      <Fragment>\r\n        <p\r\n          class=\"text-on-background leading-6 text-lg\"\r\n          part=\"showing-results-for\"\r\n        >\r\n          {this.withQuery(\r\n            'showing-results-for',\r\n            this.queryTriggerState!.newQuery\r\n          )}\r\n        </p>\r\n        <p\r\n          class=\"text-on-background leading-5 text-base\"\r\n          part=\"search-instead-for\"\r\n        >\r\n          <LocalizedString\r\n            bindings={this.bindings}\r\n            key=\"search-instead-for\"\r\n            params={{\r\n              query: (\r\n                <button\r\n                  class=\"link py-1\"\r\n                  part=\"undo-btn\"\r\n                  onClick={() => this.queryTrigger.undo()}\r\n                >\r\n                  {this.queryTriggerState?.originalQuery}\r\n                </button>\r\n              ),\r\n            }}\r\n          />\r\n        </p>\r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n  private renderDidYouMeanAutomaticallyCorrected() {\r\n    return (\r\n      <Fragment>\r\n        <p class=\"text-on-background mb-1\" part=\"no-results\">\r\n          {this.withQuery(\r\n            'no-results-for-did-you-mean',\r\n            this.didYouMeanState!.originalQuery\r\n          )}\r\n        </p>\r\n        <p class=\"text-on-background\" part=\"auto-corrected\">\r\n          {this.withQuery(\r\n            'query-auto-corrected-to',\r\n            this.didYouMeanState!.wasCorrectedTo\r\n          )}\r\n        </p>\r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n  private renderDidYouMeanCorrection() {\r\n    return (\r\n      <p class=\"text-on-background\" part=\"did-you-mean\">\r\n        <LocalizedString\r\n          bindings={this.bindings}\r\n          key=\"did-you-mean\"\r\n          params={{\r\n            query: (\r\n              <button\r\n                class=\"link py-1\"\r\n                part=\"correction-btn\"\r\n                onClick={() => this.didYouMean.applyCorrection()}\r\n              >\r\n                {this.didYouMeanState!.queryCorrection.correctedQuery}\r\n              </button>\r\n            ),\r\n          }}\r\n        />\r\n      </p>\r\n    );\r\n  }\r\n\r\n  public render() {\r\n    if (this.didYouMeanState?.hasQueryCorrection) {\r\n      if (this.didYouMeanState.wasAutomaticallyCorrected) {\r\n        return this.renderDidYouMeanAutomaticallyCorrected();\r\n      }\r\n      return this.renderDidYouMeanCorrection();\r\n    }\r\n\r\n    if (this.queryTriggerState?.wasQueryModified) {\r\n      return this.renderQueryTriggerAutomaticallyCorrected();\r\n    }\r\n\r\n    return <Hidden></Hidden>;\r\n  }\r\n}\r\n"],"mappings":"sPAAA,MAAMA,EAAsB,w+tCAC5B,MAAAC,EAAeD,E,iXCkCFE,EAAgB,M,yBAoBGC,KAAAC,0BAA4B,KAYnDD,KAAAE,oBAAyC,S,oHAZU,K,yBAYV,Q,CAEzC,UAAAC,GACLH,KAAKI,WAAaC,EAAgBL,KAAKM,SAASC,OAAQ,CACtDC,QAAS,CACPP,0BAA2BD,KAAKC,0BAChCC,oBAAqBF,KAAKE,uBAG9BF,KAAKS,aAAeC,EAAkBV,KAAKM,SAASC,O,CAG9C,SAAAI,CACNC,EAIAC,GAEA,OACEC,EAACC,EAAe,CACdT,SAAUN,KAAKM,SACfM,IAAKA,EACLI,OAAQ,CAACH,MAAOC,EAAA,KAAGG,KAAK,aAAaJ,K,CAKnC,wCAAAK,G,MACN,OACEJ,EAACK,EAAQ,KACPL,EAAA,KACEM,MAAM,uCACNH,KAAK,uBAEJjB,KAAKW,UACJ,sBACAX,KAAKqB,kBAAmBC,WAG5BR,EAAA,KACEM,MAAM,yCACNH,KAAK,sBAELH,EAACC,EAAe,CACdT,SAAUN,KAAKM,SACfM,IAAI,qBACJI,OAAQ,CACNH,MACEC,EAAA,UACEM,MAAM,YACNH,KAAK,WACLM,QAAS,IAAMvB,KAAKS,aAAae,SAEhCC,EAAAzB,KAAKqB,qBAAiB,MAAAI,SAAA,SAAAA,EAAEC,mB,CAUjC,sCAAAC,GACN,OACEb,EAACK,EAAQ,KACPL,EAAA,KAAGM,MAAM,0BAA0BH,KAAK,cACrCjB,KAAKW,UACJ,8BACAX,KAAK4B,gBAAiBF,gBAG1BZ,EAAA,KAAGM,MAAM,qBAAqBH,KAAK,kBAChCjB,KAAKW,UACJ,0BACAX,KAAK4B,gBAAiBC,iB,CAOxB,0BAAAC,GACN,OACEhB,EAAA,KAAGM,MAAM,qBAAqBH,KAAK,gBACjCH,EAACC,EAAe,CACdT,SAAUN,KAAKM,SACfM,IAAI,eACJI,OAAQ,CACNH,MACEC,EAAA,UACEM,MAAM,YACNH,KAAK,iBACLM,QAAS,IAAMvB,KAAKI,WAAW2B,mBAE9B/B,KAAK4B,gBAAiBI,gBAAgBC,mB,CAS9C,MAAAC,G,QACL,IAAIT,EAAAzB,KAAK4B,mBAAe,MAAAH,SAAA,SAAAA,EAAEU,mBAAoB,CAC5C,GAAInC,KAAK4B,gBAAgBQ,0BAA2B,CAClD,OAAOpC,KAAK2B,wC,CAEd,OAAO3B,KAAK8B,4B,CAGd,IAAIO,EAAArC,KAAKqB,qBAAiB,MAAAgB,SAAA,SAAAA,EAAEC,iBAAkB,CAC5C,OAAOtC,KAAKkB,0C,CAGd,OAAOJ,EAACyB,EAAM,K,GApJaC,EAAA,CAA5BC,K,+BAMOD,EAAA,CAFPE,EAAsB,e,sCAKfF,EAAA,CAFPE,EAAsB,iB"}