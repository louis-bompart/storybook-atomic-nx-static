{"file":"smart-snippet-suggestions-common-ca58df58.js","mappings":"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","names":["ArrowRight"],"sources":["src/components/common/smart-snippets/atomic-smart-snippet-suggestions/smart-snippet-suggestions-common.tsx"],"sourcesContent":["import {\n  SmartSnippetRelatedQuestion,\n  SmartSnippetQuestionsList,\n  SmartSnippetQuestionsListState,\n} from '@coveo/headless';\nimport {h} from '@stencil/core';\nimport ArrowDown from '../../../../images/arrow-down.svg';\nimport ArrowRight from '../../../../images/arrow-right.svg';\nimport {Button} from '../../button';\nimport {Heading} from '../../heading';\nimport {Hidden} from '../../hidden';\nimport {AnyBindings} from '../../interface/bindings';\n\ninterface SmartSnippetSuggestionProps {\n  id: string;\n  getSourceAnchorAttributes?: () => Attr[] | undefined;\n  getHost: () => HTMLElement;\n  getBindings: () => AnyBindings;\n  getHeadingLevel: () => number;\n  getState: () => SmartSnippetQuestionsListState;\n  getQuestionsList: () => SmartSnippetQuestionsList;\n  getSnippetStyle: () => string | undefined;\n}\n\nexport class SmartSnippetSuggestionCommon {\n  constructor(private props: SmartSnippetSuggestionProps) {}\n\n  private get style() {\n    const styleTag = this.props\n      .getHost()\n      .querySelector('template')\n      ?.content.querySelector('style');\n    if (!styleTag) {\n      return this.props.getSnippetStyle();\n    }\n    return styleTag.innerHTML;\n  }\n\n  private getRelatedQuestionId(index: number) {\n    return `${this.props.id}-${index}`;\n  }\n\n  private getQuestionPart(\n    prefix: string,\n    relatedQuestion: SmartSnippetRelatedQuestion\n  ) {\n    return prefix + (relatedQuestion.expanded ? '-expanded' : '-collapsed');\n  }\n\n  private toggleQuestion(relatedQuestion: SmartSnippetRelatedQuestion) {\n    if (relatedQuestion.expanded) {\n      this.props.getQuestionsList().collapse(relatedQuestion.questionAnswerId);\n    } else {\n      this.props.getQuestionsList().expand(relatedQuestion.questionAnswerId);\n    }\n  }\n\n  private renderQuestion(\n    relatedQuestion: SmartSnippetRelatedQuestion,\n    index: number\n  ) {\n    const headingLevel = this.props.getHeadingLevel();\n    return (\n      <Button\n        style=\"text-neutral\"\n        part={this.getQuestionPart('question-button', relatedQuestion)}\n        onClick={() => this.toggleQuestion(relatedQuestion)}\n        class=\"flex items-center px-4\"\n        ariaExpanded={`${relatedQuestion.expanded}`}\n        ariaControls={this.getRelatedQuestionId(index)}\n      >\n        <atomic-icon\n          icon={relatedQuestion.expanded ? ArrowDown : ArrowRight}\n          part={this.getQuestionPart('question-icon', relatedQuestion)}\n          class=\"w-2.5 mr-3 stroke-[1.25]\"\n        ></atomic-icon>\n        <Heading\n          level={headingLevel ? headingLevel + 1 : headingLevel}\n          class=\"text-left text-xl font-bold py-4\"\n          part={this.getQuestionPart('question-text', relatedQuestion)}\n        >\n          {relatedQuestion.question}\n        </Heading>\n      </Button>\n    );\n  }\n\n  private renderContent(relatedQuestion: SmartSnippetRelatedQuestion) {\n    return (\n      <atomic-smart-snippet-answer\n        exportparts=\"answer\"\n        htmlContent={relatedQuestion.answer}\n        innerStyle={this.style}\n        onSelectInlineLink={(e) =>\n          this.props\n            .getQuestionsList()\n            .selectInlineLink(relatedQuestion.questionAnswerId, e.detail)\n        }\n        onBeginDelayedSelectInlineLink={(e) =>\n          this.props\n            .getQuestionsList()\n            .beginDelayedSelectInlineLink(\n              relatedQuestion.questionAnswerId,\n              e.detail\n            )\n        }\n        onCancelPendingSelectInlineLink={(e) =>\n          this.props\n            .getQuestionsList()\n            .cancelPendingSelectInlineLink(\n              relatedQuestion.questionAnswerId,\n              e.detail\n            )\n        }\n      ></atomic-smart-snippet-answer>\n    );\n  }\n\n  private renderSource(relatedQuestion: SmartSnippetRelatedQuestion) {\n    const {source} = relatedQuestion;\n    if (!source) {\n      return [];\n    }\n    return (\n      <footer\n        part=\"footer\"\n        aria-label={this.props.getBindings().i18n.t('smart-snippet-source')}\n      >\n        {\n          <atomic-smart-snippet-source\n            source={source}\n            anchorAttributes={this.props.getSourceAnchorAttributes?.()}\n            onSelectSource={() =>\n              this.props\n                .getQuestionsList()\n                .selectSource(relatedQuestion.questionAnswerId)\n            }\n            onBeginDelayedSelectSource={() =>\n              this.props\n                .getQuestionsList()\n                .beginDelayedSelectSource(relatedQuestion.questionAnswerId)\n            }\n            onCancelPendingSelectSource={() =>\n              this.props\n                .getQuestionsList()\n                .cancelPendingSelectSource(relatedQuestion.questionAnswerId)\n            }\n          ></atomic-smart-snippet-source>\n        }\n      </footer>\n    );\n  }\n\n  public hideDuringRender(shouldHide: boolean) {\n    const host = this.props.getHost();\n    host.style.visibility = shouldHide ? 'hidden' : '';\n    host.style.position = shouldHide ? 'absolute' : '';\n  }\n\n  public renderRelatedQuestion(\n    relatedQuestion: SmartSnippetRelatedQuestion,\n    index: number\n  ) {\n    return (\n      <li\n        key={relatedQuestion.questionAnswerId}\n        part={this.getQuestionPart('question-answer', relatedQuestion)}\n        class=\"flex flex-col\"\n      >\n        <article class=\"contents\">\n          {this.renderQuestion(relatedQuestion, index)}\n          {relatedQuestion.expanded && (\n            <div\n              part=\"answer-and-source\"\n              class=\"pl-10 pr-6 pb-6\"\n              id={this.getRelatedQuestionId(index)}\n            >\n              {this.renderContent(relatedQuestion)}\n              {this.renderSource(relatedQuestion)}\n            </div>\n          )}\n        </article>\n      </li>\n    );\n  }\n\n  public render() {\n    if (!this.props.getState().questions.length) {\n      return <Hidden></Hidden>;\n    }\n\n    return (\n      <aside\n        part=\"container\"\n        class=\"bg-background border border-neutral rounded-lg text-on-background overflow-hidden\"\n      >\n        <Heading\n          level={this.props.getHeadingLevel()}\n          part=\"heading\"\n          class=\"px-6 py-4 text-xl leading-8 border-b border-neutral\"\n        >\n          {this.props.getBindings().i18n.t('smart-snippet-people-also-ask')}\n        </Heading>\n        <ul part=\"questions\" class=\"divide-neutral divide-y\">\n          {this.props\n            .getState()\n            .questions.map((relatedQuestion, i) =>\n              this.renderRelatedQuestion(relatedQuestion, i)\n            )}\n        </ul>\n      </aside>\n    );\n  }\n}\n"],"version":3}