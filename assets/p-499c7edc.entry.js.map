{"version":3,"names":["atomicRefineModalCss","AtomicRefineModalStyle0","AtomicRefineModal","this","isOpen","collapseFacetsAfter","watchEnabled","host","querySelector","append","createFacetSlot","initialize","breadcrumbManager","buildBreadcrumbManager","bindings","engine","sort","buildSort","querySummary","buildQuerySummary","searchStatus","buildSearchStatus","facetManager","buildFacetManager","divSlot","document","createElement","setAttribute","addFacetColumnStyling","facets","store","getFacetElements","atomicSearchInterface","closest","facetsSection","findSection","horizontalFacetsSection","triagedFacets","triageFacetsByParents","horizontalFacetsSectionFacets","facetsSectionFacets","orphanedFacets","map","facetsArray","sortByDocumentPosition","sortedFacets","visibleFacets","invisibleFacets","sortFacetVisibility","getAllFacets","visibleFacetsClone","cloneFacets","invisibleFacetsClone","generator","makeAutomaticFacetGenerator","updateCollapseFacetsDependingOnFacetsVisibility","length","facet","i","classList","remove","popoverClass","isRefineModalFacet","clone","cloneNode","isCollapsed","_a","state","automaticFacetSet","desiredCount","_b","el","style","display","flexDirection","gap","options","sortOptions","select","e","composedPath","option","find","expression","value","sortBy","criteria","buildOption","label","h","selected","isSortedBy","i18n","t","renderSort","Fragment","part","class","onChange","icon","SortIcon","renderFilters","hasFacetElements","hasAutomaticFacets","set","undefined","breadcrumbManagerState","hasBreadcrumbs","Button","onClick","deselectAll","text","name","renderBody","slot","render","RefineModalCommon","key","onClose","title","querySummaryState","openButton","componentDidLoad","__decorate","InitializeBindings","BindStateToController"],"sources":["src/components/search/atomic-refine-modal/atomic-refine-modal.pcss?tag=atomic-refine-modal&encapsulation=shadow","src/components/search/atomic-refine-modal/atomic-refine-modal.tsx"],"sourcesContent":["@import '../../common/refine-modal/refine-modal-common.pcss';\r\n\r\n:host {\r\n  position: absolute;\r\n}\r\n\r\n/**\r\n * @prop --atomic-refine-modal-facet-margin: The spacing between the modal's facets.\r\n */\r\nselect:hover + div,\r\nselect:focus-visible + div {\r\n  @apply text-primary-light;\r\n}\r\n","import {\r\n  BreadcrumbManager,\r\n  buildBreadcrumbManager,\r\n  BreadcrumbManagerState,\r\n  QuerySummary,\r\n  QuerySummaryState,\r\n  FacetManagerState,\r\n  Sort,\r\n  buildSort,\r\n  SortState,\r\n  buildQuerySummary,\r\n  buildSearchStatus,\r\n  SearchStatus,\r\n  FacetManager,\r\n  buildFacetManager,\r\n} from '@coveo/headless';\r\nimport {\r\n  Component,\r\n  h,\r\n  State,\r\n  Prop,\r\n  Element,\r\n  Watch,\r\n  Fragment,\r\n} from '@stencil/core';\r\nimport SortIcon from '../../../images/sort.svg';\r\nimport {\r\n  BindStateToController,\r\n  InitializableComponent,\r\n  InitializeBindings,\r\n} from '../../../utils/initialization-utils';\r\nimport {sortByDocumentPosition} from '../../../utils/utils';\r\nimport {findSection} from '../../common/atomic-layout-section/sections';\r\nimport {Button} from '../../common/button';\r\nimport {\r\n  BaseFacetElement,\r\n  sortFacetVisibility,\r\n  triageFacetsByParents,\r\n  collapseFacetsAfter,\r\n} from '../../common/facets/facet-common';\r\nimport {isRefineModalFacet} from '../../common/interface/store';\r\nimport {RefineModalCommon} from '../../common/refine-modal/refine-modal-common';\r\nimport {Bindings} from '../atomic-search-interface/atomic-search-interface';\r\nimport {SortDropdownOption} from '../atomic-search-interface/store';\r\nimport {popoverClass} from '../facets/atomic-popover/popover-type';\r\n\r\n/**\r\n * The `atomic-refine-modal` is automatically created as a child of the `atomic-search-interface` when the `atomic-refine-toggle` is initialized.\r\n *\r\n * When the modal is opened, the class `atomic-modal-opened` is added to the interface element and the body, allowing further customization.\r\n *\r\n * @part container - The modal's outermost container.\r\n * @part header-wrapper - The wrapper around the header.\r\n * @part header - The header of the modal, containing the title.\r\n * @part title - The title of the modal.\r\n * @part close-button - The button in the header that closes the modal.\r\n * @part close-icon - The icon of the close button.\r\n * @part header-ruler - The horizontal ruler underneath the header.\r\n * @part body-wrapper - The wrapper around the body.\r\n * @part body - The body of the modal, between the header and the footer.\r\n * @part content - The wrapper around the content inside the body of the modal.\r\n * @part section-title - The title for each section.\r\n * @part section-sort-title - The title for the sort section.\r\n * @part section-filters-title - The title for the filters section.\r\n * @part select-wrapper - The wrapper around the select element, used to position the icon.\r\n * @part select - The `<select>` element of the dropdown list.\r\n * @part select-icon-wrapper - The wrapper around the sort icon that's used to align it.\r\n * @part select-icon - The select dropdown's sort icon.\r\n * @part filter-section - The section containing facets and the \"filters\" title.\r\n * @part filter-clear-all - The button that resets all actively selected facet values.\r\n * @part footer-wrapper - The wrapper with a shadow or background color around the footer.\r\n * @part footer - The footer of the modal.\r\n * @part footer-content - The wrapper around the content inside the footer of the modal, containing the button to view results.\r\n * @part footer-button - The button in the footer that closes the modal.\r\n * @part footer-button-text - The text inside the button in the footer that closes the modal.\r\n * @part footer-button-count - The count inside the button in the footer that closes the modal.\r\n */\r\n@Component({\r\n  tag: 'atomic-refine-modal',\r\n  styleUrl: 'atomic-refine-modal.pcss',\r\n  shadow: true,\r\n})\r\nexport class AtomicRefineModal implements InitializableComponent {\r\n  private sort!: Sort;\r\n  private breadcrumbManager!: BreadcrumbManager;\r\n  public querySummary!: QuerySummary;\r\n  public searchStatus!: SearchStatus;\r\n  public facetManager!: FacetManager;\r\n  @InitializeBindings() public bindings!: Bindings;\r\n  @Element() public host!: HTMLElement;\r\n\r\n  @BindStateToController('querySummary')\r\n  @State()\r\n  public querySummaryState!: QuerySummaryState;\r\n  @BindStateToController('breadcrumbManager')\r\n  @State()\r\n  private breadcrumbManagerState!: BreadcrumbManagerState;\r\n  @BindStateToController('facetManager')\r\n  @State()\r\n  public facetManagerState!: FacetManagerState;\r\n  @State() @BindStateToController('sort') public sortState!: SortState;\r\n  @State() public error!: Error;\r\n\r\n  @Prop({mutable: true}) openButton?: HTMLElement;\r\n\r\n  @Prop({reflect: true, mutable: true}) isOpen = false;\r\n\r\n  /**\r\n   * The number of expanded facets inside the refine modal.\r\n   * Remaining facets are automatically collapsed.\r\n   *\r\n   * Using the value `0` collapses all facets.\r\n   */\r\n  @Prop({reflect: true}) public collapseFacetsAfter = 0;\r\n\r\n  @Watch('isOpen')\r\n  watchEnabled(isOpen: boolean) {\r\n    if (isOpen) {\r\n      if (this.host.querySelector('div[slot=\"facets\"]')) {\r\n        return;\r\n      }\r\n\r\n      this.host.append(this.createFacetSlot());\r\n    }\r\n  }\r\n\r\n  public initialize() {\r\n    this.breadcrumbManager = buildBreadcrumbManager(this.bindings.engine);\r\n    this.sort = buildSort(this.bindings.engine);\r\n    this.querySummary = buildQuerySummary(this.bindings.engine);\r\n    this.searchStatus = buildSearchStatus(this.bindings.engine);\r\n    this.facetManager = buildFacetManager(this.bindings.engine);\r\n    this.watchEnabled(this.isOpen);\r\n  }\r\n\r\n  private createFacetSlot(): HTMLDivElement {\r\n    const divSlot = document.createElement('div');\r\n    divSlot.setAttribute('slot', 'facets');\r\n    this.addFacetColumnStyling(divSlot);\r\n\r\n    const facets = this.bindings.store.getFacetElements() as BaseFacetElement[];\r\n    const atomicSearchInterface = this.host.closest('atomic-search-interface')!;\r\n    const facetsSection = findSection(atomicSearchInterface, 'facets');\r\n    const horizontalFacetsSection = findSection(\r\n      atomicSearchInterface,\r\n      'horizontal-facets'\r\n    );\r\n    const triagedFacets = triageFacetsByParents(\r\n      facets,\r\n      horizontalFacetsSection,\r\n      facetsSection\r\n    );\r\n    const [horizontalFacetsSectionFacets, facetsSectionFacets, orphanedFacets] =\r\n      triagedFacets.map((facetsArray) =>\r\n        facetsArray.sort(sortByDocumentPosition)\r\n      );\r\n    const sortedFacets = [\r\n      ...facetsSectionFacets,\r\n      ...horizontalFacetsSectionFacets,\r\n      ...orphanedFacets,\r\n    ];\r\n\r\n    const {visibleFacets, invisibleFacets} = sortFacetVisibility(\r\n      sortedFacets,\r\n      this.bindings.store.getAllFacets()\r\n    );\r\n\r\n    const visibleFacetsClone = this.cloneFacets(visibleFacets);\r\n    const invisibleFacetsClone = this.cloneFacets(invisibleFacets);\r\n\r\n    collapseFacetsAfter(visibleFacetsClone, this.collapseFacetsAfter);\r\n\r\n    divSlot.append(...visibleFacetsClone);\r\n    divSlot.append(...invisibleFacetsClone);\r\n\r\n    const generator = this.makeAutomaticFacetGenerator();\r\n    if (generator) {\r\n      generator.updateCollapseFacetsDependingOnFacetsVisibility(\r\n        this.collapseFacetsAfter,\r\n        visibleFacets.length\r\n      );\r\n      divSlot.append(generator);\r\n    }\r\n\r\n    return divSlot;\r\n  }\r\n\r\n  private cloneFacets(facets: BaseFacetElement[]): BaseFacetElement[] {\r\n    return facets.map((facet, i) => {\r\n      facet.classList.remove(popoverClass);\r\n      facet.setAttribute(isRefineModalFacet, '');\r\n      const clone = facet.cloneNode(true) as BaseFacetElement;\r\n      clone.isCollapsed =\r\n        this.collapseFacetsAfter === -1\r\n          ? false\r\n          : i + 1 > this.collapseFacetsAfter;\r\n      return clone;\r\n    });\r\n  }\r\n\r\n  private makeAutomaticFacetGenerator() {\r\n    if (!this.bindings.engine.state.automaticFacetSet?.desiredCount) {\r\n      return;\r\n    }\r\n    const generator = document.createElement(\r\n      'atomic-automatic-facet-generator'\r\n    );\r\n\r\n    generator.setAttribute(\r\n      'desired-count',\r\n      `${this.bindings.engine.state.automaticFacetSet?.desiredCount}`\r\n    );\r\n    this.addFacetColumnStyling(generator);\r\n\r\n    return generator;\r\n  }\r\n\r\n  private addFacetColumnStyling(el: HTMLElement) {\r\n    el.style.display = 'flex';\r\n    el.style.flexDirection = 'column';\r\n    el.style.gap = 'var(--atomic-refine-modal-facet-margin, 20px)';\r\n  }\r\n\r\n  private get options() {\r\n    return this.bindings.store.state.sortOptions;\r\n  }\r\n\r\n  private select(e: Event) {\r\n    const select = e.composedPath()[0] as HTMLSelectElement;\r\n    const option = this.options.find(\r\n      (option) => option.expression === select.value\r\n    );\r\n    option && this.sort.sortBy(option.criteria);\r\n  }\r\n\r\n  private buildOption({expression, criteria, label}: SortDropdownOption) {\r\n    return (\r\n      <option value={expression} selected={this.sort.isSortedBy(criteria)}>\r\n        {this.bindings.i18n.t(label)}\r\n      </option>\r\n    );\r\n  }\r\n\r\n  private renderSort() {\r\n    if (!this.options.length) {\r\n      return;\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <h1\r\n          part=\"section-title section-sort-title\"\r\n          class=\"text-2xl font-bold truncate mb-3\"\r\n        >\r\n          {this.bindings.i18n.t('sort')}\r\n        </h1>\r\n        <div part=\"select-wrapper\" class=\"relative\">\r\n          <select\r\n            class=\"btn-outline-neutral w-full cursor-pointer text-lg font-bold grow appearance-none rounded-lg px-6 py-5\"\r\n            part=\"select\"\r\n            aria-label={this.bindings.i18n.t('sort-by')}\r\n            onChange={(option) => this.select(option)}\r\n          >\r\n            {this.options.map((option) => this.buildOption(option))}\r\n          </select>\r\n          <div\r\n            part=\"select-icon-wrapper\"\r\n            class=\"absolute pointer-events-none top-0 bottom-0 right-0 flex justify-center items-center pr-6\"\r\n          >\r\n            <atomic-icon\r\n              part=\"select-icon\"\r\n              icon={SortIcon}\r\n              class=\"w-6 h-6\"\r\n            ></atomic-icon>\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n  private renderFilters() {\r\n    const hasFacetElements = this.bindings.store.getFacetElements().length > 0;\r\n    const hasAutomaticFacets =\r\n      this.bindings.engine.state.automaticFacetSet?.set !== undefined;\r\n\r\n    if (!hasFacetElements && !hasAutomaticFacets) {\r\n      return;\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <div\r\n          part=\"filter-section\"\r\n          class=\"w-full flex justify-between mt-8 mb-3\"\r\n        >\r\n          <h1\r\n            part=\"section-title section-filters-title\"\r\n            class=\"text-2xl font-bold truncate\"\r\n          >\r\n            {this.bindings.i18n.t('filters')}\r\n          </h1>\r\n          {this.breadcrumbManagerState.hasBreadcrumbs && (\r\n            <Button\r\n              onClick={() => this.breadcrumbManager.deselectAll()}\r\n              style=\"text-primary\"\r\n              text={this.bindings.i18n.t('clear')}\r\n              class=\"px-2 py-1\"\r\n              part=\"filter-clear-all\"\r\n            ></Button>\r\n          )}\r\n        </div>\r\n        <slot name=\"facets\"></slot>\r\n        <slot name=\"automatic-facets\"></slot>\r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n  private renderBody() {\r\n    return (\r\n      <aside\r\n        part=\"content\"\r\n        slot=\"body\"\r\n        class=\"flex flex-col w-full adjust-for-scroll-bar\"\r\n      >\r\n        {this.renderSort()}\r\n        {this.renderFilters()}\r\n      </aside>\r\n    );\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <RefineModalCommon\r\n        bindings={this.bindings}\r\n        host={this.host}\r\n        isOpen={this.isOpen}\r\n        onClose={() => (this.isOpen = false)}\r\n        title={this.bindings.i18n.t('sort-and-filter')}\r\n        querySummaryState={this.querySummaryState}\r\n        openButton={this.openButton}\r\n      >\r\n        {this.renderBody()}\r\n      </RefineModalCommon>\r\n    );\r\n  }\r\n\r\n  public componentDidLoad() {\r\n    this.host.style.display = '';\r\n  }\r\n}\r\n"],"mappings":"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"}