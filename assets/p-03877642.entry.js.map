{"version":3,"names":["AtomicCommerceText","this","strings","value","bindings","i18n","t","count","connectedCallback","error","Error","render","__decorate","InitializeBindings"],"sources":["src/components/commerce/atomic-commerce-text/atomic-commerce-text.tsx"],"sourcesContent":["import {Component, Prop, State} from '@stencil/core';\r\nimport {\r\n  InitializableComponent,\r\n  InitializeBindings,\r\n} from '../../../utils/initialization-utils';\r\nimport {CommerceBindings} from '../atomic-commerce-interface/atomic-commerce-interface';\r\n\r\n/**\r\n * @internal\r\n * The `atomic-commerce-text` component leverages the I18n translation module through the atomic-commerce-interface.\r\n */\r\n@Component({\r\n  tag: 'atomic-commerce-text',\r\n  shadow: true,\r\n})\r\nexport class AtomicCommerceText\r\n  implements InitializableComponent<CommerceBindings>\r\n{\r\n  @InitializeBindings() public bindings!: CommerceBindings;\r\n\r\n  private strings = {\r\n    value: () =>\r\n      this.bindings.i18n.t(this.value, {\r\n        count: this.count,\r\n      }),\r\n  };\r\n  @State() public error!: Error;\r\n\r\n  /**\r\n   * The string key value.\r\n   */\r\n  @Prop({reflect: true}) public value!: string;\r\n  /**\r\n   * The count value used for plurals.\r\n   */\r\n  @Prop({reflect: true}) public count?: number;\r\n\r\n  public connectedCallback() {\r\n    if (!this.value) {\r\n      this.error = new Error('The \"value\" attribute must be defined.');\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    return this.strings.value();\r\n  }\r\n}\r\n"],"mappings":"igBAeaA,EAAkB,M,yBAKrBC,KAAAC,QAAU,CAChBC,MAAO,IACLF,KAAKG,SAASC,KAAKC,EAAEL,KAAKE,MAAO,CAC/BI,MAAON,KAAKM,S,+DAcX,iBAAAC,GACL,IAAKP,KAAKE,MAAO,CACfF,KAAKQ,MAAQ,IAAIC,MAAM,yC,EAIpB,MAAAC,GACL,OAAOV,KAAKC,QAAQC,O,GA1BOS,EAAA,CAA5BC,K"}