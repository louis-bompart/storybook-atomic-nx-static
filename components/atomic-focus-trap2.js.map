{"file":"atomic-focus-trap2.js","mappings":"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","names":[],"sources":["src/components/common/atomic-focus-trap.tsx"],"sourcesContent":["import {Component, Element, Listen, Prop, Watch} from '@stencil/core';\nimport {getFirstFocusableDescendant} from '../../utils/accessibility-utils';\nimport {\n  isAncestorOf,\n  defer,\n  getFocusedElement,\n  getParent,\n} from '../../utils/utils';\n\n/**\n * @internal\n */\n@Component({\n  tag: 'atomic-focus-trap',\n  shadow: false,\n})\nexport class AtomicFocusTrap {\n  @Element() private host!: HTMLElement;\n  @Prop() public active = false;\n  /**\n   * The source to focus when the focus trap becomes inactive.\n   */\n  @Prop({mutable: true}) source?: HTMLElement;\n  /**\n   * The container to hide from the tabindex and accessibility DOM when the focus trap is inactive.\n   */\n  @Prop({mutable: true}) container?: HTMLElement;\n\n  /**\n   * Whether the element should be hidden from screen readers & not interactive with the tab, when not active.\n   */\n  @Prop() shouldHideSelf = true;\n\n  /**\n   * The common ancestor of the focus trap and of all the elements that should be inaccessible when inside the focus trap.\n   */\n  @Prop() scope = document.body;\n\n  private readonly hiddenElements: Element[] = [];\n\n  hide(element: Element) {\n    // aria-hidden -> already hidden\n    // aria-live or atomic-aria-live -> must not be hidden otherwise it won't announce dynamic changes in the live region\n    if (\n      element.hasAttribute('aria-hidden') ||\n      element.hasAttribute('aria-live') ||\n      element.tagName.toLowerCase() === 'atomic-aria-live'\n    ) {\n      return;\n    }\n    element.setAttribute('aria-hidden', 'true');\n    this.hiddenElements.push(element);\n  }\n\n  showAll() {\n    let el: Element | undefined;\n    while ((el = this.hiddenElements.pop())) {\n      el.removeAttribute('aria-hidden');\n    }\n  }\n\n  hideSiblingsRecursively(element: Element | ShadowRoot) {\n    const parent = getParent(element);\n    if (parent === null) {\n      return;\n    }\n    Array.from(parent.children as HTMLCollection).forEach((sibling) => {\n      if (sibling === element) {\n        return;\n      }\n      if (\n        sibling.assignedSlot &&\n        isAncestorOf(this.host, sibling.assignedSlot)\n      ) {\n        return;\n      }\n      this.hide(sibling);\n    });\n    if (parent !== this.scope) {\n      this.hideSiblingsRecursively(parent);\n    }\n  }\n\n  showSelf() {\n    this.parentToHide.removeAttribute('aria-hidden');\n    this.parentToHide.removeAttribute('tabindex');\n  }\n\n  hideSelf() {\n    if (this.shouldHideSelf) {\n      this.parentToHide.setAttribute('aria-hidden', 'true');\n      this.parentToHide.setAttribute('tabindex', '-1');\n    }\n  }\n\n  async onDeactivated(isInitialLoad: boolean) {\n    this.showAll();\n    if (!isInitialLoad) {\n      await defer();\n      this.source?.focus();\n    }\n    this.hideSelf();\n  }\n\n  async onActivated(isInitialLoad: boolean) {\n    this.showSelf();\n    if (!isInitialLoad) {\n      await defer();\n      getFirstFocusableDescendant(this.host)?.focus();\n    }\n    this.hideSiblingsRecursively(this.host);\n  }\n\n  @Watch('active')\n  async activeChanged(active: boolean, wasActive: boolean) {\n    const isInitialLoad = active === wasActive;\n    if (active) {\n      await this.onActivated(isInitialLoad);\n    } else {\n      await this.onDeactivated(isInitialLoad);\n    }\n  }\n\n  @Listen('focusin', {target: 'document'})\n  onFocusChanged(e: FocusEvent) {\n    const elementIsPartOfHost = (focusedElement: Element | ShadowRoot) =>\n      isAncestorOf(this.host, focusedElement);\n\n    const elementIsPartOfScope = (focusedElement: Element | ShadowRoot) =>\n      isAncestorOf(this.scope, focusedElement);\n\n    if (!e.target || !this.active) {\n      return;\n    }\n\n    const focusedElement = getFocusedElement();\n\n    if (\n      focusedElement &&\n      (elementIsPartOfHost(focusedElement) ||\n        !elementIsPartOfScope(focusedElement))\n    ) {\n      return;\n    }\n\n    getFirstFocusableDescendant(this.host)?.focus();\n  }\n\n  connectedCallback() {\n    this.activeChanged(this.active, this.active);\n  }\n\n  disconnectedCallback() {\n    this.showAll();\n  }\n\n  private get parentToHide() {\n    return this.container ?? this.host;\n  }\n}\n"],"version":3}