{"file":"atomic-insight-query-error.js","mappings":";;;;;;;;AAAA,MAAM,0BAA0B,GAAG,u+tCAAu+tC,CAAC;AAC3guC,sCAAe,0BAA0B;;;;;;;;;;;;MC8B5B,gBAAgB;;;;;QAUlB,iBAAY,GAAG,KAAK,CAAC;;;4BAAN,KAAK;;IAKtB,UAAU;QACf,IAAI,CAAC,UAAU,GAAGA,EAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;KACzD;IAEM,MAAM;QACX,MAAM,EAAC,QAAQ,EAAE,KAAK,EAAC,GAAG,IAAI,CAAC,eAAe,CAAC;QAC/C,MAAM,EACJ,QAAQ,EAAE,EACR,IAAI,EACJ,MAAM,EAAE,EACN,KAAK,EAAE,EACL,aAAa,EAAE,EAAC,cAAc,EAAE,WAAW,EAAC,GAC7C,GACF,GACF,GACF,GAAG,IAAI,CAAC;QACT,IAAI,QAAQ,EAAE;YACZ,IAAI,CAAC,WAAW,GAAG,2BAA2B,CAC5C,IAAI,EACJ,cAAc,EACd,WAAW,EACX,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,IAAI,CACZ,CAAC;SACH;QACD,QACE,EAAC,eAAe,qDAAC,QAAQ,EAAE,QAAQ,IACjC,EAAC,mBAAmB,uDAClB,EAAC,cAAc,qDAAC,SAAS,EAAE,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,IAAI,GAAI,EAC1C,EAAC,eAAe,qDAAC,IAAI,EAAE,IAAI,EAAE,cAAc,EAAE,cAAc,GAAI,EAC/D,EAAC,qBAAqB,qDACpB,IAAI,EAAE,IAAI,EACV,cAAc,EAAE,cAAc,EAC9B,GAAG,EAAE,WAAW,GAChB,EACF,EAAC,kBAAkB,qDACjB,IAAI,EAAE,EAAC,cAAc,IAAC,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,IAAI,GAAI,EAC5D,UAAU,EAAE,OAAO,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,EAC1D,IAAI,EAAE,IAAI,GACV,EACF,EAAC,iBAAiB,qDAAC,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,YAAY,GAAI,CACxC,CACN,EAClB;KACH;;;;;;;AAvD4B;IAA5B,kBAAkB,EAAE;kDAAmC;AAKhD;IAFP,qBAAqB,CAAC,YAAY,CAAC;yDAEM;AAKhC;IADT,cAAc,CAAC,aAAa,CAAC;qDACC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":["buildQueryError"],"sources":["src/components/insight/atomic-insight-query-error/atomic-insight-query-error.pcss?tag=atomic-insight-query-error&encapsulation=shadow","src/components/insight/atomic-insight-query-error/atomic-insight-query-error.tsx"],"sourcesContent":["@import '../../../global/global.pcss';\n","import {\n  QueryError,\n  QueryErrorState,\n  buildQueryError,\n} from '@coveo/headless/insight';\nimport {Component, h, State} from '@stencil/core';\nimport {AriaLiveRegion} from '../../../utils/accessibility-utils';\nimport {\n  BindStateToController,\n  InitializableComponent,\n  InitializeBindings,\n} from '../../../utils/initialization-utils';\nimport {QueryErrorContainer} from '../../common/query-error/container';\nimport {QueryErrorDescription} from '../../common/query-error/description';\nimport {QueryErrorDetails} from '../../common/query-error/details';\nimport {QueryErrorGuard} from '../../common/query-error/guard';\nimport {QueryErrorIcon} from '../../common/query-error/icon';\nimport {QueryErrorLink} from '../../common/query-error/link';\nimport {QueryErrorShowMore} from '../../common/query-error/show-more';\nimport {QueryErrorTitle} from '../../common/query-error/title';\nimport {getAriaMessageFromErrorType} from '../../common/query-error/utils';\nimport {InsightBindings} from '../atomic-insight-interface/atomic-insight-interface';\n\n/**\n * @internal\n */\n@Component({\n  tag: 'atomic-insight-query-error',\n  styleUrl: 'atomic-insight-query-error.pcss',\n  shadow: true,\n})\nexport class AtomicQueryError\n  implements InitializableComponent<InsightBindings>\n{\n  @InitializeBindings() public bindings!: InsightBindings;\n  public queryError!: QueryError;\n\n  @BindStateToController('queryError')\n  @State()\n  private queryErrorState!: QueryErrorState;\n  @State() public error!: Error;\n  @State() showMoreInfo = false;\n\n  @AriaLiveRegion('query-error')\n  protected ariaMessage!: string;\n\n  public initialize() {\n    this.queryError = buildQueryError(this.bindings.engine);\n  }\n\n  public render() {\n    const {hasError, error} = this.queryErrorState;\n    const {\n      bindings: {\n        i18n,\n        engine: {\n          state: {\n            configuration: {organizationId, platformUrl},\n          },\n        },\n      },\n    } = this;\n    if (hasError) {\n      this.ariaMessage = getAriaMessageFromErrorType(\n        i18n,\n        organizationId,\n        platformUrl,\n        error?.type\n      );\n    }\n    return (\n      <QueryErrorGuard hasError={hasError}>\n        <QueryErrorContainer>\n          <QueryErrorIcon errorType={error?.type} />\n          <QueryErrorTitle i18n={i18n} organizationId={organizationId} />\n          <QueryErrorDescription\n            i18n={i18n}\n            organizationId={organizationId}\n            url={platformUrl}\n          />\n          <QueryErrorShowMore\n            link={<QueryErrorLink i18n={i18n} errorType={error?.type} />}\n            onShowMore={() => (this.showMoreInfo = !this.showMoreInfo)}\n            i18n={i18n}\n          />\n          <QueryErrorDetails error={error} show={this.showMoreInfo} />\n        </QueryErrorContainer>\n      </QueryErrorGuard>\n    );\n  }\n}\n"],"version":3}