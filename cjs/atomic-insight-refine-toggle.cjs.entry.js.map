{"file":"atomic-insight-refine-toggle.entry.cjs.js","mappings":";;;;;;;;;;;;;;;;AAAA,MAAM,4BAA4B,GAAG,u+tCAAu+tC,CAAC;AAC7guC,wCAAe,4BAA4B;;;;;;;;;;;;MCwB9B,yBAAyB;;;;;;;IAmBpC,IAAY,mBAAmB;QAC7B,OAAO;YACL,GAAG,IAAI,CAAC,sBAAsB,CAAC,gBAAgB;YAC/C,GAAG,IAAI,CAAC,sBAAsB,CAAC,wBAAwB;YACvD,GAAG,IAAI,CAAC,sBAAsB,CAAC,uBAAuB;YACtD,GAAG,IAAI,CAAC,sBAAsB,CAAC,oBAAoB;YACnD,GAAG,IAAI,CAAC,sBAAsB,CAAC,uBAAuB;SACvD,CAAC,MAAM,CAAC;KACV;IAEM,UAAU;QACf,IAAI,CAAC,iBAAiB,GAAGA,eAA6B,CACpD,IAAI,CAAC,QAAQ,CAAC,MAAM,CACrB,CAAC;QACF,IAAI,CAAC,YAAY,GAAGC,eAAwB,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;KACpE;IAEO,WAAW;QACjB,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC;KAChD;IAEO,SAAS;;QACf,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,OAAO;SACR;QAED,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,6BAA6B,CAAC,CAAC;QACtE,MAAA,IAAI,CAAC,IAAI,CAAC,aAAa,0CAAE,qBAAqB,CAC5C,aAAa,EACb,IAAI,CAAC,QAAQ,CACd,CAAC;QACF,IAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC;KAC3C;IAEM,MAAM;QACX,QACEC,QAACC,qBAAU,qDACT,UAAU,EAAC,uBAAuB,EAClC,KAAK,EAAC,iBAAiB,EACvB,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,EACtC,IAAI,EAAEC,iBAAU,EAChB,QAAQ,EACN,CAAC,IAAI,CAAC,iBAAiB,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAEjE,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,EACvC,OAAO,EAAE;gBACP,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,kBAAkB,CAAC;oBACrC,IAAI,CAAC,WAAW,EAAE,CAAC;iBACpB,CAAC,CAAC;aACJ,EACD,SAAS,EAAE,CAAC,MAA0B;gBACpC,IAAI,CAAC,MAAM,EAAE;oBACX,OAAO;iBACR;gBACD,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC;gBACxB,IAAI,CAAC,SAAS,EAAE,CAAC;aAClB,EACD,KAAK,EACH,IAAI,CAAC,sBAAsB,CAAC,cAAc,IACxCF,sBAAO,IAAI,CAAC,mBAAmB,CAAC,QAAQ,EAAE,CAAQ,IAChD,SAAS,GAEf,EACF;KACH;;;AAlF4B;IAA5BG,sCAAkB,EAAE;2DAAmC;AAOhD;IAFPC,yCAAqB,CAAC,mBAAmB,CAAC;yEAEoB;AAIvD;IAFPA,yCAAqB,CAAC,cAAc,CAAC;oEAEe;;;;;","names":["buildInsightBreadcrumbManager","buildInsightSearchStatus","h","IconButton","FilterIcon","InitializeBindings","BindStateToController"],"sources":["src/components/insight/atomic-insight-refine-toggle/atomic-insight-refine-toggle.pcss?tag=atomic-insight-refine-toggle&encapsulation=shadow","src/components/insight/atomic-insight-refine-toggle/atomic-insight-refine-toggle.tsx"],"sourcesContent":["@import '../../../global/global.pcss';\r\n","import {Component, h, State, Element} from '@stencil/core';\r\nimport {\r\n  buildInsightBreadcrumbManager,\r\n  buildInsightSearchStatus,\r\n  InsightBreadcrumbManager,\r\n  InsightBreadcrumbManagerState,\r\n  InsightSearchStatus,\r\n  InsightSearchStatusState,\r\n} from '..';\r\nimport FilterIcon from '../../../images/filter.svg';\r\nimport {\r\n  InitializeBindings,\r\n  BindStateToController,\r\n} from '../../../utils/initialization-utils';\r\nimport {IconButton} from '../../common/iconButton';\r\nimport {InsightBindings} from '../atomic-insight-interface/atomic-insight-interface';\r\n\r\n/**\r\n * @internal\r\n */\r\n@Component({\r\n  tag: 'atomic-insight-refine-toggle',\r\n  styleUrl: 'atomic-insight-refine-toggle.pcss',\r\n  shadow: true,\r\n})\r\nexport class AtomicInsightRefineToggle {\r\n  @InitializeBindings() public bindings!: InsightBindings;\r\n  @Element() public host!: HTMLElement;\r\n\r\n  @State() public error!: Error;\r\n\r\n  @BindStateToController('breadcrumbManager')\r\n  @State()\r\n  private breadcrumbManagerState!: InsightBreadcrumbManagerState;\r\n\r\n  @BindStateToController('searchStatus')\r\n  @State()\r\n  private searchStatusState!: InsightSearchStatusState;\r\n\r\n  public breadcrumbManager!: InsightBreadcrumbManager;\r\n  public searchStatus!: InsightSearchStatus;\r\n  private modalRef?: HTMLAtomicInsightRefineModalElement;\r\n  private buttonRef?: HTMLButtonElement;\r\n\r\n  private get numberOfBreadcrumbs(): number {\r\n    return [\r\n      ...this.breadcrumbManagerState.facetBreadcrumbs,\r\n      ...this.breadcrumbManagerState.categoryFacetBreadcrumbs,\r\n      ...this.breadcrumbManagerState.numericFacetBreadcrumbs,\r\n      ...this.breadcrumbManagerState.dateFacetBreadcrumbs,\r\n      ...this.breadcrumbManagerState.staticFilterBreadcrumbs,\r\n    ].length;\r\n  }\r\n\r\n  public initialize() {\r\n    this.breadcrumbManager = buildInsightBreadcrumbManager(\r\n      this.bindings.engine\r\n    );\r\n    this.searchStatus = buildInsightSearchStatus(this.bindings.engine);\r\n  }\r\n\r\n  private enableModal() {\r\n    this.modalRef && (this.modalRef.isOpen = true);\r\n  }\r\n\r\n  private loadModal() {\r\n    if (this.modalRef) {\r\n      return;\r\n    }\r\n\r\n    this.modalRef = document.createElement('atomic-insight-refine-modal');\r\n    this.host.parentElement?.insertAdjacentElement(\r\n      'beforebegin',\r\n      this.modalRef\r\n    );\r\n    this.modalRef.openButton = this.buttonRef;\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <IconButton\r\n        partPrefix=\"insight-refine-toggle\"\r\n        style=\"outline-neutral\"\r\n        title={this.bindings.i18n.t('filters')}\r\n        icon={FilterIcon}\r\n        disabled={\r\n          !this.searchStatusState.hasResults && !this.numberOfBreadcrumbs\r\n        }\r\n        ariaLabel={this.bindings.i18n.t('sort')}\r\n        onClick={() => {\r\n          this.bindings.store.waitUntilAppLoaded(() => {\r\n            this.enableModal();\r\n          });\r\n        }}\r\n        buttonRef={(button?: HTMLButtonElement) => {\r\n          if (!button) {\r\n            return;\r\n          }\r\n          this.buttonRef = button;\r\n          this.loadModal();\r\n        }}\r\n        badge={\r\n          this.breadcrumbManagerState.hasBreadcrumbs ? (\r\n            <slot>{this.numberOfBreadcrumbs.toString()}</slot>\r\n          ) : undefined\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n"],"version":3}