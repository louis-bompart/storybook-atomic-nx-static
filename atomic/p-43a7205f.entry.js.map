{"version":3,"names":["AtomicHtml","this","sanitize","connectedCallback","value","error","Error","render","h","key","innerHTML","DOMPurify","__decorate","InitializeBindings"],"sources":["src/components/search/atomic-html/atomic-html.tsx"],"sourcesContent":["import {Component, Prop, State, h} from '@stencil/core';\r\nimport DOMPurify from 'dompurify';\r\nimport {\r\n  InitializableComponent,\r\n  InitializeBindings,\r\n} from '../../../utils/initialization-utils';\r\nimport {Bindings} from '../atomic-search-interface/atomic-search-interface';\r\n\r\n/**\r\n * The `atomic-html` component renders the HTML value of a string.\r\n *\r\n * There is an inherent XSS security concern associated with the usage of this component.\r\n *\r\n * Use only with values for which you are certain the content is harmless.\r\n */\r\n@Component({\r\n  tag: 'atomic-html',\r\n  shadow: true,\r\n})\r\nexport class AtomicHtml implements InitializableComponent {\r\n  @InitializeBindings() public bindings!: Bindings;\r\n  @State() public error!: Error;\r\n\r\n  /**\r\n   * The string value containing HTML to display;\r\n   */\r\n  @Prop({reflect: false}) public value!: string;\r\n  /**\r\n   * Specify if the content should be sanitized, using [`DOMPurify`](https://www.npmjs.com/package/dompurify).\r\n   */\r\n  @Prop({reflect: true}) public sanitize = true;\r\n\r\n  public connectedCallback() {\r\n    if (!this.value) {\r\n      this.error = new Error('The \"value\" attribute must be defined.');\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <span\r\n        innerHTML={this.sanitize ? DOMPurify.sanitize(this.value) : this.value}\r\n      ></span>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"ohBAmBaA,EAAU,M,yBAWSC,KAAAC,SAAW,K,wDAAA,I,CAElC,iBAAAC,GACL,IAAKF,KAAKG,MAAO,CACfH,KAAKI,MAAQ,IAAIC,MAAM,yC,EAIpB,MAAAC,GACL,OACEC,EAAA,QAAAC,IAAA,2CACEC,UAAWT,KAAKC,SAAWS,EAAUT,SAASD,KAAKG,OAASH,KAAKG,O,GArB1CQ,EAAA,CAA5BC,K"}