{"version":3,"names":["atomicIpxRefineModalCss","AtomicIpxRefineModalStyle0","AtomicIPXRefineModal","this","isOpen","collapseFacetsAfter","watchEnabled","host","querySelector","append","getClonedFacetElements","bindings","store","getFacetElements","interfaceElement","initialize","breadcrumbManager","buildBreadcrumbManager","engine","querySummary","buildQuerySummary","renderHeader","h","class","breadcrumbManagerState","hasBreadcrumbs","Button","onClick","deselectAll","style","text","i18n","t","renderBody","length","Hidden","slot","name","render","Host","key","RefineModalCommon","onClose","querySummaryState","title","openButton","boundary","scope","componentDidLoad","display","__decorate","InitializeBindings","BindStateToController"],"sources":["src/components/ipx/atomic-ipx-refine-modal/atomic-ipx-refine-modal.pcss?tag=atomic-ipx-refine-modal&encapsulation=shadow","src/components/ipx/atomic-ipx-refine-modal/atomic-ipx-refine-modal.tsx"],"sourcesContent":["@import '../../common/refine-modal/refine-modal-common.pcss';\n\n:host::part(container) {\n  @apply rounded;\n}\n","import {\n  BreadcrumbManager,\n  BreadcrumbManagerState,\n  buildBreadcrumbManager,\n  buildQuerySummary,\n  QuerySummary,\n  QuerySummaryState,\n} from '@coveo/headless';\nimport {Component, h, State, Prop, Element, Watch, Host} from '@stencil/core';\nimport {\n  BindStateToController,\n  InitializableComponent,\n  InitializeBindings,\n} from '../../../utils/initialization-utils';\nimport {Button} from '../../common/button';\nimport {Hidden} from '../../common/hidden';\nimport {\n  getClonedFacetElements,\n  RefineModalCommon,\n} from '../../common/refine-modal/refine-modal-common';\nimport {Bindings} from '../../search/atomic-search-interface/atomic-search-interface';\n\n/**\n * @internal\n */\n@Component({\n  tag: 'atomic-ipx-refine-modal',\n  styleUrl: 'atomic-ipx-refine-modal.pcss',\n  shadow: true,\n})\nexport class AtomicIPXRefineModal implements InitializableComponent {\n  @InitializeBindings() public bindings!: Bindings;\n  @Element() public host!: HTMLElement;\n\n  @BindStateToController('querySummary')\n  @State()\n  public querySummaryState!: QuerySummaryState;\n\n  @BindStateToController('breadcrumbManager')\n  @State()\n  public breadcrumbManagerState!: BreadcrumbManagerState;\n\n  @State()\n  public error!: Error;\n\n  @State()\n  public interfaceDimensions?: DOMRect;\n\n  @Prop({mutable: true}) openButton?: HTMLElement;\n\n  @Prop({reflect: true, mutable: true}) isOpen = false;\n\n  /**\n   * The number of expanded facets inside the refine modal.\n   * Remaining facets are automatically collapsed.\n   *\n   * Using the value `0` collapses all facets.\n   */\n  @Prop({reflect: true}) public collapseFacetsAfter = 0;\n\n  private breadcrumbManager!: BreadcrumbManager;\n  public querySummary!: QuerySummary;\n\n  @Watch('isOpen')\n  watchEnabled(isOpen: boolean) {\n    if (isOpen) {\n      if (!this.host.querySelector('div[slot=\"facets\"]')) {\n        this.host.append(\n          getClonedFacetElements(\n            this.bindings.store.getFacetElements(),\n            this.collapseFacetsAfter,\n            this.bindings.interfaceElement\n          )\n        );\n      }\n    }\n  }\n\n  public initialize() {\n    this.breadcrumbManager = buildBreadcrumbManager(this.bindings.engine);\n    this.querySummary = buildQuerySummary(this.bindings.engine);\n  }\n\n  private renderHeader() {\n    return (\n      <div class=\"w-full flex justify-between mb-3\">\n        {this.breadcrumbManagerState.hasBreadcrumbs && (\n          <Button\n            onClick={() => this.breadcrumbManager.deselectAll()}\n            style=\"text-primary\"\n            text={this.bindings.i18n.t('clear-all-filters')}\n            class=\"px-2 py-1\"\n          ></Button>\n        )}\n      </div>\n    );\n  }\n\n  private renderBody() {\n    if (!this.bindings.store.getFacetElements().length) {\n      return <Hidden></Hidden>;\n    }\n\n    return (\n      <aside slot=\"body\" class=\"flex flex-col w-full adjust-for-scroll-bar\">\n        {this.renderHeader()}\n        <slot name=\"facets\"></slot>\n      </aside>\n    );\n  }\n\n  public render() {\n    return (\n      <Host>\n        <RefineModalCommon\n          bindings={this.bindings}\n          host={this.host}\n          isOpen={this.isOpen}\n          onClose={() => (this.isOpen = false)}\n          querySummaryState={this.querySummaryState}\n          title={this.bindings.i18n.t('filters')}\n          openButton={this.openButton}\n          boundary=\"element\"\n          scope={this.bindings.interfaceElement}\n        >\n          {this.renderBody()}\n        </RefineModalCommon>\n      </Host>\n    );\n  }\n\n  public componentDidLoad() {\n    this.host.style.display = '';\n  }\n}\n"],"mappings":"2ZAAA,MAAMA,EAA0B,8muCAChC,MAAAC,EAAeD,E,iXC6BFE,EAAoB,M,yBAoBOC,KAAAC,OAAS,MAQjBD,KAAAE,oBAAsB,E,qKARL,M,yBAQK,C,CAMpD,YAAAC,CAAaF,GACX,GAAIA,EAAQ,CACV,IAAKD,KAAKI,KAAKC,cAAc,sBAAuB,CAClDL,KAAKI,KAAKE,OACRC,EACEP,KAAKQ,SAASC,MAAMC,mBACpBV,KAAKE,oBACLF,KAAKQ,SAASG,kB,GAOjB,UAAAC,GACLZ,KAAKa,kBAAoBC,EAAuBd,KAAKQ,SAASO,QAC9Df,KAAKgB,aAAeC,EAAkBjB,KAAKQ,SAASO,O,CAG9C,YAAAG,GACN,OACEC,EAAA,OAAKC,MAAM,oCACRpB,KAAKqB,uBAAuBC,gBAC3BH,EAACI,EAAM,CACLC,QAAS,IAAMxB,KAAKa,kBAAkBY,cACtCC,MAAM,eACNC,KAAM3B,KAAKQ,SAASoB,KAAKC,EAAE,qBAC3BT,MAAM,c,CAOR,UAAAU,GACN,IAAK9B,KAAKQ,SAASC,MAAMC,mBAAmBqB,OAAQ,CAClD,OAAOZ,EAACa,EAAM,K,CAGhB,OACEb,EAAA,SAAOc,KAAK,OAAOb,MAAM,8CACtBpB,KAAKkB,eACNC,EAAA,QAAMe,KAAK,W,CAKV,MAAAC,GACL,OACEhB,EAACiB,EAAI,CAAAC,IAAA,4CACHlB,EAACmB,EAAiB,CAAAD,IAAA,2CAChB7B,SAAUR,KAAKQ,SACfJ,KAAMJ,KAAKI,KACXH,OAAQD,KAAKC,OACbsC,QAAS,IAAOvC,KAAKC,OAAS,MAC9BuC,kBAAmBxC,KAAKwC,kBACxBC,MAAOzC,KAAKQ,SAASoB,KAAKC,EAAE,WAC5Ba,WAAY1C,KAAK0C,WACjBC,SAAS,UACTC,MAAO5C,KAAKQ,SAASG,kBAEpBX,KAAK8B,c,CAMP,gBAAAe,GACL7C,KAAKI,KAAKsB,MAAMoB,QAAU,E,mFArGCC,EAAA,CAA5BC,K,+BAKMD,EAAA,CAFNE,EAAsB,iB,wCAMhBF,EAAA,CAFNE,EAAsB,sB"}