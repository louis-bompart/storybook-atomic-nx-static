{"version":3,"names":["atomicGeneratedAnswerFeedbackModalCss","AtomicGeneratedAnswerFeedbackModalStyle0","AtomicGeneratedAnswerFeedbackModal","this","isOpen","feedbackSubmitted","formId","randomID","updateBreakpoints","once","host","watchToggleOpen","generatedAnswer","openFeedbackModal","setIsOpen","close","detailsInputRef","value","currentAnswer","undefined","closeFeedbackModal","setCurrentAnswer","answer","sendFeedback","sendDetailedFeedback","feedbackSent","emit","renderHeader","h","slot","part","class","bindings","i18n","t","IconButton","style","onClick","icon","CloseIcon","partPrefix","ariaLabel","renderOptions","options","map","id","localeKey","correspondingAnswer","key","type","name","checked","onChange","e","_a","currentTarget","required","htmlFor","renderDetails","ref","detailsInput","rows","placeholder","renderBody","onSubmit","preventDefault","Success","renderFooter","Button","form","render","fullscreen","container","exportparts","__decorate","InitializeBindings"],"sources":["src/components/common/generated-answer/atomic-generated-answer-feedback/atomic-generated-answer-feedback-modal.pcss?tag=atomic-generated-answer-feedback-modal&encapsulation=shadow","src/components/common/generated-answer/atomic-generated-answer-feedback/atomic-generated-answer-feedback-modal.tsx"],"sourcesContent":["@import '../../../../global/global.pcss';\r\n","import {GeneratedAnswer, GeneratedAnswerFeedback} from '@coveo/headless';\r\nimport {\r\n  Component,\r\n  State,\r\n  h,\r\n  Watch,\r\n  Prop,\r\n  Element,\r\n  Event,\r\n  EventEmitter,\r\n} from '@stencil/core/internal';\r\nimport {AnyBindings} from '../../../../components';\r\nimport CloseIcon from '../../../../images/close.svg';\r\nimport Success from '../../../../images/success.svg';\r\nimport {\r\n  InitializableComponent,\r\n  InitializeBindings,\r\n} from '../../../../utils/initialization-utils';\r\nimport {updateBreakpoints} from '../../../../utils/replace-breakpoint';\r\nimport {once, randomID} from '../../../../utils/utils';\r\nimport {Button} from '../../button';\r\nimport {IconButton} from '../../iconButton';\r\n\r\n/**\r\n * @internal\r\n */\r\n@Component({\r\n  tag: 'atomic-generated-answer-feedback-modal',\r\n  styleUrl: 'atomic-generated-answer-feedback-modal.pcss',\r\n  shadow: true,\r\n})\r\nexport class AtomicGeneratedAnswerFeedbackModal\r\n  implements InitializableComponent<AnyBindings>\r\n{\r\n  @InitializeBindings() public bindings!: AnyBindings;\r\n  @Element() public host!: HTMLElement;\r\n\r\n  /**\r\n   * Indicates whether the modal is open.\r\n   */\r\n  @Prop({reflect: true, mutable: true}) isOpen = false;\r\n  /**\r\n   * A `GeneratedAnswer` controller instance. It is used when the user interacts with the modal.\r\n   */\r\n  @Prop({reflect: true, mutable: true}) generatedAnswer!: GeneratedAnswer;\r\n\r\n  @State() public error!: Error;\r\n  @State() currentAnswer?: GeneratedAnswerFeedback | 'other' | undefined;\r\n  @State() feedbackSubmitted: boolean = false;\r\n\r\n  private readonly formId = randomID(\r\n    'atomic-generated-answer-feedback-modal-form-'\r\n  );\r\n  private detailsInputRef?: HTMLTextAreaElement;\r\n\r\n  @Event() feedbackSent!: EventEmitter;\r\n\r\n  @Watch('isOpen')\r\n  watchToggleOpen(isOpen: boolean) {\r\n    if (isOpen) {\r\n      this.generatedAnswer.openFeedbackModal();\r\n    }\r\n  }\r\n\r\n  private static options: {\r\n    id: string;\r\n    localeKey: string;\r\n    correspondingAnswer: GeneratedAnswerFeedback | 'other';\r\n  }[] = [\r\n    {\r\n      id: 'irrelevant',\r\n      localeKey: 'irrelevant',\r\n      correspondingAnswer: 'irrelevant',\r\n    },\r\n    {\r\n      id: 'notAccurate',\r\n      localeKey: 'not-accurate',\r\n      correspondingAnswer: 'notAccurate',\r\n    },\r\n    {\r\n      id: 'outOfDate',\r\n      localeKey: 'out-of-date',\r\n      correspondingAnswer: 'outOfDate',\r\n    },\r\n    {\r\n      id: 'harmful',\r\n      localeKey: 'harmful',\r\n      correspondingAnswer: 'harmful',\r\n    },\r\n    {\r\n      id: 'other',\r\n      localeKey: 'other',\r\n      correspondingAnswer: 'other',\r\n    },\r\n  ];\r\n\r\n  private setIsOpen(isOpen: boolean) {\r\n    this.isOpen = isOpen;\r\n  }\r\n\r\n  private close() {\r\n    this.feedbackSubmitted = false;\r\n    if (this.detailsInputRef) {\r\n      this.detailsInputRef.value = '';\r\n    }\r\n    this.currentAnswer = undefined;\r\n    this.setIsOpen(false);\r\n    this.generatedAnswer.closeFeedbackModal();\r\n  }\r\n\r\n  private updateBreakpoints = once(() => updateBreakpoints(this.host));\r\n\r\n  private setCurrentAnswer(answer?: GeneratedAnswerFeedback | 'other') {\r\n    this.currentAnswer = answer;\r\n  }\r\n\r\n  public sendFeedback() {\r\n    if (this.currentAnswer === 'other') {\r\n      this.generatedAnswer.sendDetailedFeedback(this.detailsInputRef!.value);\r\n    } else {\r\n      this.generatedAnswer.sendFeedback(\r\n        this.currentAnswer as GeneratedAnswerFeedback\r\n      );\r\n    }\r\n    this.feedbackSent.emit();\r\n  }\r\n\r\n  private renderHeader() {\r\n    return (\r\n      <div\r\n        slot=\"header\"\r\n        part=\"modal-header\"\r\n        class=\"w-full flex justify-between items-center\"\r\n      >\r\n        <h1>{this.bindings.i18n.t('feedback')}</h1>\r\n        <IconButton\r\n          style=\"text-transparent\"\r\n          class=\"search-clear-button\"\r\n          onClick={() => this.close()}\r\n          icon={CloseIcon}\r\n          partPrefix={'close'}\r\n          ariaLabel={this.bindings.i18n.t('modal-done')}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private renderOptions() {\r\n    return (\r\n      <fieldset>\r\n        <legend part=\"reason-title\" class=\"text-base\">\r\n          {this.bindings.i18n.t('generated-answer-feedback-instructions')}\r\n        </legend>\r\n        {AtomicGeneratedAnswerFeedbackModal.options.map(\r\n          ({id, localeKey, correspondingAnswer}) => (\r\n            <div\r\n              class={`flex items-center ${correspondingAnswer} mobile-only:mt-4 desktop-only:mt-6`}\r\n              key={id}\r\n              part=\"reason\"\r\n            >\r\n              <input\r\n                part=\"reason-radio\"\r\n                type=\"radio\"\r\n                name=\"answer\"\r\n                id={id}\r\n                checked={this.currentAnswer === correspondingAnswer}\r\n                onChange={(e) =>\r\n                  (e.currentTarget as HTMLInputElement | null)?.checked &&\r\n                  this.setCurrentAnswer(correspondingAnswer)\r\n                }\r\n                class=\"mr-2\"\r\n                required\r\n              />\r\n              <label part=\"reason-label\" htmlFor={id}>\r\n                {this.bindings.i18n.t(localeKey)}\r\n              </label>\r\n            </div>\r\n          )\r\n        )}\r\n      </fieldset>\r\n    );\r\n  }\r\n\r\n  private renderDetails() {\r\n    if (this.currentAnswer !== 'other') {\r\n      return;\r\n    }\r\n\r\n    return (\r\n      <fieldset>\r\n        <textarea\r\n          part=\"details-input\"\r\n          name=\"answer-details\"\r\n          ref={(detailsInput) => (this.detailsInputRef = detailsInput)}\r\n          class=\"mt-2 p-2 w-full text-base leading-5 border border-neutral resize-none rounded\"\r\n          rows={4}\r\n          placeholder={this.bindings.i18n.t('add-details')}\r\n          required\r\n        ></textarea>\r\n      </fieldset>\r\n    );\r\n  }\r\n\r\n  private renderBody() {\r\n    return !this.feedbackSubmitted ? (\r\n      <form\r\n        part=\"form\"\r\n        id={this.formId}\r\n        slot=\"body\"\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          this.feedbackSubmitted = true;\r\n          this.sendFeedback();\r\n        }}\r\n        class=\"flex flex-col gap-8 text-base leading-4 text-neutral-dark p-2\"\r\n      >\r\n        {this.renderOptions()}\r\n        {this.renderDetails()}\r\n      </form>\r\n    ) : (\r\n      <div slot=\"body\" class=\"flex flex-col items-center gap-4 my-4\">\r\n        <atomic-icon icon={Success} class=\"w-48\" />\r\n        <p class=\"text-base\">\r\n          {this.bindings.i18n.t('generated-answer-feedback-success')}\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private renderFooter() {\r\n    return (\r\n      <div slot=\"footer\" part=\"modalFooter\">\r\n        {!this.feedbackSubmitted ? (\r\n          <div part=\"buttons\" class=\"flex justify-end gap-2 px-4\">\r\n            <Button\r\n              part=\"cancel-button\"\r\n              style=\"outline-neutral\"\r\n              class=\"text-primary flex justify-center text-sm leading-4 p-2\"\r\n              ariaLabel={this.bindings.i18n.t('close')}\r\n              onClick={() => this.close()}\r\n            >\r\n              {this.bindings.i18n.t('close')}\r\n            </Button>\r\n            <Button\r\n              part=\"submit-button\"\r\n              style=\"primary\"\r\n              type=\"submit\"\r\n              form={this.formId}\r\n              class=\"flex justify-center text-sm leading-4 p-2\"\r\n              ariaLabel={this.bindings.i18n.t('feedback-send')}\r\n            >\r\n              {this.bindings.i18n.t('feedback-send')}\r\n            </Button>\r\n          </div>\r\n        ) : (\r\n          <div part=\"buttons\" class=\"flex justify-end gap-2 p-2\">\r\n            <Button\r\n              part=\"cancel-button\"\r\n              style=\"primary\"\r\n              onClick={() => this.close()}\r\n              class=\"flex justify-center text-sm leading-4 p-2\"\r\n              ariaLabel={this.bindings.i18n.t('modal-done')}\r\n            >\r\n              {this.bindings.i18n.t('modal-done')}\r\n            </Button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  public render() {\r\n    this.updateBreakpoints();\r\n\r\n    return (\r\n      <atomic-modal\r\n        fullscreen={false}\r\n        isOpen={this.isOpen}\r\n        close={() => this.close()}\r\n        container={this.host}\r\n        exportparts=\"backdrop,container,header,header-wrapper,header-ruler,body,body-wrapper,footer,footer-wrapper,footer-wrapper\"\r\n      >\r\n        {this.renderHeader()}\r\n        {this.renderBody()}\r\n        {this.renderFooter()}\r\n      </atomic-modal>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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"}