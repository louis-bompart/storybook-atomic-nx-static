{"version":3,"names":["Button","props","children","rippleColor","getRippleColorForButtonStyle","style","className","getClassNameForButtonStyle","attributes","class","part","onClick","title","type","role","ariaLabel","ariaExpanded","ariaPressed","ariaChecked","ariaCurrent","ariaControls","ariaHidden","disabled","ref","buttonEl","form","setAttribute","tabIndex","_a","call","h","onMouseDown","e","createRipple","color","text"],"sources":["src/components/common/button.tsx"],"sourcesContent":["import {FunctionalComponent, h} from '@stencil/core';\r\nimport {createRipple} from '../../utils/ripple';\r\nimport {\r\n  ButtonStyle,\r\n  getRippleColorForButtonStyle,\r\n  getClassNameForButtonStyle,\r\n} from './button-style';\r\n\r\nexport interface ButtonProps {\r\n  style: ButtonStyle;\r\n  onClick?(event?: MouseEvent): void;\r\n  class?: string;\r\n  text?: string;\r\n  part?: string;\r\n  type?: string;\r\n  form?: string;\r\n  role?: string;\r\n  disabled?: boolean;\r\n  ariaLabel?: string;\r\n  ariaExpanded?: string;\r\n  ariaPressed?: string;\r\n  ariaChecked?: string;\r\n  ariaCurrent?: string;\r\n  ariaControls?: string;\r\n  ariaHidden?: string;\r\n  tabIndex?: string;\r\n  title?: string;\r\n  ref?(element?: HTMLButtonElement): void;\r\n}\r\n\r\nexport const Button: FunctionalComponent<ButtonProps> = (props, children) => {\r\n  const rippleColor = getRippleColorForButtonStyle(props.style);\r\n  const className = getClassNameForButtonStyle(props.style);\r\n\r\n  const attributes = {\r\n    class: props.class ? `${className} ${props.class}` : className,\r\n    part: props.part,\r\n    onClick: props.onClick,\r\n    title: props.title,\r\n    type: props.type,\r\n    role: props.role,\r\n    'aria-label': props.ariaLabel,\r\n    'aria-expanded': props.ariaExpanded,\r\n    'aria-pressed': props.ariaPressed,\r\n    'aria-checked': props.ariaChecked,\r\n    'aria-current': props.ariaCurrent,\r\n    'aria-controls': props.ariaControls,\r\n    'aria-hidden': props.ariaHidden,\r\n    disabled: props.disabled,\r\n    ref(buttonEl?: HTMLButtonElement) {\r\n      if (props.form) {\r\n        buttonEl?.setAttribute('form', props.form);\r\n      }\r\n      if (props.ariaHidden) {\r\n        buttonEl?.setAttribute('aria-hidden', props.ariaHidden);\r\n      }\r\n      if (props.tabIndex) {\r\n        buttonEl?.setAttribute('tabindex', props.tabIndex);\r\n      }\r\n      props.ref?.(buttonEl);\r\n    },\r\n  };\r\n\r\n  return (\r\n    <button\r\n      {...attributes}\r\n      onMouseDown={(e) => createRipple(e, {color: rippleColor})}\r\n    >\r\n      {props.text ? <span class=\"truncate\">{props.text}</span> : null}\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n"],"mappings":"yHA8BaA,EAA2C,CAACC,EAAOC,KAC9D,MAAMC,EAAcC,EAA6BH,EAAMI,OACvD,MAAMC,EAAYC,EAA2BN,EAAMI,OAEnD,MAAMG,EAAa,CACjBC,MAAOR,EAAMQ,MAAQ,GAAGH,KAAaL,EAAMQ,QAAUH,EACrDI,KAAMT,EAAMS,KACZC,QAASV,EAAMU,QACfC,MAAOX,EAAMW,MACbC,KAAMZ,EAAMY,KACZC,KAAMb,EAAMa,KACZ,aAAcb,EAAMc,UACpB,gBAAiBd,EAAMe,aACvB,eAAgBf,EAAMgB,YACtB,eAAgBhB,EAAMiB,YACtB,eAAgBjB,EAAMkB,YACtB,gBAAiBlB,EAAMmB,aACvB,cAAenB,EAAMoB,WACrBC,SAAUrB,EAAMqB,SAChB,GAAAC,CAAIC,G,MACF,GAAIvB,EAAMwB,KAAM,CACdD,IAAQ,MAARA,SAAQ,SAARA,EAAUE,aAAa,OAAQzB,EAAMwB,K,CAEvC,GAAIxB,EAAMoB,WAAY,CACpBG,IAAQ,MAARA,SAAQ,SAARA,EAAUE,aAAa,cAAezB,EAAMoB,W,CAE9C,GAAIpB,EAAM0B,SAAU,CAClBH,IAAQ,MAARA,SAAQ,SAARA,EAAUE,aAAa,WAAYzB,EAAM0B,S,EAE3CC,EAAA3B,EAAMsB,OAAG,MAAAK,SAAA,SAAAA,EAAAC,KAAA5B,EAAGuB,E,GAIhB,OACEM,EAAA,aACMtB,EACJuB,YAAcC,GAAMC,EAAaD,EAAG,CAACE,MAAO/B,KAE3CF,EAAMkC,KAAOL,EAAA,QAAMrB,MAAM,YAAYR,EAAMkC,MAAe,KAC1DjC,EACM,S"}