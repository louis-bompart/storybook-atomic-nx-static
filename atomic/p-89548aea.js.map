{"version":3,"names":["formatHumanReadable","manualRanges","field","i18n","facetValue","logger","formatter","manualRangeLabel","_a","find","range","areRangesEqual","label","getFieldValueCaption","t","start","formatNumberLocalized","end","value","languages","error","firstRange","secondRange","endInclusive","NumericFacetValueLink","props","displayValuesAs","onClick","displayValue","isSelected","state","h","FacetValueCheckbox","numberOfResults","FacetValueLabelHighlight","FacetValueLink","NumericFacetValuesContainer","children","FacetValuesGroup","class","part"],"sources":["src/components/common/facets/numeric-facet/formatter.ts","src/components/common/facets/numeric-facet/value-link.tsx","src/components/common/facets/numeric-facet/values-container.tsx"],"sourcesContent":["import {i18n} from 'i18next';\r\nimport {getFieldValueCaption} from '../../../../utils/field-utils';\r\nimport {NumberFormatter} from '../../formats/format-common';\r\n\r\nexport interface FacetValueRange {\r\n  endInclusive: boolean;\r\n  start: number;\r\n  end: number;\r\n  label?: string;\r\n  state: 'selected' | 'idle' | 'excluded';\r\n}\r\n\r\nexport interface FormatFacetValueRange {\r\n  field: string;\r\n  facetValue: FacetValueRange & {numberOfResults: number};\r\n  manualRanges: FacetValueRange[];\r\n  i18n: i18n;\r\n  logger: Pick<Console, 'error'>;\r\n  formatter: NumberFormatter;\r\n}\r\n\r\nexport const formatHumanReadable = ({\r\n  manualRanges,\r\n  field,\r\n  i18n,\r\n  facetValue,\r\n  logger,\r\n  formatter,\r\n}: FormatFacetValueRange) => {\r\n  const manualRangeLabel = manualRanges.find((range) =>\r\n    areRangesEqual(range, facetValue)\r\n  )?.label;\r\n  return manualRangeLabel\r\n    ? getFieldValueCaption(field, manualRangeLabel, i18n)\r\n    : i18n.t('to', {\r\n        start: formatNumberLocalized(facetValue.start, i18n, logger, formatter),\r\n        end: formatNumberLocalized(facetValue.end, i18n, logger, formatter),\r\n      });\r\n};\r\n\r\nexport const formatNumberLocalized = (\r\n  value: number,\r\n  i18n: FormatFacetValueRange['i18n'],\r\n  logger: FormatFacetValueRange['logger'],\r\n  formatter: FormatFacetValueRange['formatter']\r\n) => {\r\n  try {\r\n    return formatter(value, i18n.languages as string[]);\r\n  } catch (error) {\r\n    logger.error(\r\n      `atomic-numeric-facet facet value \"${value}\" could not be formatted correctly.`,\r\n      error\r\n    );\r\n    return value;\r\n  }\r\n};\r\n\r\nconst areRangesEqual = (\r\n  firstRange: FacetValueRange,\r\n  secondRange: FacetValueRange\r\n) => {\r\n  return (\r\n    firstRange.start === secondRange.start &&\r\n    firstRange.end === secondRange.end &&\r\n    firstRange.endInclusive === secondRange.endInclusive\r\n  );\r\n};\r\n","import {FunctionalComponent, h} from '@stencil/core';\r\nimport {FacetValueCheckbox} from '../facet-value-checkbox/facet-value-checkbox';\r\nimport {FacetValueLabelHighlight} from '../facet-value-label-highlight/facet-value-label-highlight';\r\nimport {FacetValueLink} from '../facet-value-link/facet-value-link';\r\nimport {FormatFacetValueRange, formatHumanReadable} from './formatter';\r\n\r\ninterface NumericFacetValueLinkProps extends FormatFacetValueRange {\r\n  onClick: () => void;\r\n  logger: Pick<Console, 'error'>;\r\n  displayValuesAs: 'checkbox' | 'link';\r\n}\r\n\r\nexport const NumericFacetValueLink: FunctionalComponent<\r\n  NumericFacetValueLinkProps\r\n> = (props) => {\r\n  const {facetValue, displayValuesAs, i18n, onClick} = props;\r\n  const displayValue = formatHumanReadable(props);\r\n  const isSelected = facetValue.state === 'selected';\r\n  switch (displayValuesAs) {\r\n    case 'checkbox':\r\n      return (\r\n        <FacetValueCheckbox\r\n          displayValue={displayValue}\r\n          numberOfResults={facetValue.numberOfResults}\r\n          isSelected={isSelected}\r\n          i18n={i18n}\r\n          onClick={() => onClick()}\r\n        >\r\n          <FacetValueLabelHighlight\r\n            displayValue={displayValue}\r\n            isSelected={isSelected}\r\n          ></FacetValueLabelHighlight>\r\n        </FacetValueCheckbox>\r\n      );\r\n    case 'link':\r\n      return (\r\n        <FacetValueLink\r\n          displayValue={displayValue}\r\n          numberOfResults={facetValue.numberOfResults}\r\n          isSelected={isSelected}\r\n          i18n={i18n}\r\n          onClick={onClick}\r\n        >\r\n          <FacetValueLabelHighlight\r\n            displayValue={displayValue}\r\n            isSelected={isSelected}\r\n          ></FacetValueLabelHighlight>\r\n        </FacetValueLink>\r\n      );\r\n  }\r\n};\r\n","import {FunctionalComponent, h} from '@stencil/core';\r\nimport {i18n} from 'i18next';\r\nimport {FacetValuesGroup} from '../facet-values-group/facet-values-group';\r\n\r\ninterface NumericFacetValuesContainerProps {\r\n  i18n: i18n;\r\n  label: string;\r\n}\r\nexport const NumericFacetValuesContainer: FunctionalComponent<\r\n  NumericFacetValuesContainerProps\r\n> = ({i18n, label}, children) => {\r\n  return (\r\n    <FacetValuesGroup i18n={i18n} label={label}>\r\n      <ul class=\"mt-3\" part=\"values\">\r\n        {children}\r\n      </ul>\r\n    </FacetValuesGroup>\r\n  );\r\n};\r\n"],"mappings":"8NAqBaA,EAAsB,EACjCC,eACAC,QACAC,OACAC,aACAC,SACAC,gB,MAEA,MAAMC,GAAmBC,EAAAP,EAAaQ,MAAMC,GAC1CC,EAAeD,EAAON,QACvB,MAAAI,SAAA,SAAAA,EAAEI,MACH,OAAOL,EACHM,EAAqBX,EAAOK,EAAkBJ,GAC9CA,EAAKW,EAAE,KAAM,CACXC,MAAOC,EAAsBZ,EAAWW,MAAOZ,EAAME,EAAQC,GAC7DW,IAAKD,EAAsBZ,EAAWa,IAAKd,EAAME,EAAQC,IACzD,EAGD,MAAMU,EAAwB,CACnCE,EACAf,EACAE,EACAC,KAEA,IACE,OAAOA,EAAUY,EAAOf,EAAKgB,U,CAC7B,MAAOC,GACPf,EAAOe,MACL,qCAAqCF,uCACrCE,GAEF,OAAOF,C,GAIX,MAAMP,EAAiB,CACrBU,EACAC,IAGED,EAAWN,QAAUO,EAAYP,OACjCM,EAAWJ,MAAQK,EAAYL,KAC/BI,EAAWE,eAAiBD,EAAYC,a,MCpD/BC,EAERC,IACH,MAAMrB,WAACA,EAAUsB,gBAAEA,EAAevB,KAAEA,EAAIwB,QAAEA,GAAWF,EACrD,MAAMG,EAAe5B,EAAoByB,GACzC,MAAMI,EAAazB,EAAW0B,QAAU,WACxC,OAAQJ,GACN,IAAK,WACH,OACEK,EAACC,EAAkB,CACjBJ,aAAcA,EACdK,gBAAiB7B,EAAW6B,gBAC5BJ,WAAYA,EACZ1B,KAAMA,EACNwB,QAAS,IAAMA,KAEfI,EAACG,EAAwB,CACvBN,aAAcA,EACdC,WAAYA,KAIpB,IAAK,OACH,OACEE,EAACI,EAAc,CACbP,aAAcA,EACdK,gBAAiB7B,EAAW6B,gBAC5BJ,WAAYA,EACZ1B,KAAMA,EACNwB,QAASA,GAETI,EAACG,EAAwB,CACvBN,aAAcA,EACdC,WAAYA,K,QCrCXO,EAET,EAAEjC,OAAMS,SAAQyB,IAEhBN,EAACO,EAAgB,CAACnC,KAAMA,EAAMS,MAAOA,GACnCmB,EAAA,MAAIQ,MAAM,OAAOC,KAAK,UACnBH,W"}