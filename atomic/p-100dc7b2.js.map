{"version":3,"names":["findAriaLiveEventName","AriaLiveRegion","regionName","assertive","getAriaLiveElement","event","buildCustomEvent","document","dispatchEvent","element","detail","dispatchMessage","message","_a","updateMessage","registerRegion","component","setterName","componentWillRender","Object","defineProperty","set","call","this","FocusTargetController","constructor","doFocusAfterSearch","doFocusOnNextTarget","bindings","handleComponentRenderLoop","setTarget","el","focus","defer","_b","onFocusCallback","focusAfterSearch","lastSearchId","store","getUniqueIDFromEngine","engine","Promise","resolve","focusOnNextTarget","disableForCurrentSearch","originalComponentDidRender","componentDidRender","then","isFocusable","getAttribute","hasAttribute","tagName","getFocusableDescendants","children","Array","from","HTMLSlotElement","assignedElements","shadowRoot","push","child","getFirstFocusableDescendant","next","value"],"sources":["src/utils/accessibility-utils.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport {AnyBindings} from '../components/common/interface/bindings';\nimport {buildCustomEvent} from './event-utils';\nimport {InitializableComponent} from './initialization-utils';\nimport {defer} from './utils';\n\nexport const findAriaLiveEventName = 'atomic/accessibility/findAriaLive';\n\nexport interface FindAriaLiveEventArgs {\n  element?: HTMLAtomicAriaLiveElement;\n}\n\nexport function AriaLiveRegion(regionName: string, assertive = false) {\n  function getAriaLiveElement() {\n    const event = buildCustomEvent<FindAriaLiveEventArgs>(\n      findAriaLiveEventName,\n      {}\n    );\n    document.dispatchEvent(event);\n    const {element} = event.detail;\n    return element;\n  }\n\n  function dispatchMessage(message: string) {\n    getAriaLiveElement()?.updateMessage(regionName, message, assertive);\n  }\n\n  function registerRegion() {\n    getAriaLiveElement()?.registerRegion(regionName, assertive);\n  }\n\n  return (\n    component: InitializableComponent<AnyBindings>,\n    setterName: string\n  ) => {\n    const {componentWillRender} = component;\n    Object.defineProperty(component, setterName, {\n      set: (message: string) => dispatchMessage(message),\n    });\n\n    component.componentWillRender = function () {\n      componentWillRender && componentWillRender.call(this);\n      registerRegion();\n    };\n  };\n}\n\nexport class FocusTargetController {\n  private bindings: AnyBindings;\n  private lastSearchId?: string;\n  private element?: HTMLElement;\n  private onFocusCallback?: Function;\n  private doFocusAfterSearch = false;\n  private doFocusOnNextTarget = false;\n\n  constructor(private component: InitializableComponent<AnyBindings>) {\n    this.bindings = component.bindings;\n    this.handleComponentRenderLoop();\n  }\n\n  public setTarget(el: HTMLElement | undefined) {\n    if (!el) {\n      return;\n    }\n    this.element = el;\n    if (this.doFocusOnNextTarget) {\n      this.doFocusOnNextTarget = false;\n      this.focus();\n    }\n  }\n\n  public async focus() {\n    await defer();\n    this.element?.focus();\n    this.onFocusCallback?.();\n  }\n\n  public focusAfterSearch() {\n    this.lastSearchId = this.bindings.store.getUniqueIDFromEngine(\n      this.bindings.engine\n    );\n    this.doFocusAfterSearch = true;\n    return new Promise((resolve) => (this.onFocusCallback = resolve));\n  }\n\n  public focusOnNextTarget() {\n    this.doFocusOnNextTarget = true;\n    return new Promise((resolve) => (this.onFocusCallback = resolve));\n  }\n\n  public disableForCurrentSearch() {\n    if (\n      this.bindings.store.getUniqueIDFromEngine(this.bindings.engine) !==\n      this.lastSearchId\n    ) {\n      this.doFocusAfterSearch = false;\n    }\n  }\n\n  private handleComponentRenderLoop() {\n    const originalComponentDidRender = this.component.componentDidRender;\n\n    this.component.componentDidRender = () => {\n      originalComponentDidRender &&\n        originalComponentDidRender.call(this.component);\n      if (!this.bindings) {\n        return;\n      }\n      if (\n        this.doFocusAfterSearch &&\n        this.bindings.store.getUniqueIDFromEngine(this.bindings.engine) !==\n          this.lastSearchId\n      ) {\n        this.doFocusAfterSearch = false;\n        if (this.element) {\n          const el = this.element;\n          // The focus seems to be flaky without deferring, especially on iOS.\n          defer().then(() => {\n            el.focus();\n            this.onFocusCallback?.();\n          });\n        }\n      }\n    };\n  }\n}\n\nfunction isFocusable(element: Element) {\n  // Source: https://stackoverflow.com/a/30753870\n  if (element.getAttribute('tabindex') === '-1') {\n    return false;\n  }\n  if (element.hasAttribute('tabindex')) {\n    return true;\n  }\n  if (element.getAttribute('contentEditable') === 'true') {\n    return true;\n  }\n  switch (element.tagName) {\n    case 'A':\n    case 'AREA':\n      return element.hasAttribute('href');\n    case 'INPUT':\n    case 'SELECT':\n    case 'TEXTAREA':\n    case 'BUTTON':\n      return !element.hasAttribute('disabled');\n    case 'IFRAME':\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport function* getFocusableDescendants(\n  element: Element\n): Generator<HTMLElement> {\n  if (isFocusable(element)) {\n    yield element as HTMLElement;\n  }\n  let children = Array.from(element.children);\n  if (element instanceof HTMLSlotElement) {\n    children = element.assignedElements();\n  } else if (element.shadowRoot) {\n    children.push(...Array.from(element.shadowRoot.children));\n  }\n  for (const child of children) {\n    yield* getFocusableDescendants(child);\n  }\n}\n\nexport function getFirstFocusableDescendant(\n  element: Element\n): HTMLElement | null {\n  return getFocusableDescendants(element).next().value ?? null;\n}\n"],"mappings":"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"}