{"version":3,"names":["atomicCommerceFacetsCss","AtomicCommerceFacetsStyle0","AtomicCommerceFacets","this","collapseFacetsAfter","initialize","validateProps","controller","bindings","interfaceElement","type","buildProductListing","buildSearch","facetGenerator","engine","Schema","collapseFacetAfter","NumberValue","min","required","validate","shouldCollapseFacet","index","render","h","Host","key","facets","map","facet","state","values","length","props","isCollapsed","logger","warn","__decorate","InitializeBindings","BindStateToController"],"sources":["src/components/commerce/facets/atomic-commerce-facets/atomic-commerce-facets.pcss?tag=atomic-commerce-facets&encapsulation=shadow","src/components/commerce/facets/atomic-commerce-facets/atomic-commerce-facets.tsx"],"sourcesContent":["@import '../../../../global/global.pcss';\n","import {NumberValue, Schema} from '@coveo/bueno';\nimport {\n  RegularFacet,\n  CategoryFacet,\n  DateFacet,\n  NumericFacet,\n  FacetGeneratorState,\n  buildProductListing,\n  buildSearch,\n  FacetGenerator,\n} from '@coveo/headless/commerce';\nimport {Component, h, Element, Host, State, Prop} from '@stencil/core';\nimport {\n  BindStateToController,\n  InitializableComponent,\n  InitializeBindings,\n} from '../../../../utils/initialization-utils';\nimport {CommerceBindings as Bindings} from '../../atomic-commerce-interface/atomic-commerce-interface';\n\n/**\n * The `atomic-commerce-facets` component automatically renders commerce facets based on the Commerce API response.\n * Unlike regular facets, which require explicit definition and request in the query, the `atomic-commerce-facets` component dynamically generates facets.\n *\n * @internal\n */\n@Component({\n  tag: 'atomic-commerce-facets',\n  styleUrl: 'atomic-commerce-facets.pcss',\n  shadow: true,\n})\nexport class AtomicCommerceFacets implements InitializableComponent<Bindings> {\n  @InitializeBindings() public bindings!: Bindings;\n  public facetGenerator!: FacetGenerator;\n  @Element() host!: HTMLElement;\n\n  /**\n   * The maximum number of facets to expand.\n   * Remaining facets are automatically collapsed.\n   *\n   * Using the value `0` collapses all facets.\n   * Using the value `-1` disables the feature and keeps all facets expanded.\n   */\n  @Prop({reflect: true}) public collapseFacetsAfter = 4;\n\n  @BindStateToController('facetGenerator')\n  @State()\n  public facetGeneratorState!: FacetGeneratorState[];\n\n  @State() public error!: Error;\n\n  public initialize() {\n    this.validateProps();\n    const controller =\n      this.bindings.interfaceElement.type === 'product-listing'\n        ? buildProductListing\n        : buildSearch;\n    this.facetGenerator = controller(this.bindings.engine).facetGenerator();\n  }\n\n  private validateProps() {\n    new Schema({\n      collapseFacetAfter: new NumberValue({min: -1, required: true}),\n    }).validate({\n      collapseFacetAfter: this.collapseFacetsAfter,\n    });\n  }\n\n  private shouldCollapseFacet(index: number): boolean {\n    if (this.collapseFacetsAfter === -1) {\n      return false;\n    }\n    return this.collapseFacetsAfter\n      ? index + 1 > this.collapseFacetsAfter\n      : true;\n  }\n\n  public render() {\n    return (\n      <Host>\n        {this.facetGenerator.facets.map((facet, index) => {\n          if (facet.state.values.length === 0) {\n            return;\n          }\n          const props = {isCollapsed: this.shouldCollapseFacet(index)};\n\n          switch (facet.state.type) {\n            case 'regular':\n              return (\n                <atomic-commerce-facet\n                  {...props}\n                  facet={facet as RegularFacet}\n                ></atomic-commerce-facet>\n              );\n            case 'numericalRange':\n              return (\n                <atomic-commerce-numeric-facet\n                  {...props}\n                  facet={facet as NumericFacet}\n                ></atomic-commerce-numeric-facet>\n              );\n            case 'dateRange':\n              return (\n                <atomic-commerce-timeframe-facet\n                  {...props}\n                  facet={facet as DateFacet}\n                ></atomic-commerce-timeframe-facet>\n              );\n            case 'hierarchical':\n              return (\n                <atomic-commerce-category-facet\n                  {...props}\n                  facet={facet as CategoryFacet}\n                ></atomic-commerce-category-facet>\n              );\n            default: {\n              this.bindings.engine.logger.warn(\n                `Unexpected facet type ${facet.state.type}.`\n              );\n              return;\n            }\n          }\n        })}\n      </Host>\n    );\n  }\n}\n"],"mappings":"6PAAA,MAAMA,EAA0B,w+tCAChC,MAAAC,EAAeD,E,iXC6BFE,EAAoB,M,yBAYDC,KAAAC,oBAAsB,E,yBAAA,E,wDAQ7C,UAAAC,GACLF,KAAKG,gBACL,MAAMC,EACJJ,KAAKK,SAASC,iBAAiBC,OAAS,kBACpCC,EACAC,EACNT,KAAKU,eAAiBN,EAAWJ,KAAKK,SAASM,QAAQD,gB,CAGjD,aAAAP,GACN,IAAIS,EAAO,CACTC,mBAAoB,IAAIC,EAAY,CAACC,KAAM,EAAGC,SAAU,SACvDC,SAAS,CACVJ,mBAAoBb,KAAKC,qB,CAIrB,mBAAAiB,CAAoBC,GAC1B,GAAInB,KAAKC,uBAAyB,EAAG,CACnC,OAAO,K,CAET,OAAOD,KAAKC,oBACRkB,EAAQ,EAAInB,KAAKC,oBACjB,I,CAGC,MAAAmB,GACL,OACEC,EAACC,EAAI,CAAAC,IAAA,4CACFvB,KAAKU,eAAec,OAAOC,KAAI,CAACC,EAAOP,KACtC,GAAIO,EAAMC,MAAMC,OAAOC,SAAW,EAAG,CACnC,M,CAEF,MAAMC,EAAQ,CAACC,YAAa/B,KAAKkB,oBAAoBC,IAErD,OAAQO,EAAMC,MAAMpB,MAClB,IAAK,UACH,OACEc,EAAA,4BACMS,EACJJ,MAAOA,IAGb,IAAK,iBACH,OACEL,EAAA,oCACMS,EACJJ,MAAOA,IAGb,IAAK,YACH,OACEL,EAAA,sCACMS,EACJJ,MAAOA,IAGb,IAAK,eACH,OACEL,EAAA,qCACMS,EACJJ,MAAOA,IAGb,QAAS,CACP1B,KAAKK,SAASM,OAAOqB,OAAOC,KAC1B,yBAAyBP,EAAMC,MAAMpB,SAEvC,M,mCAvFiB2B,EAAA,CAA5BC,K,+BAeMD,EAAA,CAFNE,EAAsB,mB"}