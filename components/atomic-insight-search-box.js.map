{"file":"atomic-insight-search-box.js","mappings":"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","names":["AtomicInsightSearchBox","loadInsightSearchActions","buildInsightSearchBox"],"sources":["src/components/insight/atomic-insight-search-box/atomic-insight-search-box.pcss?tag=atomic-insight-search-box&encapsulation=shadow","src/components/insight/atomic-insight-search-box/atomic-insight-search-box.tsx"],"sourcesContent":["@import '../../../global/global.pcss';\n@import '../../common/search-box/search-box.pcss';\n\n[part='wrapper'] {\n  @apply z-10;\n}\n\n:host {\n  position: relative;\n}\n\n[part='input'] {\n  padding-top: 0.675rem;\n  padding-bottom: 0.675rem;\n}\n\n[part='submit-icon'] {\n  color: var(--atomic-on-background);\n}\n\n[part='submit-button'] {\n  @apply w-10 flex justify-center items-center;\n}\n\n.loading::after {\n  content: '';\n  @apply absolute w-5/6 h-5/6 bg-background rounded-full;\n}\n\n[part='clear-button-wrapper'] {\n  @apply mr-2 py-0;\n}\n\n[part='clear-icon'] {\n  @apply w-3 h-3;\n}\n\n[part='textarea-expander'] {\n  &::after {\n    @apply px-4 p-2;\n  }\n}\n\n[part='textarea-expander'] {\n  [part='textarea'] {\n    @apply px-4 p-2;\n  }\n}\n","import {loadInsightSearchActions} from '@coveo/headless/insight';\nimport {Component, Element, h, Prop, State} from '@stencil/core';\nimport {\n  buildInsightSearchBox,\n  InsightSearchBox,\n  InsightSearchBoxState,\n  InsightSuggestion,\n} from '..';\nimport SearchSlimIcon from '../../../images/search-slim.svg';\nimport {AriaLiveRegion} from '../../../utils/accessibility-utils';\nimport {hasKeyboard, isMacOS} from '../../../utils/device-utils';\nimport {\n  BindStateToController,\n  InitializeBindings,\n} from '../../../utils/initialization-utils';\nimport {randomID} from '../../../utils/utils';\nimport {SearchBoxWrapper} from '../../common/search-box/search-box-wrapper';\nimport {SearchTextArea} from '../../common/search-box/search-text-area';\nimport {\n  getPartialSearchBoxSuggestionElement,\n  QuerySuggestionContainer,\n  QuerySuggestionIcon,\n  QuerySuggestionText,\n} from '../../common/suggestions/query-suggestions';\nimport {SuggestionManager} from '../../common/suggestions/suggestion-manager';\nimport {\n  elementHasQuery,\n  SearchBoxSuggestionElement,\n} from '../../common/suggestions/suggestions-common';\nimport {ButtonSearchSuggestion} from '../../search/atomic-search-box/search-suggestion';\nimport {InsightBindings} from '../atomic-insight-interface/atomic-insight-interface';\n\n/**\n * @internal\n */\n@Component({\n  tag: 'atomic-insight-search-box',\n  styleUrl: 'atomic-insight-search-box.pcss',\n  shadow: true,\n})\nexport class AtomicInsightSearchBox {\n  @InitializeBindings() public bindings!: InsightBindings;\n\n  private searchBox!: InsightSearchBox;\n  private id!: string;\n  private textAreaRef!: HTMLTextAreaElement;\n  private suggestionManager!: SuggestionManager<InsightSearchBox>;\n\n  @Element() private host!: HTMLElement;\n\n  @BindStateToController('searchBox')\n  @State()\n  private searchBoxState!: InsightSearchBoxState;\n  @State() public error!: Error;\n  @State() private isExpanded = false;\n\n  /**\n   * Whether to prevent the user from triggering a search from the component.\n   * Perfect for use cases where you need to disable the search conditionally, like when the input is empty.\n   */\n  @Prop({reflect: true}) public disableSearch = false;\n  /**\n   * The number of query suggestions to display when interacting with the search box.\n   */\n  @Prop({reflect: true}) public numberOfSuggestions = 5;\n\n  @AriaLiveRegion('search-box')\n  protected searchBoxAriaMessage!: string;\n\n  @AriaLiveRegion('search-suggestions', true)\n  protected suggestionsAriaMessage!: string;\n\n  public initialize() {\n    this.id = randomID('atomic-search-box-');\n\n    const searchBoxOptions = {\n      id: this.id,\n      numberOfSuggestions: 0,\n      highlightOptions: {\n        notMatchDelimiters: {\n          open: '<span class=\"font-bold\">',\n          close: '</span>',\n        },\n        correctionDelimiters: {\n          open: '<span class=\"font-normal\">',\n          close: '</span>',\n        },\n      },\n    };\n\n    const {fetchQuerySuggestions, registerQuerySuggest} =\n      loadInsightSearchActions(this.bindings.engine);\n\n    this.searchBox = buildInsightSearchBox(this.bindings.engine, {\n      options: searchBoxOptions,\n    });\n\n    this.bindings.engine.dispatch(\n      registerQuerySuggest({id: this.id, count: this.numberOfSuggestions})\n    );\n\n    this.suggestionManager = new SuggestionManager({\n      getNumberOfSuggestionsToDisplay: () => this.numberOfSuggestions,\n      updateQuery: (query) => this.searchBox.updateText(query),\n      getSearchBoxValue: () => this.searchBoxState.value,\n      getSuggestionTimeout: () => 500,\n      getSuggestionDelay: () => 0,\n      getHost: () => this.host,\n      getLogger: () => this.bindings.engine.logger,\n    });\n\n    this.suggestionManager.registerSuggestions({\n      position: 0,\n      renderItems: () =>\n        this.searchBox.state.suggestions.map((suggestion) =>\n          this.renderSuggestionItem(suggestion)\n        ),\n      onInput: () => {\n        this.bindings.engine.dispatch(fetchQuerySuggestions({id: this.id}));\n      },\n      panel: 'left',\n    });\n  }\n\n  private onSubmit() {\n    if (this.suggestionManager.activeDescendantElement) {\n      this.suggestionManager.clickOnActiveElement();\n      return;\n    }\n\n    this.searchBox.submit();\n    this.suggestionManager.clearSuggestions();\n  }\n\n  private onKeyDown(e: KeyboardEvent) {\n    if (this.disableSearch) {\n      return;\n    }\n\n    switch (e.key) {\n      case 'Enter':\n        this.onSubmit();\n        break;\n      case 'Escape':\n        this.suggestionManager.clearSuggestions();\n        break;\n      case 'ArrowDown':\n        e.preventDefault();\n        this.suggestionManager.focusNextValue();\n        this.announceNewActiveSuggestionToScreenReader();\n        break;\n      case 'ArrowUp':\n        e.preventDefault();\n        this.suggestionManager.focusPreviousValue();\n        this.announceNewActiveSuggestionToScreenReader();\n        break;\n      case 'Tab':\n        this.suggestionManager.clearSuggestions();\n        break;\n    }\n  }\n\n  private triggerTextAreaChange(value: string) {\n    this.textAreaRef.value = value;\n    this.textAreaRef.dispatchEvent(new window.Event('change'));\n  }\n\n  private renderSuggestion(\n    item: SearchBoxSuggestionElement,\n    index: number,\n    lastIndex: number\n  ) {\n    const id = `${this.id}-suggestion-${item.key}`;\n\n    const isSelected =\n      id === this.suggestionManager.activeDescendant ||\n      this.suggestionManager.suggestedQuery === item.query;\n\n    if (index === lastIndex && item.hideIfLast) {\n      return null;\n    }\n\n    return (\n      <ButtonSearchSuggestion\n        bindings={this.bindings}\n        id={id}\n        suggestion={item}\n        isSelected={isSelected}\n        side={'left'}\n        index={index}\n        lastIndex={lastIndex}\n        isDoubleList={false}\n        onClick={(e: Event) => {\n          this.suggestionManager.onSuggestionClick(item, e);\n        }}\n        onMouseOver={() => {\n          this.suggestionManager.onSuggestionMouseOver(item, 'left', id);\n        }}\n      ></ButtonSearchSuggestion>\n    );\n  }\n\n  private renderSuggestionItem(\n    suggestion: InsightSuggestion\n  ): SearchBoxSuggestionElement {\n    const hasQuery = this.searchBox.state.value !== '';\n    const partialItem = getPartialSearchBoxSuggestionElement(\n      suggestion,\n      this.bindings.i18n\n    );\n\n    return {\n      ...partialItem,\n      content: (\n        <QuerySuggestionContainer>\n          <QuerySuggestionIcon\n            icon={SearchSlimIcon}\n            hasSuggestion={this.searchBoxState.suggestions.length > 1}\n          />\n\n          <QuerySuggestionText suggestion={suggestion} hasQuery={hasQuery} />\n        </QuerySuggestionContainer>\n      ),\n      onSelect: () => {\n        this.searchBox.selectSuggestion(suggestion.rawValue);\n      },\n    };\n  }\n\n  private renderPanel(\n    elements: SearchBoxSuggestionElement[],\n    setRef: (el: HTMLElement | undefined) => void,\n    getRef: () => HTMLElement | undefined\n  ) {\n    if (!elements.length) {\n      return null;\n    }\n\n    return (\n      <div\n        part={'suggestions'}\n        ref={setRef}\n        class=\"flex flex-grow basis-1/2 flex-col\"\n        onMouseDown={(e) => {\n          if (e.target === getRef()) {\n            e.preventDefault();\n          }\n        }}\n      >\n        {elements.map((suggestion, index) =>\n          this.renderSuggestion(suggestion, index, elements.length - 1)\n        )}\n      </div>\n    );\n  }\n\n  private renderSuggestions() {\n    if (!this.suggestionManager.hasSuggestions) {\n      this.suggestionManager.updateActiveDescendant();\n      return null;\n    }\n\n    return (\n      <div\n        id={`${this.id}-popup`}\n        part=\"suggestions-wrapper\"\n        class={`flex w-full z-10 absolute left-0 top-full rounded-md bg-background border border-neutral ${\n          this.suggestionManager.hasSuggestions && this.isExpanded\n            ? ''\n            : 'hidden'\n        }`}\n        role=\"application\"\n        aria-label={this.bindings.i18n.t('search-suggestions-single-list')}\n        {...(this.suggestionManager.activeDescendant && {\n          'aria-activedescendant': this.suggestionManager.activeDescendant,\n        })}\n      >\n        {this.renderPanel(\n          this.suggestionManager.allSuggestionElements,\n          (el) => (this.suggestionManager.leftPanel = el),\n          () => this.suggestionManager.leftPanel\n        )}\n      </div>\n    );\n  }\n\n  private getSearchInputLabel() {\n    if (isMacOS()) {\n      return this.bindings.i18n.t('search-box-with-suggestions-macos');\n    }\n    if (!hasKeyboard()) {\n      return this.bindings.i18n.t('search-box-with-suggestions-keyboardless');\n    }\n    return this.bindings.i18n.t('search-box-with-suggestions');\n  }\n\n  private async onFocus() {\n    this.isExpanded = true;\n    await this.suggestionManager.triggerSuggestions();\n    this.announceNewSuggestionsToScreenReader();\n  }\n\n  private async onInput(value: string) {\n    this.searchBox.updateText(value);\n    this.isExpanded = true;\n    await this.suggestionManager.triggerSuggestions();\n    this.announceNewSuggestionsToScreenReader();\n  }\n\n  private announceNewActiveSuggestionToScreenReader() {\n    const ariaLabel = this.suggestionManager.activeDescendantElement?.ariaLabel;\n    if (isMacOS() && ariaLabel) {\n      this.suggestionsAriaMessage = ariaLabel;\n    }\n  }\n\n  private announceNewSuggestionsToScreenReader() {\n    const numberOfSuggestionsToAnnounce =\n      this.suggestionManager.allSuggestionElements.filter(\n        elementHasQuery\n      ).length;\n    this.searchBoxAriaMessage = numberOfSuggestionsToAnnounce\n      ? this.bindings.i18n.t('query-suggestions-available', {\n          count: numberOfSuggestionsToAnnounce,\n        })\n      : this.bindings.i18n.t('query-suggestions-unavailable');\n  }\n\n  public render() {\n    return (\n      <SearchBoxWrapper disabled={this.disableSearch} textArea>\n        <atomic-focus-detector\n          style={{display: 'contents'}}\n          onFocusExit={() => this.suggestionManager.clearSuggestions()}\n        >\n          <atomic-icon\n            part=\"submit-icon\"\n            icon={SearchSlimIcon}\n            class=\"w-4 h-4 my-auto mr-0 ml-4\"\n          />\n          <SearchTextArea\n            textAreaRef={this.textAreaRef}\n            loading={this.searchBoxState.isLoading}\n            ref={(el) => el && (this.textAreaRef = el)}\n            bindings={this.bindings}\n            value={this.searchBoxState.value}\n            ariaLabel={this.getSearchInputLabel()}\n            placeholder={this.bindings.i18n.t('search-ellipsis')}\n            onFocus={() => this.onFocus()}\n            onKeyDown={(e) => this.onKeyDown(e)}\n            onClear={() => {\n              this.searchBox.clear();\n              this.triggerTextAreaChange('');\n            }}\n            onInput={(e) => this.onInput((e.target as HTMLInputElement).value)}\n          />\n          {this.renderSuggestions()}\n        </atomic-focus-detector>\n      </SearchBoxWrapper>\n    );\n  }\n}\n"],"version":3}