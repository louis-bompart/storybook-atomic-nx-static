{"version":3,"names":["atomicCommerceLoadMoreProductsCss","AtomicCommerceLoadMoreProductsStyle0","AtomicLoadMoreProducts","initialize","this","bindings","interfaceElement","type","listingOrSearch","buildProductListing","engine","buildSearch","pagination","lastProduct","productListingOrSearchState","products","length","onClick","_a","store","state","resultList","focusOnNextNewResult","fetchMoreProducts","render","i18n","h","LoadMoreGuard","key","hasResults","paginationState","totalEntries","isLoaded","isAppLoaded","LoadMoreContainer","LoadMoreSummary","from","to","LoadMoreProgressBar","LoadMoreButton","moreAvailable","__decorate","InitializeBindings","BindStateToController"],"sources":["src/components/commerce/atomic-commerce-load-more-products/atomic-commerce-load-more-products.pcss?tag=atomic-commerce-load-more-products&encapsulation=shadow","src/components/commerce/atomic-commerce-load-more-products/atomic-commerce-load-more-products.tsx"],"sourcesContent":["@import '../../../global/global.pcss';\n\n/**\n * @prop --atomic-more-results-progress-bar-color-from: Color of the start of the gradient for the load more results progress bar.\n * @prop --atomic-more-results-progress-bar-color-to: Color of the end of the gradient for the load more results progress bar.\n */\n.progress-bar {\n  --tw-gradient-from: var(--atomic-more-results-progress-bar-color-from, var(--atomic-primary-dark));\n  --tw-gradient-to: var(--atomic-more-results-progress-bar-color-to, var(--atomic-primary-light));\n  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n}\n","import {\n  Pagination,\n  PaginationState,\n  buildSearch,\n  buildProductListing,\n  ProductListing,\n  Search,\n  ProductListingState,\n  SearchState,\n} from '@coveo/headless/commerce';\nimport {Component, h, State} from '@stencil/core';\nimport {\n  BindStateToController,\n  InitializeBindings,\n} from '../../../utils/initialization-utils';\nimport {LoadMoreButton} from '../../common/load-more/button';\nimport {LoadMoreContainer} from '../../common/load-more/container';\nimport {LoadMoreGuard} from '../../common/load-more/guard';\nimport {LoadMoreProgressBar} from '../../common/load-more/progress-bar';\nimport {LoadMoreSummary} from '../../common/load-more/summary';\nimport {CommerceBindings} from '../atomic-commerce-interface/atomic-commerce-interface';\n\n/**\n * The `atomic-commerce-load-more-products` component allows the user to load additional products if more are available.\n *\n * @part container - The container of the component.\n * @part showing-results - The summary displaying which products are shown and how many are available.\n * @part highlight - The highlighted number of products displayed and number of products available.\n * @part progress-bar - The progress bar displaying a percentage of results shown over the total number of products available.\n * @part load-more-results-button - The \"Load more products\" button.\n *\n * @internal\n */\n@Component({\n  tag: 'atomic-commerce-load-more-products',\n  styleUrl: 'atomic-commerce-load-more-products.pcss',\n  shadow: true,\n})\nexport class AtomicLoadMoreProducts {\n  @InitializeBindings() public bindings!: CommerceBindings;\n  public pagination!: Pagination;\n  public listingOrSearch!: ProductListing | Search;\n\n  @BindStateToController('pagination')\n  @State()\n  private paginationState!: PaginationState;\n  @BindStateToController('listingOrSearch')\n  @State()\n  private productListingOrSearchState!: ProductListingState | SearchState;\n\n  @State() public error!: Error;\n\n  public initialize() {\n    if (this.bindings.interfaceElement.type === 'product-listing') {\n      this.listingOrSearch = buildProductListing(this.bindings.engine);\n    } else {\n      this.listingOrSearch = buildSearch(this.bindings.engine);\n    }\n    this.pagination = this.listingOrSearch.pagination();\n  }\n\n  private get lastProduct() {\n    return this.productListingOrSearchState.products.length;\n  }\n\n  private async onClick() {\n    this.bindings.store.state.resultList?.focusOnNextNewResult();\n    this.pagination.fetchMoreProducts();\n  }\n\n  public render() {\n    const {i18n} = this.bindings;\n    return (\n      <LoadMoreGuard\n        hasResults={this.paginationState.totalEntries > 0}\n        isLoaded={this.bindings.store.isAppLoaded()}\n      >\n        <LoadMoreContainer>\n          <LoadMoreSummary\n            from={this.lastProduct}\n            to={this.paginationState.totalEntries}\n            i18n={i18n}\n          />\n          <LoadMoreProgressBar\n            from={this.lastProduct}\n            to={this.paginationState.totalEntries}\n          />\n          <LoadMoreButton\n            i18n={i18n}\n            moreAvailable={this.lastProduct < this.paginationState.totalEntries}\n            onClick={() => this.onClick()}\n          />\n        </LoadMoreContainer>\n      </LoadMoreGuard>\n    );\n  }\n}\n"],"mappings":"kUAAA,MAAMA,EAAoC,0vuCAC1C,MAAAC,EAAeD,E,iXCqCFE,EAAsB,M,wHAc1B,UAAAC,GACL,GAAIC,KAAKC,SAASC,iBAAiBC,OAAS,kBAAmB,CAC7DH,KAAKI,gBAAkBC,EAAoBL,KAAKC,SAASK,O,KACpD,CACLN,KAAKI,gBAAkBG,EAAYP,KAAKC,SAASK,O,CAEnDN,KAAKQ,WAAaR,KAAKI,gBAAgBI,Y,CAGzC,eAAYC,GACV,OAAOT,KAAKU,4BAA4BC,SAASC,M,CAG3C,aAAMC,G,OACZC,EAAAd,KAAKC,SAASc,MAAMC,MAAMC,cAAU,MAAAH,SAAA,SAAAA,EAAEI,uBACtClB,KAAKQ,WAAWW,mB,CAGX,MAAAC,GACL,MAAMC,KAACA,GAAQrB,KAAKC,SACpB,OACEqB,EAACC,EAAa,CAAAC,IAAA,2CACZC,WAAYzB,KAAK0B,gBAAgBC,aAAe,EAChDC,SAAU5B,KAAKC,SAASc,MAAMc,eAE9BP,EAACQ,EAAiB,CAAAN,IAAA,4CAChBF,EAACS,EAAe,CAAAP,IAAA,2CACdQ,KAAMhC,KAAKS,YACXwB,GAAIjC,KAAK0B,gBAAgBC,aACzBN,KAAMA,IAERC,EAACY,EAAmB,CAAAV,IAAA,2CAClBQ,KAAMhC,KAAKS,YACXwB,GAAIjC,KAAK0B,gBAAgBC,eAE3BL,EAACa,EAAc,CAAAX,IAAA,2CACbH,KAAMA,EACNe,cAAepC,KAAKS,YAAcT,KAAK0B,gBAAgBC,aACvDd,QAAS,IAAMb,KAAKa,a,GAnDDwB,EAAA,CAA5BC,K,+BAMOD,EAAA,CAFPE,EAAsB,e,sCAKfF,EAAA,CAFPE,EAAsB,oB"}