{"version":3,"names":["resultComponentClass","ItemListCommon","constructor","props","this","store","setLoadingFlag","loadingFlag","registerResultList","updateBreakpointsOnce","once","updateBreakpoints","host","getResultId","uniqueIdOnResult","searchResponseId","density","imageSize","setNewResultRef","element","resultIndex","firstResultEl","indexOfResultToFocus","children","length","_a","shadowRoot","undefined","elementToFocus","_b","getFirstFocusableDescendant","nextNewItemTarget","setTarget","focusOnNextNewResult","getCurrentNumberOfItems","focusOnNextTarget","focusOnFirstResultAfterNextSearch","defer","Promise","resolve","getIsLoading","unsub","engineSubscribe","async","focus"],"sources":["src/components/common/item-list/item-list-common.tsx"],"sourcesContent":["import {\r\n  FocusTargetController,\r\n  getFirstFocusableDescendant,\r\n} from '../../../utils/accessibility-utils';\r\nimport {updateBreakpoints} from '../../../utils/replace-breakpoint';\r\nimport {defer, once} from '../../../utils/utils';\r\nimport {AnyItem} from '../interface/item';\r\nimport {AtomicCommonStore, AtomicCommonStoreData} from '../interface/store';\r\nimport {\r\n  ItemDisplayDensity,\r\n  ItemDisplayImageSize,\r\n} from '../layout/display-options';\r\n\r\nexport const resultComponentClass = 'result-component';\r\n\r\nexport type ItemRenderingFunction<SpecificResult extends AnyItem = AnyItem> =\r\n  | ((result: SpecificResult, root: HTMLElement) => string)\r\n  | undefined;\r\n\r\nexport interface ItemListCommonProps {\r\n  store: AtomicCommonStore<AtomicCommonStoreData>;\r\n  loadingFlag: string;\r\n  host: HTMLElement;\r\n  nextNewItemTarget: FocusTargetController;\r\n  getCurrentNumberOfItems: () => number;\r\n  getIsLoading: () => boolean;\r\n  engineSubscribe: (cb: () => void) => () => void;\r\n}\r\n\r\nexport class ItemListCommon {\r\n  private indexOfResultToFocus?: number;\r\n  private firstResultEl?: HTMLElement;\r\n  private updateBreakpointsOnce: () => void;\r\n\r\n  constructor(private props: ItemListCommonProps) {\r\n    this.props.store.setLoadingFlag(this.props.loadingFlag);\r\n    this.props.store.registerResultList(this);\r\n    this.updateBreakpointsOnce = once(() => updateBreakpoints(this.props.host));\r\n  }\r\n\r\n  public updateBreakpoints() {\r\n    this.updateBreakpointsOnce();\r\n  }\r\n\r\n  public getResultId(\r\n    uniqueIdOnResult: string,\r\n    searchResponseId: string,\r\n    density: ItemDisplayDensity,\r\n    imageSize: ItemDisplayImageSize\r\n  ) {\r\n    return `${uniqueIdOnResult}${searchResponseId}${density}${imageSize}`;\r\n  }\r\n\r\n  public setNewResultRef(element: HTMLElement, resultIndex: number) {\r\n    if (resultIndex === 0) {\r\n      this.firstResultEl = element;\r\n    }\r\n    if (resultIndex !== this.indexOfResultToFocus) {\r\n      return;\r\n    }\r\n\r\n    if (!element.children.length && !element.shadowRoot?.children.length) {\r\n      return;\r\n    }\r\n\r\n    this.indexOfResultToFocus = undefined;\r\n    const elementToFocus = getFirstFocusableDescendant(element) ?? element;\r\n    this.props.nextNewItemTarget.setTarget(elementToFocus);\r\n  }\r\n\r\n  public focusOnNextNewResult() {\r\n    this.indexOfResultToFocus = this.props.getCurrentNumberOfItems();\r\n    this.props.nextNewItemTarget.focusOnNextTarget();\r\n  }\r\n\r\n  public async focusOnFirstResultAfterNextSearch() {\r\n    await defer();\r\n    return new Promise<void>((resolve) => {\r\n      if (this.props.getIsLoading()) {\r\n        this.firstResultEl = undefined;\r\n      }\r\n\r\n      const unsub = this.props.engineSubscribe(async () => {\r\n        await defer();\r\n        if (!this.props.getIsLoading() && this.firstResultEl) {\r\n          const elementToFocus =\r\n            getFirstFocusableDescendant(this.firstResultEl) ??\r\n            this.firstResultEl;\r\n          this.props.nextNewItemTarget.setTarget(elementToFocus);\r\n          this.props.nextNewItemTarget.focus();\r\n          this.firstResultEl = undefined;\r\n          unsub();\r\n          resolve();\r\n        }\r\n      });\r\n    });\r\n  }\r\n}\r\n"],"mappings":"yHAaaA,EAAuB,mB,MAgBvBC,EAKX,WAAAC,CAAoBC,GAAAC,KAAAD,QAClBC,KAAKD,MAAME,MAAMC,eAAeF,KAAKD,MAAMI,aAC3CH,KAAKD,MAAME,MAAMG,mBAAmBJ,MACpCA,KAAKK,sBAAwBC,GAAK,IAAMC,EAAkBP,KAAKD,MAAMS,O,CAGhE,iBAAAD,GACLP,KAAKK,uB,CAGA,WAAAI,CACLC,EACAC,EACAC,EACAC,GAEA,MAAO,GAAGH,IAAmBC,IAAmBC,IAAUC,G,CAGrD,eAAAC,CAAgBC,EAAsBC,G,QAC3C,GAAIA,IAAgB,EAAG,CACrBhB,KAAKiB,cAAgBF,C,CAEvB,GAAIC,IAAgBhB,KAAKkB,qBAAsB,CAC7C,M,CAGF,IAAKH,EAAQI,SAASC,WAAWC,EAAAN,EAAQO,cAAU,MAAAD,SAAA,SAAAA,EAAEF,SAASC,QAAQ,CACpE,M,CAGFpB,KAAKkB,qBAAuBK,UAC5B,MAAMC,GAAiBC,EAAAC,EAA4BX,MAAQ,MAAAU,SAAA,EAAAA,EAAIV,EAC/Df,KAAKD,MAAM4B,kBAAkBC,UAAUJ,E,CAGlC,oBAAAK,GACL7B,KAAKkB,qBAAuBlB,KAAKD,MAAM+B,0BACvC9B,KAAKD,MAAM4B,kBAAkBI,mB,CAGxB,uCAAMC,SACLC,IACN,OAAO,IAAIC,SAAeC,IACxB,GAAInC,KAAKD,MAAMqC,eAAgB,CAC7BpC,KAAKiB,cAAgBM,S,CAGvB,MAAMc,EAAQrC,KAAKD,MAAMuC,iBAAgBC,U,YACjCN,IACN,IAAKjC,KAAKD,MAAMqC,gBAAkBpC,KAAKiB,cAAe,CACpD,MAAMO,GACJH,EAAAK,EAA4B1B,KAAKiB,kBAAc,MAAAI,SAAA,EAAAA,EAC/CrB,KAAKiB,cACPjB,KAAKD,MAAM4B,kBAAkBC,UAAUJ,GACvCxB,KAAKD,MAAM4B,kBAAkBa,QAC7BxC,KAAKiB,cAAgBM,UACrBc,IACAF,G,IAEF,G"}